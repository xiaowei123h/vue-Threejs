{"version":3,"sources":["webpack:///./src/components/jsm/postprocessing/MaskPass.js","webpack:///./src/components/jsm/postprocessing/EffectComposer.js","webpack:///./src/components/jsm/postprocessing/Pass.js","webpack:///./src/components/jsm/postprocessing/RenderPass.js","webpack:///./src/components/jsm/postprocessing/ShaderPass.js","webpack:///./src/components/jsm/shaders/CopyShader.js","webpack:///./src/components/jsm/shaders/BleachBypassShader.js","webpack:///./src/components/jsm/shaders/ColorCorrectionShader.js","webpack:///./src/components/jsm/shaders/FXAAShader.js","webpack:///./src/components/jsm/shaders/GammaCorrectionShader.js","webpack:///src/views/materials/webglMaterialsNormalmap.vue","webpack:///./src/views/materials/webglMaterialsNormalmap.vue?78ba","webpack:///./src/views/materials/webglMaterialsNormalmap.vue"],"names":["MaskPass","scene","camera","Pass","call","this","clear","needsSwap","inverse","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","writeValue","clearValue","context","getContext","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","__webpack_require__","d","__webpack_exports__","EffectComposer_EffectComposer","EffectComposer","renderTarget","undefined","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","size","getSize","Vector2","_pixelRatio","getPixelRatio","_width","width","_height","height","WebGLRenderTarget","texture","name","renderTarget1","renderTarget2","clone","renderToScreen","passes","CopyShader","console","error","ShaderPass","copyPass","clock","Clock","swapBuffers","tmp","addPass","pass","push","setSize","insertPass","index","splice","isLastEnabledPass","passIndex","i","length","enabled","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","NOTEQUAL","reset","dispose","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","geometry","FullScreenQuad","OrthographicCamera","PlaneBufferGeometry","material","_mesh","Mesh","defineProperty","get","set","value","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","RenderPass","__WEBPACK_IMPORTED_MODULE_0__postprocessing_Pass_js__","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","__WEBPACK_IMPORTED_MODULE_1__postprocessing_Pass_js__","shader","textureID","ShaderMaterial","uniforms","UniformsUtils","defines","vertexShader","fragmentShader","fsQuad","tDiffuse","opacity","join","BleachBypassShader","ColorCorrectionShader","powRGB","Vector3","mulRGB","addRGB","FXAAShader","resolution","GammaCorrectionShader","webglMaterialsNormalmap","data","container","stats","loader","mesh","directionalLight","pointLight","ambientLight","mouseX","mouseY","targetX","targetY","windowHalfX","windowHalfY","composer","effectFXAA","mounted","$webglInnerWidth","window","innerHeight","init","animate","methods","_this","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","position","z","Scene","background","Color","AmbientLight","add","PointLight","DirectionalLight","textureLoader","TextureLoader","diffuseMap","load","encoding","sRGBEncoding","specularMap","normalMap","MeshPhongMaterial","specular","shininess","map","normalScale","GLTFLoader","gltf","createScene","children","WebGLRenderer","domElement","$Stats","dom","style","left","renderModel","effectBleach","effectColor","gammaCorrection","addEventListener","onDocumentMouseMove","onWindowResize","scale","y","x","innerWidth","$onWindowResize","event","clientX","clientY","requestAnimationFrame","update","rotation","materials_webglMaterialsNormalmap","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","normalizeComponent","ssrContext"],"mappings":"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EA,6CACA,oCAEA,KAECI,KAAM,+ICnCLC,GAEHT,UAECM,UAAc9B,MAAO,MACrB+B,SAAa/B,MAAO,IAIrB2B,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECK,KAAM,MAERJ,gBAEC,yBAEA,8BAEA,oBAEA,gBAEA,4CAEA,6CACA,2CACA,8BAEA,6DAEA,2CACA,qEAEA,gDAEA,iCACA,qCACA,2CAEA,2CAEA,KAECI,KAAM,mBCnDLE,GAEHV,UAECM,UAAc9B,MAAO,MACrBmC,QAAYnC,MAAO,IAAIoC,MAAS,EAAG,EAAG,IACtCC,QAAYrC,MAAO,IAAIoC,MAAS,EAAG,EAAG,IACtCE,QAAYtC,MAAO,IAAIoC,MAAS,EAAG,EAAG,KAIvCT,cAEC,oBAEA,gBAEA,cAEA,8EAEA,KAECK,KAAM,MAERJ,gBAEC,8BACA,uBACA,uBACA,uBAEA,oBAEA,gBAEA,+CACA,8EAEA,KAECI,KAAM,OCtCLO,GAEHf,UAECM,UAAc9B,MAAO,MACrBwC,YAAgBxC,MAAO,IAAI3D,MAAS,EAAI,KAAM,EAAI,OAInDsF,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECK,KAAM,MAERJ,gBACC,yBACA,GACA,8BACA,GACA,2BACA,GACA,oBACA,GACA,6FACA,GACA,uFACA,kEACA,wBACA,uCACA,+CACA,KACA,uEACA,KACA,wEACA,wEACA,cACA,uEACA,sEACA,0EACA,4EACA,6EACA,oEACA,wEACA,sEACA,KACA,0EACA,uEACA,wEACA,uEACA,2EACA,yEACA,wEACA,yEACA,kEACA,2EACA,0EACA,KACA,uFACA,GACA,oBACA,0BACA,iCACA,GACA,+BACA,GACA,iFACA,0BACA,SACA,kDACA,4DACA,yEACA,SACA,gCACA,SACA,iFACA,wBACA,8BACA,SACA,iFACA,wBACA,8BACA,SACA,iFACA,sBACA,4BACA,SACA,iFACA,sBACA,4BACA,SACA,iFACA,sBACA,4BACA,SACA,iFACA,6BACA,SACA,2CACA,sEACA,mEACA,8DACA,SACA,6EACA,2EACA,SACA,oDACA,wCACA,wCACA,iEACA,gDACA,SACA,iBACA,kBACA,SACA,mCACA,SACA,iFACA,0BACA,SACA,+CACA,6DACA,4EACA,yEACA,iCACA,SACA,iBACA,kBACA,SACA,gCACA,SACA,iFACA,uBACA,SACA,6CACA,6DACA,SACA,wDACA,yEACA,mEACA,SACA,6BACA,SACA,iFACA,iCACA,SACA,iCACA,SACA,gDACA,2CACA,SACA,gCACA,2CACA,aACA,+BACA,2CACA,aACA,gCACA,2CACA,aACA,qCACA,2CACA,aACA,SACA,iFACA,6BACA,SACA,oDACA,4DACA,SACA,6BACA,uCACA,aACA,gCACA,uCACA,aACA,+BACA,uCACA,aACA,iCACA,uCACA,aACA,SACA,GACA,GACA,iFACA,sDACA,iFACA,qEACA,iFACA,8BACA,SACA,oCACA,uEACA,uDACA,mEACA,SACA,iBACA,iFACA,2EACA,iFACA,8CACA,SACA,eACA,iFACA,8EACA,8DACA,gEACA,kEACA,6DACA,SACA,qCACA,SACA,GACA,GACA,iFACA,GACA,oDACA,GACA,iFACA,GACA,iFACA,4DACA,iFACA,kCACA,gCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,GACA,iFACA,yDACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,gCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,SACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,iFACA,sDACA,iFACA,kCACA,iCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCACA,mCACA,SACA,GACA,GACA,GACA,iFACA,GACA,8CACA,GACA,iFACA,2EACA,4BACA,kCACA,8BACA,8BACA,8BACA,8BACA,6BACA,6BACA,6BACA,6BACA,6BACA,4CACA,gCACA,QACA,4BACA,mCACA,8BACA,gCACA,gCACA,gCACA,4BACA,8BACA,8BACA,8BACA,qCACA,SACA,iFACA,2BACA,kDACA,kEACA,SACA,iFACA,2BACA,mBACA,uBACA,uBACA,iDACA,6DACA,uDACA,wCACA,0EACA,YACA,2EACA,aACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,2BACA,2CACA,qDACA,oEACA,oCACA,wDACA,6DACA,4EACA,6DACA,4EACA,aACA,SACA,iFACA,yBACA,8BACA,gCACA,gEACA,4EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,SACA,iFACA,yBACA,4BACA,4DACA,iEACA,0EACA,+DACA,wEACA,+DACA,wEACA,SACA,GACA,GACA,iFACA,2DACA,iFACA,gCACA,6DACA,QACA,6DACA,SACA,GACA,GACA,GACA,GACA,iFACA,GACA,kDACA,GACA,iFACA,qBACA,iFACA,8BACA,SACA,oFACA,gCACA,sBACA,SACA,sEACA,oFACA,qCACA,sCACA,oCACA,SACA,8BACA,4DACA,sCACA,iEACA,mBACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,iEACA,4EACA,+DACA,4DACA,8CACA,SACA,oCACA,+CACA,wCACA,yCACA,sCACA,SACA,oCACA,+CACA,oEACA,mCACA,gCACA,gCACA,wCACA,yCACA,wCACA,yCACA,yCACA,SACA,oCACA,kDACA,+CACA,0CACA,2CACA,0CACA,2CACA,0CACA,SACA,oCACA,+DACA,+CACA,0CACA,2CACA,0CACA,2CACA,6CACA,SACA,oCACA,yDACA,gDACA,0DACA,oCACA,uCACA,8CACA,yEACA,6BACA,iCACA,mCACA,SACA,oCACA,iEACA,gDACA,2EACA,uCACA,+BACA,2BACA,gCACA,qCACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,iFACA,0CACA,2CACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,iEACA,yEACA,4DACA,uCACA,yBACA,qEACA,0CACA,SACA,oCACA,iEACA,gDACA,oEACA,wDACA,2CACA,6DACA,yEACA,+EACA,+CACA,kEACA,qDACA,0CACA,SACA,oCACA,qEACA,gDACA,oDACA,+EACA,sDACA,qCACA,+DACA,oDACA,0BACA,oDACA,sDACA,4CACA,+CACA,uDACA,wDACA,wEACA,6CACA,SACA,oDACA,yDACA,0EACA,2DACA,iDACA,wCACA,MACA,iFACA,uBACA,sBACA,sBACA,oCACA,kCACA,wDACA,4CACA,wCACA,oBACA,wCACA,qBACA,iBACA,wCACA,4DACA,iFACA,gBACA,4DACA,iFACA,iBACA,kCACA,qCACA,iBACA,iCACA,iCACA,kCACA,kCACA,iCACA,iCACA,YACA,oDACA,wCACA,oCACA,gBACA,oCACA,iBACA,mCACA,8GACA,8GACA,8GACA,8GACA,gBACA,wGACA,wGACA,wGACA,wGACA,iBACA,aACA,iFACA,2CACA,2CACA,4CACA,4CACA,2CACA,2CACA,+CACA,+CACA,sEACA,6CACA,oFACA,oDACA,iFACA,oBACA,kCACA,2BACA,gBACA,4BACA,iBACA,iFACA,oCACA,mCACA,+GACA,+GACA,+GACA,+GACA,gBACA,yGACA,yGACA,yGACA,yGACA,iBACA,YACA,uGACA,uGACA,aACA,iFACA,wCACA,wCACA,4CACA,8CACA,qDACA,qDACA,iFACA,4CACA,4CACA,uDACA,uDACA,iFACA,4CACA,4CACA,qEACA,qEACA,uDACA,uDACA,uDACA,uDACA,iFACA,sDACA,oDACA,gDACA,6DACA,iFACA,mCACA,mCACA,uDACA,0DACA,iFACA,2CACA,2CACA,wCACA,wCACA,yDACA,gEACA,0CACA,kEACA,iFACA,uBACA,uBACA,uBACA,wBACA,2DACA,2DACA,gDACA,gDACA,iFACA,uBACA,mDACA,mDACA,uBACA,mDACA,mDACA,kDACA,4DACA,6CACA,4DACA,iFACA,kCACA,qDACA,+CACA,6CACA,2CACA,iFACA,gCACA,gCACA,wDACA,wDACA,sDACA,sDACA,8CACA,sDACA,sDACA,iFACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,wCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,kEACA,kEACA,iDACA,kEACA,kEACA,iFACA,4CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,sEACA,sEACA,qDACA,sEACA,sEACA,iFACA,gDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,0EACA,0EACA,yDACA,0EACA,0EACA,iFACA,oDACA,uCACA,wFACA,wFACA,6EACA,6EACA,uEACA,uEACA,8EACA,8EACA,6DACA,8EACA,8EACA,iFACA,gCACA,mBACA,oEACA,oEACA,yDACA,yDACA,mDACA,mDACA,0DACA,0DACA,yCACA,0DACA,0DACA,iFACA,oCACA,uBACA,wEACA,wEACA,6DACA,6DACA,uDACA,uDACA,8DACA,8DACA,6CACA,8DACA,8DACA,iFACA,yCACA,2BACA,4EACA,4EACA,iEACA,iEACA,2DACA,2DACA,mEACA,mEACA,iDACA,mEACA,mEACA,iFACA,6CACA,+BACA,gFACA,gFACA,qEACA,qEACA,+DACA,+DACA,uEACA,uEACA,qDACA,uEACA,uEACA,iFACA,iDACA,mCACA,oFACA,oFACA,yEACA,yEACA,mEACA,mEACA,2EACA,2EACA,yDACA,2EACA,2EACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,aACA,iFACA,4BACA,iCACA,iFACA,wBACA,6BACA,iFACA,oBACA,yBACA,iFACA,gBACA,qBACA,iFACA,YACA,iBACA,iFACA,QACA,iFACA,wCACA,wCACA,4CACA,4CACA,iFACA,4DACA,4CACA,4DACA,gDACA,iFACA,yCACA,uCACA,8DACA,6CACA,8DACA,uDACA,iFACA,gEACA,mEACA,8DACA,8DACA,8BACA,wCACA,YACA,+DACA,aACA,IACA,iFACA,SACA,GACA,gBACA,oCACA,WACA,iBACA,gBACA,gBACA,gBACA,kBACA,iBACA,iBACA,iBACA,YACA,aACA,cACA,WACA,WACA,WACA,gBACA,OACA,GACA,wDACA,iDACA,KACCI,KAAM,OCplCLS,GAEHjB,UAECM,UAAc9B,MAAO,OAItB2B,cAEC,oBAEA,gBAEA,cACA,8EAEA,KAECK,KAAM,MAERJ,gBAEC,8BAEA,oBAEA,gBAEA,2CAEA,wCAEA,KAECI,KAAM,OCtBTU,GACAC,KADA,WAEA,OACAC,UAAA,KACAC,MAAA,KACAC,OAAA,KACA7J,OAAA,KACAD,MAAA,KAC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","file":"static/js/1.e4708439d83a2997043d.js","sourcesContent":["import { Pass } from \"../postprocessing/Pass.js\";\r\n\r\nvar MaskPass = function ( scene, camera ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.scene = scene;\r\n\tthis.camera = camera;\r\n\r\n\tthis.clear = true;\r\n\tthis.needsSwap = false;\r\n\r\n\tthis.inverse = false;\r\n\r\n};\r\n\r\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: MaskPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tvar context = renderer.getContext();\r\n\t\tvar state = renderer.state;\r\n\r\n\t\t// don't update color or depth\r\n\r\n\t\tstate.buffers.color.setMask( false );\r\n\t\tstate.buffers.depth.setMask( false );\r\n\r\n\t\t// lock buffers\r\n\r\n\t\tstate.buffers.color.setLocked( true );\r\n\t\tstate.buffers.depth.setLocked( true );\r\n\r\n\t\t// set up stencil\r\n\r\n\t\tvar writeValue, clearValue;\r\n\r\n\t\tif ( this.inverse ) {\r\n\r\n\t\t\twriteValue = 0;\r\n\t\t\tclearValue = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\twriteValue = 1;\r\n\t\t\tclearValue = 0;\r\n\r\n\t\t}\r\n\r\n\t\tstate.buffers.stencil.setTest( true );\r\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\r\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\r\n\t\tstate.buffers.stencil.setClear( clearValue );\r\n\t\tstate.buffers.stencil.setLocked( true );\r\n\r\n\t\t// draw into the stencil buffer\r\n\r\n\t\trenderer.setRenderTarget( readBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t// unlock color and depth buffer for subsequent rendering\r\n\r\n\t\tstate.buffers.color.setLocked( false );\r\n\t\tstate.buffers.depth.setLocked( false );\r\n\r\n\t\t// only render where stencil is set to 1\r\n\r\n\t\tstate.buffers.stencil.setLocked( false );\r\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\r\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\r\n\t\tstate.buffers.stencil.setLocked( true );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\nvar ClearMaskPass = function () {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.needsSwap = false;\r\n\r\n};\r\n\r\nClearMaskPass.prototype = Object.create( Pass.prototype );\r\n\r\nObject.assign( ClearMaskPass.prototype, {\r\n\r\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\trenderer.state.buffers.stencil.setLocked( false );\r\n\t\trenderer.state.buffers.stencil.setTest( false );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { MaskPass, ClearMaskPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/MaskPass.js","import {\r\n\tClock,\r\n\tLinearFilter,\r\n\tMesh,\r\n\tOrthographicCamera,\r\n\tPlaneBufferGeometry,\r\n\tRGBAFormat,\r\n\tVector2,\r\n\tWebGLRenderTarget\r\n} from \"@/components/build/three.module.js\";\r\nimport { CopyShader } from \"../shaders/CopyShader.js\";\r\nimport { ShaderPass } from \"../postprocessing/ShaderPass.js\";\r\nimport { MaskPass } from \"../postprocessing/MaskPass.js\";\r\nimport { ClearMaskPass } from \"../postprocessing/MaskPass.js\";\r\n\r\nvar EffectComposer = function ( renderer, renderTarget ) {\r\n\r\n\tthis.renderer = renderer;\r\n\r\n\tif ( renderTarget === undefined ) {\r\n\r\n\t\tvar parameters = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tformat: RGBAFormat\r\n\t\t};\r\n\r\n\t\tvar size = renderer.getSize( new Vector2() );\r\n\t\tthis._pixelRatio = renderer.getPixelRatio();\r\n\t\tthis._width = size.width;\r\n\t\tthis._height = size.height;\r\n\r\n\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\r\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\r\n\r\n\t} else {\r\n\r\n\t\tthis._pixelRatio = 1;\r\n\t\tthis._width = renderTarget.width;\r\n\t\tthis._height = renderTarget.height;\r\n\r\n\t}\r\n\r\n\tthis.renderTarget1 = renderTarget;\r\n\tthis.renderTarget2 = renderTarget.clone();\r\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n\r\n\tthis.writeBuffer = this.renderTarget1;\r\n\tthis.readBuffer = this.renderTarget2;\r\n\r\n\tthis.renderToScreen = true;\r\n\r\n\tthis.passes = [];\r\n\r\n\t// dependencies\r\n\r\n\tif ( CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\r\n\r\n\t}\r\n\r\n\tif ( ShaderPass === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\r\n\r\n\t}\r\n\r\n\tthis.copyPass = new ShaderPass( CopyShader );\r\n\r\n\tthis.clock = new Clock();\r\n\r\n};\r\n\r\nObject.assign( EffectComposer.prototype, {\r\n\r\n\tswapBuffers: function () {\r\n\r\n\t\tvar tmp = this.readBuffer;\r\n\t\tthis.readBuffer = this.writeBuffer;\r\n\t\tthis.writeBuffer = tmp;\r\n\r\n\t},\r\n\r\n\taddPass: function ( pass ) {\r\n\r\n\t\tthis.passes.push( pass );\r\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t},\r\n\r\n\tinsertPass: function ( pass, index ) {\r\n\r\n\t\tthis.passes.splice( index, 0, pass );\r\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t},\r\n\r\n\tisLastEnabledPass: function ( passIndex ) {\r\n\r\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tif ( this.passes[ i ].enabled ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\trender: function ( deltaTime ) {\r\n\r\n\t\t// deltaTime value is in seconds\r\n\r\n\t\tif ( deltaTime === undefined ) {\r\n\r\n\t\t\tdeltaTime = this.clock.getDelta();\r\n\r\n\t\t}\r\n\r\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\r\n\r\n\t\tvar maskActive = false;\r\n\r\n\t\tvar pass, i, il = this.passes.length;\r\n\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\tpass = this.passes[ i ];\r\n\r\n\t\t\tif ( pass.enabled === false ) continue;\r\n\r\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\r\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\r\n\r\n\t\t\tif ( pass.needsSwap ) {\r\n\r\n\t\t\t\tif ( maskActive ) {\r\n\r\n\t\t\t\t\tvar context = this.renderer.getContext();\r\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\r\n\r\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\r\n\r\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.swapBuffers();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( MaskPass !== undefined ) {\r\n\r\n\t\t\t\tif ( pass instanceof MaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = true;\r\n\r\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t},\r\n\r\n\treset: function ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tvar size = this.renderer.getSize( new Vector2() );\r\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\r\n\t\t\tthis._width = size.width;\r\n\t\t\tthis._height = size.height;\r\n\r\n\t\t\trenderTarget = this.renderTarget1.clone();\r\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\r\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\r\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\r\n\r\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\r\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tsetPixelRatio: function ( pixelRatio ) {\r\n\r\n\t\tthis._pixelRatio = pixelRatio;\r\n\r\n\t\tthis.setSize( this._width, this._height );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\nvar Pass = function () {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\tthis.renderToScreen = false;\r\n\r\n};\r\n\r\nObject.assign( Pass.prototype, {\r\n\r\n\tsetSize: function ( /* width, height */ ) {},\r\n\r\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\nPass.FullScreenQuad = ( function () {\r\n\r\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\r\n\r\n\tvar FullScreenQuad = function ( material ) {\r\n\r\n\t\tthis._mesh = new Mesh( geometry, material );\r\n\r\n\t};\r\n\r\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this._mesh.material;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis._mesh.material = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( FullScreenQuad.prototype, {\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis._mesh.geometry.dispose();\r\n\r\n\t\t},\r\n\r\n\t\trender: function ( renderer ) {\r\n\r\n\t\t\trenderer.render( this._mesh, camera );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn FullScreenQuad;\r\n\r\n} )();\r\n\r\nexport { EffectComposer, Pass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/EffectComposer.js","import {\r\n\tOrthographicCamera,\r\n\tPlaneBufferGeometry,\r\n\tMesh\r\n} from \"@/components/build/three.module.js\";\r\n\r\nfunction Pass() {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\tthis.renderToScreen = false;\r\n\r\n}\r\n\r\nObject.assign( Pass.prototype, {\r\n\r\n\tsetSize: function ( /* width, height */ ) {},\r\n\r\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\n\r\n// Important: It's actually a hack to put FullScreenQuad into the Pass namespace. This is only\r\n// done to make examples/js code work. Normally, FullScreenQuad should be exported\r\n// from this module like Pass.\r\n\r\nPass.FullScreenQuad = ( function () {\r\n\r\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\r\n\r\n\tvar FullScreenQuad = function ( material ) {\r\n\r\n\t\tthis._mesh = new Mesh( geometry, material );\r\n\r\n\t};\r\n\r\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this._mesh.material;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis._mesh.material = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( FullScreenQuad.prototype, {\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis._mesh.geometry.dispose();\r\n\r\n\t\t},\r\n\r\n\t\trender: function ( renderer ) {\r\n\r\n\t\t\trenderer.render( this._mesh, camera );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn FullScreenQuad;\r\n\r\n} )();\r\n\r\nexport { Pass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/Pass.js","import { Pass } from \"../postprocessing/Pass.js\";\r\n\r\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.scene = scene;\r\n\tthis.camera = camera;\r\n\r\n\tthis.overrideMaterial = overrideMaterial;\r\n\r\n\tthis.clearColor = clearColor;\r\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\r\n\r\n\tthis.clear = true;\r\n\tthis.clearDepth = false;\r\n\tthis.needsSwap = false;\r\n\r\n};\r\n\r\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: RenderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\r\n\r\n\t\tif ( this.overrideMaterial !== undefined ) {\r\n\r\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\r\n\r\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\toldClearColor = renderer.getClearColor().getHex();\r\n\t\t\toldClearAlpha = renderer.getClearAlpha();\r\n\r\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearDepth ) {\r\n\r\n\t\t\trenderer.clearDepth();\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\r\n\r\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.overrideMaterial !== undefined ) {\r\n\r\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { RenderPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/RenderPass.js","import {\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\nimport { Pass } from \"../postprocessing/Pass.js\";\r\n\r\nvar ShaderPass = function ( shader, textureID ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\r\n\r\n\tif ( shader instanceof ShaderMaterial ) {\r\n\r\n\t\tthis.uniforms = shader.uniforms;\r\n\r\n\t\tthis.material = shader;\r\n\r\n\t} else if ( shader ) {\r\n\r\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\r\n\t\t\tdefines: Object.assign( {}, shader.defines ),\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\r\n\r\n};\r\n\r\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: ShaderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { ShaderPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/ShaderPass.js","/**\r\n * Full-screen textured quad shader\r\n */\r\n\r\nvar CopyShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"opacity\": { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform float opacity;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\r\n\t\t\"\tgl_FragColor = opacity * texel;\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { CopyShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/CopyShader.js","/**\r\n * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\r\n * - based on Nvidia example\r\n * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\r\n */\r\n\r\nvar BleachBypassShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"opacity\": { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform float opacity;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 base = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\"\tvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\",\r\n\t\t\"\tfloat lum = dot( lumCoeff, base.rgb );\",\r\n\t\t\"\tvec3 blend = vec3( lum );\",\r\n\r\n\t\t\"\tfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\",\r\n\r\n\t\t\"\tvec3 result1 = 2.0 * base.rgb * blend;\",\r\n\t\t\"\tvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\",\r\n\r\n\t\t\"\tvec3 newColor = mix( result1, result2, L );\",\r\n\r\n\t\t\"\tfloat A2 = opacity * base.a;\",\r\n\t\t\"\tvec3 mixRGB = A2 * newColor.rgb;\",\r\n\t\t\"\tmixRGB += ( ( 1.0 - A2 ) * base.rgb );\",\r\n\r\n\t\t\"\tgl_FragColor = vec4( mixRGB, base.a );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { BleachBypassShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/BleachBypassShader.js","import {\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Color correction\r\n */\r\n\r\nvar ColorCorrectionShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"powRGB\": { value: new Vector3( 2, 2, 2 ) },\r\n\t\t\"mulRGB\": { value: new Vector3( 1, 1, 1 ) },\r\n\t\t\"addRGB\": { value: new Vector3( 0, 0, 0 ) }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform vec3 powRGB;\",\r\n\t\t\"uniform vec3 mulRGB;\",\r\n\t\t\"uniform vec3 addRGB;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tgl_FragColor = texture2D( tDiffuse, vUv );\",\r\n\t\t\"\tgl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { ColorCorrectionShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/ColorCorrectionShader.js","import {\r\n\tVector2\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * NVIDIA FXAA by Timothy Lottes\r\n * http://timothylottes.blogspot.com/2011/06/fxaa3-source-released.html\r\n * - WebGL port by @supereggbert\r\n * http://www.glge.org/demos/fxaa/\r\n */\r\n\r\nvar FXAAShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"resolution\": { value: new Vector2( 1 / 1024, 1 / 512 ) }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"precision highp float;\",\r\n\t\t\"\",\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"\",\r\n\t\t\"uniform vec2 resolution;\",\r\n\t\t\"\",\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"\",\r\n\t\t\"// FXAA 3.11 implementation by NVIDIA, ported to WebGL by Agost Biro (biro@archilogic.com)\",\r\n\t\t\"\",\r\n\t\t\"//----------------------------------------------------------------------------------\",\r\n\t\t\"// File:        es3-kepler\\FXAA\\assets\\shaders/FXAA_DefaultES.frag\",\r\n\t\t\"// SDK Version: v3.00\",\r\n\t\t\"// Email:       gameworks@nvidia.com\",\r\n\t\t\"// Site:        http://developer.nvidia.com/\",\r\n\t\t\"//\",\r\n\t\t\"// Copyright (c) 2014-2015, NVIDIA CORPORATION. All rights reserved.\",\r\n\t\t\"//\",\r\n\t\t\"// Redistribution and use in source and binary forms, with or without\",\r\n\t\t\"// modification, are permitted provided that the following conditions\",\r\n\t\t\"// are met:\",\r\n\t\t\"//  * Redistributions of source code must retain the above copyright\",\r\n\t\t\"//    notice, this list of conditions and the following disclaimer.\",\r\n\t\t\"//  * Redistributions in binary form must reproduce the above copyright\",\r\n\t\t\"//    notice, this list of conditions and the following disclaimer in the\",\r\n\t\t\"//    documentation and/or other materials provided with the distribution.\",\r\n\t\t\"//  * Neither the name of NVIDIA CORPORATION nor the names of its\",\r\n\t\t\"//    contributors may be used to endorse or promote products derived\",\r\n\t\t\"//    from this software without specific prior written permission.\",\r\n\t\t\"//\",\r\n\t\t\"// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\",\r\n\t\t\"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\",\r\n\t\t\"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\",\r\n\t\t\"// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\",\r\n\t\t\"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\",\r\n\t\t\"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\",\r\n\t\t\"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\",\r\n\t\t\"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\",\r\n\t\t\"// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\",\r\n\t\t\"// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\",\r\n\t\t\"// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\",\r\n\t\t\"//\",\r\n\t\t\"//----------------------------------------------------------------------------------\",\r\n\t\t\"\",\r\n\t\t\"#define FXAA_PC 1\",\r\n\t\t\"#define FXAA_GLSL_100 1\",\r\n\t\t\"#define FXAA_QUALITY_PRESET 12\",\r\n\t\t\"\",\r\n\t\t\"#define FXAA_GREEN_AS_LUMA 1\",\r\n\t\t\"\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_PC_CONSOLE\",\r\n\t\t\"    //\",\r\n\t\t\"    // The console algorithm for PC is included\",\r\n\t\t\"    // for developers targeting really low spec machines.\",\r\n\t\t\"    // Likely better to just run FXAA_PC, and use a really low preset.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_PC_CONSOLE 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_GLSL_120\",\r\n\t\t\"    #define FXAA_GLSL_120 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_GLSL_130\",\r\n\t\t\"    #define FXAA_GLSL_130 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_HLSL_3\",\r\n\t\t\"    #define FXAA_HLSL_3 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_HLSL_4\",\r\n\t\t\"    #define FXAA_HLSL_4 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_HLSL_5\",\r\n\t\t\"    #define FXAA_HLSL_5 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*==========================================================================*/\",\r\n\t\t\"#ifndef FXAA_GREEN_AS_LUMA\",\r\n\t\t\"    //\",\r\n\t\t\"    // For those using non-linear color,\",\r\n\t\t\"    // and either not able to get luma in alpha, or not wanting to,\",\r\n\t\t\"    // this enables FXAA to run using green as a proxy for luma.\",\r\n\t\t\"    // So with this enabled, no need to pack luma in alpha.\",\r\n\t\t\"    //\",\r\n\t\t\"    // This will turn off AA on anything which lacks some amount of green.\",\r\n\t\t\"    // Pure red and blue or combination of only R and B, will get no AA.\",\r\n\t\t\"    //\",\r\n\t\t\"    // Might want to lower the settings for both,\",\r\n\t\t\"    //    fxaaConsoleEdgeThresholdMin\",\r\n\t\t\"    //    fxaaQualityEdgeThresholdMin\",\r\n\t\t\"    // In order to insure AA does not get turned off on colors\",\r\n\t\t\"    // which contain a minor amount of green.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = On.\",\r\n\t\t\"    // 0 = Off.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_GREEN_AS_LUMA 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_EARLY_EXIT\",\r\n\t\t\"    //\",\r\n\t\t\"    // Controls algorithm's early exit path.\",\r\n\t\t\"    // On PS3 turning this ON adds 2 cycles to the shader.\",\r\n\t\t\"    // On 360 turning this OFF adds 10ths of a millisecond to the shader.\",\r\n\t\t\"    // Turning this off on console will result in a more blurry image.\",\r\n\t\t\"    // So this defaults to on.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = On.\",\r\n\t\t\"    // 0 = Off.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_EARLY_EXIT 1\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_DISCARD\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only valid for PC OpenGL currently.\",\r\n\t\t\"    // Probably will not work when FXAA_GREEN_AS_LUMA = 1.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = Use discard on pixels which don't need AA.\",\r\n\t\t\"    //     For APIs which enable concurrent TEX+ROP from same surface.\",\r\n\t\t\"    // 0 = Return unchanged color on pixels which don't need AA.\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_DISCARD 0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n\t\t\"    //\",\r\n\t\t\"    // Used for GLSL 120 only.\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = GL API supports fast pixel offsets\",\r\n\t\t\"    // 0 = do not use fast pixel offsets\",\r\n\t\t\"    //\",\r\n\t\t\"    #ifdef GL_EXT_gpu_shader4\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_NV_gpu_shader5\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_ARB_gpu_shader5\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifndef FXAA_FAST_PIXEL_OFFSET\",\r\n\t\t\"        #define FXAA_FAST_PIXEL_OFFSET 0\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#ifndef FXAA_GATHER4_ALPHA\",\r\n\t\t\"    //\",\r\n\t\t\"    // 1 = API supports gather4 on alpha channel.\",\r\n\t\t\"    // 0 = API does not support gather4 on alpha channel.\",\r\n\t\t\"    //\",\r\n\t\t\"    #if (FXAA_HLSL_5 == 1)\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_ARB_gpu_shader5\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifdef GL_NV_gpu_shader5\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 1\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #ifndef FXAA_GATHER4_ALPHA\",\r\n\t\t\"        #define FXAA_GATHER4_ALPHA 0\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                        FXAA QUALITY - TUNING KNOBS\",\r\n\t\t\"------------------------------------------------------------------------------\",\r\n\t\t\"NOTE the other tuning knobs are now in the shader function inputs!\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#ifndef FXAA_QUALITY_PRESET\",\r\n\t\t\"    //\",\r\n\t\t\"    // Choose the quality preset.\",\r\n\t\t\"    // This needs to be compiled into the shader as it effects code.\",\r\n\t\t\"    // Best option to include multiple presets is to\",\r\n\t\t\"    // in each shader define the preset, then include this file.\",\r\n\t\t\"    //\",\r\n\t\t\"    // OPTIONS\",\r\n\t\t\"    // -----------------------------------------------------------------------\",\r\n\t\t\"    // 10 to 15 - default medium dither (10=fastest, 15=highest quality)\",\r\n\t\t\"    // 20 to 29 - less dither, more expensive (20=fastest, 29=highest quality)\",\r\n\t\t\"    // 39       - no dither, very expensive\",\r\n\t\t\"    //\",\r\n\t\t\"    // NOTES\",\r\n\t\t\"    // -----------------------------------------------------------------------\",\r\n\t\t\"    // 12 = slightly faster then FXAA 3.9 and higher edge quality (default)\",\r\n\t\t\"    // 13 = about same speed as FXAA 3.9 and better than 12\",\r\n\t\t\"    // 23 = closest to FXAA 3.9 visually and performance wise\",\r\n\t\t\"    //  _ = the lowest digit is directly related to performance\",\r\n\t\t\"    // _  = the highest digit is directly related to style\",\r\n\t\t\"    //\",\r\n\t\t\"    #define FXAA_QUALITY_PRESET 12\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"\",\r\n\t\t\"                           FXAA QUALITY - PRESETS\",\r\n\t\t\"\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                     FXAA QUALITY - MEDIUM DITHER PRESETS\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 10)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 3\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P1 3.0\",\r\n\t\t\"    #define FXAA_QUALITY_P2 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 11)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 4\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 3.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 12)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 5\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 13)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 6\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 14)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 7\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 15)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 8\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 12.0\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                     FXAA QUALITY - LOW DITHER PRESETS\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 20)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 3\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P1 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P2 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 21)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 4\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 22)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 5\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 23)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 6\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 24)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 7\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 3.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 25)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 8\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 26)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 9\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 27)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 10\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 28)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 11\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P10 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 29)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 12\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P2 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P10 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P11 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                     FXAA QUALITY - EXTREME QUALITY\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_QUALITY_PRESET == 39)\",\r\n\t\t\"    #define FXAA_QUALITY_PS 12\",\r\n\t\t\"    #define FXAA_QUALITY_P0 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P1 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P2 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P3 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P4 1.0\",\r\n\t\t\"    #define FXAA_QUALITY_P5 1.5\",\r\n\t\t\"    #define FXAA_QUALITY_P6 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P7 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P8 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P9 2.0\",\r\n\t\t\"    #define FXAA_QUALITY_P10 4.0\",\r\n\t\t\"    #define FXAA_QUALITY_P11 8.0\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"\",\r\n\t\t\"                                API PORTING\",\r\n\t\t\"\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_GLSL_100 == 1) || (FXAA_GLSL_120 == 1) || (FXAA_GLSL_130 == 1)\",\r\n\t\t\"    #define FxaaBool bool\",\r\n\t\t\"    #define FxaaDiscard discard\",\r\n\t\t\"    #define FxaaFloat float\",\r\n\t\t\"    #define FxaaFloat2 vec2\",\r\n\t\t\"    #define FxaaFloat3 vec3\",\r\n\t\t\"    #define FxaaFloat4 vec4\",\r\n\t\t\"    #define FxaaHalf float\",\r\n\t\t\"    #define FxaaHalf2 vec2\",\r\n\t\t\"    #define FxaaHalf3 vec3\",\r\n\t\t\"    #define FxaaHalf4 vec4\",\r\n\t\t\"    #define FxaaInt2 ivec2\",\r\n\t\t\"    #define FxaaSat(x) clamp(x, 0.0, 1.0)\",\r\n\t\t\"    #define FxaaTex sampler2D\",\r\n\t\t\"#else\",\r\n\t\t\"    #define FxaaBool bool\",\r\n\t\t\"    #define FxaaDiscard clip(-1)\",\r\n\t\t\"    #define FxaaFloat float\",\r\n\t\t\"    #define FxaaFloat2 float2\",\r\n\t\t\"    #define FxaaFloat3 float3\",\r\n\t\t\"    #define FxaaFloat4 float4\",\r\n\t\t\"    #define FxaaHalf half\",\r\n\t\t\"    #define FxaaHalf2 half2\",\r\n\t\t\"    #define FxaaHalf3 half3\",\r\n\t\t\"    #define FxaaHalf4 half4\",\r\n\t\t\"    #define FxaaSat(x) saturate(x)\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_GLSL_100 == 1)\",\r\n\t\t\"  #define FxaaTexTop(t, p) texture2D(t, p, 0.0)\",\r\n\t\t\"  #define FxaaTexOff(t, p, o, r) texture2D(t, p + (o * r), 0.0)\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_GLSL_120 == 1)\",\r\n\t\t\"    // Requires,\",\r\n\t\t\"    //  #version 120\",\r\n\t\t\"    // And at least,\",\r\n\t\t\"    //  #extension GL_EXT_gpu_shader4 : enable\",\r\n\t\t\"    //  (or set FXAA_FAST_PIXEL_OFFSET 1 to work like DX9)\",\r\n\t\t\"    #define FxaaTexTop(t, p) texture2DLod(t, p, 0.0)\",\r\n\t\t\"    #if (FXAA_FAST_PIXEL_OFFSET == 1)\",\r\n\t\t\"        #define FxaaTexOff(t, p, o, r) texture2DLodOffset(t, p, 0.0, o)\",\r\n\t\t\"    #else\",\r\n\t\t\"        #define FxaaTexOff(t, p, o, r) texture2DLod(t, p + (o * r), 0.0)\",\r\n\t\t\"    #endif\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n\t\t\"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n\t\t\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n\t\t\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n\t\t\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n\t\t\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_GLSL_130 == 1)\",\r\n\t\t\"    // Requires \\\"#version 130\\\" or better\",\r\n\t\t\"    #define FxaaTexTop(t, p) textureLod(t, p, 0.0)\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) textureLodOffset(t, p, 0.0, o)\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n\t\t\"        // use #extension GL_ARB_gpu_shader5 : enable\",\r\n\t\t\"        #define FxaaTexAlpha4(t, p) textureGather(t, p, 3)\",\r\n\t\t\"        #define FxaaTexOffAlpha4(t, p, o) textureGatherOffset(t, p, o, 3)\",\r\n\t\t\"        #define FxaaTexGreen4(t, p) textureGather(t, p, 1)\",\r\n\t\t\"        #define FxaaTexOffGreen4(t, p, o) textureGatherOffset(t, p, o, 1)\",\r\n\t\t\"    #endif\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_HLSL_3 == 1)\",\r\n\t\t\"    #define FxaaInt2 float2\",\r\n\t\t\"    #define FxaaTex sampler2D\",\r\n\t\t\"    #define FxaaTexTop(t, p) tex2Dlod(t, float4(p, 0.0, 0.0))\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) tex2Dlod(t, float4(p + (o * r), 0, 0))\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_HLSL_4 == 1)\",\r\n\t\t\"    #define FxaaInt2 int2\",\r\n\t\t\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n\t\t\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n\t\t\"#endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"#if (FXAA_HLSL_5 == 1)\",\r\n\t\t\"    #define FxaaInt2 int2\",\r\n\t\t\"    struct FxaaTex { SamplerState smpl; Texture2D tex; };\",\r\n\t\t\"    #define FxaaTexTop(t, p) t.tex.SampleLevel(t.smpl, p, 0.0)\",\r\n\t\t\"    #define FxaaTexOff(t, p, o, r) t.tex.SampleLevel(t.smpl, p, 0.0, o)\",\r\n\t\t\"    #define FxaaTexAlpha4(t, p) t.tex.GatherAlpha(t.smpl, p)\",\r\n\t\t\"    #define FxaaTexOffAlpha4(t, p, o) t.tex.GatherAlpha(t.smpl, p, o)\",\r\n\t\t\"    #define FxaaTexGreen4(t, p) t.tex.GatherGreen(t.smpl, p)\",\r\n\t\t\"    #define FxaaTexOffGreen4(t, p, o) t.tex.GatherGreen(t.smpl, p, o)\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"                   GREEN AS LUMA OPTION SUPPORT FUNCTION\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.w; }\",\r\n\t\t\"#else\",\r\n\t\t\"    FxaaFloat FxaaLuma(FxaaFloat4 rgba) { return rgba.y; }\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"\",\r\n\t\t\"/*============================================================================\",\r\n\t\t\"\",\r\n\t\t\"                             FXAA3 QUALITY - PC\",\r\n\t\t\"\",\r\n\t\t\"============================================================================*/\",\r\n\t\t\"#if (FXAA_PC == 1)\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"FxaaFloat4 FxaaPixelShader(\",\r\n\t\t\"    //\",\r\n\t\t\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n\t\t\"    // {xy} = center of pixel\",\r\n\t\t\"    FxaaFloat2 pos,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Used only for FXAA Console, and not used on the 360 version.\",\r\n\t\t\"    // Use noperspective interpolation here (turn off perspective interpolation).\",\r\n\t\t\"    // {xy_} = upper left of pixel\",\r\n\t\t\"    // {_zw} = lower right of pixel\",\r\n\t\t\"    FxaaFloat4 fxaaConsolePosPos,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Input color texture.\",\r\n\t\t\"    // {rgb_} = color in linear or perceptual color space\",\r\n\t\t\"    // if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"    //     {__a} = luma in perceptual color space (not linear)\",\r\n\t\t\"    FxaaTex tex,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on the optimized 360 version of FXAA Console.\",\r\n\t\t\"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n\t\t\"    // For 360, same texture, just alias with a 2nd sampler.\",\r\n\t\t\"    // This sampler needs to have an exponent bias of -1.\",\r\n\t\t\"    FxaaTex fxaaConsole360TexExpBiasNegOne,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on the optimized 360 version of FXAA Console.\",\r\n\t\t\"    // For everything but 360, just use the same input here as for \\\"tex\\\".\",\r\n\t\t\"    // For 360, same texture, just alias with a 3nd sampler.\",\r\n\t\t\"    // This sampler needs to have an exponent bias of -2.\",\r\n\t\t\"    FxaaTex fxaaConsole360TexExpBiasNegTwo,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // {x_} = 1.0/screenWidthInPixels\",\r\n\t\t\"    // {_y} = 1.0/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat2 fxaaQualityRcpFrame,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // This effects sub-pixel AA quality and inversely sharpness.\",\r\n\t\t\"    //   Where N ranges between,\",\r\n\t\t\"    //     N = 0.50 (default)\",\r\n\t\t\"    //     N = 0.33 (sharper)\",\r\n\t\t\"    // {x__} = -N/screenWidthInPixels\",\r\n\t\t\"    // {_y_} = -N/screenHeightInPixels\",\r\n\t\t\"    // {_z_} =  N/screenWidthInPixels\",\r\n\t\t\"    // {__w} =  N/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat4 fxaaConsoleRcpFrameOpt,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // Not used on 360, but used on PS3 and PC.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // {x__} = -2.0/screenWidthInPixels\",\r\n\t\t\"    // {_y_} = -2.0/screenHeightInPixels\",\r\n\t\t\"    // {_z_} =  2.0/screenWidthInPixels\",\r\n\t\t\"    // {__w} =  2.0/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat4 fxaaConsoleRcpFrameOpt2,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // Only used on 360 in place of fxaaConsoleRcpFrameOpt2.\",\r\n\t\t\"    // This must be from a constant/uniform.\",\r\n\t\t\"    // {x__} =  8.0/screenWidthInPixels\",\r\n\t\t\"    // {_y_} =  8.0/screenHeightInPixels\",\r\n\t\t\"    // {_z_} = -4.0/screenWidthInPixels\",\r\n\t\t\"    // {__w} = -4.0/screenHeightInPixels\",\r\n\t\t\"    FxaaFloat4 fxaaConsole360RcpFrameOpt2,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This used to be the FXAA_QUALITY_SUBPIX define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // Choose the amount of sub-pixel aliasing removal.\",\r\n\t\t\"    // This can effect sharpness.\",\r\n\t\t\"    //   1.00 - upper limit (softer)\",\r\n\t\t\"    //   0.75 - default amount of filtering\",\r\n\t\t\"    //   0.50 - lower limit (sharper, less sub-pixel aliasing removal)\",\r\n\t\t\"    //   0.25 - almost off\",\r\n\t\t\"    //   0.00 - completely off\",\r\n\t\t\"    FxaaFloat fxaaQualitySubpix,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // The minimum amount of local contrast required to apply algorithm.\",\r\n\t\t\"    //   0.333 - too little (faster)\",\r\n\t\t\"    //   0.250 - low quality\",\r\n\t\t\"    //   0.166 - default\",\r\n\t\t\"    //   0.125 - high quality\",\r\n\t\t\"    //   0.063 - overkill (slower)\",\r\n\t\t\"    FxaaFloat fxaaQualityEdgeThreshold,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Quality.\",\r\n\t\t\"    // This used to be the FXAA_QUALITY_EDGE_THRESHOLD_MIN define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // Trims the algorithm from processing darks.\",\r\n\t\t\"    //   0.0833 - upper limit (default, the start of visible unfiltered edges)\",\r\n\t\t\"    //   0.0625 - high quality (faster)\",\r\n\t\t\"    //   0.0312 - visible limit (slower)\",\r\n\t\t\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n\t\t\"    //   Likely want to set this to zero.\",\r\n\t\t\"    //   As colors that are mostly not-green\",\r\n\t\t\"    //   will appear very dark in the green channel!\",\r\n\t\t\"    //   Tune by looking at mostly non-green content,\",\r\n\t\t\"    //   then start at zero and increase until aliasing is a problem.\",\r\n\t\t\"    FxaaFloat fxaaQualityEdgeThresholdMin,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_SHARPNESS define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // This does not effect PS3, as this needs to be compiled in.\",\r\n\t\t\"    //   Use FXAA_CONSOLE_PS3_EDGE_SHARPNESS for PS3.\",\r\n\t\t\"    //   Due to the PS3 being ALU bound,\",\r\n\t\t\"    //   there are only three safe values here: 2 and 4 and 8.\",\r\n\t\t\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n\t\t\"    // For all other platforms can be a non-power of two.\",\r\n\t\t\"    //   8.0 is sharper (default!!!)\",\r\n\t\t\"    //   4.0 is softer\",\r\n\t\t\"    //   2.0 is really soft (good only for vector graphics inputs)\",\r\n\t\t\"    FxaaFloat fxaaConsoleEdgeSharpness,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // This does not effect PS3, as this needs to be compiled in.\",\r\n\t\t\"    //   Use FXAA_CONSOLE_PS3_EDGE_THRESHOLD for PS3.\",\r\n\t\t\"    //   Due to the PS3 being ALU bound,\",\r\n\t\t\"    //   there are only two safe values here: 1/4 and 1/8.\",\r\n\t\t\"    //   These options use the shaders ability to a free *|/ by 2|4|8.\",\r\n\t\t\"    // The console setting has a different mapping than the quality setting.\",\r\n\t\t\"    // Other platforms can use other values.\",\r\n\t\t\"    //   0.125 leaves less aliasing, but is softer (default!!!)\",\r\n\t\t\"    //   0.25 leaves more aliasing, and is sharper\",\r\n\t\t\"    FxaaFloat fxaaConsoleEdgeThreshold,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Only used on FXAA Console.\",\r\n\t\t\"    // This used to be the FXAA_CONSOLE_EDGE_THRESHOLD_MIN define.\",\r\n\t\t\"    // It is here now to allow easier tuning.\",\r\n\t\t\"    // Trims the algorithm from processing darks.\",\r\n\t\t\"    // The console setting has a different mapping than the quality setting.\",\r\n\t\t\"    // This only applies when FXAA_EARLY_EXIT is 1.\",\r\n\t\t\"    // This does not apply to PS3,\",\r\n\t\t\"    // PS3 was simplified to avoid more shader instructions.\",\r\n\t\t\"    //   0.06 - faster but more aliasing in darks\",\r\n\t\t\"    //   0.05 - default\",\r\n\t\t\"    //   0.04 - slower and less aliasing in darks\",\r\n\t\t\"    // Special notes when using FXAA_GREEN_AS_LUMA,\",\r\n\t\t\"    //   Likely want to set this to zero.\",\r\n\t\t\"    //   As colors that are mostly not-green\",\r\n\t\t\"    //   will appear very dark in the green channel!\",\r\n\t\t\"    //   Tune by looking at mostly non-green content,\",\r\n\t\t\"    //   then start at zero and increase until aliasing is a problem.\",\r\n\t\t\"    FxaaFloat fxaaConsoleEdgeThresholdMin,\",\r\n\t\t\"    //\",\r\n\t\t\"    // Extra constants for 360 FXAA Console only.\",\r\n\t\t\"    // Use zeros or anything else for other platforms.\",\r\n\t\t\"    // These must be in physical constant registers and NOT immediates.\",\r\n\t\t\"    // Immediates will result in compiler un-optimizing.\",\r\n\t\t\"    // {xyzw} = float4(1.0, -1.0, 0.25, -0.25)\",\r\n\t\t\"    FxaaFloat4 fxaaConsole360ConstDir\",\r\n\t\t\") {\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat2 posM;\",\r\n\t\t\"    posM.x = pos.x;\",\r\n\t\t\"    posM.y = pos.y;\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 1)\",\r\n\t\t\"        #if (FXAA_DISCARD == 0)\",\r\n\t\t\"            FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n\t\t\"            #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"                #define lumaM rgbyM.w\",\r\n\t\t\"            #else\",\r\n\t\t\"                #define lumaM rgbyM.y\",\r\n\t\t\"            #endif\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"            FxaaFloat4 luma4A = FxaaTexAlpha4(tex, posM);\",\r\n\t\t\"            FxaaFloat4 luma4B = FxaaTexOffAlpha4(tex, posM, FxaaInt2(-1, -1));\",\r\n\t\t\"        #else\",\r\n\t\t\"            FxaaFloat4 luma4A = FxaaTexGreen4(tex, posM);\",\r\n\t\t\"            FxaaFloat4 luma4B = FxaaTexOffGreen4(tex, posM, FxaaInt2(-1, -1));\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #if (FXAA_DISCARD == 1)\",\r\n\t\t\"            #define lumaM luma4A.w\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #define lumaE luma4A.z\",\r\n\t\t\"        #define lumaS luma4A.x\",\r\n\t\t\"        #define lumaSE luma4A.y\",\r\n\t\t\"        #define lumaNW luma4B.w\",\r\n\t\t\"        #define lumaN luma4B.z\",\r\n\t\t\"        #define lumaW luma4B.x\",\r\n\t\t\"    #else\",\r\n\t\t\"        FxaaFloat4 rgbyM = FxaaTexTop(tex, posM);\",\r\n\t\t\"        #if (FXAA_GREEN_AS_LUMA == 0)\",\r\n\t\t\"            #define lumaM rgbyM.w\",\r\n\t\t\"        #else\",\r\n\t\t\"            #define lumaM rgbyM.y\",\r\n\t\t\"        #endif\",\r\n\t\t\"        #if (FXAA_GLSL_100 == 1)\",\r\n\t\t\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 0.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 0.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #else\",\r\n\t\t\"          FxaaFloat lumaS = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaN = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 0,-1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #endif\",\r\n\t\t\"    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat maxSM = max(lumaS, lumaM);\",\r\n\t\t\"    FxaaFloat minSM = min(lumaS, lumaM);\",\r\n\t\t\"    FxaaFloat maxESM = max(lumaE, maxSM);\",\r\n\t\t\"    FxaaFloat minESM = min(lumaE, minSM);\",\r\n\t\t\"    FxaaFloat maxWN = max(lumaN, lumaW);\",\r\n\t\t\"    FxaaFloat minWN = min(lumaN, lumaW);\",\r\n\t\t\"    FxaaFloat rangeMax = max(maxWN, maxESM);\",\r\n\t\t\"    FxaaFloat rangeMin = min(minWN, minESM);\",\r\n\t\t\"    FxaaFloat rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\",\r\n\t\t\"    FxaaFloat range = rangeMax - rangeMin;\",\r\n\t\t\"    FxaaFloat rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\",\r\n\t\t\"    FxaaBool earlyExit = range < rangeMaxClamped;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(earlyExit)\",\r\n\t\t\"        #if (FXAA_DISCARD == 1)\",\r\n\t\t\"            FxaaDiscard;\",\r\n\t\t\"        #else\",\r\n\t\t\"            return rgbyM;\",\r\n\t\t\"        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    #if (FXAA_GATHER4_ALPHA == 0)\",\r\n\t\t\"        #if (FXAA_GLSL_100 == 1)\",\r\n\t\t\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2( 1.0,-1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaFloat2(-1.0, 1.0), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #else\",\r\n\t\t\"          FxaaFloat lumaNW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1,-1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2( 1,-1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"          FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        #endif\",\r\n\t\t\"    #else\",\r\n\t\t\"        FxaaFloat lumaNE = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(1, -1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"        FxaaFloat lumaSW = FxaaLuma(FxaaTexOff(tex, posM, FxaaInt2(-1, 1), fxaaQualityRcpFrame.xy));\",\r\n\t\t\"    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat lumaNS = lumaN + lumaS;\",\r\n\t\t\"    FxaaFloat lumaWE = lumaW + lumaE;\",\r\n\t\t\"    FxaaFloat subpixRcpRange = 1.0/range;\",\r\n\t\t\"    FxaaFloat subpixNSWE = lumaNS + lumaWE;\",\r\n\t\t\"    FxaaFloat edgeHorz1 = (-2.0 * lumaM) + lumaNS;\",\r\n\t\t\"    FxaaFloat edgeVert1 = (-2.0 * lumaM) + lumaWE;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat lumaNESE = lumaNE + lumaSE;\",\r\n\t\t\"    FxaaFloat lumaNWNE = lumaNW + lumaNE;\",\r\n\t\t\"    FxaaFloat edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\",\r\n\t\t\"    FxaaFloat edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat lumaNWSW = lumaNW + lumaSW;\",\r\n\t\t\"    FxaaFloat lumaSWSE = lumaSW + lumaSE;\",\r\n\t\t\"    FxaaFloat edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\",\r\n\t\t\"    FxaaFloat edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\",\r\n\t\t\"    FxaaFloat edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\",\r\n\t\t\"    FxaaFloat edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\",\r\n\t\t\"    FxaaFloat edgeHorz = abs(edgeHorz3) + edgeHorz4;\",\r\n\t\t\"    FxaaFloat edgeVert = abs(edgeVert3) + edgeVert4;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat subpixNWSWNESE = lumaNWSW + lumaNESE;\",\r\n\t\t\"    FxaaFloat lengthSign = fxaaQualityRcpFrame.x;\",\r\n\t\t\"    FxaaBool horzSpan = edgeHorz >= edgeVert;\",\r\n\t\t\"    FxaaFloat subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(!horzSpan) lumaN = lumaW;\",\r\n\t\t\"    if(!horzSpan) lumaS = lumaE;\",\r\n\t\t\"    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\",\r\n\t\t\"    FxaaFloat subpixB = (subpixA * (1.0/12.0)) - lumaM;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat gradientN = lumaN - lumaM;\",\r\n\t\t\"    FxaaFloat gradientS = lumaS - lumaM;\",\r\n\t\t\"    FxaaFloat lumaNN = lumaN + lumaM;\",\r\n\t\t\"    FxaaFloat lumaSS = lumaS + lumaM;\",\r\n\t\t\"    FxaaBool pairN = abs(gradientN) >= abs(gradientS);\",\r\n\t\t\"    FxaaFloat gradient = max(abs(gradientN), abs(gradientS));\",\r\n\t\t\"    if(pairN) lengthSign = -lengthSign;\",\r\n\t\t\"    FxaaFloat subpixC = FxaaSat(abs(subpixB) * subpixRcpRange);\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat2 posB;\",\r\n\t\t\"    posB.x = posM.x;\",\r\n\t\t\"    posB.y = posM.y;\",\r\n\t\t\"    FxaaFloat2 offNP;\",\r\n\t\t\"    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\",\r\n\t\t\"    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\",\r\n\t\t\"    if(!horzSpan) posB.x += lengthSign * 0.5;\",\r\n\t\t\"    if( horzSpan) posB.y += lengthSign * 0.5;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat2 posN;\",\r\n\t\t\"    posN.x = posB.x - offNP.x * FXAA_QUALITY_P0;\",\r\n\t\t\"    posN.y = posB.y - offNP.y * FXAA_QUALITY_P0;\",\r\n\t\t\"    FxaaFloat2 posP;\",\r\n\t\t\"    posP.x = posB.x + offNP.x * FXAA_QUALITY_P0;\",\r\n\t\t\"    posP.y = posB.y + offNP.y * FXAA_QUALITY_P0;\",\r\n\t\t\"    FxaaFloat subpixD = ((-2.0)*subpixC) + 3.0;\",\r\n\t\t\"    FxaaFloat lumaEndN = FxaaLuma(FxaaTexTop(tex, posN));\",\r\n\t\t\"    FxaaFloat subpixE = subpixC * subpixC;\",\r\n\t\t\"    FxaaFloat lumaEndP = FxaaLuma(FxaaTexTop(tex, posP));\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(!pairN) lumaNN = lumaSS;\",\r\n\t\t\"    FxaaFloat gradientScaled = gradient * 1.0/4.0;\",\r\n\t\t\"    FxaaFloat lumaMM = lumaM - lumaNN * 0.5;\",\r\n\t\t\"    FxaaFloat subpixF = subpixD * subpixE;\",\r\n\t\t\"    FxaaBool lumaMLTZero = lumaMM < 0.0;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    lumaEndN -= lumaNN * 0.5;\",\r\n\t\t\"    lumaEndP -= lumaNN * 0.5;\",\r\n\t\t\"    FxaaBool doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"    FxaaBool doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P1;\",\r\n\t\t\"    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P1;\",\r\n\t\t\"    FxaaBool doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P1;\",\r\n\t\t\"    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P1;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    if(doneNP) {\",\r\n\t\t\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P2;\",\r\n\t\t\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P2;\",\r\n\t\t\"        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P2;\",\r\n\t\t\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P2;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        #if (FXAA_QUALITY_PS > 3)\",\r\n\t\t\"        if(doneNP) {\",\r\n\t\t\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P3;\",\r\n\t\t\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P3;\",\r\n\t\t\"            doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P3;\",\r\n\t\t\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P3;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            #if (FXAA_QUALITY_PS > 4)\",\r\n\t\t\"            if(doneNP) {\",\r\n\t\t\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P4;\",\r\n\t\t\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P4;\",\r\n\t\t\"                doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P4;\",\r\n\t\t\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P4;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                #if (FXAA_QUALITY_PS > 5)\",\r\n\t\t\"                if(doneNP) {\",\r\n\t\t\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P5;\",\r\n\t\t\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P5;\",\r\n\t\t\"                    doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P5;\",\r\n\t\t\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P5;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    #if (FXAA_QUALITY_PS > 6)\",\r\n\t\t\"                    if(doneNP) {\",\r\n\t\t\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P6;\",\r\n\t\t\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P6;\",\r\n\t\t\"                        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P6;\",\r\n\t\t\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P6;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                        #if (FXAA_QUALITY_PS > 7)\",\r\n\t\t\"                        if(doneNP) {\",\r\n\t\t\"                            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P7;\",\r\n\t\t\"                            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P7;\",\r\n\t\t\"                            doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P7;\",\r\n\t\t\"                            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P7;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    #if (FXAA_QUALITY_PS > 8)\",\r\n\t\t\"    if(doneNP) {\",\r\n\t\t\"        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P8;\",\r\n\t\t\"        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P8;\",\r\n\t\t\"        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P8;\",\r\n\t\t\"        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P8;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        #if (FXAA_QUALITY_PS > 9)\",\r\n\t\t\"        if(doneNP) {\",\r\n\t\t\"            if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"            if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"            doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"            doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"            if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P9;\",\r\n\t\t\"            if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P9;\",\r\n\t\t\"            doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"            if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P9;\",\r\n\t\t\"            if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P9;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            #if (FXAA_QUALITY_PS > 10)\",\r\n\t\t\"            if(doneNP) {\",\r\n\t\t\"                if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P10;\",\r\n\t\t\"                if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P10;\",\r\n\t\t\"                doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P10;\",\r\n\t\t\"                if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P10;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                #if (FXAA_QUALITY_PS > 11)\",\r\n\t\t\"                if(doneNP) {\",\r\n\t\t\"                    if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                    if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                    if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                    if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                    doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                    doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                    if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P11;\",\r\n\t\t\"                    if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P11;\",\r\n\t\t\"                    doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                    if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P11;\",\r\n\t\t\"                    if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P11;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    #if (FXAA_QUALITY_PS > 12)\",\r\n\t\t\"                    if(doneNP) {\",\r\n\t\t\"                        if(!doneN) lumaEndN = FxaaLuma(FxaaTexTop(tex, posN.xy));\",\r\n\t\t\"                        if(!doneP) lumaEndP = FxaaLuma(FxaaTexTop(tex, posP.xy));\",\r\n\t\t\"                        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\",\r\n\t\t\"                        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\",\r\n\t\t\"                        doneN = abs(lumaEndN) >= gradientScaled;\",\r\n\t\t\"                        doneP = abs(lumaEndP) >= gradientScaled;\",\r\n\t\t\"                        if(!doneN) posN.x -= offNP.x * FXAA_QUALITY_P12;\",\r\n\t\t\"                        if(!doneN) posN.y -= offNP.y * FXAA_QUALITY_P12;\",\r\n\t\t\"                        doneNP = (!doneN) || (!doneP);\",\r\n\t\t\"                        if(!doneP) posP.x += offNP.x * FXAA_QUALITY_P12;\",\r\n\t\t\"                        if(!doneP) posP.y += offNP.y * FXAA_QUALITY_P12;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    }\",\r\n\t\t\"                    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                }\",\r\n\t\t\"                #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            }\",\r\n\t\t\"            #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        }\",\r\n\t\t\"        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    }\",\r\n\t\t\"    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                        }\",\r\n\t\t\"                        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                    }\",\r\n\t\t\"                    #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"                }\",\r\n\t\t\"                #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"            }\",\r\n\t\t\"            #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"        }\",\r\n\t\t\"        #endif\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    }\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat dstN = posM.x - posN.x;\",\r\n\t\t\"    FxaaFloat dstP = posP.x - posM.x;\",\r\n\t\t\"    if(!horzSpan) dstN = posM.y - posN.y;\",\r\n\t\t\"    if(!horzSpan) dstP = posP.y - posM.y;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaBool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\",\r\n\t\t\"    FxaaFloat spanLength = (dstP + dstN);\",\r\n\t\t\"    FxaaBool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\",\r\n\t\t\"    FxaaFloat spanLengthRcp = 1.0/spanLength;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaBool directionN = dstN < dstP;\",\r\n\t\t\"    FxaaFloat dst = min(dstN, dstP);\",\r\n\t\t\"    FxaaBool goodSpan = directionN ? goodSpanN : goodSpanP;\",\r\n\t\t\"    FxaaFloat subpixG = subpixF * subpixF;\",\r\n\t\t\"    FxaaFloat pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\",\r\n\t\t\"    FxaaFloat subpixH = subpixG * fxaaQualitySubpix;\",\r\n\t\t\"/*--------------------------------------------------------------------------*/\",\r\n\t\t\"    FxaaFloat pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\",\r\n\t\t\"    FxaaFloat pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\",\r\n\t\t\"    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\",\r\n\t\t\"    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\",\r\n\t\t\"    #if (FXAA_DISCARD == 1)\",\r\n\t\t\"        return FxaaTexTop(tex, posM);\",\r\n\t\t\"    #else\",\r\n\t\t\"        return FxaaFloat4(FxaaTexTop(tex, posM).xyz, lumaM);\",\r\n\t\t\"    #endif\",\r\n\t\t\"}\",\r\n\t\t\"/*==========================================================================*/\",\r\n\t\t\"#endif\",\r\n\t\t\"\",\r\n\t\t\"void main() {\",\r\n\t\t\"  gl_FragColor = FxaaPixelShader(\",\r\n\t\t\"    vUv,\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    tDiffuse,\",\r\n\t\t\"    tDiffuse,\",\r\n\t\t\"    tDiffuse,\",\r\n\t\t\"    resolution,\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    vec4(0.0),\",\r\n\t\t\"    0.75,\",\r\n\t\t\"    0.166,\",\r\n\t\t\"    0.0833,\",\r\n\t\t\"    0.0,\",\r\n\t\t\"    0.0,\",\r\n\t\t\"    0.0,\",\r\n\t\t\"    vec4(0.0)\",\r\n\t\t\"  );\",\r\n\t\t\"\",\r\n\t\t\"  // TODO avoid querying texture twice for same texel\",\r\n\t\t\"  gl_FragColor.a = texture2D(tDiffuse, vUv).a;\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { FXAAShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/FXAAShader.js","/**\r\n * Gamma Correction Shader\r\n * http://en.wikipedia.org/wiki/gamma_correction\r\n */\r\n\r\nvar GammaCorrectionShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 tex = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\"\tgl_FragColor = LinearTosRGB( tex );\", // optional: LinearToGamma( tex, float( GAMMA_FACTOR ) );\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { GammaCorrectionShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/GammaCorrectionShader.js","<template>\r\n    <div class=\"webglMaterialsNormalmap-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl normalmap demo.<br/>\r\n\t\t\t<a href=\"http://graphics.cs.williams.edu/data/meshes.xml#14\" target=\"_blank\" rel=\"noopener\">Lee Perry-Smith</a> head.\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GLTFLoader } from '@/components/jsm/loaders/GLTFLoader.js'\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from '@/components/jsm/postprocessing/ShaderPass.js'\r\nimport { BleachBypassShader } from '@/components/jsm/shaders/BleachBypassShader.js'\r\nimport { ColorCorrectionShader } from '@/components/jsm/shaders/ColorCorrectionShader.js'\r\nimport { FXAAShader } from '@/components/jsm/shaders/FXAAShader.js'\r\nimport { GammaCorrectionShader } from '@/components/jsm/shaders/GammaCorrectionShader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            loader: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tmesh: null,\r\n            directionalLight: null,\r\n            pointLight: null,\r\n            ambientLight: null,\r\n\t\t\tmouseX: 0,\r\n\t\t\tmouseY: 0,\r\n\t\t\ttargetX: 0,\r\n\t\t\ttargetY: 0,\r\n\t\t\twindowHalfX: null,\r\n\t\t\twindowHalfY: null,\r\n            composer: null,\r\n            effectFXAA: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.windowHalfX = this.$webglInnerWidth / 2\r\n        this.windowHalfY = window.innerHeight / 2\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsNormalmap-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(27, this.$webglInnerWidth / window.innerHeight, 1, 10000)\r\n            this.camera.position.z = 1200\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x111111)\r\n            // LIGHTS\r\n            this.ambientLight = new this.$THREE.AmbientLight(0x444444)\r\n            this.scene.add(this.ambientLight)\r\n            this.pointLight = new this.$THREE.PointLight(0xffffff, 1.25, 1000)\r\n            this.pointLight.position.set(0, 0, 600)\r\n            this.scene.add(this.pointLight)\r\n            this.directionalLight = new this.$THREE.DirectionalLight(0xffffff)\r\n            this.directionalLight.position.set(1, - 0.5, - 1)\r\n            this.scene.add(this.directionalLight)\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            var diffuseMap = textureLoader.load(\"static/models/gltf/LeePerrySmith/Map-COL.jpg\")\r\n            diffuseMap.encoding = this.$THREE.sRGBEncoding\r\n            var specularMap = textureLoader.load(\"static/models/gltf/LeePerrySmith/Map-SPEC.jpg\")\r\n            specularMap.encoding = this.$THREE.sRGBEncoding\r\n            var normalMap = textureLoader.load(\"static/models/gltf/LeePerrySmith/Infinite-Level_02_Tangent_SmoothUV.jpg\")\r\n            var material = new this.$THREE.MeshPhongMaterial({\r\n                color: 0xdddddd,\r\n                specular: 0x222222,\r\n                shininess: 35,\r\n                map: diffuseMap,\r\n                specularMap: specularMap,\r\n                normalMap: normalMap,\r\n                normalScale: new this.$THREE.Vector2(0.8, 0.8)\r\n            })\r\n            this.loader = new GLTFLoader()\r\n            this.loader.load(\"static/models/gltf/LeePerrySmith/LeePerrySmith.glb\", (gltf) => {\r\n                this.createScene(gltf.scene.children[ 0 ].geometry, 100, material)\r\n            })\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            // COMPOSER\r\n            this.renderer.autoClear = false\r\n            var renderModel = new RenderPass(this.scene, this.camera)\r\n            var effectBleach = new ShaderPass(BleachBypassShader)\r\n            var effectColor = new ShaderPass(ColorCorrectionShader)\r\n            this.effectFXAA = new ShaderPass(FXAAShader)\r\n            var gammaCorrection = new ShaderPass(GammaCorrectionShader)\r\n            this.effectFXAA.uniforms[ 'resolution' ].value.set(1 / this.$webglInnerWidth, 1 / window.innerHeight)\r\n            effectBleach.uniforms[ 'opacity' ].value = 0.2\r\n            effectColor.uniforms[ 'powRGB' ].value.set(1.4, 1.45, 1.45)\r\n            effectColor.uniforms[ 'mulRGB' ].value.set(1.1, 1.1, 1.1)\r\n            this.composer = new EffectComposer(this.renderer)\r\n            this.composer.addPass(renderModel)\r\n            this.composer.addPass(this.effectFXAA)\r\n            this.composer.addPass(effectBleach)\r\n            this.composer.addPass(effectColor)\r\n            this.composer.addPass(gammaCorrection)\r\n            // EVENTS\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        createScene(geometry, scale, material) {\r\n            this.mesh = new this.$THREE.Mesh(geometry, material)\r\n            this.mesh.position.y = - 50\r\n            this.mesh.scale.x = this.mesh.scale.y = this.mesh.scale.z = scale\r\n            this.scene.add(this.mesh)\r\n        },\r\n        onWindowResize() {\r\n            var width = window.innerWidth - 281\r\n            var height = window.innerHeight\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.composer.setSize(width, height)\r\n            this.effectFXAA.uniforms[ 'resolution' ].value.set(1 / width, 1 / height)\r\n        },\r\n        onDocumentMouseMove(event) {\r\n            this.mouseX = (event.clientX - this.windowHalfX)\r\n            this.mouseY = (event.clientY - this.windowHalfY)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            this.targetX = this.mouseX * .001\r\n            this.targetY = this.mouseY * .001\r\n            if (this.mesh) {\r\n                this.mesh.rotation.y += 0.05 * (this.targetX - this.mesh.rotation.y)\r\n                this.mesh.rotation.x += 0.05 * (this.targetY - this.mesh.rotation.x)\r\n            }\r\n            this.composer.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsNormalmap-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsNormalmap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsNormalmap-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl normalmap demo.\"),_c('br'),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"http://graphics.cs.williams.edu/data/meshes.xml#14\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Lee Perry-Smith\")]),_vm._v(\" head.\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1fedd35f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsNormalmap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1fedd35f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsNormalmap.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsNormalmap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsNormalmap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1fedd35f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsNormalmap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1fedd35f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsNormalmap.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}