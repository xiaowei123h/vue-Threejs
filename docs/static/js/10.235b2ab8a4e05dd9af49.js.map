{"version":3,"sources":["webpack:///./src/components/jsm/shaders/DotScreenShader.js","webpack:///./src/components/jsm/shaders/RGBShiftShader.js","webpack:///src/views/postprocessing/webglPostprocessing.vue","webpack:///./src/views/postprocessing/webglPostprocessing.vue?20ae","webpack:///./src/views/postprocessing/webglPostprocessing.vue"],"names":["__webpack_require__","d","__webpack_exports__","DotScreenShader","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","uniforms","tDiffuse","value","tSize","Vector2","center","angle","scale","vertexShader","join","fragmentShader","RGBShiftShader","amount","webglPostprocessing","data","camera","renderer","composer","object","mounted","this","init","animate","methods","$THREE","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","PerspectiveCamera","position","z","scene","Scene","fog","Fog","Object3D","add","geometry","SphereBufferGeometry","material","MeshPhongMaterial","color","flatShading","i","mesh","Mesh","set","Math","random","normalize","multiplyScalar","rotation","x","y","AmbientLight","light","DirectionalLight","EffectComposer","addPass","RenderPass","effect1","ShaderPass","effect2","addEventListener","onWindowResize","$onWindowResize","innerWidth","requestAnimationFrame","render","postprocessing_webglPostprocessing","_h","$createElement","_self","_c","staticClass","staticRenderFns","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/10.235b2ab8a4e05dd9af49.js","sourcesContent":["import {\r\n\tVector2\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Dot screen shader\r\n * based on glfx.js sepia shader\r\n * https://github.com/evanw/glfx.js\r\n */\r\n\r\nvar DotScreenShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"tSize\": { value: new Vector2( 256, 256 ) },\r\n\t\t\"center\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\"angle\": { value: 1.57 },\r\n\t\t\"scale\": { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform vec2 center;\",\r\n\t\t\"uniform float angle;\",\r\n\t\t\"uniform float scale;\",\r\n\t\t\"uniform vec2 tSize;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"float pattern() {\",\r\n\r\n\t\t\"\tfloat s = sin( angle ), c = cos( angle );\",\r\n\r\n\t\t\"\tvec2 tex = vUv * tSize - center;\",\r\n\t\t\"\tvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\",\r\n\r\n\t\t\"\treturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\",\r\n\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 color = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\"\tfloat average = ( color.r + color.g + color.b ) / 3.0;\",\r\n\r\n\t\t\"\tgl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { DotScreenShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/DotScreenShader.js","/**\r\n * RGB Shift Shader\r\n * Shifts red and blue channels from center in opposite directions\r\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\r\n * by Tom Butterworth / http://kriss.cx/tom/\r\n *\r\n * amount: shift distance (1 is width of input)\r\n * angle: shift angle in radians\r\n */\r\n\r\nvar RGBShiftShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"amount\": { value: 0.005 },\r\n\t\t\"angle\": { value: 0.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform float amount;\",\r\n\t\t\"uniform float angle;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec2 offset = amount * vec2( cos(angle), sin(angle));\",\r\n\t\t\"\tvec4 cr = texture2D(tDiffuse, vUv + offset);\",\r\n\t\t\"\tvec4 cga = texture2D(tDiffuse, vUv);\",\r\n\t\t\"\tvec4 cb = texture2D(tDiffuse, vUv - offset);\",\r\n\t\t\"\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { RGBShiftShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/RGBShiftShader.js","<template>\r\n    <div class=\"webglPostprocessing-container\">\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from '@/components/jsm/postprocessing/ShaderPass.js'\r\n\r\nimport { RGBShiftShader } from '@/components/jsm/shaders/RGBShiftShader.js'\r\nimport { DotScreenShader } from '@/components/jsm/shaders/DotScreenShader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            renderer: null,\r\n            composer: null,\r\n\t\t\tobject: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglPostprocessing-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            this.camera = new this.$THREE.PerspectiveCamera(70, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.z = 400\r\n            var scene = new this.$THREE.Scene()\r\n            scene.fog = new this.$THREE.Fog(0x000000, 1, 1000)\r\n            this.object = new this.$THREE.Object3D()\r\n            scene.add(this.object)\r\n            var geometry = new this.$THREE.SphereBufferGeometry(1, 4, 4)\r\n            var material = new this.$THREE.MeshPhongMaterial({ color: 0xffffff, flatShading: true })\r\n            for (var i = 0; i < 100; i ++) {\r\n                var mesh = new this.$THREE.Mesh(geometry, material)\r\n                mesh.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).normalize()\r\n                mesh.position.multiplyScalar(Math.random() * 400)\r\n                mesh.rotation.set(Math.random() * 2, Math.random() * 2, Math.random() * 2)\r\n                mesh.scale.x = mesh.scale.y = mesh.scale.z = Math.random() * 50\r\n                this.object.add(mesh)\r\n            }\r\n            scene.add(new this.$THREE.AmbientLight(0x222222))\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(1, 1, 1)\r\n            scene.add(light)\r\n            // postprocessing\r\n            this.composer = new EffectComposer(this.renderer)\r\n            this.composer.addPass(new RenderPass(scene, this.camera))\r\n            var effect1 = new ShaderPass(DotScreenShader)\r\n            effect1.uniforms[ 'scale' ].value = 4\r\n            this.composer.addPass(effect1)\r\n            var effect2 = new ShaderPass(RGBShiftShader)\r\n            effect2.uniforms[ 'amount' ].value = 0.0015\r\n            this.composer.addPass(effect2)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.composer.setSize(window.innerWidth - 281, window.innerHeight)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.object.rotation.x += 0.005\r\n            this.object.rotation.y += 0.01\r\n            this.composer.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglPostprocessing-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/postprocessing/webglPostprocessing.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglPostprocessing-container\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-04bb81d8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/postprocessing/webglPostprocessing.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-04bb81d8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglPostprocessing.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessing.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessing.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04bb81d8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglPostprocessing.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-04bb81d8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/postprocessing/webglPostprocessing.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}