{"version":3,"sources":["webpack:///./src/components/jsm/loaders/TDSLoader.js","webpack:///src/views/loader/webglLoader3ds.vue","webpack:///./src/views/loader/webglLoader3ds.vue?8986","webpack:///./src/views/loader/webglLoader3ds.vue"],"names":["TDSLoader","manager","Loader","call","this","debug","group","position","materials","meshes","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","data","parse","e","console","error","itemError","arraybuffer","Group","readFile","i","length","add","DataView","chunk","readChunk","id","MLIBMAGIC","CMAGIC","M3DMAGIC","next","nextChunk","M3D_VERSION","version","readDWord","debugMessage","MDATA","resetPosition","readMeshData","toString","MESH_VERSION","MASTER_SCALE","scale","readFloat","set","NAMED_OBJECT","readNamedObject","MAT_ENTRY","readMaterialEntry","name","readString","cur","N_TRI_OBJECT","mesh","readMesh","push","endChunk","material","MeshPhongMaterial","MAT_NAME","MAT_WIRE","wireframe","MAT_WIRE_SIZE","value","readByte","wireframeLinewidth","MAT_TWO_SIDE","side","DoubleSide","MAT_ADDITIVE","blending","AdditiveBlending","MAT_DIFFUSE","color","readColor","MAT_SPECULAR","specular","MAT_AMBIENT","MAT_SHININESS","shininess","readWord","MAT_TRANSPARENCY","opacity","transparent","MAT_TEXMAP","map","readMap","MAT_BUMPMAP","bumpMap","MAT_OPACMAP","alphaMap","MAT_SPECMAP","specularMap","geometry","BufferGeometry","uvs","Mesh","POINT_ARRAY","points","vertices","setAttribute","Float32BufferAttribute","FACE_ARRAY","readFaceArray","TEX_VERTS","texels","MESH_MATRIX","values","matrix","Matrix4","elements","transpose","inverse","copy","invert","applyMatrix4","decompose","quaternion","computeVertexNormals","faces","index","setIndex","end","MSH_MAT_GROUP","readMaterialGroup","undefined","texture","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","MAT_MAPNAME","MAT_MAP_UOFFSET","offset","x","MAT_MAP_VOFFSET","y","MAT_MAP_USCALE","repeat","MAT_MAP_VSCALE","numFaces","Color","COLOR_24","LIN_COLOR_24","r","g","b","setRGB","COLOR_F","LIN_COLOR_F","size","v","getUint8","getFloat32","byteLength","readInt","getInt32","readShort","getInt16","getUint32","getUint16","maxLength","s","c","String","fromCharCode","message","log","webglLoader3ds","container","controls","camera","scene","renderer","mounted","init","animate","methods","_this","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","z","Scene","HemisphereLight","directionalLight","DirectionalLight","normal","TDSLoader_TDSLoader","setResourcePath","object","traverse","child","isMesh","setScalar","normalMap","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","domElement","TrackballControls","addEventListener","resize","$onWindowResize","update","render","requestAnimationFrame","loader_webglLoader3ds","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/101.42f846a98b3c49cffe0b.js","sourcesContent":["import {\r\n\tAdditiveBlending,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tDoubleSide,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshPhongMaterial,\r\n\tTextureLoader\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Autodesk 3DS three.js file loader, based on lib3ds.\r\n *\r\n * Loads geometry with uv and materials basic properties with texture support.\r\n *\r\n * @class TDSLoader\r\n * @constructor\r\n */\r\n\r\nvar TDSLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n\tthis.debug = false;\r\n\r\n\tthis.group = null;\r\n\tthis.position = 0;\r\n\r\n\tthis.materials = [];\r\n\tthis.meshes = [];\r\n\r\n};\r\n\r\nTDSLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: TDSLoader,\r\n\r\n\t/**\r\n\t * Load 3ds file from url.\r\n\t *\r\n\t * @method load\r\n\t * @param {[type]} url URL for the file.\r\n\t * @param {Function} onLoad onLoad callback, receives group Object3D as argument.\r\n\t * @param {Function} onProgress onProgress callback.\r\n\t * @param {Function} onError onError callback.\r\n\t */\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\r\n\t\tvar loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\r\n\t\tloader.load( url, function ( data ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( data, path ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Parse arraybuffer data and load 3ds file.\r\n\t *\r\n\t * @method parse\r\n\t * @param {ArrayBuffer} arraybuffer Arraybuffer data to be loaded.\r\n\t * @param {String} path Path for external resources.\r\n\t * @return {Group} Group loaded from 3ds file.\r\n\t */\r\n\tparse: function ( arraybuffer, path ) {\r\n\r\n\t\tthis.group = new Group();\r\n\t\tthis.position = 0;\r\n\t\tthis.materials = [];\r\n\t\tthis.meshes = [];\r\n\r\n\t\tthis.readFile( arraybuffer, path );\r\n\r\n\t\tfor ( var i = 0; i < this.meshes.length; i ++ ) {\r\n\r\n\t\t\tthis.group.add( this.meshes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.group;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Decode file content to read 3ds data.\r\n\t *\r\n\t * @method readFile\r\n\t * @param {ArrayBuffer} arraybuffer Arraybuffer data to be loaded.\r\n\t * @param {String} path Path for external resources.\r\n\t */\r\n\treadFile: function ( arraybuffer, path ) {\r\n\r\n\t\tvar data = new DataView( arraybuffer );\r\n\t\tvar chunk = this.readChunk( data );\r\n\r\n\t\tif ( chunk.id === MLIBMAGIC || chunk.id === CMAGIC || chunk.id === M3DMAGIC ) {\r\n\r\n\t\t\tvar next = this.nextChunk( data, chunk );\r\n\r\n\t\t\twhile ( next !== 0 ) {\r\n\r\n\t\t\t\tif ( next === M3D_VERSION ) {\r\n\r\n\t\t\t\t\tvar version = this.readDWord( data );\r\n\t\t\t\t\tthis.debugMessage( '3DS file version: ' + version );\r\n\r\n\t\t\t\t} else if ( next === MDATA ) {\r\n\r\n\t\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\t\tthis.readMeshData( data, path );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.debugMessage( 'Unknown main chunk: ' + next.toString( 16 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnext = this.nextChunk( data, chunk );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.debugMessage( 'Parsed ' + this.meshes.length + ' meshes' );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read mesh data chunk.\r\n\t *\r\n\t * @method readMeshData\r\n\t * @param {Dataview} data Dataview in use.\r\n\t * @param {String} path Path for external resources.\r\n\t */\r\n\treadMeshData: function ( data, path ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar next = this.nextChunk( data, chunk );\r\n\r\n\t\twhile ( next !== 0 ) {\r\n\r\n\t\t\tif ( next === MESH_VERSION ) {\r\n\r\n\t\t\t\tvar version = + this.readDWord( data );\r\n\t\t\t\tthis.debugMessage( 'Mesh Version: ' + version );\r\n\r\n\t\t\t} else if ( next === MASTER_SCALE ) {\r\n\r\n\t\t\t\tvar scale = this.readFloat( data );\r\n\t\t\t\tthis.debugMessage( 'Master scale: ' + scale );\r\n\t\t\t\tthis.group.scale.set( scale, scale, scale );\r\n\r\n\t\t\t} else if ( next === NAMED_OBJECT ) {\r\n\r\n\t\t\t\tthis.debugMessage( 'Named Object' );\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tthis.readNamedObject( data );\r\n\r\n\t\t\t} else if ( next === MAT_ENTRY ) {\r\n\r\n\t\t\t\tthis.debugMessage( 'Material' );\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tthis.readMaterialEntry( data, path );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.debugMessage( 'Unknown MDATA chunk: ' + next.toString( 16 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnext = this.nextChunk( data, chunk );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read named object chunk.\r\n\t *\r\n\t * @method readNamedObject\r\n\t * @param {Dataview} data Dataview in use.\r\n\t */\r\n\treadNamedObject: function ( data ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar name = this.readString( data, 64 );\r\n\t\tchunk.cur = this.position;\r\n\r\n\t\tvar next = this.nextChunk( data, chunk );\r\n\t\twhile ( next !== 0 ) {\r\n\r\n\t\t\tif ( next === N_TRI_OBJECT ) {\r\n\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tvar mesh = this.readMesh( data );\r\n\t\t\t\tmesh.name = name;\r\n\t\t\t\tthis.meshes.push( mesh );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.debugMessage( 'Unknown named object chunk: ' + next.toString( 16 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnext = this.nextChunk( data, chunk );\r\n\r\n\t\t}\r\n\r\n\t\tthis.endChunk( chunk );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read material data chunk and add it to the material list.\r\n\t *\r\n\t * @method readMaterialEntry\r\n\t * @param {Dataview} data Dataview in use.\r\n\t * @param {String} path Path for external resources.\r\n\t */\r\n\treadMaterialEntry: function ( data, path ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar next = this.nextChunk( data, chunk );\r\n\t\tvar material = new MeshPhongMaterial();\r\n\r\n\t\twhile ( next !== 0 ) {\r\n\r\n\t\t\tif ( next === MAT_NAME ) {\r\n\r\n\t\t\t\tmaterial.name = this.readString( data, 64 );\r\n\t\t\t\tthis.debugMessage( '   Name: ' + material.name );\r\n\r\n\t\t\t} else if ( next === MAT_WIRE ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   Wireframe' );\r\n\t\t\t\tmaterial.wireframe = true;\r\n\r\n\t\t\t} else if ( next === MAT_WIRE_SIZE ) {\r\n\r\n\t\t\t\tvar value = this.readByte( data );\r\n\t\t\t\tmaterial.wireframeLinewidth = value;\r\n\t\t\t\tthis.debugMessage( '   Wireframe Thickness: ' + value );\r\n\r\n\t\t\t} else if ( next === MAT_TWO_SIDE ) {\r\n\r\n\t\t\t\tmaterial.side = DoubleSide;\r\n\t\t\t\tthis.debugMessage( '   DoubleSided' );\r\n\r\n\t\t\t} else if ( next === MAT_ADDITIVE ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   Additive Blending' );\r\n\t\t\t\tmaterial.blending = AdditiveBlending;\r\n\r\n\t\t\t} else if ( next === MAT_DIFFUSE ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   Diffuse Color' );\r\n\t\t\t\tmaterial.color = this.readColor( data );\r\n\r\n\t\t\t} else if ( next === MAT_SPECULAR ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   Specular Color' );\r\n\t\t\t\tmaterial.specular = this.readColor( data );\r\n\r\n\t\t\t} else if ( next === MAT_AMBIENT ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   Ambient color' );\r\n\t\t\t\tmaterial.color = this.readColor( data );\r\n\r\n\t\t\t} else if ( next === MAT_SHININESS ) {\r\n\r\n\t\t\t\tvar shininess = this.readWord( data );\r\n\t\t\t\tmaterial.shininess = shininess;\r\n\t\t\t\tthis.debugMessage( '   Shininess : ' + shininess );\r\n\r\n\t\t\t} else if ( next === MAT_TRANSPARENCY ) {\r\n\r\n\t\t\t\tvar opacity = this.readWord( data );\r\n\t\t\t\tmaterial.opacity = opacity * 0.01;\r\n\t\t\t\tthis.debugMessage( '  Opacity : ' + opacity );\r\n\t\t\t\tmaterial.transparent = opacity < 100 ? true : false;\r\n\r\n\t\t\t} else if ( next === MAT_TEXMAP ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   ColorMap' );\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tmaterial.map = this.readMap( data, path );\r\n\r\n\t\t\t} else if ( next === MAT_BUMPMAP ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   BumpMap' );\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tmaterial.bumpMap = this.readMap( data, path );\r\n\r\n\t\t\t} else if ( next === MAT_OPACMAP ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   OpacityMap' );\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tmaterial.alphaMap = this.readMap( data, path );\r\n\r\n\t\t\t} else if ( next === MAT_SPECMAP ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   SpecularMap' );\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tmaterial.specularMap = this.readMap( data, path );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.debugMessage( '   Unknown material chunk: ' + next.toString( 16 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnext = this.nextChunk( data, chunk );\r\n\r\n\t\t}\r\n\r\n\t\tthis.endChunk( chunk );\r\n\r\n\t\tthis.materials[ material.name ] = material;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read mesh data chunk.\r\n\t *\r\n\t * @method readMesh\r\n\t * @param {Dataview} data Dataview in use.\r\n\t * @return {Mesh} The parsed mesh.\r\n\t */\r\n\treadMesh: function ( data ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar next = this.nextChunk( data, chunk );\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\t\tvar uvs = [];\r\n\r\n\t\tvar material = new MeshPhongMaterial();\r\n\t\tvar mesh = new Mesh( geometry, material );\r\n\t\tmesh.name = 'mesh';\r\n\r\n\t\twhile ( next !== 0 ) {\r\n\r\n\t\t\tif ( next === POINT_ARRAY ) {\r\n\r\n\t\t\t\tvar points = this.readWord( data );\r\n\r\n\t\t\t\tthis.debugMessage( '   Vertex: ' + points );\r\n\r\n\t\t\t\t//BufferGeometry\r\n\r\n\t\t\t\tvar vertices = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < points; i ++ )\t\t{\r\n\r\n\t\t\t\t\tvertices.push( this.readFloat( data ) );\r\n\t\t\t\t\tvertices.push( this.readFloat( data ) );\r\n\t\t\t\t\tvertices.push( this.readFloat( data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\t\t} else if ( next === FACE_ARRAY ) {\r\n\r\n\t\t\t\tthis.resetPosition( data );\r\n\t\t\t\tthis.readFaceArray( data, mesh );\r\n\r\n\t\t\t} else if ( next === TEX_VERTS ) {\r\n\r\n\t\t\t\tvar texels = this.readWord( data );\r\n\r\n\t\t\t\tthis.debugMessage( '   UV: ' + texels );\r\n\r\n\t\t\t\t//BufferGeometry\r\n\r\n\t\t\t\tvar uvs = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < texels; i ++ )\t\t{\r\n\r\n\t\t\t\t\tuvs.push( this.readFloat( data ) );\r\n\t\t\t\t\tuvs.push( this.readFloat( data ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\r\n\t\t\t} else if ( next === MESH_MATRIX ) {\r\n\r\n\t\t\t\tthis.debugMessage( '   Tranformation Matrix (TODO)' );\r\n\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var i = 0; i < 12; i ++ ) {\r\n\r\n\t\t\t\t\tvalues[ i ] = this.readFloat( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar matrix = new Matrix4();\r\n\r\n\t\t\t\t//X Line\r\n\t\t\t\tmatrix.elements[ 0 ] = values[ 0 ];\r\n\t\t\t\tmatrix.elements[ 1 ] = values[ 6 ];\r\n\t\t\t\tmatrix.elements[ 2 ] = values[ 3 ];\r\n\t\t\t\tmatrix.elements[ 3 ] = values[ 9 ];\r\n\r\n\t\t\t\t//Y Line\r\n\t\t\t\tmatrix.elements[ 4 ] = values[ 2 ];\r\n\t\t\t\tmatrix.elements[ 5 ] = values[ 8 ];\r\n\t\t\t\tmatrix.elements[ 6 ] = values[ 5 ];\r\n\t\t\t\tmatrix.elements[ 7 ] = values[ 11 ];\r\n\r\n\t\t\t\t//Z Line\r\n\t\t\t\tmatrix.elements[ 8 ] = values[ 1 ];\r\n\t\t\t\tmatrix.elements[ 9 ] = values[ 7 ];\r\n\t\t\t\tmatrix.elements[ 10 ] = values[ 4 ];\r\n\t\t\t\tmatrix.elements[ 11 ] = values[ 10 ];\r\n\r\n\t\t\t\t//W Line\r\n\t\t\t\tmatrix.elements[ 12 ] = 0;\r\n\t\t\t\tmatrix.elements[ 13 ] = 0;\r\n\t\t\t\tmatrix.elements[ 14 ] = 0;\r\n\t\t\t\tmatrix.elements[ 15 ] = 1;\r\n\r\n\t\t\t\tmatrix.transpose();\r\n\r\n\t\t\t\tvar inverse = new Matrix4();\r\n\t\t\t\tinverse.copy( matrix ).invert();\r\n\t\t\t\tgeometry.applyMatrix4( inverse );\r\n\r\n\t\t\t\tmatrix.decompose( mesh.position, mesh.quaternion, mesh.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.debugMessage( '   Unknown mesh chunk: ' + next.toString( 16 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnext = this.nextChunk( data, chunk );\r\n\r\n\t\t}\r\n\r\n\t\tthis.endChunk( chunk );\r\n\r\n\t\tgeometry.computeVertexNormals();\r\n\r\n\t\treturn mesh;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read face array data chunk.\r\n\t *\r\n\t * @method readFaceArray\r\n\t * @param {Dataview} data Dataview in use.\r\n\t * @param {Mesh} mesh Mesh to be filled with the data read.\r\n\t */\r\n\treadFaceArray: function ( data, mesh ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar faces = this.readWord( data );\r\n\r\n\t\tthis.debugMessage( '   Faces: ' + faces );\r\n\r\n\t\tvar index = [];\r\n\r\n\t\tfor ( var i = 0; i < faces; ++ i ) {\r\n\r\n\t\t\tindex.push( this.readWord( data ), this.readWord( data ), this.readWord( data ) );\r\n\r\n\t\t\tthis.readWord( data ); // visibility\r\n\r\n\t\t}\r\n\r\n\t\tmesh.geometry.setIndex( index );\r\n\r\n\t\t//The rest of the FACE_ARRAY chunk is subchunks\r\n\r\n\t\twhile ( this.position < chunk.end ) {\r\n\r\n\t\t\tvar chunk = this.readChunk( data );\r\n\r\n\t\t\tif ( chunk.id === MSH_MAT_GROUP ) {\r\n\r\n\t\t\t\tthis.debugMessage( '      Material Group' );\r\n\r\n\t\t\t\tthis.resetPosition( data );\r\n\r\n\t\t\t\tvar group = this.readMaterialGroup( data );\r\n\r\n\t\t\t\tvar material = this.materials[ group.name ];\r\n\r\n\t\t\t\tif ( material !== undefined )\t{\r\n\r\n\t\t\t\t\tmesh.material = material;\r\n\r\n\t\t\t\t\tif ( material.name === '' )\t\t{\r\n\r\n\t\t\t\t\t\tmaterial.name = mesh.name;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.debugMessage( '      Unknown face array chunk: ' + chunk.toString( 16 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.endChunk( chunk );\r\n\r\n\t\t}\r\n\r\n\t\tthis.endChunk( chunk );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read texture map data chunk.\r\n\t *\r\n\t * @method readMap\r\n\t * @param {Dataview} data Dataview in use.\r\n\t * @param {String} path Path for external resources.\r\n\t * @return {Texture} Texture read from this data chunk.\r\n\t */\r\n\treadMap: function ( data, path ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar next = this.nextChunk( data, chunk );\r\n\t\tvar texture = {};\r\n\r\n\t\tvar loader = new TextureLoader( this.manager );\r\n\t\tloader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\r\n\r\n\t\twhile ( next !== 0 ) {\r\n\r\n\t\t\tif ( next === MAT_MAPNAME ) {\r\n\r\n\t\t\t\tvar name = this.readString( data, 128 );\r\n\t\t\t\ttexture = loader.load( name );\r\n\r\n\t\t\t\tthis.debugMessage( '      File: ' + path + name );\r\n\r\n\t\t\t} else if ( next === MAT_MAP_UOFFSET ) {\r\n\r\n\t\t\t\ttexture.offset.x = this.readFloat( data );\r\n\t\t\t\tthis.debugMessage( '      OffsetX: ' + texture.offset.x );\r\n\r\n\t\t\t} else if ( next === MAT_MAP_VOFFSET ) {\r\n\r\n\t\t\t\ttexture.offset.y = this.readFloat( data );\r\n\t\t\t\tthis.debugMessage( '      OffsetY: ' + texture.offset.y );\r\n\r\n\t\t\t} else if ( next === MAT_MAP_USCALE ) {\r\n\r\n\t\t\t\ttexture.repeat.x = this.readFloat( data );\r\n\t\t\t\tthis.debugMessage( '      RepeatX: ' + texture.repeat.x );\r\n\r\n\t\t\t} else if ( next === MAT_MAP_VSCALE ) {\r\n\r\n\t\t\t\ttexture.repeat.y = this.readFloat( data );\r\n\t\t\t\tthis.debugMessage( '      RepeatY: ' + texture.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.debugMessage( '      Unknown map chunk: ' + next.toString( 16 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnext = this.nextChunk( data, chunk );\r\n\r\n\t\t}\r\n\r\n\t\tthis.endChunk( chunk );\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read material group data chunk.\r\n\t *\r\n\t * @method readMaterialGroup\r\n\t * @param {Dataview} data Dataview in use.\r\n\t * @return {Object} Object with name and index of the object.\r\n\t */\r\n\treadMaterialGroup: function ( data ) {\r\n\r\n\t\tthis.readChunk( data );\r\n\t\tvar name = this.readString( data, 64 );\r\n\t\tvar numFaces = this.readWord( data );\r\n\r\n\t\tthis.debugMessage( '         Name: ' + name );\r\n\t\tthis.debugMessage( '         Faces: ' + numFaces );\r\n\r\n\t\tvar index = [];\r\n\t\tfor ( var i = 0; i < numFaces; ++ i ) {\r\n\r\n\t\t\tindex.push( this.readWord( data ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn { name: name, index: index };\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read a color value.\r\n\t *\r\n\t * @method readColor\r\n\t * @param {DataView} data Dataview.\r\n\t * @return {Color} Color value read..\r\n\t */\r\n\treadColor: function ( data ) {\r\n\r\n\t\tvar chunk = this.readChunk( data );\r\n\t\tvar color = new Color();\r\n\r\n\t\tif ( chunk.id === COLOR_24 || chunk.id === LIN_COLOR_24 ) {\r\n\r\n\t\t\tvar r = this.readByte( data );\r\n\t\t\tvar g = this.readByte( data );\r\n\t\t\tvar b = this.readByte( data );\r\n\r\n\t\t\tcolor.setRGB( r / 255, g / 255, b / 255 );\r\n\r\n\t\t\tthis.debugMessage( '      Color: ' + color.r + ', ' + color.g + ', ' + color.b );\r\n\r\n\t\t}\telse if ( chunk.id === COLOR_F || chunk.id === LIN_COLOR_F ) {\r\n\r\n\t\t\tvar r = this.readFloat( data );\r\n\t\t\tvar g = this.readFloat( data );\r\n\t\t\tvar b = this.readFloat( data );\r\n\r\n\t\t\tcolor.setRGB( r, g, b );\r\n\r\n\t\t\tthis.debugMessage( '      Color: ' + color.r + ', ' + color.g + ', ' + color.b );\r\n\r\n\t\t}\telse {\r\n\r\n\t\t\tthis.debugMessage( '      Unknown color chunk: ' + chunk.toString( 16 ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.endChunk( chunk );\r\n\t\treturn color;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read next chunk of data.\r\n\t *\r\n\t * @method readChunk\r\n\t * @param {DataView} data Dataview.\r\n\t * @return {Object} Chunk of data read.\r\n\t */\r\n\treadChunk: function ( data ) {\r\n\r\n\t\tvar chunk = {};\r\n\r\n\t\tchunk.cur = this.position;\r\n\t\tchunk.id = this.readWord( data );\r\n\t\tchunk.size = this.readDWord( data );\r\n\t\tchunk.end = chunk.cur + chunk.size;\r\n\t\tchunk.cur += 6;\r\n\r\n\t\treturn chunk;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set position to the end of the current chunk of data.\r\n\t *\r\n\t * @method endChunk\r\n\t * @param {Object} chunk Data chunk.\r\n\t */\r\n\tendChunk: function ( chunk ) {\r\n\r\n\t\tthis.position = chunk.end;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Move to the next data chunk.\r\n\t *\r\n\t * @method nextChunk\r\n\t * @param {DataView} data Dataview.\r\n\t * @param {Object} chunk Data chunk.\r\n\t */\r\n\tnextChunk: function ( data, chunk ) {\r\n\r\n\t\tif ( chunk.cur >= chunk.end ) {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\tthis.position = chunk.cur;\r\n\r\n\t\ttry {\r\n\r\n\t\t\tvar next = this.readChunk( data );\r\n\t\t\tchunk.cur += next.size;\r\n\t\t\treturn next.id;\r\n\r\n\t\t}\tcatch ( e ) {\r\n\r\n\t\t\tthis.debugMessage( 'Unable to read chunk at ' + this.position );\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Reset dataview position.\r\n\t *\r\n\t * @method resetPosition\r\n\t */\r\n\tresetPosition: function () {\r\n\r\n\t\tthis.position -= 6;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read byte value.\r\n\t *\r\n\t * @method readByte\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @return {Number} Data read from the dataview.\r\n\t */\r\n\treadByte: function ( data ) {\r\n\r\n\t\tvar v = data.getUint8( this.position, true );\r\n\t\tthis.position += 1;\r\n\t\treturn v;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read 32 bit float value.\r\n\t *\r\n\t * @method readFloat\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @return {Number} Data read from the dataview.\r\n\t */\r\n\treadFloat: function ( data ) {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tvar v = data.getFloat32( this.position, true );\r\n\t\t\tthis.position += 4;\r\n\t\t\treturn v;\r\n\r\n\t\t}\tcatch ( e ) {\r\n\r\n\t\t\tthis.debugMessage( e + ' ' + this.position + ' ' + data.byteLength );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read 32 bit signed integer value.\r\n\t *\r\n\t * @method readInt\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @return {Number} Data read from the dataview.\r\n\t */\r\n\treadInt: function ( data ) {\r\n\r\n\t\tvar v = data.getInt32( this.position, true );\r\n\t\tthis.position += 4;\r\n\t\treturn v;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read 16 bit signed integer value.\r\n\t *\r\n\t * @method readShort\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @return {Number} Data read from the dataview.\r\n\t */\r\n\treadShort: function ( data ) {\r\n\r\n\t\tvar v = data.getInt16( this.position, true );\r\n\t\tthis.position += 2;\r\n\t\treturn v;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read 64 bit unsigned integer value.\r\n\t *\r\n\t * @method readDWord\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @return {Number} Data read from the dataview.\r\n\t */\r\n\treadDWord: function ( data ) {\r\n\r\n\t\tvar v = data.getUint32( this.position, true );\r\n\t\tthis.position += 4;\r\n\t\treturn v;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read 32 bit unsigned integer value.\r\n\t *\r\n\t * @method readWord\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @return {Number} Data read from the dataview.\r\n\t */\r\n\treadWord: function ( data ) {\r\n\r\n\t\tvar v = data.getUint16( this.position, true );\r\n\t\tthis.position += 2;\r\n\t\treturn v;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Read string value.\r\n\t *\r\n\t * @method readString\r\n\t * @param {DataView} data Dataview to read data from.\r\n\t * @param {Number} maxLength Max size of the string to be read.\r\n\t * @return {String} Data read from the dataview.\r\n\t */\r\n\treadString: function ( data, maxLength ) {\r\n\r\n\t\tvar s = '';\r\n\r\n\t\tfor ( var i = 0; i < maxLength; i ++ ) {\r\n\r\n\t\t\tvar c = this.readByte( data );\r\n\t\t\tif ( ! c ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ts += String.fromCharCode( c );\r\n\r\n\t\t}\r\n\r\n\t\treturn s;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Print debug message to the console.\r\n\t *\r\n\t * Is controlled by a flag to show or hide debug messages.\r\n\t *\r\n\t * @method debugMessage\r\n\t * @param {Object} message Debug message to print to the console.\r\n\t */\r\n\tdebugMessage: function ( message ) {\r\n\r\n\t\tif ( this.debug ) {\r\n\r\n\t\t\tconsole.log( message );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// var NULL_CHUNK = 0x0000;\r\nvar M3DMAGIC = 0x4D4D;\r\n// var SMAGIC = 0x2D2D;\r\n// var LMAGIC = 0x2D3D;\r\nvar MLIBMAGIC = 0x3DAA;\r\n// var MATMAGIC = 0x3DFF;\r\nvar CMAGIC = 0xC23D;\r\nvar M3D_VERSION = 0x0002;\r\n// var M3D_KFVERSION = 0x0005;\r\nvar COLOR_F = 0x0010;\r\nvar COLOR_24 = 0x0011;\r\nvar LIN_COLOR_24 = 0x0012;\r\nvar LIN_COLOR_F = 0x0013;\r\n// var INT_PERCENTAGE = 0x0030;\r\n// var FLOAT_PERCENTAGE = 0x0031;\r\nvar MDATA = 0x3D3D;\r\nvar MESH_VERSION = 0x3D3E;\r\nvar MASTER_SCALE = 0x0100;\r\n// var LO_SHADOW_BIAS = 0x1400;\r\n// var HI_SHADOW_BIAS = 0x1410;\r\n// var SHADOW_MAP_SIZE = 0x1420;\r\n// var SHADOW_SAMPLES = 0x1430;\r\n// var SHADOW_RANGE = 0x1440;\r\n// var SHADOW_FILTER = 0x1450;\r\n// var RAY_BIAS = 0x1460;\r\n// var O_CONSTS = 0x1500;\r\n// var AMBIENT_LIGHT = 0x2100;\r\n// var BIT_MAP = 0x1100;\r\n// var SOLID_BGND = 0x1200;\r\n// var V_GRADIENT = 0x1300;\r\n// var USE_BIT_MAP = 0x1101;\r\n// var USE_SOLID_BGND = 0x1201;\r\n// var USE_V_GRADIENT = 0x1301;\r\n// var FOG = 0x2200;\r\n// var FOG_BGND = 0x2210;\r\n// var LAYER_FOG = 0x2302;\r\n// var DISTANCE_CUE = 0x2300;\r\n// var DCUE_BGND = 0x2310;\r\n// var USE_FOG = 0x2201;\r\n// var USE_LAYER_FOG = 0x2303;\r\n// var USE_DISTANCE_CUE = 0x2301;\r\nvar MAT_ENTRY = 0xAFFF;\r\nvar MAT_NAME = 0xA000;\r\nvar MAT_AMBIENT = 0xA010;\r\nvar MAT_DIFFUSE = 0xA020;\r\nvar MAT_SPECULAR = 0xA030;\r\nvar MAT_SHININESS = 0xA040;\r\n// var MAT_SHIN2PCT = 0xA041;\r\nvar MAT_TRANSPARENCY = 0xA050;\r\n// var MAT_XPFALL = 0xA052;\r\n// var MAT_USE_XPFALL = 0xA240;\r\n// var MAT_REFBLUR = 0xA053;\r\n// var MAT_SHADING = 0xA100;\r\n// var MAT_USE_REFBLUR = 0xA250;\r\n// var MAT_SELF_ILLUM = 0xA084;\r\nvar MAT_TWO_SIDE = 0xA081;\r\n// var MAT_DECAL = 0xA082;\r\nvar MAT_ADDITIVE = 0xA083;\r\nvar MAT_WIRE = 0xA085;\r\n// var MAT_FACEMAP = 0xA088;\r\n// var MAT_TRANSFALLOFF_IN = 0xA08A;\r\n// var MAT_PHONGSOFT = 0xA08C;\r\n// var MAT_WIREABS = 0xA08E;\r\nvar MAT_WIRE_SIZE = 0xA087;\r\nvar MAT_TEXMAP = 0xA200;\r\n// var MAT_SXP_TEXT_DATA = 0xA320;\r\n// var MAT_TEXMASK = 0xA33E;\r\n// var MAT_SXP_TEXTMASK_DATA = 0xA32A;\r\n// var MAT_TEX2MAP = 0xA33A;\r\n// var MAT_SXP_TEXT2_DATA = 0xA321;\r\n// var MAT_TEX2MASK = 0xA340;\r\n// var MAT_SXP_TEXT2MASK_DATA = 0xA32C;\r\nvar MAT_OPACMAP = 0xA210;\r\n// var MAT_SXP_OPAC_DATA = 0xA322;\r\n// var MAT_OPACMASK = 0xA342;\r\n// var MAT_SXP_OPACMASK_DATA = 0xA32E;\r\nvar MAT_BUMPMAP = 0xA230;\r\n// var MAT_SXP_BUMP_DATA = 0xA324;\r\n// var MAT_BUMPMASK = 0xA344;\r\n// var MAT_SXP_BUMPMASK_DATA = 0xA330;\r\nvar MAT_SPECMAP = 0xA204;\r\n// var MAT_SXP_SPEC_DATA = 0xA325;\r\n// var MAT_SPECMASK = 0xA348;\r\n// var MAT_SXP_SPECMASK_DATA = 0xA332;\r\n// var MAT_SHINMAP = 0xA33C;\r\n// var MAT_SXP_SHIN_DATA = 0xA326;\r\n// var MAT_SHINMASK = 0xA346;\r\n// var MAT_SXP_SHINMASK_DATA = 0xA334;\r\n// var MAT_SELFIMAP = 0xA33D;\r\n// var MAT_SXP_SELFI_DATA = 0xA328;\r\n// var MAT_SELFIMASK = 0xA34A;\r\n// var MAT_SXP_SELFIMASK_DATA = 0xA336;\r\n// var MAT_REFLMAP = 0xA220;\r\n// var MAT_REFLMASK = 0xA34C;\r\n// var MAT_SXP_REFLMASK_DATA = 0xA338;\r\n// var MAT_ACUBIC = 0xA310;\r\nvar MAT_MAPNAME = 0xA300;\r\n// var MAT_MAP_TILING = 0xA351;\r\n// var MAT_MAP_TEXBLUR = 0xA353;\r\nvar MAT_MAP_USCALE = 0xA354;\r\nvar MAT_MAP_VSCALE = 0xA356;\r\nvar MAT_MAP_UOFFSET = 0xA358;\r\nvar MAT_MAP_VOFFSET = 0xA35A;\r\n// var MAT_MAP_ANG = 0xA35C;\r\n// var MAT_MAP_COL1 = 0xA360;\r\n// var MAT_MAP_COL2 = 0xA362;\r\n// var MAT_MAP_RCOL = 0xA364;\r\n// var MAT_MAP_GCOL = 0xA366;\r\n// var MAT_MAP_BCOL = 0xA368;\r\nvar NAMED_OBJECT = 0x4000;\r\n// var N_DIRECT_LIGHT = 0x4600;\r\n// var DL_OFF = 0x4620;\r\n// var DL_OUTER_RANGE = 0x465A;\r\n// var DL_INNER_RANGE = 0x4659;\r\n// var DL_MULTIPLIER = 0x465B;\r\n// var DL_EXCLUDE = 0x4654;\r\n// var DL_ATTENUATE = 0x4625;\r\n// var DL_SPOTLIGHT = 0x4610;\r\n// var DL_SPOT_ROLL = 0x4656;\r\n// var DL_SHADOWED = 0x4630;\r\n// var DL_LOCAL_SHADOW2 = 0x4641;\r\n// var DL_SEE_CONE = 0x4650;\r\n// var DL_SPOT_RECTANGULAR = 0x4651;\r\n// var DL_SPOT_ASPECT = 0x4657;\r\n// var DL_SPOT_PROJECTOR = 0x4653;\r\n// var DL_SPOT_OVERSHOOT = 0x4652;\r\n// var DL_RAY_BIAS = 0x4658;\r\n// var DL_RAYSHAD = 0x4627;\r\n// var N_CAMERA = 0x4700;\r\n// var CAM_SEE_CONE = 0x4710;\r\n// var CAM_RANGES = 0x4720;\r\n// var OBJ_HIDDEN = 0x4010;\r\n// var OBJ_VIS_LOFTER = 0x4011;\r\n// var OBJ_DOESNT_CAST = 0x4012;\r\n// var OBJ_DONT_RECVSHADOW = 0x4017;\r\n// var OBJ_MATTE = 0x4013;\r\n// var OBJ_FAST = 0x4014;\r\n// var OBJ_PROCEDURAL = 0x4015;\r\n// var OBJ_FROZEN = 0x4016;\r\nvar N_TRI_OBJECT = 0x4100;\r\nvar POINT_ARRAY = 0x4110;\r\n// var POINT_FLAG_ARRAY = 0x4111;\r\nvar FACE_ARRAY = 0x4120;\r\nvar MSH_MAT_GROUP = 0x4130;\r\n// var SMOOTH_GROUP = 0x4150;\r\n// var MSH_BOXMAP = 0x4190;\r\nvar TEX_VERTS = 0x4140;\r\nvar MESH_MATRIX = 0x4160;\r\n// var MESH_COLOR = 0x4165;\r\n// var MESH_TEXTURE_INFO = 0x4170;\r\n// var KFDATA = 0xB000;\r\n// var KFHDR = 0xB00A;\r\n// var KFSEG = 0xB008;\r\n// var KFCURTIME = 0xB009;\r\n// var AMBIENT_NODE_TAG = 0xB001;\r\n// var OBJECT_NODE_TAG = 0xB002;\r\n// var CAMERA_NODE_TAG = 0xB003;\r\n// var TARGET_NODE_TAG = 0xB004;\r\n// var LIGHT_NODE_TAG = 0xB005;\r\n// var L_TARGET_NODE_TAG = 0xB006;\r\n// var SPOTLIGHT_NODE_TAG = 0xB007;\r\n// var NODE_ID = 0xB030;\r\n// var NODE_HDR = 0xB010;\r\n// var PIVOT = 0xB013;\r\n// var INSTANCE_NAME = 0xB011;\r\n// var MORPH_SMOOTH = 0xB015;\r\n// var BOUNDBOX = 0xB014;\r\n// var POS_TRACK_TAG = 0xB020;\r\n// var COL_TRACK_TAG = 0xB025;\r\n// var ROT_TRACK_TAG = 0xB021;\r\n// var SCL_TRACK_TAG = 0xB022;\r\n// var MORPH_TRACK_TAG = 0xB026;\r\n// var FOV_TRACK_TAG = 0xB023;\r\n// var ROLL_TRACK_TAG = 0xB024;\r\n// var HOT_TRACK_TAG = 0xB027;\r\n// var FALL_TRACK_TAG = 0xB028;\r\n// var HIDE_TRACK_TAG = 0xB029;\r\n// var POLY_2D = 0x5000;\r\n// var SHAPE_OK = 0x5010;\r\n// var SHAPE_NOT_OK = 0x5011;\r\n// var SHAPE_HOOK = 0x5020;\r\n// var PATH_3D = 0x6000;\r\n// var PATH_MATRIX = 0x6005;\r\n// var SHAPE_2D = 0x6010;\r\n// var M_SCALE = 0x6020;\r\n// var M_TWIST = 0x6030;\r\n// var M_TEETER = 0x6040;\r\n// var M_FIT = 0x6050;\r\n// var M_BEVEL = 0x6060;\r\n// var XZ_CURVE = 0x6070;\r\n// var YZ_CURVE = 0x6080;\r\n// var INTERPCT = 0x6090;\r\n// var DEFORM_LIMIT = 0x60A0;\r\n// var USE_CONTOUR = 0x6100;\r\n// var USE_TWEEN = 0x6110;\r\n// var USE_SCALE = 0x6120;\r\n// var USE_TWIST = 0x6130;\r\n// var USE_TEETER = 0x6140;\r\n// var USE_FIT = 0x6150;\r\n// var USE_BEVEL = 0x6160;\r\n// var DEFAULT_VIEW = 0x3000;\r\n// var VIEW_TOP = 0x3010;\r\n// var VIEW_BOTTOM = 0x3020;\r\n// var VIEW_LEFT = 0x3030;\r\n// var VIEW_RIGHT = 0x3040;\r\n// var VIEW_FRONT = 0x3050;\r\n// var VIEW_BACK = 0x3060;\r\n// var VIEW_USER = 0x3070;\r\n// var VIEW_CAMERA = 0x3080;\r\n// var VIEW_WINDOW = 0x3090;\r\n// var VIEWPORT_LAYOUT_OLD = 0x7000;\r\n// var VIEWPORT_DATA_OLD = 0x7010;\r\n// var VIEWPORT_LAYOUT = 0x7001;\r\n// var VIEWPORT_DATA = 0x7011;\r\n// var VIEWPORT_DATA_3 = 0x7012;\r\n// var VIEWPORT_SIZE = 0x7020;\r\n// var NETWORK_VIEW = 0x7030;\r\n\r\nexport { TDSLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/TDSLoader.js","<template>\r\n    <div class=\"webglLoader3ds-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - 3DS loader\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { TrackballControls } from '@/components/jsm/controls/TrackballControls.js';\r\nimport { TDSLoader } from '@/components/jsm/loaders/TDSLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            controls: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglLoader3ds-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(60, this.$webglInnerWidth / window.innerHeight, 0.1, 10)\r\n            this.camera.position.z = 2\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.add(new this.$THREE.HemisphereLight())\r\n            var directionalLight = new this.$THREE.DirectionalLight(0xffeedd)\r\n            directionalLight.position.set(0, 0, 2)\r\n            this.scene.add(directionalLight)\r\n            //3ds files dont store normal maps\r\n            var normal = new this.$THREE.TextureLoader().load('models/3ds/portalgun/textures/normal.jpg')\r\n            var loader = new TDSLoader()\r\n            loader.setResourcePath('static/models/3ds/portalgun/textures/')\r\n            loader.load('static/models/3ds/portalgun/portalgun.3ds', (object) => {\r\n                object.traverse((child) => {\r\n                    if (child.isMesh) {\r\n                        child.material.specular.setScalar(0.1)\r\n                        child.material.normalMap = normal\r\n                    }\r\n                })\r\n                this.scene.add(object)\r\n            })\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.controls = new TrackballControls(this.camera, this.renderer.domElement)\r\n            window.addEventListener('resize', this.resize, false)\r\n        },\r\n        resize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            this.controls.update()\r\n            this.renderer.render(this.scene, this.camera)\r\n            requestAnimationFrame(this.animate)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoader3ds-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoader3ds.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoader3ds-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - 3DS loader\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7489e373\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoader3ds.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7489e373\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoader3ds.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoader3ds.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoader3ds.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7489e373\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoader3ds.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7489e373\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoader3ds.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}