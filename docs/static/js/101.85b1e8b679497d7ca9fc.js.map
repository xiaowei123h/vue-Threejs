{"version":3,"sources":["webpack:///./src/components/jsm/objects/ReflectorRTT.js","webpack:///src/views/mirror/webglMirrorNodes.vue","webpack:///./src/views/mirror/webglMirrorNodes.vue?cb79","webpack:///./src/views/mirror/webglMirrorNodes.vue"],"names":["ReflectorRTT","geometry","options","Reflector","call","this","setDrawRange","prototype","Object","create","webglMirrorNodes","data","WIDTH","HEIGHT","VIEW_ANGLE","ASPECT","NEAR","FAR","decalNormal","decalDiffuse","camera","scene","renderer","clock","cameraControls","gui","sphereGroup","smallSphere","groundMirrorMaterial","frame","mounted","$webglInnerWidth","window","innerHeight","$THREE","TextureLoader","load","wrapS","wrapT","RepeatWrapping","Clock","dat_gui_module","Nodes","init","fillScene","update","beforeDestroy","destroy","methods","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","Scene","PerspectiveCamera","position","set","OrbitControls","domElement","target","maxDistance","minDistance","document","getElementById","appendChild","addEventListener","onWindowResize","$onWindowResize","material","planeGeo","PlaneBufferGeometry","groundMirror","ReflectorRTT_ReflectorRTT","clipBias","textureWidth","textureHeight","mask","mirror","normalMap","normalXY","normalXYFlip","INVERT","offsetNormal","SUB","offset","MUL","blurMirror","size","Vector2","uv","keywords","ADD","radius","x","y","add","blur","onChange","v","environment","environmentAlpha","normal","mirrorMesh","Mesh","rotateX","Math","PI","Object3D","CylinderBufferGeometry","cos","MeshPhongMaterial","color","emissive","sphereCap","sin","SphereBufferGeometry","halfSphere","rotateZ","IcosahedronBufferGeometry","flatShading","planeTop","planeBack","z","planeFront","rotateY","planeRight","planeLeft","mainLight","PointLight","greenLight","redLight","blueLight","render","requestAnimationFrame","delta","getDelta","timer","Date","now","rotation","abs","updateNode","mirror_webglMirrorNodes","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/101.85b1e8b679497d7ca9fc.js","sourcesContent":["import { Reflector } from \"../objects/Reflector.js\";\r\n\r\nvar ReflectorRTT = function ( geometry, options ) {\r\n\r\n\tReflector.call( this, geometry, options );\r\n\r\n\tthis.geometry.setDrawRange( 0, 0 ); // avoid rendering geometry\r\n\r\n};\r\n\r\nReflectorRTT.prototype = Object.create( Reflector.prototype );\r\n\r\nexport { ReflectorRTT };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/objects/ReflectorRTT.js","<template>\r\n    <div class=\"webglMirrorNodes-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - mirror node-based\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { ReflectorRTT } from '@/components/jsm/objects/ReflectorRTT.js'\r\nimport {\r\n        NodeFrame,\r\n        ExpressionNode,\r\n        PhongNodeMaterial,\r\n        MathNode,\r\n        OperatorNode,\r\n        TextureNode,\r\n        BlurNode,\r\n        FloatNode,\r\n        ReflectorNode,\r\n        SwitchNode,\r\n        NormalMapNode,\r\n    } from '@/components/jsm/nodes/Nodes.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            WIDTH: null,\r\n\t\t\tHEIGHT: null,\r\n\t\t\t// camera\r\n\t\t\tVIEW_ANGLE: 45,\r\n\t\t\tASPECT: null,\r\n\t\t\tNEAR: 1,\r\n\t\t\tFAR: 500,\r\n\t\t\tdecalNormal: null,\r\n\t\t\tdecalDiffuse: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tclock: null,\r\n\t\t\tcameraControls: null,\r\n\t\t\tgui: null,\r\n            sphereGroup: null,\r\n            smallSphere: null,\r\n\t\t\tgroundMirrorMaterial: null,\r\n\t\t\tframe: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.WIDTH = this.$webglInnerWidth\r\n        this.HEIGHT = window.innerHeight\r\n        this.ASPECT = this.WIDTH / this.HEIGHT\r\n        this.decalNormal = new this.$THREE.TextureLoader().load('static/textures/decal/decal-normal.jpg')\r\n        this.decalDiffuse = new this.$THREE.TextureLoader().load('static/textures/decal/decal-diffuse.png')\r\n        this.decalDiffuse.wrapS = this.decalDiffuse.wrapT = this.$THREE.RepeatWrapping\r\n        this.clock = new this.$THREE.Clock()\r\n        this.gui = new GUI()\r\n        this.frame = new NodeFrame()\r\n        this.init()\r\n        this.fillScene()\r\n        this.update()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            // renderer\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.WIDTH, this.HEIGHT)\r\n            // scene\r\n            this.scene = new this.$THREE.Scene()\r\n            // camera\r\n            this.camera = new this.$THREE.PerspectiveCamera(this.VIEW_ANGLE, this.ASPECT, this.NEAR, this.FAR)\r\n            this.camera.position.set(0, 75, 160)\r\n            this.cameraControls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.cameraControls.target.set(0, 40, 0)\r\n            this.cameraControls.maxDistance = 400\r\n            this.cameraControls.minDistance = 10\r\n            this.cameraControls.update()\r\n            var container = document.getElementById('container')\r\n            container.appendChild(this.renderer.domElement)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        fillScene() {\r\n            var planeGeo = new this.$THREE.PlaneBufferGeometry(100.1, 100.1)\r\n            var geometry, material\r\n            // reflector/mirror plane\r\n            geometry = new this.$THREE.PlaneBufferGeometry(100, 100)\r\n            var groundMirror = new ReflectorRTT(geometry, { clipBias: 0.003, textureWidth: this.WIDTH, textureHeight: this.HEIGHT })\r\n            var mask = new SwitchNode(new TextureNode(this.decalDiffuse), 'w')\r\n            var mirror = new ReflectorNode(groundMirror)\r\n            var normalMap = new TextureNode(this.decalNormal)\r\n            var normalXY = new SwitchNode(normalMap, 'xy')\r\n            var normalXYFlip = new MathNode(\r\n                normalXY,\r\n                MathNode.INVERT\r\n            )\r\n            var offsetNormal = new OperatorNode(\r\n                normalXYFlip,\r\n                new FloatNode(.5),\r\n                OperatorNode.SUB\r\n            )\r\n            mirror.offset = new OperatorNode(\r\n                offsetNormal, // normal\r\n                new FloatNode(6), // scale\r\n                OperatorNode.MUL\r\n            )\r\n            var blurMirror = new BlurNode(mirror)\r\n            blurMirror.size = new this.$THREE.Vector2(this.WIDTH, this.HEIGHT)\r\n            blurMirror.uv = new ExpressionNode(\"projCoord.xyz / projCoord.q\", \"vec3\")\r\n            blurMirror.uv.keywords[ \"projCoord\" ] = new OperatorNode(mirror.offset, mirror.uv, OperatorNode.ADD)\r\n            blurMirror.radius.x = blurMirror.radius.y = 0\r\n            this.gui.add({ blur: blurMirror.radius.x }, \"blur\", 0, 25).onChange((v) => {\r\n                blurMirror.radius.x = blurMirror.radius.y = v\r\n            })\r\n            this.groundMirrorMaterial = new PhongNodeMaterial()\r\n            this.groundMirrorMaterial.environment = blurMirror // or add \"mirror\" variable to disable blur\r\n            this.groundMirrorMaterial.environmentAlpha = mask\r\n            this.groundMirrorMaterial.normal = new NormalMapNode(normalMap)\r\n            //this.groundMirrorMaterial.normalScale = new FloatNode(1)\r\n            // test serialization\r\n            /*\r\n                    var library = {}\r\n                    library[ groundMirror.uuid ] = groundMirror\r\n                    library[ decalDiffuse.uuid ] = decalDiffuse\r\n                    library[ decalNormal.uuid ] = decalNormal\r\n                    library[ mirror.textureMatrix.uuid ] = mirror.textureMatrix // use textureMatrix to projection\r\n\r\n                    var json = this.groundMirrorMaterial.toJSON()\r\n\r\n                    this.groundMirrorMaterial = new NodeMaterialLoader(null, library).parse(json)\r\n                */\r\n            //--\r\n            var mirrorMesh = new this.$THREE.Mesh(planeGeo, this.groundMirrorMaterial)\r\n            // add all alternative mirror materials inside the ReflectorRTT to prevent:\r\n            // glDrawElements: Source and destination textures of the draw are the same.\r\n            groundMirror.add(mirrorMesh)\r\n            groundMirror.rotateX(- Math.PI / 2)\r\n            this.scene.add(groundMirror)\r\n            this.sphereGroup = new this.$THREE.Object3D()\r\n            this.scene.add(this.sphereGroup)\r\n            geometry = new this.$THREE.CylinderBufferGeometry(0.1, 15 * Math.cos(Math.PI / 180 * 30), 0.1, 24, 1)\r\n            material = new this.$THREE.MeshPhongMaterial({ color: 0xffffff, emissive: 0x444444 })\r\n            var sphereCap = new this.$THREE.Mesh(geometry, material)\r\n            sphereCap.position.y = - 15 * Math.sin(Math.PI / 180 * 30) - 0.05\r\n            sphereCap.rotateX(- Math.PI)\r\n            geometry = new this.$THREE.SphereBufferGeometry(15, 24, 24, Math.PI / 2, Math.PI * 2, 0, Math.PI / 180 * 120)\r\n            var halfSphere = new this.$THREE.Mesh(geometry, material)\r\n            halfSphere.add(sphereCap)\r\n            halfSphere.rotateX(- Math.PI / 180 * 135)\r\n            halfSphere.rotateZ(- Math.PI / 180 * 20)\r\n            halfSphere.position.y = 7.5 + 15 * Math.sin(Math.PI / 180 * 30)\r\n            this.sphereGroup.add(halfSphere)\r\n            geometry = new this.$THREE.IcosahedronBufferGeometry(5, 0)\r\n            material = new this.$THREE.MeshPhongMaterial({ color: 0xffffff, emissive: 0x333333, flatShading: true })\r\n            this.smallSphere = new this.$THREE.Mesh(geometry, material)\r\n            this.scene.add(this.smallSphere)\r\n            // walls\r\n            var planeTop = new this.$THREE.Mesh(planeGeo, new this.$THREE.MeshPhongMaterial({ color: 0xffffff }))\r\n            planeTop.position.y = 100\r\n            planeTop.rotateX(Math.PI / 2)\r\n            this.scene.add(planeTop)\r\n            var planeBack = new this.$THREE.Mesh(planeGeo, new this.$THREE.MeshPhongMaterial({ color: 0xffffff }))\r\n            planeBack.position.z = - 50\r\n            planeBack.position.y = 50\r\n            this.scene.add(planeBack)\r\n            var planeFront = new this.$THREE.Mesh(planeGeo, new this.$THREE.MeshPhongMaterial({ color: 0x7f7fff }))\r\n            planeFront.position.z = 50\r\n            planeFront.position.y = 50\r\n            planeFront.rotateY(Math.PI)\r\n            this.scene.add(planeFront)\r\n            var planeRight = new this.$THREE.Mesh(planeGeo, new this.$THREE.MeshPhongMaterial({ color: 0x00ff00 }))\r\n            planeRight.position.x = 50\r\n            planeRight.position.y = 50\r\n            planeRight.rotateY(- Math.PI / 2)\r\n            this.scene.add(planeRight)\r\n            var planeLeft = new this.$THREE.Mesh(planeGeo, new this.$THREE.MeshPhongMaterial({ color: 0xff0000 }))\r\n            planeLeft.position.x = - 50\r\n            planeLeft.position.y = 50\r\n            planeLeft.rotateY(Math.PI / 2)\r\n            this.scene.add(planeLeft)\r\n            // lights\r\n            var mainLight = new this.$THREE.PointLight(0xcccccc, 1.5, 250)\r\n            mainLight.position.y = 60\r\n            this.scene.add(mainLight)\r\n            var greenLight = new this.$THREE.PointLight(0x00ff00, 0.25, 1000)\r\n            greenLight.position.set(550, 50, 0)\r\n            this.scene.add(greenLight)\r\n            var redLight = new this.$THREE.PointLight(0xff0000, 0.25, 1000)\r\n            redLight.position.set(- 550, 50, 0)\r\n            this.scene.add(redLight)\r\n            var blueLight = new this.$THREE.PointLight(0x7f7fff, 0.25, 1000)\r\n            blueLight.position.set(0, 50, 550)\r\n            this.scene.add(blueLight)\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        update() {\r\n            requestAnimationFrame(this.update)\r\n            var delta = this.clock.getDelta()\r\n            var timer = Date.now() * 0.01\r\n            this.sphereGroup.rotation.y -= 0.002\r\n            this.smallSphere.position.set(\r\n                Math.cos(timer * 0.1) * 30,\r\n                Math.abs(Math.cos(timer * 0.2)) * 20 + 5,\r\n                Math.sin(timer * 0.1) * 30\r\n            )\r\n            this.smallSphere.rotation.y = (Math.PI / 2) - timer * 0.1\r\n            this.smallSphere.rotation.z = timer * 0.8\r\n            this.frame.update(delta).updateNode(this.groundMirrorMaterial)\r\n            this.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMirrorNodes-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    color: #444;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/mirror/webglMirrorNodes.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMirrorNodes-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - mirror node-based\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7b2f5b29\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/mirror/webglMirrorNodes.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7b2f5b29\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMirrorNodes.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMirrorNodes.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMirrorNodes.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7b2f5b29\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMirrorNodes.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7b2f5b29\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/mirror/webglMirrorNodes.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}