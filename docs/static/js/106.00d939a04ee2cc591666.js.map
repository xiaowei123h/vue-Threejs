{"version":3,"sources":["webpack:///./src/utils/animationCloth.js","webpack:///src/views/animation/webglAnimationCloth.vue","webpack:///./src/views/animation/webglAnimationCloth.vue?fdc3","webpack:///./src/views/animation/webglAnimationCloth.vue"],"names":["Plane","width","height","u","v","target","x","y","set","Cloth","w","h","MASS","THREE","restDistance","DRAG","clothFunction","this","particles","constraints","push","Particle","index","z","mass","position","Vector3","previous","original","a","invMass","tmp","tmp2","prototype","addForce","force","add","copy","multiplyScalar","integrate","timesq","newPos","subVectors","webglAnimationCloth","data","params","enableWind","showBall","togglePins","DAMPING","xSegs","ySegs","cloth","GRAVITY","gravity","TIMESTEP","TIMESTEP_SQ","pins","windForce","ballPosition","ballSize","tmpForce","pinsFormation","diff","clothGeometry","sphere","container","stats","camera","scene","renderer","object","il","gui","mounted","$THREE","initPinsFormation","init","animate","beforeDestroy","hide","methods","document","createElement","getElementsByClassName","appendChild","Scene","background","Color","fog","Fog","PerspectiveCamera","$webglInnerWidth","window","innerHeight","AmbientLight","light","DirectionalLight","castShadow","shadow","mapSize","d","left","right","top","bottom","far","loader","TextureLoader","clothTexture","load","anisotropy","clothMaterial","MeshLambertMaterial","map","side","DoubleSide","alphaTest","ParametricBufferGeometry","Mesh","customDepthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","ballGeo","SphereBufferGeometry","ballMaterial","receiveShadow","visible","groundTexture","wrapS","wrapT","RepeatWrapping","repeat","encoding","sRGBEncoding","groundMaterial","mesh","PlaneBufferGeometry","rotation","Math","PI","poleGeo","BoxBufferGeometry","poleMat","gg","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","domElement","outputEncoding","shadowMap","enabled","controls","OrbitControls","maxPolarAngle","minDistance","maxDistance","$Stats","dom","style","addEventListener","onWindowResize","dat_gui_module","name","TESTING","i","simulate","now","requestAnimationFrame","render","update","p","length","attributes","setXYZ","needsUpdate","computeVertexNormals","$onWindowResize","random","satisfyConstraints","p1","p2","distance","currentDist","correctionHalf","sub","windStrength","cos","sin","normalize","ill","indx","normal","indices","normals","count","j","getX","fromBufferAttribute","dot","_i","_ill","particle","iil","_i2","constraint","_i3","_iil","pos","_pos","animation_webglAnimationCloth","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/106.00d939a04ee2cc591666.js","sourcesContent":["export function clothFunction1(x, y) {\r\n    return Plane(x, y)\r\n}\r\n\r\nexport function Plane(width, height) {\r\n    return function (u, v, target) {\r\n        const x = (u - 0.5) * width\r\n        const y = (v + 0.5) * height\r\n        const z = 0\r\n        target.set(x, y, z)\r\n    }\r\n}\r\n\r\nexport function Cloth(w, h, MASS, THREE, restDistance, DRAG, clothFunction) {\r\n    w = w || 10\r\n    h = h || 10\r\n    this.w = w\r\n    this.h = h\r\n    const particles = []\r\n    const constraints = []\r\n    // Create particles\r\n    for (let v = 0; v <= h; v ++) {\r\n        for (let u = 0; u <= w; u ++) {\r\n            particles.push(\r\n                new Particle( u / w, v / h, 0, MASS, THREE, DRAG, clothFunction )\r\n            )\r\n        }\r\n    }\r\n    // Structural\r\n    for (let v = 0; v < h; v ++) {\r\n        for (let u = 0; u < w; u ++) {\r\n            constraints.push([\r\n                particles[index(u, v)],\r\n                particles[index(u, v + 1)],\r\n                restDistance\r\n            ])\r\n            constraints.push([\r\n                particles[index(u, v)],\r\n                particles[index(u + 1, v)],\r\n                restDistance\r\n            ])\r\n        }\r\n    }\r\n    for (let u = w, v = 0; v < h; v ++) {\r\n        constraints.push([\r\n            particles[index(u, v)],\r\n            particles[index(u, v + 1)],\r\n            restDistance\r\n        ])\r\n    }\r\n    for (let v = h, u = 0; u < w; u ++) {\r\n\r\n        constraints.push([\r\n            particles[index(u, v)],\r\n            particles[index(u + 1, v)],\r\n            restDistance\r\n        ])\r\n    }\r\n\r\n    // While many systems use shear and bend springs,\r\n    // the relaxed constraints model seems to be just fine\r\n    // using structural springs.\r\n    // Shear\r\n    // const diagonalDist = Math.sqrt(restDistance * restDistance * 2);\r\n\r\n    // for (v=0;v<h;v++) {\r\n    // \tfor (u=0;u<w;u++) {\r\n\r\n    // \t\tconstraints.push([\r\n    // \t\t\tparticles[index(u, v)],\r\n    // \t\t\tparticles[index(u+1, v+1)],\r\n    // \t\t\tdiagonalDist\r\n    // \t\t]);\r\n\r\n    // \t\tconstraints.push([\r\n    // \t\t\tparticles[index(u+1, v)],\r\n    // \t\t\tparticles[index(u, v+1)],\r\n    // \t\t\tdiagonalDist\r\n    // \t\t]);\r\n\r\n    // \t}\r\n    // }\r\n\r\n    this.particles = particles\r\n    this.constraints = constraints\r\n    function index(u, v) {\r\n        return u + v * (w + 1)\r\n    }\r\n    this.index = index\r\n}\r\n\r\nexport function Particle(x, y, z, mass, THREE, DRAG, clothFunction) {\r\n    // console.log('x=' + x + 'y=' + y + 'z=' + z + 'mass=' + mass + 'DRAG=' + DRAG)\r\n    this.position = new THREE.Vector3()\r\n    this.previous = new THREE.Vector3()\r\n    this.original = new THREE.Vector3()\r\n    this.a = new THREE.Vector3(0, 0, 0) // acceleration\r\n    this.mass = mass\r\n    this.DRAG = DRAG\r\n    this.invMass = 1 / mass\r\n    this.tmp = new THREE.Vector3()\r\n    this.tmp2 = new THREE.Vector3()\r\n\r\n    // init\r\n    clothFunction(x, y, this.position)\r\n    clothFunction(x, y, this.previous)\r\n    clothFunction(x, y, this.original)\r\n}\r\n\r\n// Force -> Acceleration\r\nParticle.prototype.addForce = function (force) {\r\n    this.a.add(\r\n        this.tmp2.copy(force).multiplyScalar(this.invMass)\r\n    )\r\n}\r\n\r\n// Performs Verlet integration\r\nParticle.prototype.integrate = function (timesq) {\r\n    const newPos = this.tmp.subVectors(this.position, this.previous)\r\n    newPos.multiplyScalar(this.DRAG).add(this.position)\r\n    newPos.add(this.a.multiplyScalar(timesq))\r\n    this.tmp = this.previous\r\n    this.previous = this.position\r\n    this.position = newPos\r\n    this.a.set(0, 0, 0)\r\n}\r\n\r\nexport default {\r\n    Cloth,\r\n    Plane\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/animationCloth.js","<template>\r\n    <div class=\"webglAnimationCloth-container\">\r\n        <div id=\"info\">Simple Cloth Simulation<br/>\r\n\t\t\tVerlet integration with relaxed constraints<br/>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from 'three'\r\nimport { Cloth, Plane } from '@/utils/animationCloth.js'\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            params: {\r\n\t\t\t\tenableWind: true,\r\n\t\t\t\tshowBall: false,\r\n\t\t\t\ttogglePins: this.togglePins\r\n            },\r\n            DAMPING: 0.03,\r\n            DRAG: null,\r\n\t\t\tMASS: 0.1,\r\n\t\t\trestDistance: 25,\r\n\t\t\txSegs: 10,\r\n\t\t\tySegs: 10,\r\n\t\t\tclothFunction: null,\r\n\t\t\tcloth: null,\r\n\t\t\tGRAVITY: 981 * 1.4,\r\n\t\t\tgravity: null,\r\n\t\t\tTIMESTEP: 18 / 1000,\r\n\t\t\tTIMESTEP_SQ: null,\r\n\t\t\tpins: [],\r\n\t\t\twindForce: null,\r\n\t\t\tballPosition: null,\r\n\t\t\tballSize: 60,\r\n            tmpForce: null,\r\n            pinsFormation: [],\r\n            diff: null,\r\n            clothGeometry: null,\r\n            sphere: null,\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            object: null,\r\n            il: null,\r\n            constraints: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.DRAG = 1 - this.DAMPING\r\n        this.clothFunction = Plane( this.restDistance * this.xSegs, this.restDistance * this.ySegs )\r\n        this.cloth = new Cloth( this.xSegs, this.ySegs, this.MASS, this.$THREE, this.restDistance, this.DRAG, this.clothFunction )\r\n        this.gravity = new this.$THREE.Vector3( 0, - this.GRAVITY, 0 ).multiplyScalar( this.MASS )\r\n        this.TIMESTEP_SQ = this.TIMESTEP * this.TIMESTEP\r\n        this.windForce = new this.$THREE.Vector3( 0, 0, 0 )\r\n        this.ballPosition = new this.$THREE.Vector3( 0, - 45, 0 )\r\n        this.tmpForce = new this.$THREE.Vector3()\r\n        this.diff = new this.$THREE.Vector3()\r\n        this.initPinsFormation()\r\n        this.init()\r\n        this.animate(0)\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n\t\t\tdocument.getElementsByClassName('webglAnimationCloth-container')[0].appendChild(this.container)\r\n            // scene\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xcce0ff)\r\n            this.scene.fog = new this.$THREE.Fog(0xcce0ff, 500, 10000)\r\n            // camera\r\n            this.camera = new this.$THREE.PerspectiveCamera(30, (this.$webglInnerWidth) / window.innerHeight, 1, 10000)\r\n            this.camera.position.set(1000, 50, 1500)\r\n            // lights\r\n            this.scene.add(new this.$THREE.AmbientLight(0x666666))\r\n            const light = new this.$THREE.DirectionalLight(0xdfebff, 1)\r\n            light.position.set(50, 200, 100)\r\n            light.position.multiplyScalar(1.3)\r\n            light.castShadow = true\r\n            light.shadow.mapSize.width = 1024\r\n            light.shadow.mapSize.height = 1024\r\n            const d = 300\r\n            light.shadow.camera.left = - d\r\n            light.shadow.camera.right = d\r\n            light.shadow.camera.top = d\r\n            light.shadow.camera.bottom = - d\r\n            light.shadow.camera.far = 1000\r\n            this.scene.add(light)\r\n            // cloth material\r\n            const loader = new this.$THREE.TextureLoader()\r\n            const clothTexture = loader.load('static/textures/patterns/circuit_pattern.png')\r\n            clothTexture.anisotropy = 16\r\n            const clothMaterial = new this.$THREE.MeshLambertMaterial({\r\n                map: clothTexture,\r\n                side: this.$THREE.DoubleSide,\r\n                alphaTest: 0.5\r\n            })\r\n            // cloth geometry\r\n            this.clothGeometry = new this.$THREE.ParametricBufferGeometry(this.clothFunction, this.cloth.w, this.cloth.h)\r\n            // cloth mesh\r\n            this.object = new this.$THREE.Mesh(this.clothGeometry, clothMaterial)\r\n            this.object.position.set( 0, 0, 0 )\r\n            this.object.castShadow = true\r\n            this.scene.add(this.object)\r\n            this.object.customDepthMaterial = new this.$THREE.MeshDepthMaterial({\r\n                depthPacking: this.$THREE.RGBADepthPacking,\r\n                map: clothTexture,\r\n                alphaTest: 0.5\r\n            })\r\n            // sphere\r\n            const ballGeo = new this.$THREE.SphereBufferGeometry(this.ballSize, 32, 16)\r\n            const ballMaterial = new this.$THREE.MeshLambertMaterial()\r\n            this.sphere = new this.$THREE.Mesh( ballGeo, ballMaterial )\r\n            this.sphere.castShadow = true\r\n            this.sphere.receiveShadow = true\r\n            this.sphere.visible = false\r\n            this.scene.add( this.sphere )\r\n            // ground\r\n            const groundTexture = loader.load('static/textures/terrain/grasslight-big.jpg')\r\n            groundTexture.wrapS = groundTexture.wrapT = this.$THREE.RepeatWrapping\r\n            groundTexture.repeat.set(25, 25)\r\n            groundTexture.anisotropy = 16\r\n            groundTexture.encoding = this.$THREE.sRGBEncoding\r\n            const groundMaterial = new this.$THREE.MeshLambertMaterial({map: groundTexture})\r\n            let mesh = new this.$THREE.Mesh(new this.$THREE.PlaneBufferGeometry(20000, 20000), groundMaterial)\r\n            mesh.position.y = - 250\r\n            mesh.rotation.x = - Math.PI / 2\r\n            mesh.receiveShadow = true\r\n            this.scene.add(mesh)\r\n            // poles\r\n            const poleGeo = new this.$THREE.BoxBufferGeometry(5, 375, 5)\r\n            const poleMat = new this.$THREE.MeshLambertMaterial()\r\n            mesh = new this.$THREE.Mesh(poleGeo, poleMat)\r\n            mesh.position.x = - 125\r\n            mesh.position.y = - 62\r\n            mesh.receiveShadow = true\r\n            mesh.castShadow = true\r\n            this.scene.add( mesh )\r\n            mesh = new this.$THREE.Mesh(poleGeo, poleMat)\r\n            mesh.position.x = 125\r\n            mesh.position.y = - 62\r\n            mesh.receiveShadow = true\r\n            mesh.castShadow = true\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(new this.$THREE.BoxBufferGeometry(255, 5, 5), poleMat)\r\n            mesh.position.y = - 250 + (750 / 2)\r\n            mesh.position.x = 0\r\n            mesh.receiveShadow = true\r\n            mesh.castShadow = true\r\n            this.scene.add(mesh)\r\n            const gg = new this.$THREE.BoxBufferGeometry(10, 10, 10)\r\n            mesh = new this.$THREE.Mesh(gg, poleMat)\r\n            mesh.position.y = - 250\r\n            mesh.position.x = 125\r\n            mesh.receiveShadow = true\r\n            mesh.castShadow = true\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(gg, poleMat)\r\n            mesh.position.y = - 250\r\n            mesh.position.x = - 125\r\n            mesh.receiveShadow = true\r\n            mesh.castShadow = true\r\n            this.scene.add(mesh)\r\n            // renderer\r\n            this.renderer = new this.$THREE.WebGLRenderer({antialias: true})\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.shadowMap.enabled = true\r\n            // controls\r\n            const controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.maxPolarAngle = Math.PI * 0.5\r\n            controls.minDistance = 1000\r\n            controls.maxDistance = 5000\r\n            // performance monitor\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild( this.stats.dom )\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            //\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'enableWind').name('Enable wind')\r\n            this.gui.add(this.params, 'showBall').name('Show ball')\r\n            this.gui.add(this.params, 'togglePins').name('Toggle pins')\r\n            //\r\n            if (typeof TESTING !== 'undefined') {\r\n                for (var i = 0; i < 50; i ++) {\r\n                    this.simulate(500 - 10 * i)\r\n                }\r\n            }\r\n        },\r\n        animate(now) {\r\n            requestAnimationFrame(this.animate)\r\n            this.simulate(now)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            const p = this.cloth.particles\r\n            for (var i = 0, il = p.length; i < il; i ++) {\r\n                const v = p[i].position\r\n                this.clothGeometry.attributes.position.setXYZ(i, v.x, v.y, v.z)\r\n            }\r\n            this.clothGeometry.attributes.position.needsUpdate = true\r\n            this.clothGeometry.computeVertexNormals()\r\n            this.sphere.position.copy(this.ballPosition)\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        initPinsFormation() {\r\n            this.pins = [6]\r\n\t\t\tthis.pinsFormation.push(this.pins)\r\n\t\t\tthis.pins = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n\t\t\tthis.pinsFormation.push(this.pins)\r\n\t\t\tthis.pins = [0]\r\n\t\t\tthis.pinsFormation.push(this.pins)\r\n\t\t\tthis.pins = [] // cut the rope ;)\r\n\t\t\tthis.pinsFormation.push(this.pins)\r\n\t\t\tthis.pins = [0, this.cloth.w] // classic 2 pins\r\n\t\t\tthis.pinsFormation.push(this.pins)\r\n\t\t\tthis.pins = this.pinsFormation[1]\r\n        },\r\n        togglePins() {\r\n            this.pins = this.pinsFormation[~ ~ (Math.random() * this.pinsFormation.length)]\r\n        },\r\n        satisfyConstraints(p1, p2, distance) {\r\n            this.diff.subVectors(p2.position, p1.position)\r\n            const currentDist = this.diff.length()\r\n            if (currentDist === 0) return // prevents division by 0\r\n            const correction = this.diff.multiplyScalar(1 - distance / currentDist)\r\n            const correctionHalf = correction.multiplyScalar(0.5)\r\n            p1.position.add(correctionHalf)\r\n            p2.position.sub(correctionHalf)\r\n        },\r\n        simulate(now) {\r\n            const windStrength = Math.cos(now / 7000) * 20 + 40\r\n            this.windForce.set( Math.sin(now / 2000), Math.cos(now / 3000), Math.sin(now / 1000) )\r\n            this.windForce.normalize()\r\n            this.windForce.multiplyScalar(windStrength)\r\n            // Aerodynamics forces\r\n            const particles = this.cloth.particles\r\n            var ill = this.il\r\n            if (this.params.enableWind) {\r\n                let indx\r\n                const normal = new this.$THREE.Vector3()\r\n                const indices = this.clothGeometry.index\r\n                const normals = this.clothGeometry.attributes.normal\r\n                for (var i = 0, ill = indices.count; i < ill; i += 3) {\r\n                    for (let j = 0; j < 3; j ++) {\r\n                        indx = indices.getX(i + j)\r\n                        normal.fromBufferAttribute(normals, indx)\r\n                        this.tmpForce.copy(normal).normalize().multiplyScalar(normal.dot(this.windForce))\r\n                        particles[indx].addForce(this.tmpForce)\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0, ill = particles.length; i < ill; i ++) {\r\n                const particle = particles[i]\r\n                particle.addForce(this.gravity)\r\n                particle.integrate(this.TIMESTEP_SQ)\r\n            }\r\n            // Start Constraints\r\n            this.constraints = this.cloth.constraints\r\n            this.il = this.constraints.length\r\n            var iil = this.il\r\n            for (let i = 0; i < iil; i ++) {\r\n                const constraint = this.constraints[i]\r\n                this.satisfyConstraints(constraint[0], constraint[1], constraint[2])\r\n            }\r\n            // Ball Constraints\r\n            this.ballPosition.z = - Math.sin(now / 600) * 90 //+ 40;\r\n            this.ballPosition.x = Math.cos(now / 400) * 70\r\n            if (this.params.showBall) {\r\n                this.sphere.visible = true\r\n                for (let i = 0, iil = particles.length; i < iil; i ++) {\r\n                    const particle = particles[i]\r\n                    const pos = particle.position\r\n                    this.diff.subVectors(pos, this.ballPosition)\r\n                    if (this.diff.length() < this.ballSize) {\r\n                        // collided\r\n                        this.diff.normalize().multiplyScalar(this.ballSize)\r\n                        pos.copy( this.ballPosition ).add(this.diff)\r\n                    }\r\n                }\r\n            } else {\r\n                this.sphere.visible = false\r\n            }\r\n            // Floor Constraints\r\n            for (var i = 0, iil = particles.length; i < iil; i ++) {\r\n                const particle = particles[i]\r\n                const pos = particle.position\r\n                if (pos.y < - 250) {\r\n                    pos.y =- 250\r\n                }\r\n            }\r\n            // Pin Constraints\r\n            for (var i = 0, iil = this.pins.length; i < iil; i ++) {\r\n                const xy = this.pins[i]\r\n                const p = particles[xy]\r\n                p.position.copy(p.original)\r\n                p.previous.copy(p.original)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglAnimationCloth-container {\r\n    color: #000;\r\n}\r\na {\r\n    color: #080;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/animation/webglAnimationCloth.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglAnimationCloth-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_vm._v(\"Simple Cloth Simulation\"),_c('br'),_vm._v(\"\\n\\t\\t\\tVerlet integration with relaxed constraints\"),_c('br')])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3ca96c24\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/animation/webglAnimationCloth.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3ca96c24\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglAnimationCloth.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglAnimationCloth.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglAnimationCloth.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3ca96c24\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglAnimationCloth.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3ca96c24\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/animation/webglAnimationCloth.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}