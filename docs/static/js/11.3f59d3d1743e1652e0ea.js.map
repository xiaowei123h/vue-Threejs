{"version":3,"sources":["webpack:///src/views/shadowmap/webglShadowmapViewer.vue","webpack:///./src/views/shadowmap/webglShadowmapViewer.vue?229c","webpack:///./src/views/shadowmap/webglShadowmapViewer.vue","webpack:///./src/components/jsm/utils/ShadowMapViewer.js"],"names":["webglShadowmapViewer","data","camera","scene","renderer","clock","stats","dirLight","spotLight","torusKnot","cube","dirLightShadowMapViewer","spotLightShadowMapViewer","mounted","this","init","animate","methods","initScene","initShadowMapViewers","initMisc","document","getElementsByClassName","appendChild","domElement","window","addEventListener","onWindowResize","$THREE","PerspectiveCamera","$webglInnerWidth","innerHeight","position","set","Scene","add","AmbientLight","SpotLight","name","angle","Math","PI","penumbra","castShadow","shadow","near","far","mapSize","width","height","CameraHelper","DirectionalLight","right","left","top","bottom","geometry","TorusKnotBufferGeometry","material","MeshPhongMaterial","color","shininess","specular","Mesh","scale","multiplyScalar","y","receiveShadow","BoxBufferGeometry","ground","$onWindowResize","resizeShadowMapViewers","updateForWindowResize","ShadowMapViewer","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","type","BasicShadowMap","controls","OrbitControls","target","update","Clock","$Stats","dom","style","size","x","requestAnimationFrame","render","renderScene","renderShadowMapViewers","delta","getDelta","rotation","z","shadowmap_webglShadowmapViewer","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","d","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","__WEBPACK_IMPORTED_MODULE_1__shaders_UnpackDepthRGBAShader_js__","light","userAutoClearSetting","scope","doRenderLabel","undefined","frame","OrthographicCamera","innerWidth","labelCanvas","labelMesh","shader","UnpackDepthRGBAShader","uniforms","UniformsUtils","clone","ShaderMaterial","vertexShader","fragmentShader","plane","PlaneBufferGeometry","mesh","context","createElement","getContext","font","labelWidth","measureText","fillStyle","fillText","labelTexture","Texture","magFilter","LinearFilter","minFilter","needsUpdate","labelMaterial","MeshBasicMaterial","map","side","DoubleSide","transparent","labelPlane","tDiffuse","value","texture","autoClear","clearDepth","updateProjectionMatrix","prototype","constructor"],"mappings":"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","file":"static/js/11.3f59d3d1743e1652e0ea.js","sourcesContent":["<template>\r\n    <div class=\"webglShadowmapViewer-container\">\r\n        <div id=\"info\">\r\n\t\t    <a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - ShadowMapViewer example by <a href=\"https://github.com/arya-s\">arya-s</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { ShadowMapViewer } from '@/components/jsm/utils/ShadowMapViewer.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            clock: null,\r\n            stats: null,\r\n            dirLight: null,\r\n            spotLight: null,\r\n            torusKnot: null,\r\n            cube: null,\r\n            dirLightShadowMapViewer: null,\r\n            spotLightShadowMapViewer: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.initScene()\r\n            this.initShadowMapViewers()\r\n            this.initMisc()\r\n            document.getElementsByClassName('webglShadowmapViewer-container')[0].appendChild(this.renderer.domElement)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        initScene() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set(0, 15, 35)\r\n            this.scene = new this.$THREE.Scene()\r\n            // Lights\r\n            this.scene.add(new this.$THREE.AmbientLight(0x404040))\r\n            this.spotLight = new this.$THREE.SpotLight(0xffffff)\r\n            this.spotLight.name = 'Spot Light'\r\n            this.spotLight.angle = Math.PI / 5\r\n            this.spotLight.penumbra = 0.3\r\n            this.spotLight.position.set(10, 10, 5)\r\n            this.spotLight.castShadow = true\r\n            this.spotLight.shadow.camera.near = 8\r\n            this.spotLight.shadow.camera.far = 30\r\n            this.spotLight.shadow.mapSize.width = 1024\r\n            this.spotLight.shadow.mapSize.height = 1024\r\n            this.scene.add(this.spotLight)\r\n            this.scene.add(new this.$THREE.CameraHelper(this.spotLight.shadow.camera))\r\n            this.dirLight = new this.$THREE.DirectionalLight(0xffffff, 1)\r\n            this.dirLight.name = 'Dir. Light'\r\n            this.dirLight.position.set(0, 10, 0)\r\n            this.dirLight.castShadow = true\r\n            this.dirLight.shadow.camera.near = 1\r\n            this.dirLight.shadow.camera.far = 10\r\n            this.dirLight.shadow.camera.right = 15\r\n            this.dirLight.shadow.camera.left = - 15\r\n            this.dirLight.shadow.camera.top\t= 15\r\n            this.dirLight.shadow.camera.bottom = - 15\r\n            this.dirLight.shadow.mapSize.width = 1024\r\n            this.dirLight.shadow.mapSize.height = 1024\r\n            this.scene.add(this.dirLight)\r\n            this.scene.add(new this.$THREE.CameraHelper(this.dirLight.shadow.camera))\r\n            // Geometry\r\n            var geometry = new this.$THREE.TorusKnotBufferGeometry(25, 8, 75, 20)\r\n            var material = new this.$THREE.MeshPhongMaterial({\r\n                color: 0xff0000,\r\n                shininess: 150,\r\n                specular: 0x222222\r\n            })\r\n            this.torusKnot = new this.$THREE.Mesh(geometry, material)\r\n            this.torusKnot.scale.multiplyScalar(1 / 18)\r\n            this.torusKnot.position.y = 3\r\n            this.torusKnot.castShadow = true\r\n            this.torusKnot.receiveShadow = true\r\n            this.scene.add(this.torusKnot)\r\n            geometry = new this.$THREE.BoxBufferGeometry(3, 3, 3)\r\n            this.cube = new this.$THREE.Mesh(geometry, material)\r\n            this.cube.position.set(8, 3, 8)\r\n            this.cube.castShadow = true\r\n            this.cube.receiveShadow = true\r\n            this.scene.add(this.cube)\r\n            geometry = new this.$THREE.BoxBufferGeometry(10, 0.15, 10)\r\n            material = new this.$THREE.MeshPhongMaterial({\r\n                color: 0xa0adaf,\r\n                shininess: 150,\r\n                specular: 0x111111\r\n            })\r\n            var ground = new this.$THREE.Mesh(geometry, material)\r\n            ground.scale.multiplyScalar(3)\r\n            ground.castShadow = false\r\n            ground.receiveShadow = true\r\n            this.scene.add(ground)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.resizeShadowMapViewers()\r\n            this.dirLightShadowMapViewer.updateForWindowResize()\r\n            this.spotLightShadowMapViewer.updateForWindowResize()\r\n        },\r\n        initShadowMapViewers() {\r\n            this.dirLightShadowMapViewer = new ShadowMapViewer(this.dirLight)\r\n            this.spotLightShadowMapViewer = new ShadowMapViewer(this.spotLight)\r\n            this.resizeShadowMapViewers()\r\n        },\r\n        initMisc() {\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.shadowMap.type = this.$THREE.BasicShadowMap\r\n            // Mouse control\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.target.set(0, 2, 0)\r\n            controls.update()\r\n            this.clock = new this.$THREE.Clock()\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglShadowmapViewer-container')[0].appendChild(this.stats.dom)\r\n        },\r\n        resizeShadowMapViewers() {\r\n            var size = this.$webglInnerWidth * 0.15\r\n            this.dirLightShadowMapViewer.position.x = 10\r\n            this.dirLightShadowMapViewer.position.y = 10\r\n            this.dirLightShadowMapViewer.size.width = size\r\n            this.dirLightShadowMapViewer.size.height = size\r\n            this.dirLightShadowMapViewer.update() //Required when setting position or size directly\r\n            this.spotLightShadowMapViewer.size.set(size, size)\r\n            this.spotLightShadowMapViewer.position.set(size + 20, 10)\r\n            // this.spotLightShadowMapViewer.update()\t//NOT required because .set updates automatically\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        renderScene() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        renderShadowMapViewers() {\r\n            this.dirLightShadowMapViewer.render(this.renderer)\r\n            this.spotLightShadowMapViewer.render(this.renderer)\r\n        },\r\n        render() {\r\n            var delta = this.clock.getDelta()\r\n            this.renderScene()\r\n            this.renderShadowMapViewers()\r\n            this.torusKnot.rotation.x += 0.25 * delta\r\n            this.torusKnot.rotation.y += 2 * delta\r\n            this.torusKnot.rotation.z += 1 * delta\r\n            this.cube.rotation.x += 0.25 * delta\r\n            this.cube.rotation.y += 2 * delta\r\n            this.cube.rotation.z += 1 * delta\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglShadowmapViewer-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/shadowmap/webglShadowmapViewer.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglShadowmapViewer-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - ShadowMapViewer example by \"),_c('a',{attrs:{\"href\":\"https://github.com/arya-s\"}},[_vm._v(\"arya-s\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0a99f10b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/shadowmap/webglShadowmapViewer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0a99f10b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglShadowmapViewer.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadowmapViewer.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadowmapViewer.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0a99f10b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglShadowmapViewer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0a99f10b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/shadowmap/webglShadowmapViewer.vue\n// module id = null\n// module chunks = ","import {\r\n\tDoubleSide,\r\n\tLinearFilter,\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tOrthographicCamera,\r\n\tPlaneBufferGeometry,\r\n\tScene,\r\n\tShaderMaterial,\r\n\tTexture,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\nimport { UnpackDepthRGBAShader } from \"../shaders/UnpackDepthRGBAShader.js\";\r\n\r\n/**\r\n * This is a helper for visualising a given light's shadow map.\r\n * It works for shadow casting lights: DirectionalLight and SpotLight.\r\n * It renders out the shadow map and displays it on a HUD.\r\n *\r\n * Example usage:\r\n *\t1) Import ShadowMapViewer into your app.\r\n *\r\n *\t2) Create a shadow casting light and name it optionally:\r\n *\t\tvar light = new DirectionalLight( 0xffffff, 1 );\r\n *\t\tlight.castShadow = true;\r\n *\t\tlight.name = 'Sun';\r\n *\r\n *\t3) Create a shadow map viewer for that light and set its size and position optionally:\r\n *\t\tvar shadowMapViewer = new ShadowMapViewer( light );\r\n *\t\tshadowMapViewer.size.set( 128, 128 );\t//width, height  default: 256, 256\r\n *\t\tshadowMapViewer.position.set( 10, 10 );\t//x, y in pixel\t default: 0, 0 (top left corner)\r\n *\r\n *\t4) Render the shadow map viewer in your render loop:\r\n *\t\tshadowMapViewer.render( renderer );\r\n *\r\n *\t5) Optionally: Update the shadow map viewer on window resize:\r\n *\t\tshadowMapViewer.updateForWindowResize();\r\n *\r\n *\t6) If you set the position or size members directly, you need to call shadowMapViewer.update();\r\n */\r\n\r\nvar ShadowMapViewer = function ( light ) {\r\n\r\n\t//- Internals\r\n\tvar scope = this;\r\n\tvar doRenderLabel = ( light.name !== undefined && light.name !== '' );\r\n\tvar userAutoClearSetting;\r\n\r\n\t//Holds the initial position and dimension of the HUD\r\n\tvar frame = {\r\n\t\tx: 10,\r\n\t\ty: 10,\r\n\t\twidth: 256,\r\n\t\theight: 256\r\n\t};\r\n\r\n\tvar camera = new OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, 1, 10 );\r\n\tcamera.position.set( 0, 0, 2 );\r\n\tvar scene = new Scene();\r\n\r\n\t//HUD for shadow map\r\n\tvar shader = UnpackDepthRGBAShader;\r\n\r\n\tvar uniforms = UniformsUtils.clone( shader.uniforms );\r\n\tvar material = new ShaderMaterial( {\r\n\t\tuniforms: uniforms,\r\n\t\tvertexShader: shader.vertexShader,\r\n\t\tfragmentShader: shader.fragmentShader\r\n\t} );\r\n\tvar plane = new PlaneBufferGeometry( frame.width, frame.height );\r\n\tvar mesh = new Mesh( plane, material );\r\n\r\n\tscene.add( mesh );\r\n\r\n\r\n\t//Label for light's name\r\n\tvar labelCanvas, labelMesh;\r\n\r\n\tif ( doRenderLabel ) {\r\n\r\n\t\tlabelCanvas = document.createElement( 'canvas' );\r\n\r\n\t\tvar context = labelCanvas.getContext( '2d' );\r\n\t\tcontext.font = 'Bold 20px Arial';\r\n\r\n\t\tvar labelWidth = context.measureText( light.name ).width;\r\n\t\tlabelCanvas.width = labelWidth;\r\n\t\tlabelCanvas.height = 25;\t//25 to account for g, p, etc.\r\n\r\n\t\tcontext.font = 'Bold 20px Arial';\r\n\t\tcontext.fillStyle = 'rgba( 255, 0, 0, 1 )';\r\n\t\tcontext.fillText( light.name, 0, 20 );\r\n\r\n\t\tvar labelTexture = new Texture( labelCanvas );\r\n\t\tlabelTexture.magFilter = LinearFilter;\r\n\t\tlabelTexture.minFilter = LinearFilter;\r\n\t\tlabelTexture.needsUpdate = true;\r\n\r\n\t\tvar labelMaterial = new MeshBasicMaterial( { map: labelTexture, side: DoubleSide } );\r\n\t\tlabelMaterial.transparent = true;\r\n\r\n\t\tvar labelPlane = new PlaneBufferGeometry( labelCanvas.width, labelCanvas.height );\r\n\t\tlabelMesh = new Mesh( labelPlane, labelMaterial );\r\n\r\n\t\tscene.add( labelMesh );\r\n\r\n\t}\r\n\r\n\r\n\tfunction resetPosition() {\r\n\r\n\t\tscope.position.set( scope.position.x, scope.position.y );\r\n\r\n\t}\r\n\r\n\t//- API\r\n\t// Set to false to disable displaying this shadow map\r\n\tthis.enabled = true;\r\n\r\n\t// Set the size of the displayed shadow map on the HUD\r\n\tthis.size = {\r\n\t\twidth: frame.width,\r\n\t\theight: frame.height,\r\n\t\tset: function ( width, height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tmesh.scale.set( this.width / frame.width, this.height / frame.height, 1 );\r\n\r\n\t\t\t//Reset the position as it is off when we scale stuff\r\n\t\t\tresetPosition();\r\n\r\n\t\t}\r\n\t};\r\n\r\n\t// Set the position of the displayed shadow map on the HUD\r\n\tthis.position = {\r\n\t\tx: frame.x,\r\n\t\ty: frame.y,\r\n\t\tset: function ( x, y ) {\r\n\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t\tvar width = scope.size.width;\r\n\t\t\tvar height = scope.size.height;\r\n\r\n\t\t\tmesh.position.set( - window.innerWidth / 2 + width / 2 + this.x, window.innerHeight / 2 - height / 2 - this.y, 0 );\r\n\r\n\t\t\tif ( doRenderLabel ) labelMesh.position.set( mesh.position.x, mesh.position.y - scope.size.height / 2 + labelCanvas.height / 2, 0 );\r\n\r\n\t\t}\r\n\t};\r\n\r\n\tthis.render = function ( renderer ) {\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\t//Because a light's .shadowMap is only initialised after the first render pass\r\n\t\t\t//we have to make sure the correct map is sent into the shader, otherwise we\r\n\t\t\t//always end up with the scene's first added shadow casting light's shadowMap\r\n\t\t\t//in the shader\r\n\t\t\t//See: https://github.com/mrdoob/three.js/issues/5932\r\n\t\t\tuniforms.tDiffuse.value = light.shadow.map.texture;\r\n\r\n\t\t\tuserAutoClearSetting = renderer.autoClear;\r\n\t\t\trenderer.autoClear = false; // To allow render overlay\r\n\t\t\trenderer.clearDepth();\r\n\t\t\trenderer.render( scene, camera );\r\n\t\t\trenderer.autoClear = userAutoClearSetting;\t//Restore user's setting\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.updateForWindowResize = function () {\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\t camera.left = window.innerWidth / - 2;\r\n\t\t\t camera.right = window.innerWidth / 2;\r\n\t\t\t camera.top = window.innerHeight / 2;\r\n\t\t\t camera.bottom = window.innerHeight / - 2;\r\n\t\t\t camera.updateProjectionMatrix();\r\n\r\n\t\t\t this.update();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.update = function () {\r\n\r\n\t\tthis.position.set( this.position.x, this.position.y );\r\n\t\tthis.size.set( this.size.width, this.size.height );\r\n\r\n\t};\r\n\r\n\t//Force an update to set position/size\r\n\tthis.update();\r\n\r\n};\r\n\r\nShadowMapViewer.prototype.constructor = ShadowMapViewer;\r\n\r\nexport { ShadowMapViewer };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/utils/ShadowMapViewer.js"],"sourceRoot":""}