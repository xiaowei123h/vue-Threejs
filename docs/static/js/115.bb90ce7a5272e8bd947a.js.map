{"version":3,"sources":["webpack:///src/views/multiple/webglMultipleCanvasesComplex.vue","webpack:///./src/views/multiple/webglMultipleCanvasesComplex.vue?8383","webpack:///./src/views/multiple/webglMultipleCanvasesComplex.vue"],"names":["webglMultipleCanvasesComplex","data","views","scene","renderer","mouseX","mouseY","windowHalfX","windowHalfY","mounted","this","$webglInnerWidth","window","innerHeight","init","animate","methods","View","canvas","fullWidth","fullHeight","viewX","viewY","viewWidth","viewHeight","THREE","width","devicePixelRatio","height","context","getContext","camera","PerspectiveCamera","setViewOffset","position","z","render","x","y","lookAt","setViewport","drawImage","domElement","canvas1","document","getElementById","canvas2","canvas3","$THREE","Scene","background","Color","WebGLRenderer","antialias","setPixelRatio","setSize","push","clientWidth","clientHeight","light","DirectionalLight","set","normalize","add","createElement","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","shadowMesh","shadowTexture","CanvasTexture","shadowMaterial","MeshBasicMaterial","map","shadowGeo","PlaneBufferGeometry","Mesh","rotation","Math","PI","geometry1","IcosahedronBufferGeometry","count","attributes","setAttribute","BufferAttribute","Float32Array","geometry2","clone","geometry3","color","positions1","positions2","positions3","colors1","colors2","colors3","i","setHSL","getY","setXYZ","r","g","b","setRGB","material","MeshPhongMaterial","flatShading","vertexColors","shininess","wireframeMaterial","wireframe","transparent","mesh","addEventListener","onDocumentMouseMove","event","clientX","clientY","length","requestAnimationFrame","multiple_webglMultipleCanvasesComplex","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/115.bb90ce7a5272e8bd947a.js","sourcesContent":["<template>\r\n    <div class=\"webglMultipleCanvasesComplex-container\">\r\n        <div id=\"container\">\r\n\t\t\t<canvas id=\"canvas1\"></canvas>\r\n\t\t\t<canvas id=\"canvas2\"></canvas>\r\n\t\t\t<canvas id=\"canvas3\"></canvas>\r\n\t\t</div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - multiple canvases - complex</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            views: [],\r\n            scene: null,\r\n            renderer: null,\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n\t\t\twindowHalfX: null,\r\n\t\t\twindowHalfY: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.windowHalfX = this.$webglInnerWidth / 2\r\n        this.windowHalfY = window.innerHeight / 2\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        View(canvas, fullWidth, fullHeight, viewX, viewY, viewWidth, viewHeight, THREE, scene, renderer) {\r\n            canvas.width = viewWidth * window.devicePixelRatio\r\n            canvas.height = viewHeight * window.devicePixelRatio\r\n            var context = canvas.getContext('2d')\r\n            var camera = new THREE.PerspectiveCamera(20, viewWidth / viewHeight, 1, 10000)\r\n            camera.setViewOffset(fullWidth, fullHeight, viewX, viewY, viewWidth, viewHeight)\r\n            camera.position.z = 1800\r\n            this.render = (mouseX, mouseY) => {\r\n                camera.position.x += (mouseX - camera.position.x) * 0.05\r\n                camera.position.y += (- mouseY - camera.position.y) * 0.05\r\n                camera.lookAt(scene.position)\r\n                renderer.setViewport(0, fullHeight - viewHeight, viewWidth, viewHeight)\r\n                renderer.render(scene, camera)\r\n                context.drawImage(renderer.domElement, 0, 0)\r\n            }\r\n        },\r\n        init() {\r\n            var canvas1 = document.getElementById('canvas1')\r\n            var canvas2 = document.getElementById('canvas2')\r\n            var canvas3 = document.getElementById('canvas3')\r\n            var fullWidth = 550\r\n            var fullHeight = 600\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xffffff)\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(fullWidth, fullHeight)\r\n            this.views.push(new this.View(canvas1, fullWidth, fullHeight, 0, 0, canvas1.clientWidth, canvas1.clientHeight, this.$THREE, this.scene, this.renderer))\r\n            this.views.push(new this.View(canvas2, fullWidth, fullHeight, 150, 200, canvas2.clientWidth, canvas2.clientHeight, this.$THREE, this.scene, this.renderer))\r\n            this.views.push(new this.View(canvas3, fullWidth, fullHeight, 75, 300, canvas3.clientWidth, canvas3.clientHeight, this.$THREE, this.scene, this.renderer))\r\n            //\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(0, 0, 1).normalize()\r\n            this.scene.add(light)\r\n            // shadow\r\n            var canvas = document.createElement('canvas')\r\n            canvas.width = 128\r\n            canvas.height = 128\r\n            var context = canvas.getContext('2d')\r\n            var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2)\r\n            gradient.addColorStop(0.1, 'rgba(210,210,210,1)')\r\n            gradient.addColorStop(1, 'rgba(255,255,255,1)')\r\n            context.fillStyle = gradient\r\n            context.fillRect(0, 0, canvas.width, canvas.height)\r\n            var shadowTexture = new this.$THREE.CanvasTexture(canvas)\r\n            var shadowMaterial = new this.$THREE.MeshBasicMaterial({ map: shadowTexture })\r\n            var shadowGeo = new this.$THREE.PlaneBufferGeometry(300, 300, 1, 1)\r\n            var shadowMesh\r\n            shadowMesh = new this.$THREE.Mesh(shadowGeo, shadowMaterial)\r\n            shadowMesh.position.y = - 250\r\n            shadowMesh.rotation.x = - Math.PI / 2\r\n            this.scene.add(shadowMesh)\r\n            shadowMesh = new this.$THREE.Mesh(shadowGeo, shadowMaterial)\r\n            shadowMesh.position.x = - 400\r\n            shadowMesh.position.y = - 250\r\n            shadowMesh.rotation.x = - Math.PI / 2\r\n            this.scene.add(shadowMesh)\r\n            shadowMesh = new this.$THREE.Mesh(shadowGeo, shadowMaterial)\r\n            shadowMesh.position.x = 400\r\n            shadowMesh.position.y = - 250\r\n            shadowMesh.rotation.x = - Math.PI / 2\r\n            this.scene.add(shadowMesh)\r\n            var radius = 200\r\n            var geometry1 = new this.$THREE.IcosahedronBufferGeometry(radius, 1)\r\n            var count = geometry1.attributes.position.count\r\n            geometry1.setAttribute('color', new this.$THREE.BufferAttribute(new Float32Array(count * 3), 3))\r\n            var geometry2 = geometry1.clone()\r\n            var geometry3 = geometry1.clone()\r\n            var color = new this.$THREE.Color()\r\n            var positions1 = geometry1.attributes.position\r\n            var positions2 = geometry2.attributes.position\r\n            var positions3 = geometry3.attributes.position\r\n            var colors1 = geometry1.attributes.color\r\n            var colors2 = geometry2.attributes.color\r\n            var colors3 = geometry3.attributes.color\r\n            for (var i = 0; i < count; i ++) {\r\n                color.setHSL((positions1.getY(i) / radius + 1) / 2, 1.0, 0.5)\r\n                colors1.setXYZ(i, color.r, color.g, color.b)\r\n                color.setHSL(0, (positions2.getY(i) / radius + 1) / 2, 0.5)\r\n                colors2.setXYZ(i, color.r, color.g, color.b)\r\n                color.setRGB(1, 0.8 - (positions3.getY(i) / radius + 1) / 2, 0)\r\n                colors3.setXYZ(i, color.r, color.g, color.b)\r\n            }\r\n            var material = new this.$THREE.MeshPhongMaterial({\r\n                color: 0xffffff,\r\n                flatShading: true,\r\n                vertexColors: true,\r\n                shininess: 0\r\n            })\r\n            var wireframeMaterial = new this.$THREE.MeshBasicMaterial({ color: 0x000000, wireframe: true, transparent: true })\r\n            var mesh = new this.$THREE.Mesh(geometry1, material)\r\n            var wireframe = new this.$THREE.Mesh(geometry1, wireframeMaterial)\r\n            mesh.add(wireframe)\r\n            mesh.position.x = - 400\r\n            mesh.rotation.x = - 1.87\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry2, material)\r\n            wireframe = new this.$THREE.Mesh(geometry2, wireframeMaterial)\r\n            mesh.add(wireframe)\r\n            mesh.position.x = 400\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry3, material)\r\n            wireframe = new this.$THREE.Mesh(geometry3, wireframeMaterial)\r\n            mesh.add(wireframe)\r\n            this.scene.add(mesh)\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false)\r\n        },\r\n        onDocumentMouseMove(event) {\r\n            this.mouseX = event.clientX - this.windowHalfX\r\n            this.mouseY = event.clientY - this.windowHalfY\r\n        },\r\n        animate() {\r\n            for (var i = 0; i < this.views.length; ++ i) {\r\n                this.views[ i ].render(this.mouseX, this.mouseY)\r\n            }\r\n            requestAnimationFrame(this.animate)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMultipleCanvasesComplex-container {\r\n    width: 100%;\r\n    background-color: #fff;\r\n}\r\n#info {\r\n    color: #444;\r\n    margin-left: 0;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n#canvas1, #canvas2, #canvas3 {\r\n    position: relative;\r\n    display: block;\r\n    outline: 1px solid red;\r\n}\r\n#canvas1 {\r\n    width: 300px;\r\n    height: 200px;\r\n}\r\n#canvas2 {\r\n    width: 400px;\r\n    height: 100px;\r\n    left: 150px;\r\n}\r\n#canvas3 {\r\n    width: 200px;\r\n    height: 300px;\r\n    left: 75px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/multiple/webglMultipleCanvasesComplex.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMultipleCanvasesComplex-container\"},[_c('div',{attrs:{\"id\":\"container\"}},[_c('canvas',{attrs:{\"id\":\"canvas1\"}}),_vm._v(\" \"),_c('canvas',{attrs:{\"id\":\"canvas2\"}}),_vm._v(\" \"),_c('canvas',{attrs:{\"id\":\"canvas3\"}})]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - multiple canvases - complex\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a7b48be6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/multiple/webglMultipleCanvasesComplex.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a7b48be6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMultipleCanvasesComplex.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMultipleCanvasesComplex.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMultipleCanvasesComplex.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a7b48be6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMultipleCanvasesComplex.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a7b48be6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/multiple/webglMultipleCanvasesComplex.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}