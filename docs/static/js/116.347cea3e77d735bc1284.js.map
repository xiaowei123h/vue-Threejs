{"version":3,"sources":["webpack:///src/views/raymarching/webglRaymarchingReflect.vue","webpack:///./src/views/raymarching/webglRaymarchingReflect.vue?8892","webpack:///./src/views/raymarching/webglRaymarchingReflect.vue"],"names":["webglRaymarchingReflect","data","fragmentShader","vertexShader","dolly","camera","scene","renderer","geometry","material","mesh","stats","clock","canvas","config","gui","mounted","_this","this","document","querySelector","saveImage","render","window","open","toDataURL","resolution","init","beforeDestroy","destroy","methods","$THREE","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","addEventListener","onWindowResize","Scene","Group","add","Clock","PerspectiveCamera","width","height","position","z","PlaneBufferGeometry","RawShaderMaterial","uniforms","value","Vector2","cameraWorldMatrix","matrixWorld","cameraProjectionMatrixInverse","Matrix4","copy","projectionMatrixInverse","Mesh","frustumCulled","OrbitControls","enableZoom","dat_gui_module","name","onChange","$Stats","dom","style","left","getElementsByClassName","appendChild","innerWidth","innerHeight","aspect","updateProjectionMatrix","set","begin","elapsedTime","getElapsedTime","end","requestAnimationFrame","raymarching_webglRaymarchingReflect","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/116.347cea3e77d735bc1284.js","sourcesContent":["<template>\r\n    <div class=\"webglRaymarchingReflect-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl raymarching example<br/>\r\n\t\t\treflect by <a href=\"https://github.com/gam0022\" target=\"_blank\" rel=\"noopener\">gam0022</a> (<a href=\"http://qiita.com/gam0022/items/03699a07e4a4b5f2d41f\" target=\"_blank\" rel=\"noopener\">article</a>)\r\n\t\t</div>\r\n\t\t<div id=\"container\">\r\n\t\t\t<canvas id=\"canvas\"></canvas>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            fragmentShader: null,\r\n            vertexShader: null,\r\n            dolly: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            geometry: null,\r\n            material: null,\r\n            mesh: null,\r\n            stats: null,\r\n            clock: null,\r\n\t\t\tcanvas: null,\r\n            config: null,\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fragmentShader = `\r\n            precision highp float;\r\n\t\t\tuniform vec2 resolution;\r\n\t\t\tuniform mat4 viewMatrix;\r\n\t\t\tuniform vec3 cameraPosition;\r\n\t\t\tuniform mat4 cameraWorldMatrix;\r\n\t\t\tuniform mat4 cameraProjectionMatrixInverse;\r\n\t\t\tconst float EPS = 0.01;\r\n\t\t\tconst float OFFSET = EPS * 100.0;\r\n\t\t\tconst vec3 lightDir = vec3(-0.48666426339228763, 0.8111071056538127, -0.3244428422615251);\r\n\t\t\t// distance functions\r\n\t\t\tvec3 opRep(vec3 p, float interval) {\r\n\t\t\t\tvec2 q = mod(p.xz, interval) - interval * 0.5;\r\n\t\t\t\treturn vec3(q.x, p.y, q.y);\r\n\t\t\t}\r\n\t\t\tfloat sphereDist(vec3 p, float r) {\r\n\t\t\t\treturn length(opRep(p, 3.0)) - r;\r\n\t\t\t}\r\n\t\t\tfloat floorDist(vec3 p){\r\n\t\t\t\treturn dot(p, vec3(0.0, 1.0, 0.0)) + 1.0;\r\n\t\t\t}\r\n\t\t\tvec4 minVec4(vec4 a, vec4 b) {\r\n\t\t\t\treturn (a.a < b.a) ? a : b;\r\n\t\t\t}\r\n\t\t\tfloat checkeredPattern(vec3 p) {\r\n\t\t\t\tfloat u = 1.0 - floor(mod(p.x, 2.0));\r\n\t\t\t\tfloat v = 1.0 - floor(mod(p.z, 2.0));\r\n\t\t\t\tif ((u == 1.0 && v < 1.0) || (u < 1.0 && v == 1.0)) {\r\n\t\t\t\t\treturn 0.2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 1.0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvec3 hsv2rgb(vec3 c) {\r\n\t\t\t\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\r\n\t\t\t\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\n\t\t\t\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n\t\t\t}\r\n\t\t\tfloat sceneDist(vec3 p) {\r\n\t\t\t\treturn min(\r\n\t\t\t\t\tsphereDist(p, 1.0),\r\n\t\t\t\t\tfloorDist(p)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tvec4 sceneColor(vec3 p) {\r\n\t\t\t\treturn minVec4(\r\n\t\t\t\t\t// 3 * 6 / 2 = 9\r\n\t\t\t\t\tvec4(hsv2rgb(vec3((p.z + p.x) / 9.0, 1.0, 1.0)), sphereDist(p, 1.0)),\r\n\t\t\t\t\tvec4(vec3(0.5) * checkeredPattern(p), floorDist(p))\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tvec3 getNormal(vec3 p) {\r\n\t\t\t\treturn normalize(vec3(\r\n\t\t\t\t\tsceneDist(p + vec3(EPS, 0.0, 0.0)) - sceneDist(p + vec3(-EPS, 0.0, 0.0)),\r\n\t\t\t\t\tsceneDist(p + vec3(0.0, EPS, 0.0)) - sceneDist(p + vec3(0.0, -EPS, 0.0)),\r\n\t\t\t\t\tsceneDist(p + vec3(0.0, 0.0, EPS)) - sceneDist(p + vec3(0.0, 0.0, -EPS))\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t\tfloat getShadow(vec3 ro, vec3 rd) {\r\n\t\t\t\tfloat h = 0.0;\r\n\t\t\t\tfloat c = 0.0;\r\n\t\t\t\tfloat r = 1.0;\r\n\t\t\t\tfloat shadowCoef = 0.5;\r\n\t\t\t\tfor (float t = 0.0; t < 50.0; t++) {\r\n\t\t\t\t\th = sceneDist(ro + rd * c);\r\n\t\t\t\t\tif (h < EPS) return shadowCoef;\r\n\t\t\t\t\tr = min(r, h * 16.0 / c);\r\n\t\t\t\t\tc += h;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1.0 - shadowCoef + r * shadowCoef;\r\n\t\t\t}\r\n\t\t\tvec3 getRayColor(vec3 origin, vec3 ray, out vec3 pos, out vec3 normal, out bool hit) {\r\n\t\t\t\t// marching loop\r\n\t\t\t\tfloat dist;\r\n\t\t\t\tfloat depth = 0.0;\r\n\t\t\t\tpos = origin;\r\n\t\t\t\tfor (int i = 0; i < 64; i++){\r\n\t\t\t\t\tdist = sceneDist(pos);\r\n\t\t\t\t\tdepth += dist;\r\n\t\t\t\t\tpos = origin + depth * ray;\r\n\t\t\t\t\tif (abs(dist) < EPS) break;\r\n\t\t\t\t}\r\n\t\t\t\t// hit check and calc color\r\n\t\t\t\tvec3 color;\r\n\t\t\t\tif (abs(dist) < EPS) {\r\n\t\t\t\t\tnormal = getNormal(pos);\r\n\t\t\t\t\tfloat diffuse = clamp(dot(lightDir, normal), 0.1, 1.0);\r\n\t\t\t\t\tfloat specular = pow(clamp(dot(reflect(lightDir, normal), ray), 0.0, 1.0), 10.0);\r\n\t\t\t\t\tfloat shadow = getShadow(pos + normal * OFFSET, lightDir);\r\n\t\t\t\t\tcolor = (sceneColor(pos).rgb * diffuse + vec3(0.8) * specular) * max(0.5, shadow);\r\n\t\t\t\t\thit = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcolor = vec3(0.0);\r\n\t\t\t\t}\r\n\t\t\t\treturn color - pow(clamp(0.05 * depth, 0.0, 0.6), 2.0);\r\n\t\t\t}\r\n\t\t\tvoid main(void) {\r\n\t\t\t\t// screen position\r\n\t\t\t\tvec2 screenPos = (gl_FragCoord.xy * 2.0 - resolution) / resolution;\r\n\t\t\t\t// ray direction in normalized device coordinate\r\n\t\t\t\tvec4 ndcRay = vec4(screenPos.xy, 1.0, 1.0);\r\n\t\t\t\t// convert ray direction from normalized device coordinate to world coordinate\r\n\t\t\t\tvec3 ray = (cameraWorldMatrix * cameraProjectionMatrixInverse * ndcRay).xyz;\r\n\t\t\t\tray = normalize(ray);\r\n\t\t\t\t// camera position\r\n\t\t\t\tvec3 cPos = cameraPosition;\r\n\t\t\t\t// cast ray\r\n\t\t\t\tvec3 color = vec3(0.0);\r\n\t\t\t\tvec3 pos, normal;\r\n\t\t\t\tbool hit;\r\n\t\t\t\tfloat alpha = 1.0;\r\n\t\t\t\tfor (int i = 0; i < 3; i++) {\r\n\t\t\t\t\tcolor += alpha * getRayColor(cPos, ray, pos, normal, hit);\r\n\t\t\t\t\talpha *= 0.3;\r\n\t\t\t\t\tray = normalize(reflect(ray, normal));\r\n\t\t\t\t\tcPos = pos + normal * OFFSET;\r\n\t\t\t\t\tif (!hit) break;\r\n\t\t\t\t}\r\n\t\t\t\tgl_FragColor = vec4(color, 1.0);\r\n            }`\r\n        this.vertexShader = `\r\n            attribute vec3 position;\r\n\t\t\tvoid main(void) {\r\n\t\t\t\tgl_Position = vec4(position, 1.0);\r\n            }`\r\n        this.canvas = document.querySelector('#canvas')\r\n        this.config = {\r\n            saveImage: () => {\r\n                this.renderer.render(this.scene, this.camera)\r\n                window.open(this.canvas.toDataURL())\r\n            },\r\n            resolution: '512'\r\n        }\r\n        this.init()\r\n\t\tthis.render()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer({ canvas: this.canvas })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.config.resolution, this.config.resolution)\r\n            window.addEventListener('resize', this.onWindowResize)\r\n            // this.$THREE.Scene\r\n            this.scene = new this.$THREE.Scene()\r\n            this.dolly = new this.$THREE.Group()\r\n            this.scene.add(this.dolly)\r\n            this.clock = new this.$THREE.Clock()\r\n            this.camera = new this.$THREE.PerspectiveCamera(60, this.canvas.width / this.canvas.height, 1, 2000)\r\n            this.camera.position.z = 4\r\n            this.dolly.add(this.camera)\r\n            this.geometry = new this.$THREE.PlaneBufferGeometry(2.0, 2.0)\r\n            this.material = new this.$THREE.RawShaderMaterial({\r\n                uniforms: {\r\n                    resolution: { value: new this.$THREE.Vector2(this.canvas.width, this.canvas.height) },\r\n                    cameraWorldMatrix: { value: this.camera.matrixWorld },\r\n                    cameraProjectionMatrixInverse: { value: new this.$THREE.Matrix4().copy(this.camera.projectionMatrixInverse) }\r\n                },\r\n                vertexShader: this.vertexShader,\r\n                fragmentShader: this.fragmentShader\r\n            })\r\n            this.mesh = new this.$THREE.Mesh(this.geometry, this.material)\r\n            this.mesh.frustumCulled = false\r\n            this.scene.add(this.mesh)\r\n            // Controls\r\n            var controls = new OrbitControls(this.camera, this.canvas)\r\n            controls.enableZoom = false\r\n            // GUI\r\n            this.gui = new GUI()\r\n            this.gui.add(this.config, 'saveImage').name('Save Image')\r\n            this.gui.add(this.config, 'resolution', [ '256', '512', '800', 'full' ]).name('Resolution').onChange(this.onWindowResize)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglRaymarchingReflect-container')[0].appendChild(this.stats.dom)\r\n        },\r\n        onWindowResize() {\r\n            if (this.config.resolution === 'full') {\r\n                this.renderer.setSize(window.innerWidth - 281, window.innerHeight)\r\n            } else {\r\n                this.renderer.setSize(this.config.resolution, this.config.resolution)\r\n            }\r\n            this.camera.aspect = this.canvas.width / this.canvas.height\r\n            this.camera.updateProjectionMatrix()\r\n            this.material.uniforms.resolution.value.set(this.canvas.width, this.canvas.height)\r\n            this.material.uniforms.cameraProjectionMatrixInverse.value.copy(this.camera.projectionMatrixInverse)\r\n        },\r\n        render() {\r\n            this.stats.begin()\r\n            var elapsedTime = this.clock.getElapsedTime()\r\n            this.dolly.position.z = - elapsedTime\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.end()\r\n            requestAnimationFrame(this.render)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglRaymarchingReflect-container {\r\n    width: 100%;\r\n}\r\n#container {\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/raymarching/webglRaymarchingReflect.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglRaymarchingReflect-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl raymarching example\"),_c('br'),_vm._v(\"\\n\\t\\t\\treflect by \"),_c('a',{attrs:{\"href\":\"https://github.com/gam0022\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"gam0022\")]),_vm._v(\" (\"),_c('a',{attrs:{\"href\":\"http://qiita.com/gam0022/items/03699a07e4a4b5f2d41f\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"article\")]),_vm._v(\")\\n\\t\\t\")]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container\"}},[_c('canvas',{attrs:{\"id\":\"canvas\"}})])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6cbb1fc3\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/raymarching/webglRaymarchingReflect.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6cbb1fc3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglRaymarchingReflect.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglRaymarchingReflect.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglRaymarchingReflect.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6cbb1fc3\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglRaymarchingReflect.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6cbb1fc3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/raymarching/webglRaymarchingReflect.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}