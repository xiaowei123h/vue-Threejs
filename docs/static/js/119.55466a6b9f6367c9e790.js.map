{"version":3,"sources":["webpack:///src/views/materials/webglMaterialsMatcap.vue","webpack:///./src/views/materials/webglMaterialsMatcap.vue?fb62","webpack:///./src/views/materials/webglMaterialsMatcap.vue"],"names":["webglMaterialsMatcap","data","mesh","renderer","scene","camera","API","color","exposure","gui","mounted","this","init","beforeDestroy","destroy","methods","_this","$THREE","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","Scene","PerspectiveCamera","position","set","controls","OrbitControls","addEventListener","render","enableZoom","enablePan","manager","LoadingManager","matcap","EXRLoader","setDataType","UnsignedByteType","load","normalmap","TextureLoader","GLTFLoader","gltf","children","y","material","MeshMatcapMaterial","Color","setHex","convertSRGBToLinear","normalMap","add","dat_gui_module","addColor","listen","onChange","style","webkitUserSelect","initDragAndDrop","onWindowResize","$onWindowResize","updateMatcap","texture","dispose","needsUpdate","handleJPG","event","that","img","Image","onload","Texture","target","encoding","src","result","handleEXR","contents","loader","texData","parse","DataTexture","image","width","height","format","type","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","FloatType","HalfFloatType","LinearEncoding","LinearFilter","loadFile","file","reader","name","split","pop","toLowerCase","FileReader","readAsArrayBuffer","readAsDataURL","preventDefault","dataTransfer","dropEffect","files","materials_webglMaterialsMatcap","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/119.55466a6b9f6367c9e790.js","sourcesContent":["<template>\r\n    <div class=\"webglMaterialsMatcap-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl materials matcap<br />\r\n\t\t\tDrag-and-drop JPG, PNG, or EXR MatCap image files<br/>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { GLTFLoader } from '@/components/jsm/loaders/GLTFLoader.js'\r\nimport { EXRLoader } from '@/components/jsm/loaders/EXRLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            mesh: null,\r\n            renderer: null,\r\n            scene: null,\r\n            camera: null,\r\n\t\t\tAPI: {\r\n\t\t\t\tcolor: 0xffffff, // sRGB\r\n\t\t\t\texposure: 1.0\r\n            },\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            // renderer\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglMaterialsMatcap-container')[0].appendChild(this.renderer.domElement)\r\n            // tone mapping\r\n            this.renderer.toneMapping = this.$THREE.ACESFilmicToneMapping\r\n            this.renderer.toneMappingExposure = this.API.exposure\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            // scene\r\n            this.scene = new this.$THREE.Scene()\r\n            // camera\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 100)\r\n            this.camera.position.set(0, 0, 13)\r\n            // controls\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.addEventListener('change', this.render)\r\n            controls.enableZoom = false\r\n            controls.enablePan = false\r\n            // manager\r\n            var manager = new this.$THREE.LoadingManager(this.render)\r\n            // matcap\r\n            var loaderEXR = new EXRLoader(manager)\r\n                .setDataType(this.$THREE.UnsignedByteType) // default: FloatType\r\n            var matcap = loaderEXR.load('static/textures/matcaps/040full.exr')\r\n            // normalmap\r\n            var loader = new this.$THREE.TextureLoader(manager)\r\n            var normalmap = loader.load('static/models/gltf/LeePerrySmith/Infinite-Level_02_Tangent_SmoothUV.jpg')\r\n            // model\r\n            new GLTFLoader(manager).load('static/models/gltf/LeePerrySmith/LeePerrySmith.glb', (gltf) => {\r\n                this.mesh = gltf.scene.children[ 0 ]\r\n                this.mesh.position.y = - 0.25\r\n                this.mesh.material = new this.$THREE.MeshMatcapMaterial({\r\n                    color: new this.$THREE.Color().setHex(this.API.color).convertSRGBToLinear(),\r\n                    matcap: matcap,\r\n                    normalMap: normalmap\r\n                })\r\n                this.scene.add(this.mesh)\r\n            })\r\n            // gui\r\n            this.gui = new GUI()\r\n            this.gui.addColor(this.API, 'color')\r\n                .listen()\r\n                .onChange(() => {\r\n                    this.mesh.material.color.set(this.API.color).convertSRGBToLinear()\r\n                    this.render()\r\n                })\r\n            this.gui.add(this.API, 'exposure', 0, 2)\r\n                .onChange(() => {\r\n                    this.renderer.toneMappingExposure = this.API.exposure\r\n                    this.render()\r\n                })\r\n            this.gui.domElement.style.webkitUserSelect = 'none'\r\n            // drag 'n drop\r\n            this.initDragAndDrop()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        updateMatcap(texture) {\r\n            if (this.mesh.material.matcap) {\r\n                this.mesh.material.matcap.dispose()\r\n            }\r\n            this.mesh.material.matcap = texture\r\n            this.texture.needsUpdate = true\r\n            this.mesh.material.needsUpdate = true // because the encoding can change\r\n            this.render()\r\n        },\r\n        handleJPG(event) { // PNG, too\r\n            var that = this\r\n            function imgCallback(event) {\r\n                var texture = new this.$THREE.Texture(event.target)\r\n                texture.encoding = this.$THREE.sRGBEncoding\r\n                that.updateMatcap(texture)\r\n            }\r\n            var img = new Image()\r\n            img.onload = imgCallback\r\n            img.src = event.target.result\r\n        },\r\n        handleEXR(event) {\r\n            var contents = event.target.result\r\n            var loader = new EXRLoader()\r\n            loader.setDataType(this.$THREE.UnsignedByteType) // default: FloatType\r\n            var texData = loader.parse(contents)\r\n            var texture = new this.$THREE.DataTexture()\r\n            texture.image.width = texData.width\r\n            texture.image.height = texData.height\r\n            texture.image.data = texData.data\r\n            texture.format = texData.format\r\n            texture.type = texData.type\r\n            switch (texture.type) {\r\n                case this.$THREE.UnsignedByteType:\r\n                    texture.encoding = this.$THREE.RGBEEncoding\r\n                    texture.minFilter = this.$THREE.NearestFilter\r\n                    texture.magFilter = this.$THREE.NearestFilter\r\n                    texture.generateMipmaps = false\r\n                    texture.flipY = false\r\n                    break\r\n                case this.$THREE.FloatType:\r\n                case this.$THREE.HalfFloatType:\r\n                    texture.encoding = this.$THREE.LinearEncoding\r\n                    texture.minFilter = this.$THREE.LinearFilter\r\n                    texture.magFilter = this.$THREE.LinearFilter\r\n                    texture.generateMipmaps = false\r\n                    texture.flipY = false\r\n                    break\r\n            }\r\n            this.updateMatcap(texture)\r\n        },\r\n        loadFile(file) {\r\n            var filename = file.name\r\n            var extension = filename.split('.').pop().toLowerCase()\r\n            if (extension === 'exr') {\r\n                var reader = new FileReader()\r\n                reader.addEventListener('load', (event) => {\r\n                    handleEXR(event)\r\n                }, false)\r\n                reader.readAsArrayBuffer(file)\r\n            } else { // 'jpg', 'png'\r\n                var reader = new FileReader()\r\n                reader.addEventListener('load', (event) => {\r\n                    handleJPG(event)\r\n                }, false)\r\n                reader.readAsDataURL(file)\r\n            }\r\n        },\r\n        initDragAndDrop() {\r\n            document.addEventListener('dragover', (event) => {\r\n                event.preventDefault()\r\n                event.dataTransfer.dropEffect = 'copy'\r\n            }, false)\r\n            document.addEventListener('drop', (event) => {\r\n                event.preventDefault()\r\n                loadFile(event.dataTransfer.files[ 0 ])\r\n            }, false)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsMatcap-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsMatcap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsMatcap-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl materials matcap\"),_c('br'),_vm._v(\"\\n\\t\\t\\tDrag-and-drop JPG, PNG, or EXR MatCap image files\"),_c('br')])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-60774430\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsMatcap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-60774430\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsMatcap.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsMatcap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsMatcap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-60774430\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsMatcap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-60774430\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsMatcap.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}