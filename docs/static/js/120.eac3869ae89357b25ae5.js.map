{"version":3,"sources":["webpack:///./src/components/jsm/loaders/DDSLoader.js","webpack:///./src/components/jsm/loaders/MTLLoader.js","webpack:///src/views/loader/webglLoaderObjMtl.vue","webpack:///./src/views/loader/webglLoaderObjMtl.vue?98b9","webpack:///./src/views/loader/webglLoaderObjMtl.vue"],"names":["DDSLoader","manager","CompressedTextureLoader","call","this","prototype","Object","assign","create","constructor","parse","buffer","loadMipmaps","dds","mipmaps","width","height","format","mipmapCount","fourCCToInt32","value","charCodeAt","loadARGBMip","dataOffset","dataLength","srcBuffer","Uint8Array","byteArray","dst","src","y","x","b","g","r","a","blockBytes","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","FOURCC_ETC1","header","Int32Array","console","error","fourCC","isRGBAUncompressed","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_ETC1_Format","String","fromCharCode","RGBAFormat","Math","max","caps2","isCubemap","faces","face","i","length","mipmap","data","push","MTLLoader","Loader","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","e","itemError","setMaterialOptions","materialOptions","lines","split","info","delimiter_pattern","materialsInfo","line","trim","charAt","pos","indexOf","key","substring","toLowerCase","name","ss","parseFloat","materialCreator","MaterialCreator","resourcePath","setCrossOrigin","crossOrigin","setManager","setMaterials","baseUrl","options","materials","materialsArray","nameLookup","side","FrontSide","wrap","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","preload","getIndex","materialName","getAsArray","index","undefined","createMaterial_","params","setMapForType","mapType","texParams","getTextureParams","map","loadTexture","test","repeat","copy","scale","offset","wrapS","wrapT","n","color","Color","fromArray","specular","emissive","transparent","shininess","opacity","invertTrProperty","MeshPhongMaterial","matParams","Vector2","items","bumpScale","splice","set","join","mapping","texture","DefaultLoadingManager","getHandler","TextureLoader","webglLoaderObjMtl","camera","scene","renderer","mouseX","mouseY","windowHalfX","windowHalfY","mounted","$webglInnerWidth","window","innerHeight","init","animate","methods","_this","container","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","position","z","Scene","ambientLight","AmbientLight","add","pointLight","PointLight","xhr","lengthComputable","percentComplete","loaded","total","log","round","LoadingManager","addHandler","DDSLoader_DDSLoader","MTLLoader_MTLLoader","OBJLoader","object","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","addEventListener","onDocumentMouseMove","onWindowResize","innerWidth","$onWindowResize","event","clientX","clientY","requestAnimationFrame","render","lookAt","loader_webglLoaderObjMtl","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/120.eac3869ae89357b25ae5.js","sourcesContent":["import {\r\n\tCompressedTextureLoader,\r\n\tRGBAFormat,\r\n\tRGBA_S3TC_DXT3_Format,\r\n\tRGBA_S3TC_DXT5_Format,\r\n\tRGB_ETC1_Format,\r\n\tRGB_S3TC_DXT1_Format\r\n} from \"@/components/build/three.module.js\";\r\n\r\n\r\nvar DDSLoader = function ( manager ) {\r\n\r\n\tCompressedTextureLoader.call( this, manager );\r\n\r\n};\r\n\r\nDDSLoader.prototype = Object.assign( Object.create( CompressedTextureLoader.prototype ), {\r\n\r\n\tconstructor: DDSLoader,\r\n\r\n\tparse: function ( buffer, loadMipmaps ) {\r\n\r\n\t\tvar dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\r\n\r\n\t\t// Adapted from @toji's DDS utils\r\n\t\t// https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\r\n\r\n\t\t// All values and structures referenced from:\r\n\t\t// http://msdn.microsoft.com/en-us/library/bb943991.aspx/\r\n\r\n\t\tvar DDS_MAGIC = 0x20534444;\r\n\r\n\t\t// var DDSD_CAPS = 0x1;\r\n\t\t// var DDSD_HEIGHT = 0x2;\r\n\t\t// var DDSD_WIDTH = 0x4;\r\n\t\t// var DDSD_PITCH = 0x8;\r\n\t\t// var DDSD_PIXELFORMAT = 0x1000;\r\n\t\tvar DDSD_MIPMAPCOUNT = 0x20000;\r\n\t\t// var DDSD_LINEARSIZE = 0x80000;\r\n\t\t// var DDSD_DEPTH = 0x800000;\r\n\r\n\t\t// var DDSCAPS_COMPLEX = 0x8;\r\n\t\t// var DDSCAPS_MIPMAP = 0x400000;\r\n\t\t// var DDSCAPS_TEXTURE = 0x1000;\r\n\r\n\t\tvar DDSCAPS2_CUBEMAP = 0x200;\r\n\t\tvar DDSCAPS2_CUBEMAP_POSITIVEX = 0x400;\r\n\t\tvar DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800;\r\n\t\tvar DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000;\r\n\t\tvar DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000;\r\n\t\tvar DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000;\r\n\t\tvar DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000;\r\n\t\t// var DDSCAPS2_VOLUME = 0x200000;\r\n\r\n\t\t// var DDPF_ALPHAPIXELS = 0x1;\r\n\t\t// var DDPF_ALPHA = 0x2;\r\n\t\tvar DDPF_FOURCC = 0x4;\r\n\t\t// var DDPF_RGB = 0x40;\r\n\t\t// var DDPF_YUV = 0x200;\r\n\t\t// var DDPF_LUMINANCE = 0x20000;\r\n\r\n\t\tfunction fourCCToInt32( value ) {\r\n\r\n\t\t\treturn value.charCodeAt( 0 ) +\r\n\t\t\t\t( value.charCodeAt( 1 ) << 8 ) +\r\n\t\t\t\t( value.charCodeAt( 2 ) << 16 ) +\r\n\t\t\t\t( value.charCodeAt( 3 ) << 24 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction int32ToFourCC( value ) {\r\n\r\n\t\t\treturn String.fromCharCode(\r\n\t\t\t\tvalue & 0xff,\r\n\t\t\t\t( value >> 8 ) & 0xff,\r\n\t\t\t\t( value >> 16 ) & 0xff,\r\n\t\t\t\t( value >> 24 ) & 0xff\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadARGBMip( buffer, dataOffset, width, height ) {\r\n\r\n\t\t\tvar dataLength = width * height * 4;\r\n\t\t\tvar srcBuffer = new Uint8Array( buffer, dataOffset, dataLength );\r\n\t\t\tvar byteArray = new Uint8Array( dataLength );\r\n\t\t\tvar dst = 0;\r\n\t\t\tvar src = 0;\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\t\t\tvar b = srcBuffer[ src ]; src ++;\r\n\t\t\t\t\tvar g = srcBuffer[ src ]; src ++;\r\n\t\t\t\t\tvar r = srcBuffer[ src ]; src ++;\r\n\t\t\t\t\tvar a = srcBuffer[ src ]; src ++;\r\n\t\t\t\t\tbyteArray[ dst ] = r; dst ++;\t//r\r\n\t\t\t\t\tbyteArray[ dst ] = g; dst ++;\t//g\r\n\t\t\t\t\tbyteArray[ dst ] = b; dst ++;\t//b\r\n\t\t\t\t\tbyteArray[ dst ] = a; dst ++;\t//a\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn byteArray;\r\n\r\n\t\t}\r\n\r\n\t\tvar FOURCC_DXT1 = fourCCToInt32( \"DXT1\" );\r\n\t\tvar FOURCC_DXT3 = fourCCToInt32( \"DXT3\" );\r\n\t\tvar FOURCC_DXT5 = fourCCToInt32( \"DXT5\" );\r\n\t\tvar FOURCC_ETC1 = fourCCToInt32( \"ETC1\" );\r\n\r\n\t\tvar headerLengthInt = 31; // The header length in 32 bit ints\r\n\r\n\t\t// Offsets into the header array\r\n\r\n\t\tvar off_magic = 0;\r\n\r\n\t\tvar off_size = 1;\r\n\t\tvar off_flags = 2;\r\n\t\tvar off_height = 3;\r\n\t\tvar off_width = 4;\r\n\r\n\t\tvar off_mipmapCount = 7;\r\n\r\n\t\tvar off_pfFlags = 20;\r\n\t\tvar off_pfFourCC = 21;\r\n\t\tvar off_RGBBitCount = 22;\r\n\t\tvar off_RBitMask = 23;\r\n\t\tvar off_GBitMask = 24;\r\n\t\tvar off_BBitMask = 25;\r\n\t\tvar off_ABitMask = 26;\r\n\r\n\t\t// var off_caps = 27;\r\n\t\tvar off_caps2 = 28;\r\n\t\t// var off_caps3 = 29;\r\n\t\t// var off_caps4 = 30;\r\n\r\n\t\t// Parse header\r\n\r\n\t\tvar header = new Int32Array( buffer, 0, headerLengthInt );\r\n\r\n\t\tif ( header[ off_magic ] !== DDS_MAGIC ) {\r\n\r\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Invalid magic number in DDS header.' );\r\n\t\t\treturn dds;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! header[ off_pfFlags ] & DDPF_FOURCC ) {\r\n\r\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code.' );\r\n\t\t\treturn dds;\r\n\r\n\t\t}\r\n\r\n\t\tvar blockBytes;\r\n\r\n\t\tvar fourCC = header[ off_pfFourCC ];\r\n\r\n\t\tvar isRGBAUncompressed = false;\r\n\r\n\t\tswitch ( fourCC ) {\r\n\r\n\t\t\tcase FOURCC_DXT1:\r\n\r\n\t\t\t\tblockBytes = 8;\r\n\t\t\t\tdds.format = RGB_S3TC_DXT1_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FOURCC_DXT3:\r\n\r\n\t\t\t\tblockBytes = 16;\r\n\t\t\t\tdds.format = RGBA_S3TC_DXT3_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FOURCC_DXT5:\r\n\r\n\t\t\t\tblockBytes = 16;\r\n\t\t\t\tdds.format = RGBA_S3TC_DXT5_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase FOURCC_ETC1:\r\n\r\n\t\t\t\tblockBytes = 8;\r\n\t\t\t\tdds.format = RGB_ETC1_Format;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tif ( header[ off_RGBBitCount ] === 32\r\n\t\t\t\t\t&& header[ off_RBitMask ] & 0xff0000\r\n\t\t\t\t\t&& header[ off_GBitMask ] & 0xff00\r\n\t\t\t\t\t&& header[ off_BBitMask ] & 0xff\r\n\t\t\t\t\t&& header[ off_ABitMask ] & 0xff000000 ) {\r\n\r\n\t\t\t\t\tisRGBAUncompressed = true;\r\n\t\t\t\t\tblockBytes = 64;\r\n\t\t\t\t\tdds.format = RGBAFormat;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC( fourCC ) );\r\n\t\t\t\t\treturn dds;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdds.mipmapCount = 1;\r\n\r\n\t\tif ( header[ off_flags ] & DDSD_MIPMAPCOUNT && loadMipmaps !== false ) {\r\n\r\n\t\t\tdds.mipmapCount = Math.max( 1, header[ off_mipmapCount ] );\r\n\r\n\t\t}\r\n\r\n\t\tvar caps2 = header[ off_caps2 ];\r\n\t\tdds.isCubemap = caps2 & DDSCAPS2_CUBEMAP ? true : false;\r\n\t\tif ( dds.isCubemap && (\r\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEX ) ||\r\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX ) ||\r\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEY ) ||\r\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY ) ||\r\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ ) ||\r\n\t\t\t! ( caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ )\r\n\t\t) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.DDSLoader.parse: Incomplete cubemap faces' );\r\n\t\t\treturn dds;\r\n\r\n\t\t}\r\n\r\n\t\tdds.width = header[ off_width ];\r\n\t\tdds.height = header[ off_height ];\r\n\r\n\t\tvar dataOffset = header[ off_size ] + 4;\r\n\r\n\t\t// Extract mipmaps buffers\r\n\r\n\t\tvar faces = dds.isCubemap ? 6 : 1;\r\n\r\n\t\tfor ( var face = 0; face < faces; face ++ ) {\r\n\r\n\t\t\tvar width = dds.width;\r\n\t\t\tvar height = dds.height;\r\n\r\n\t\t\tfor ( var i = 0; i < dds.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\tif ( isRGBAUncompressed ) {\r\n\r\n\t\t\t\t\tvar byteArray = loadARGBMip( buffer, dataOffset, width, height );\r\n\t\t\t\t\tvar dataLength = byteArray.length;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar dataLength = Math.max( 4, width ) / 4 * Math.max( 4, height ) / 4 * blockBytes;\r\n\t\t\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataLength );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar mipmap = { \"data\": byteArray, \"width\": width, \"height\": height };\r\n\t\t\t\tdds.mipmaps.push( mipmap );\r\n\r\n\t\t\t\tdataOffset += dataLength;\r\n\r\n\t\t\t\twidth = Math.max( width >> 1, 1 );\r\n\t\t\t\theight = Math.max( height >> 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn dds;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { DDSLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/DDSLoader.js","import {\r\n\tColor,\r\n\tDefaultLoadingManager,\r\n\tFileLoader,\r\n\tFrontSide,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMeshPhongMaterial,\r\n\tRepeatWrapping,\r\n\tTextureLoader,\r\n\tVector2\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Loads a Wavefront .mtl file specifying materials\r\n */\r\n\r\nvar MTLLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n};\r\n\r\nMTLLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: MTLLoader,\r\n\r\n\t/**\r\n\t * Loads and parses a MTL asset from a URL.\r\n\t *\r\n\t * @param {String} url - URL to the MTL file.\r\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\r\n\t * @param {Function} [onProgress] - Callback for download progress.\r\n\t * @param {Function} [onError] - Callback for download errors.\r\n\t *\r\n\t * @see setPath setResourcePath\r\n\t *\r\n\t * @note In order for relative texture references to resolve correctly\r\n\t * you must call setResourcePath() explicitly prior to load.\r\n\t */\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\r\n\t\tvar loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text, path ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetMaterialOptions: function ( value ) {\r\n\r\n\t\tthis.materialOptions = value;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Parses a MTL file.\r\n\t *\r\n\t * @param {String} text - Content of MTL file\r\n\t * @return {MTLLoader.MaterialCreator}\r\n\t *\r\n\t * @see setPath setResourcePath\r\n\t *\r\n\t * @note In order for relative texture references to resolve correctly\r\n\t * you must call setResourcePath() explicitly prior to parse.\r\n\t */\r\n\tparse: function ( text, path ) {\r\n\r\n\t\tvar lines = text.split( '\\n' );\r\n\t\tvar info = {};\r\n\t\tvar delimiter_pattern = /\\s+/;\r\n\t\tvar materialsInfo = {};\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tvar line = lines[ i ];\r\n\t\t\tline = line.trim();\r\n\r\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\r\n\r\n\t\t\t\t// Blank line or comment ignore\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar pos = line.indexOf( ' ' );\r\n\r\n\t\t\tvar key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\r\n\t\t\tkey = key.toLowerCase();\r\n\r\n\t\t\tvar value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\r\n\t\t\tvalue = value.trim();\r\n\r\n\t\t\tif ( key === 'newmtl' ) {\r\n\r\n\t\t\t\t// New material\r\n\r\n\t\t\t\tinfo = { name: value };\r\n\t\t\t\tmaterialsInfo[ value ] = info;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\r\n\r\n\t\t\t\t\tvar ss = value.split( delimiter_pattern, 3 );\r\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tinfo[ key ] = value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar materialCreator = new MTLLoader.MaterialCreator( this.resourcePath || path, this.materialOptions );\r\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\r\n\t\tmaterialCreator.setManager( this.manager );\r\n\t\tmaterialCreator.setMaterials( materialsInfo );\r\n\t\treturn materialCreator;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n/**\r\n * Create a new MTLLoader.MaterialCreator\r\n * @param baseUrl - Url relative to which textures are loaded\r\n * @param options - Set of options on how to construct the materials\r\n *                  side: Which side to apply the material\r\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\r\n *                  wrap: What type of wrapping to apply for textures\r\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\r\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\r\n *                                Default: false, assumed to be already normalized\r\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\r\n *                                  Default: false\r\n * @constructor\r\n */\r\n\r\nMTLLoader.MaterialCreator = function ( baseUrl, options ) {\r\n\r\n\tthis.baseUrl = baseUrl || '';\r\n\tthis.options = options;\r\n\tthis.materialsInfo = {};\r\n\tthis.materials = {};\r\n\tthis.materialsArray = [];\r\n\tthis.nameLookup = {};\r\n\r\n\tthis.side = ( this.options && this.options.side ) ? this.options.side : FrontSide;\r\n\tthis.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : RepeatWrapping;\r\n\r\n};\r\n\r\nMTLLoader.MaterialCreator.prototype = {\r\n\r\n\tconstructor: MTLLoader.MaterialCreator,\r\n\r\n\tcrossOrigin: 'anonymous',\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetManager: function ( value ) {\r\n\r\n\t\tthis.manager = value;\r\n\r\n\t},\r\n\r\n\tsetMaterials: function ( materialsInfo ) {\r\n\r\n\t\tthis.materialsInfo = this.convert( materialsInfo );\r\n\t\tthis.materials = {};\r\n\t\tthis.materialsArray = [];\r\n\t\tthis.nameLookup = {};\r\n\r\n\t},\r\n\r\n\tconvert: function ( materialsInfo ) {\r\n\r\n\t\tif ( ! this.options ) return materialsInfo;\r\n\r\n\t\tvar converted = {};\r\n\r\n\t\tfor ( var mn in materialsInfo ) {\r\n\r\n\t\t\t// Convert materials info into normalized form based on options\r\n\r\n\t\t\tvar mat = materialsInfo[ mn ];\r\n\r\n\t\t\tvar covmat = {};\r\n\r\n\t\t\tconverted[ mn ] = covmat;\r\n\r\n\t\t\tfor ( var prop in mat ) {\r\n\r\n\t\t\t\tvar save = true;\r\n\t\t\t\tvar value = mat[ prop ];\r\n\t\t\t\tvar lprop = prop.toLowerCase();\r\n\r\n\t\t\t\tswitch ( lprop ) {\r\n\r\n\t\t\t\t\tcase 'kd':\r\n\t\t\t\t\tcase 'ka':\r\n\t\t\t\t\tcase 'ks':\r\n\r\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\r\n\r\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\r\n\r\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\r\n\r\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// ignore\r\n\r\n\t\t\t\t\t\t\t\tsave = false;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( save ) {\r\n\r\n\t\t\t\t\tcovmat[ lprop ] = value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn converted;\r\n\r\n\t},\r\n\r\n\tpreload: function () {\r\n\r\n\t\tfor ( var mn in this.materialsInfo ) {\r\n\r\n\t\t\tthis.create( mn );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetIndex: function ( materialName ) {\r\n\r\n\t\treturn this.nameLookup[ materialName ];\r\n\r\n\t},\r\n\r\n\tgetAsArray: function () {\r\n\r\n\t\tvar index = 0;\r\n\r\n\t\tfor ( var mn in this.materialsInfo ) {\r\n\r\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\r\n\t\t\tthis.nameLookup[ mn ] = index;\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.materialsArray;\r\n\r\n\t},\r\n\r\n\tcreate: function ( materialName ) {\r\n\r\n\t\tif ( this.materials[ materialName ] === undefined ) {\r\n\r\n\t\t\tthis.createMaterial_( materialName );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.materials[ materialName ];\r\n\r\n\t},\r\n\r\n\tcreateMaterial_: function ( materialName ) {\r\n\r\n\t\t// Create material\r\n\r\n\t\tvar scope = this;\r\n\t\tvar mat = this.materialsInfo[ materialName ];\r\n\t\tvar params = {\r\n\r\n\t\t\tname: materialName,\r\n\t\t\tside: this.side\r\n\r\n\t\t};\r\n\r\n\t\tfunction resolveURL( baseUrl, url ) {\r\n\r\n\t\t\tif ( typeof url !== 'string' || url === '' )\r\n\t\t\t\treturn '';\r\n\r\n\t\t\t// Absolute URL\r\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t\treturn baseUrl + url;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setMapForType( mapType, value ) {\r\n\r\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\r\n\r\n\t\t\tvar texParams = scope.getTextureParams( value, params );\r\n\t\t\tvar map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\r\n\r\n\t\t\tmap.repeat.copy( texParams.scale );\r\n\t\t\tmap.offset.copy( texParams.offset );\r\n\r\n\t\t\tmap.wrapS = scope.wrap;\r\n\t\t\tmap.wrapT = scope.wrap;\r\n\r\n\t\t\tparams[ mapType ] = map;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var prop in mat ) {\r\n\r\n\t\t\tvar value = mat[ prop ];\r\n\t\t\tvar n;\r\n\r\n\t\t\tif ( value === '' ) continue;\r\n\r\n\t\t\tswitch ( prop.toLowerCase() ) {\r\n\r\n\t\t\t\t// Ns is material specular exponent\r\n\r\n\t\t\t\tcase 'kd':\r\n\r\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\r\n\r\n\t\t\t\t\tparams.color = new Color().fromArray( value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ks':\r\n\r\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\r\n\t\t\t\t\tparams.specular = new Color().fromArray( value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ke':\r\n\r\n\t\t\t\t\t// Emissive using RGB values\r\n\t\t\t\t\tparams.emissive = new Color().fromArray( value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_kd':\r\n\r\n\t\t\t\t\t// Diffuse texture map\r\n\r\n\t\t\t\t\tsetMapForType( \"map\", value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_ks':\r\n\r\n\t\t\t\t\t// Specular map\r\n\r\n\t\t\t\t\tsetMapForType( \"specularMap\", value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_ke':\r\n\r\n\t\t\t\t\t// Emissive map\r\n\r\n\t\t\t\t\tsetMapForType( \"emissiveMap\", value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'norm':\r\n\r\n\t\t\t\t\tsetMapForType( \"normalMap\", value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_bump':\r\n\t\t\t\tcase 'bump':\r\n\r\n\t\t\t\t\t// Bump texture map\r\n\r\n\t\t\t\t\tsetMapForType( \"bumpMap\", value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map_d':\r\n\r\n\t\t\t\t\t// Alpha map\r\n\r\n\t\t\t\t\tsetMapForType( \"alphaMap\", value );\r\n\t\t\t\t\tparams.transparent = true;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ns':\r\n\r\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\r\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\r\n\r\n\t\t\t\t\tparams.shininess = parseFloat( value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'd':\r\n\t\t\t\t\tn = parseFloat( value );\r\n\r\n\t\t\t\t\tif ( n < 1 ) {\r\n\r\n\t\t\t\t\t\tparams.opacity = n;\r\n\t\t\t\t\t\tparams.transparent = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tr':\r\n\t\t\t\t\tn = parseFloat( value );\r\n\r\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\r\n\r\n\t\t\t\t\tif ( n > 0 ) {\r\n\r\n\t\t\t\t\t\tparams.opacity = 1 - n;\r\n\t\t\t\t\t\tparams.transparent = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\r\n\t\treturn this.materials[ materialName ];\r\n\r\n\t},\r\n\r\n\tgetTextureParams: function ( value, matParams ) {\r\n\r\n\t\tvar texParams = {\r\n\r\n\t\t\tscale: new Vector2( 1, 1 ),\r\n\t\t\toffset: new Vector2( 0, 0 )\r\n\r\n\t\t };\r\n\r\n\t\tvar items = value.split( /\\s+/ );\r\n\t\tvar pos;\r\n\r\n\t\tpos = items.indexOf( '-bm' );\r\n\r\n\t\tif ( pos >= 0 ) {\r\n\r\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\r\n\t\t\titems.splice( pos, 2 );\r\n\r\n\t\t}\r\n\r\n\t\tpos = items.indexOf( '-s' );\r\n\r\n\t\tif ( pos >= 0 ) {\r\n\r\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\r\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\r\n\r\n\t\t}\r\n\r\n\t\tpos = items.indexOf( '-o' );\r\n\r\n\t\tif ( pos >= 0 ) {\r\n\r\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\r\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\r\n\r\n\t\t}\r\n\r\n\t\ttexParams.url = items.join( ' ' ).trim();\r\n\t\treturn texParams;\r\n\r\n\t},\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture;\r\n\t\tvar manager = ( this.manager !== undefined ) ? this.manager : DefaultLoadingManager;\r\n\t\tvar loader = manager.getHandler( url );\r\n\r\n\t\tif ( loader === null ) {\r\n\r\n\t\t\tloader = new TextureLoader( manager );\r\n\r\n\t\t}\r\n\r\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\r\n\t\ttexture = loader.load( url, onLoad, onProgress, onError );\r\n\r\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { MTLLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/MTLLoader.js","<template>\r\n    <div class=\"webglLoaderObjMtl-container\">\r\n        <div id=\"info\">\r\n\t\t    <a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - OBJLoader + MTLLoader\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { DDSLoader } from '@/components/jsm/loaders/DDSLoader.js'\r\nimport { MTLLoader } from '@/components/jsm/loaders/MTLLoader.js'\r\nimport { OBJLoader } from '@/components/jsm/loaders/OBJLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n\t\t\twindowHalfX: null,\r\n\t\t\twindowHalfY: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.windowHalfX = this.$webglInnerWidth / 2\r\n        this.windowHalfY = window.innerHeight / 2\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('webglLoaderObjMtl-container')[0].appendChild(container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 2000)\r\n            this.camera.position.z = 250\r\n            // scene\r\n            this.scene = new this.$THREE.Scene()\r\n            var ambientLight = new this.$THREE.AmbientLight(0xcccccc, 0.4)\r\n            this.scene.add(ambientLight)\r\n            var pointLight = new this.$THREE.PointLight(0xffffff, 0.8)\r\n            this.camera.add(pointLight)\r\n            this.scene.add(this.camera)\r\n            // model\r\n            var onProgress = (xhr) => {\r\n                if (xhr.lengthComputable) {\r\n                    var percentComplete = xhr.loaded / xhr.total * 100\r\n                    console.log(Math.round(percentComplete, 2) + '% downloaded')\r\n                }\r\n            }\r\n            var onError = () => { }\r\n            var manager = new this.$THREE.LoadingManager()\r\n            manager.addHandler(/\\.dds$/i, new DDSLoader())\r\n            // comment in the following line and import TGALoader if your asset uses TGA textures\r\n            // manager.addHandler(/\\.tga$/i, new TGALoader())\r\n            new MTLLoader(manager)\r\n                .setPath('static/models/obj/male02/')\r\n                .load('male02_dds.mtl', (materials) => {\r\n                    materials.preload()\r\n                    new OBJLoader(manager)\r\n                        .setMaterials(materials)\r\n                        .setPath('static/models/obj/male02/')\r\n                        .load('male02.obj', (object) => {\r\n                            object.position.y = - 95\r\n                            this.scene.add(object)\r\n                        }, onProgress, onError)\r\n                })\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            container.appendChild(this.renderer.domElement)\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.windowHalfX = (window.innerWidth - 281) / 2\r\n            this.windowHalfY = window.innerHeight / 2\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        onDocumentMouseMove(event) {\r\n            this.mouseX = (event.clientX - this.windowHalfX) / 2\r\n            this.mouseY = (event.clientY - this.windowHalfY) / 2\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.camera.position.x += (this.mouseX - this.camera.position.x) * .05\r\n            this.camera.position.y += (- this.mouseY - this.camera.position.y) * .05\r\n            this.camera.lookAt(this.scene.position)\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoaderObjMtl-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoaderObjMtl.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoaderObjMtl-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - OBJLoader + MTLLoader\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2cdef17b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoaderObjMtl.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2cdef17b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoaderObjMtl.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderObjMtl.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderObjMtl.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2cdef17b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoaderObjMtl.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2cdef17b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoaderObjMtl.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}