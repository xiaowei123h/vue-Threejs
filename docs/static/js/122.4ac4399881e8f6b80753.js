webpackJsonp([122],{"1vfQ":function(t,e){},"x/gQ":function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=r("QEtz"),s=r("wIBv"),n={data:function(){return{postVert:null,postFrag:null,camera:null,scene:null,renderer:null,controls:null,stats:null,target:null,postScene:null,postCamera:null,postMaterial:null,supportsExtension:!0,params:null,formats:null,types:null,gui:null}},mounted:function(){this.postVert="\n            varying vec2 vUv;\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }",this.postFrag="\n            #include <packing>\n\t\t\tvarying vec2 vUv;\n\t\t\tuniform sampler2D tDiffuse;\n\t\t\tuniform sampler2D tDepth;\n\t\t\tuniform float cameraNear;\n\t\t\tuniform float cameraFar;\n\t\t\tfloat readDepth(sampler2D depthSampler, vec2 coord) {\n\t\t\t\tfloat fragCoordZ = texture2D(depthSampler, coord).x;\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n\t\t\t\treturn viewZToOrthographicDepth(viewZ, cameraNear, cameraFar);\n\t\t\t}\n\t\t\tvoid main() {\n\t\t\t\t//vec3 diffuse = texture2D(tDiffuse, vUv).rgb;\n\t\t\t\tfloat depth = readDepth(tDepth, vUv);\n\n\t\t\t\tgl_FragColor.rgb = 1.0 - vec3(depth);\n\t\t\t\tgl_FragColor.a = 1.0;\n            }",this.params={format:this.$THREE.DepthFormat,type:this.$THREE.UnsignedShortType},this.formats={DepthFormat:this.$THREE.DepthFormat,DepthStencilFormat:this.$THREE.DepthStencilFormat},this.types={UnsignedShortType:this.$THREE.UnsignedShortType,UnsignedIntType:this.$THREE.UnsignedIntType,UnsignedInt248Type:this.$THREE.UnsignedInt248Type},this.init(),this.animate()},beforeDestroy:function(){this.gui.hide()},methods:{init:function(){if(this.renderer=new this.$THREE.WebGLRenderer,!1===this.renderer.capabilities.isWebGL2&&!1===this.renderer.extensions.has("WEBGL_depth_texture"))return this.supportsExtension=!1,void(document.querySelector("#error").style.display="block");this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),document.getElementsByClassName("webglDepthTexture-container")[0].appendChild(this.renderer.domElement),this.stats=new this.$Stats,this.stats.dom.style.left="280px",document.getElementsByClassName("webglDepthTexture-container")[0].appendChild(this.stats.dom),this.camera=new this.$THREE.PerspectiveCamera(70,this.$webglInnerWidth/window.innerHeight,.01,50),this.camera.position.z=4,this.controls=new s.a(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.setupRenderTarget(),this.setupScene(),this.setupPost(),this.onWindowResize(),window.addEventListener("resize",this.onWindowResize,!1),this.gui=new i.a({width:300}),this.gui.add(this.params,"format",this.formats).onChange(this.setupRenderTarget),this.gui.add(this.params,"type",this.types).onChange(this.setupRenderTarget),this.gui.open()},setupRenderTarget:function(){this.target&&this.target.dispose();var t=parseFloat(this.params.format),e=parseFloat(this.params.type);this.target=new this.$THREE.WebGLRenderTarget(this.$webglInnerWidth,window.innerHeight),this.target.texture.format=this.$THREE.RGBFormat,this.target.texture.minFilter=this.$THREE.NearestFilter,this.target.texture.magFilter=this.$THREE.NearestFilter,this.target.texture.generateMipmaps=!1,this.target.stencilBuffer=t===this.$THREE.DepthStencilFormat,this.target.depthBuffer=!0,this.target.depthTexture=new this.$THREE.DepthTexture,this.target.depthTexture.format=t,this.target.depthTexture.type=e},setupPost:function(){this.postCamera=new this.$THREE.OrthographicCamera(-1,1,1,-1,0,1),this.postMaterial=new this.$THREE.ShaderMaterial({vertexShader:this.postVert,fragmentShader:this.postFrag,uniforms:{cameraNear:{value:this.camera.near},cameraFar:{value:this.camera.far},tDiffuse:{value:null},tDepth:{value:null}}});var t=new this.$THREE.PlaneBufferGeometry(2,2),e=new this.$THREE.Mesh(t,this.postMaterial);this.postScene=new this.$THREE.Scene,this.postScene.add(e)},setupScene:function(){this.scene=new this.$THREE.Scene;for(var t=new this.$THREE.TorusKnotBufferGeometry(1,.3,128,64),e=new this.$THREE.MeshBasicMaterial({color:"blue"}),r=0;r<50;r++){var i=2*Math.random()*Math.PI,s=2*Math.random()-1,n=5*Math.sqrt(1-s*s),a=new this.$THREE.Mesh(t,e);a.position.set(Math.cos(i)*n,Math.sin(i)*n,5*s),a.rotation.set(Math.random(),Math.random(),Math.random()),this.scene.add(a)}},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer);var t=this.renderer.getPixelRatio();this.target.setSize(this.$webglInnerWidth*t,window.innerHeight*t)},animate:function(){this.supportsExtension&&(requestAnimationFrame(this.animate),this.renderer.setRenderTarget(this.target),this.renderer.render(this.scene,this.camera),this.postMaterial.uniforms.tDiffuse.value=this.target.texture,this.postMaterial.uniforms.tDepth.value=this.target.depthTexture,this.renderer.setRenderTarget(null),this.renderer.render(this.postScene,this.postCamera),this.controls.update(),this.stats.update())}}},a={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"webglDepthTexture-container"},[r("div",{attrs:{id:"info"}},[r("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[t._v("threejs")]),t._v(" webgl - depth texture"),r("br"),t._v("\n\t\t\tStores render target depth in a texture attachment."),r("br"),t._v("\n\t\t\tCreated by "),r("a",{attrs:{href:"http://twitter.com/mattdesl",target:"_blank",rel:"noopener"}},[t._v("@mattdesl")]),t._v(".\n\n\t\t\t"),r("div",{staticStyle:{display:"none"},attrs:{id:"error"}},[t._v("\n\t\t\tYour browser does not support "),r("strong",[t._v("WEBGL_depth_texture")]),t._v("."),r("br"),r("br"),t._v("\n\t\t\tThis demo will not work.\n\t\t\t")])])])}]};var h=r("VU/8")(n,a,!1,function(t){r("1vfQ")},"data-v-1fc0b264",null);e.default=h.exports}});
//# sourceMappingURL=122.4ac4399881e8f6b80753.js.map