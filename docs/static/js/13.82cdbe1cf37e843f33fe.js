webpackJsonp([13],{ZRdS:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=r("QEtz"),s=r("wIBv"),o=r("85s5"),a=r("Z9IJ"),n=r("fD1D"),l=r("gu+9"),h={data:function(){return{vertexshader:null,fragmentshader:null,ENTIRE_SCENE:0,bloomLayer:null,params:null,darkMaterial:null,materials:null,renderer:null,scene:null,camera:null,controls:null,renderScene:null,bloomPass:null,bloomComposer:null,finalPass:null,finalComposer:null,raycaster:null,mouse:null,gui:null,folder:null,BLOOM_SCENE:1}},mounted:function(){var t=this;this.vertexshader="\n            varying vec2 vUv;\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }",this.fragmentshader="\n            uniform sampler2D baseTexture;\n\t\t\tuniform sampler2D bloomTexture;\n\t\t\tvarying vec2 vUv;\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = (texture2D(baseTexture, vUv) + vec4(1.0) * texture2D(bloomTexture, vUv));\n            }",this.bloomLayer=new this.$THREE.Layers,this.bloomLayer.set(this.BLOOM_SCENE),this.params={exposure:1,bloomStrength:5,bloomThreshold:0,bloomRadius:0,scene:"Scene with Glow"},this.darkMaterial=new this.$THREE.MeshBasicMaterial({color:"black"}),this.materials={},this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.renderer.toneMapping=this.$THREE.ReinhardToneMapping,document.getElementsByClassName("webglPostprocessingUnrealBloomSelective-container")[0].appendChild(this.renderer.domElement),this.scene=new this.$THREE.Scene,this.camera=new this.$THREE.PerspectiveCamera(40,this.$webglInnerWidth/window.innerHeight,1,200),this.camera.position.set(0,0,20),this.camera.lookAt(0,0,0),this.controls=new s.a(this.camera,this.renderer.domElement),this.controls.maxPolarAngle=.5*Math.PI,this.controls.minDistance=1,this.controls.maxDistance=100,this.controls.addEventListener("change",this.render),this.scene.add(new this.$THREE.AmbientLight(4210752)),this.renderScene=new a.a(this.scene,this.camera),this.bloomPass=new l.a(new this.$THREE.Vector2(this.$webglInnerWidth,window.innerHeight),1.5,.4,.85),this.bloomPass.threshold=this.params.bloomThreshold,this.bloomPass.strength=this.params.bloomStrength,this.bloomPass.radius=this.params.bloomRadius,this.bloomComposer=new o.a(this.renderer),this.bloomComposer.renderToScreen=!1,this.bloomComposer.addPass(this.renderScene),this.bloomComposer.addPass(this.bloomPass),this.finalPass=new n.a(new this.$THREE.ShaderMaterial({uniforms:{baseTexture:{value:null},bloomTexture:{value:this.bloomComposer.renderTarget2.texture}},vertexShader:this.vertexshader,fragmentShader:this.fragmentshader,defines:{}}),"baseTexture"),this.finalPass.needsSwap=!0,this.finalComposer=new o.a(this.renderer),this.finalComposer.addPass(this.renderScene),this.finalComposer.addPass(this.finalPass),this.raycaster=new this.$THREE.Raycaster,this.mouse=new this.$THREE.Vector2,window.addEventListener("click",this.onDocumentMouseClick,!1),this.gui=new i.a,this.gui.add(this.params,"scene",["Scene with Glow","Glow only","Scene only"]).onChange(function(e){switch(e){case"Scene with Glow":t.bloomComposer.renderToScreen=!1;break;case"Glow only":t.bloomComposer.renderToScreen=!0}t.render()}),this.folder=this.gui.addFolder("Bloom Parameters"),this.folder.add(this.params,"exposure",.1,2).onChange(function(e){t.renderer.toneMappingExposure=Math.pow(e,4),t.render()}),this.folder.add(this.params,"bloomThreshold",0,1).onChange(function(e){t.bloomPass.threshold=Number(e),t.render()}),this.folder.add(this.params,"bloomStrength",0,10).onChange(function(e){t.bloomPass.strength=Number(e),t.render()}),this.folder.add(this.params,"bloomRadius",0,1).step(.01).onChange(function(e){t.bloomPass.radius=Number(e),t.render()}),this.setupScene(),window.onresize=function(){var e=window.innerWidth-281,r=window.innerHeight;t.$onWindowResize(t.camera,t.renderer),t.bloomComposer.setSize(e,r),t.finalComposer.setSize(e,r),t.render()}},beforeDestroy:function(){this.gui.destroy()},methods:{onDocumentMouseClick:function(t){t.preventDefault(),this.mouse.x=t.clientX/this.$webglInnerWidth*2-1,this.mouse.y=-t.clientY/window.innerHeight*2+1,this.raycaster.setFromCamera(this.mouse,this.camera);var e=this.raycaster.intersectObjects(this.scene.children);e.length>0&&(e[0].object.layers.toggle(this.BLOOM_SCENE),this.render())},setupScene:function(){this.scene.traverse(this.disposeMaterial),this.scene.children.length=0;for(var t=new this.$THREE.IcosahedronBufferGeometry(1,15),e=0;e<50;e++){var r=new this.$THREE.Color;r.setHSL(Math.random(),.7,.2*Math.random()+.05);var i=new this.$THREE.MeshBasicMaterial({color:r}),s=new this.$THREE.Mesh(t,i);s.position.x=10*Math.random()-5,s.position.y=10*Math.random()-5,s.position.z=10*Math.random()-5,s.position.normalize().multiplyScalar(4*Math.random()+2),s.scale.setScalar(Math.random()*Math.random()+.5),this.scene.add(s),Math.random()<.25&&s.layers.enable(this.BLOOM_SCENE)}this.render()},disposeMaterial:function(t){t.material&&t.material.dispose()},render:function(){switch(this.params.scene){case"Scene only":this.renderer.render(this.scene,this.camera);break;case"Glow only":this.renderBloom(!1);break;case"Scene with Glow":default:this.renderBloom(!0),this.finalComposer.render()}},renderBloom:function(t){!0===t?(this.scene.traverse(this.darkenNonBloomed),this.bloomComposer.render(),this.scene.traverse(this.restoreMaterial)):(this.camera.layers.set(this.BLOOM_SCENE),this.bloomComposer.render(),this.camera.layers.set(this.ENTIRE_SCENE))},darkenNonBloomed:function(t){t.isMesh&&!1===this.bloomLayer.test(t.layers)&&(this.materials[t.uuid]=t.material,t.material=this.darkMaterial)},restoreMaterial:function(t){this.materials[t.uuid]&&(t.material=this.materials[t.uuid],delete this.materials[t.uuid])}}},u={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglPostprocessingUnrealBloomSelective-container"},[e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" Click on a sphere to toggle bloom"),e("br"),this._v("By "),e("a",{attrs:{href:"http://github.com/Temdog007",target:"_blank",rel:"noopener"}},[this._v("Temdog007")])])])}]};var m=r("VU/8")(h,u,!1,function(t){r("aqxR")},"data-v-b1a8b5da",null);e.default=m.exports},aqxR:function(t,e){},"gu+9":function(t,e,r){"use strict";var i=r("6+nK"),s=r("Ah8h"),o=r("fcDU"),a={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new i.q(0)},defaultOpacity:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tvec3 luma = vec3( 0.299, 0.587, 0.114 );","\tfloat v = dot( texel.xyz, luma );","\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","\tgl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")};r.d(e,"a",function(){return n});var n=function(t,e,r,n){s.a.call(this),this.strength=void 0!==e?e:1,this.radius=r,this.threshold=n,this.resolution=void 0!==t?new i._101(t.x,t.y):new i._101(256,256),this.clearColor=new i.q(0,0,0);var l={minFilter:i._17,magFilter:i._17,format:i._59};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var h=Math.round(this.resolution.x/2),u=Math.round(this.resolution.y/2);this.renderTargetBright=new i._105(h,u,l),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var m=0;m<this.nMips;m++){var d=new i._105(h,u,l);d.texture.name="UnrealBloomPass.h"+m,d.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(d);var c=new i._105(h,u,l);c.texture.name="UnrealBloomPass.v"+m,c.texture.generateMipmaps=!1,this.renderTargetsVertical.push(c),h=Math.round(h/2),u=Math.round(u/2)}void 0===a&&console.error("UnrealBloomPass relies on LuminosityHighPassShader");var f=a;this.highPassUniforms=i._98.clone(f.uniforms),this.highPassUniforms.luminosityThreshold.value=n,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new i._76({uniforms:this.highPassUniforms,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var v=[3,5,7,9,11];for(h=Math.round(this.resolution.x/2),u=Math.round(this.resolution.y/2),m=0;m<this.nMips;m++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(v[m])),this.separableBlurMaterials[m].uniforms.texSize.value=new i._101(h,u),h=Math.round(h/2),u=Math.round(u/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new i._102(1,1,1),new i._102(1,1,1),new i._102(1,1,1),new i._102(1,1,1),new i._102(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===o.a&&console.error("UnrealBloomPass relies on CopyShader");var g=o.a;this.copyUniforms=i._98.clone(g.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new i._76({uniforms:this.copyUniforms,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader,blending:i.c,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new i.q,this.oldClearAlpha=1,this.basic=new i._29,this.fsQuad=new s.a.FullScreenQuad(null)};n.prototype=Object.assign(Object.create(s.a.prototype),{constructor:n,dispose:function(){for(var t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()},setSize:function(t,e){var r=Math.round(t/2),s=Math.round(e/2);this.renderTargetBright.setSize(r,s);for(var o=0;o<this.nMips;o++)this.renderTargetsHorizontal[o].setSize(r,s),this.renderTargetsVertical[o].setSize(r,s),this.separableBlurMaterials[o].uniforms.texSize.value=new i._101(r,s),r=Math.round(r/2),s=Math.round(s/2)},render:function(t,e,r,i,s){this.oldClearColor.copy(t.getClearColor()),this.oldClearAlpha=t.getClearAlpha();var o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),s&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=r.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=r.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);for(var a=this.renderTargetBright,l=0;l<this.nMips;l++)this.fsQuad.material=this.separableBlurMaterials[l],this.separableBlurMaterials[l].uniforms.colorTexture.value=a.texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[l]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[l].uniforms.colorTexture.value=this.renderTargetsHorizontal[l].texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[l]),t.clear(),this.fsQuad.render(t),a=this.renderTargetsVertical[l];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,s&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(r),this.fsQuad.render(t)),t.setClearColor(this.oldClearColor,this.oldClearAlpha),t.autoClear=o},getSeperableBlurMaterial:function(t){return new i._76({defines:{KERNEL_RADIUS:t,SIGMA:t},uniforms:{colorTexture:{value:null},texSize:{value:new i._101(.5,.5)},direction:{value:new i._101(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(t){return new i._76({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),n.BlurDirectionX=new i._101(1,0),n.BlurDirectionY=new i._101(0,1)}});
//# sourceMappingURL=13.82cdbe1cf37e843f33fe.js.map