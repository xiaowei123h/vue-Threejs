{"version":3,"sources":["webpack:///src/views/materials/webglMaterialsPhysicalTransmission.vue","webpack:///./src/views/materials/webglMaterialsPhysicalTransmission.vue?88df","webpack:///./src/views/materials/webglMaterialsPhysicalTransmission.vue"],"names":["webglMaterialsPhysicalTransmission","data","params","color","transmission","envMapIntensity","lightIntensity","exposure","container","stats","camera","scene","renderer","hdrCubeRenderTarget","mesh1","mesh2","gui","hdrEquirect","mounted","_this","this","RGBELoader","setDataType","$THREE","UnsignedByteType","setPath","load","init","animate","beforeDestroy","destroy","methods","_this2","document","createElement","getElementsByClassName","appendChild","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","shadowMap","enabled","domElement","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","Scene","background","PerspectiveCamera","position","set","pmremGenerator","PMREMGenerator","fromEquirectangular","dispose","texture","geometry","SphereBufferGeometry","CanvasTexture","generateTexture","magFilter","NearestFilter","wrapT","RepeatWrapping","wrapS","repeat","material","MeshPhysicalMaterial","metalness","roughness","alphaMap","alphaTest","envMap","depthWrite","opacity","transparent","material1","copy","material1b","side","BackSide","material2","premultipliedAlpha","material2b","Mesh","x","add","mesh","renderOrder","spotLight1","SpotLight","angle","Math","PI","spotLight2","$Stats","dom","style","left","controls","OrbitControls","minDistance","maxDistance","addEventListener","onWindowResize","dat_gui_module","addColor","onChange","name","intensity","open","$onWindowResize","canvas","width","height","context","getContext","fillStyle","fillRect","requestAnimationFrame","t","performance","now","rotation","z","begin","render","end","materials_webglMaterialsPhysicalTransmission","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/131.8909c790eeb5f9aaee05.js","sourcesContent":["<template>\r\n    <div class=\"webglMaterialsPhysicalTransmission-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">threejs</a> - Transmission with Premultiplied Alpha (right) and without (left)</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { RGBELoader } from '@/components/jsm/loaders/RGBELoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            params: {\r\n\t\t\t\tcolor: 0xffffff,\r\n\t\t\t\ttransmission: 0.90,\r\n\t\t\t\tenvMapIntensity: 1,\r\n\t\t\t\tlightIntensity: 1,\r\n\t\t\t\texposure: 1\r\n\t\t\t},\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\thdrCubeRenderTarget: null,\r\n            mesh1: null,\r\n            mesh2: null,\r\n            gui: null,\r\n            hdrEquirect: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.hdrEquirect = new RGBELoader()\r\n            .setDataType(this.$THREE.UnsignedByteType)\r\n            .setPath('static/textures/equirectangular/')\r\n            .load('royal_esplanade_1k.hdr', () => {\r\n                this.init()\r\n                this.animate()\r\n            })\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsPhysicalTransmission-container')[0].appendChild(this.container)\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.shadowMap.enabled = true\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.renderer.toneMapping = this.$THREE.ACESFilmicToneMapping\r\n            this.renderer.toneMappingExposure = this.params.exposure\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = this.hdrEquirect\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 2000)\r\n            this.camera.position.set(0, 0, 120)\r\n            //\r\n            var pmremGenerator = new this.$THREE.PMREMGenerator(this.renderer)\r\n            this.hdrCubeRenderTarget = pmremGenerator.fromEquirectangular(this.hdrEquirect)\r\n            this.hdrEquirect.dispose()\r\n            pmremGenerator.dispose()\r\n            this.scene.background = this.hdrCubeRenderTarget.texture\r\n            //\r\n            var geometry = new this.$THREE.SphereBufferGeometry(20, 64, 32)\r\n            var texture = new this.$THREE.CanvasTexture(this.generateTexture())\r\n            texture.magFilter = this.$THREE.NearestFilter\r\n            texture.wrapT = this.$THREE.RepeatWrapping\r\n            texture.wrapS = this.$THREE.RepeatWrapping\r\n            texture.repeat.set(1, 3.5)\r\n            var material = new this.$THREE.MeshPhysicalMaterial({\r\n                color: this.params.color,\r\n                metalness: 0,\r\n                roughness: 0,\r\n                alphaMap: texture,\r\n                alphaTest: 0.5,\r\n                envMap: this.hdrCubeRenderTarget.texture,\r\n                envMapIntensity: this.params.envMapIntensity,\r\n                depthWrite: false,\r\n                transmission: this.params.transmission, // use material.transmission for glass materials\r\n                opacity: 1, // set material.opacity to 1 when material.transmission is non-zero\r\n                transparent: true\r\n            })\r\n            var material1 = new this.$THREE.MeshPhysicalMaterial().copy(material)\r\n            var material1b = new this.$THREE.MeshPhysicalMaterial().copy(material)\r\n            material1b.side = this.$THREE.BackSide\r\n            var material2 = new this.$THREE.MeshPhysicalMaterial().copy(material)\r\n            material2.premultipliedAlpha = true\r\n            var material2b = new this.$THREE.MeshPhysicalMaterial().copy(material)\r\n            material2b.premultipliedAlpha = true\r\n            material2b.side = this.$THREE.BackSide\r\n            this.mesh1 = new this.$THREE.Mesh(geometry, material1)\r\n            this.mesh1.position.x = - 30.0\r\n            this.scene.add(this.mesh1)\r\n            var mesh = new this.$THREE.Mesh(geometry, material1b)\r\n            mesh.renderOrder = - 1\r\n            this.mesh1.add(mesh)\r\n            this.mesh2 = new this.$THREE.Mesh(geometry, material2)\r\n            this.mesh2.position.x = 30.0\r\n            this.scene.add(this.mesh2)\r\n            mesh = new this.$THREE.Mesh(geometry, material2b)\r\n            mesh.renderOrder = - 1\r\n            this.mesh2.add(mesh)\r\n            //\r\n            var spotLight1 = new this.$THREE.SpotLight(0xffffff, this.params.lightIntensity)\r\n            spotLight1.position.set(100, 200, 100)\r\n            spotLight1.angle = Math.PI / 6\r\n            this.scene.add(spotLight1)\r\n            var spotLight2 = new this.$THREE.SpotLight(0xffffff, this.params.lightIntensity)\r\n            spotLight2.position.set(- 100, - 200, - 100)\r\n            spotLight2.angle = Math.PI / 6\r\n            this.scene.add(spotLight2)\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 10\r\n            controls.maxDistance = 150\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            //\r\n            this.gui = new GUI()\r\n            this.gui.addColor(this.params, 'color')\r\n                .onChange(() => {\r\n                    material1.color.set(this.params.color)\r\n                    material2.color.set(this.params.color)\r\n                    material1b.color.set(this.params.color)\r\n                    material2b.color.set(this.params.color)\r\n                })\r\n            this.gui.add(this.params, 'transmission', 0, 1)\r\n                .onChange(() => {\r\n                    material1.transmission = material2.transmission = this.params.transmission\r\n                    material1b.transmission = material2b.transmission = this.params.transmission\r\n                })\r\n            this.gui.add(this.params, 'envMapIntensity', 0, 1)\r\n                .name('envMap intensity')\r\n                .onChange(() => {\r\n                    material1.envMapIntensity = material2.envMapIntensity = this.params.envMapIntensity\r\n                    material1b.envMapIntensity = material2b.envMapIntensity = this.params.envMapIntensity\r\n                })\r\n            this.gui.add(this.params, 'lightIntensity', 0, 1)\r\n                .name('light intensity')\r\n                .onChange(() => {\r\n                    spotLight1.intensity = spotLight2.intensity = this.params.lightIntensity\r\n                })\r\n            this.gui.add(this.params, 'exposure', 0, 1)\r\n                .onChange(() => {\r\n                    this.renderer.toneMappingExposure = this.params.exposure\r\n                })\r\n            this.gui.open()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        generateTexture() {\r\n            var canvas = document.createElement('canvas')\r\n            canvas.width = 2\r\n            canvas.height = 2\r\n            var context = canvas.getContext('2d')\r\n            context.fillStyle = 'white'\r\n            context.fillRect(0, 1, 2, 1)\r\n            return canvas\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            var t = performance.now()\r\n            this.mesh1.rotation.x = this.mesh2.rotation.x = t * 0.0002\r\n            this.mesh1.rotation.z = this.mesh2.rotation.z = - t * 0.0002\r\n            this.stats.begin()\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.end()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsPhysicalTransmission-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsPhysicalTransmission.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsPhysicalTransmission-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"threejs\")]),_vm._v(\" - Transmission with Premultiplied Alpha (right) and without (left)\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5443398e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsPhysicalTransmission.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5443398e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsPhysicalTransmission.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsPhysicalTransmission.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsPhysicalTransmission.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5443398e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsPhysicalTransmission.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5443398e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsPhysicalTransmission.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}