webpackJsonp([14],{elK4:function(t,e){},"gu+9":function(t,e,r){"use strict";var i=r("6+nK"),a=r("Ah8h"),o=r("fcDU"),s={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new i.q(0)},defaultOpacity:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tvec3 luma = vec3( 0.299, 0.587, 0.114 );","\tfloat v = dot( texel.xyz, luma );","\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","\tgl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")};r.d(e,"a",function(){return n});var n=function(t,e,r,n){a.a.call(this),this.strength=void 0!==e?e:1,this.radius=r,this.threshold=n,this.resolution=void 0!==t?new i._101(t.x,t.y):new i._101(256,256),this.clearColor=new i.q(0,0,0);var l={minFilter:i._17,magFilter:i._17,format:i._59};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var u=Math.round(this.resolution.x/2),h=Math.round(this.resolution.y/2);this.renderTargetBright=new i._105(u,h,l),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var m=0;m<this.nMips;m++){var d=new i._105(u,h,l);d.texture.name="UnrealBloomPass.h"+m,d.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(d);var c=new i._105(u,h,l);c.texture.name="UnrealBloomPass.v"+m,c.texture.generateMipmaps=!1,this.renderTargetsVertical.push(c),u=Math.round(u/2),h=Math.round(h/2)}void 0===s&&console.error("UnrealBloomPass relies on LuminosityHighPassShader");var v=s;this.highPassUniforms=i._98.clone(v.uniforms),this.highPassUniforms.luminosityThreshold.value=n,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new i._76({uniforms:this.highPassUniforms,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var f=[3,5,7,9,11];for(u=Math.round(this.resolution.x/2),h=Math.round(this.resolution.y/2),m=0;m<this.nMips;m++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(f[m])),this.separableBlurMaterials[m].uniforms.texSize.value=new i._101(u,h),u=Math.round(u/2),h=Math.round(h/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new i._102(1,1,1),new i._102(1,1,1),new i._102(1,1,1),new i._102(1,1,1),new i._102(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===o.a&&console.error("UnrealBloomPass relies on CopyShader");var g=o.a;this.copyUniforms=i._98.clone(g.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new i._76({uniforms:this.copyUniforms,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader,blending:i.c,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new i.q,this.oldClearAlpha=1,this.basic=new i._29,this.fsQuad=new a.a.FullScreenQuad(null)};n.prototype=Object.assign(Object.create(a.a.prototype),{constructor:n,dispose:function(){for(var t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()},setSize:function(t,e){var r=Math.round(t/2),a=Math.round(e/2);this.renderTargetBright.setSize(r,a);for(var o=0;o<this.nMips;o++)this.renderTargetsHorizontal[o].setSize(r,a),this.renderTargetsVertical[o].setSize(r,a),this.separableBlurMaterials[o].uniforms.texSize.value=new i._101(r,a),r=Math.round(r/2),a=Math.round(a/2)},render:function(t,e,r,i,a){this.oldClearColor.copy(t.getClearColor()),this.oldClearAlpha=t.getClearAlpha();var o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),a&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=r.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=r.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);for(var s=this.renderTargetBright,l=0;l<this.nMips;l++)this.fsQuad.material=this.separableBlurMaterials[l],this.separableBlurMaterials[l].uniforms.colorTexture.value=s.texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[l]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[l].uniforms.colorTexture.value=this.renderTargetsHorizontal[l].texture,this.separableBlurMaterials[l].uniforms.direction.value=n.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[l]),t.clear(),this.fsQuad.render(t),s=this.renderTargetsVertical[l];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,a&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(r),this.fsQuad.render(t)),t.setClearColor(this.oldClearColor,this.oldClearAlpha),t.autoClear=o},getSeperableBlurMaterial:function(t){return new i._76({defines:{KERNEL_RADIUS:t,SIGMA:t},uniforms:{colorTexture:{value:null},texSize:{value:new i._101(.5,.5)},direction:{value:new i._101(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(t){return new i._76({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),n.BlurDirectionX=new i._101(1,0),n.BlurDirectionY=new i._101(0,1)},igXU:function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=r("QEtz"),a=r("wIBv"),o=r("qxm1"),s=r("85s5"),n=r("Z9IJ"),l=r("gu+9"),u={data:function(){return{camera:null,stats:null,composer:null,renderer:null,mixer:null,clock:null,params:{exposure:1,bloomStrength:1.5,bloomThreshold:0,bloomRadius:0},gui:null}},mounted:function(){this.init()},beforeDestroy:function(){this.gui.destroy()},methods:{init:function(){var t=this,e=document.getElementById("container");this.stats=new this.$Stats,this.stats.dom.style.left="280px",e.appendChild(this.stats.dom),this.clock=new this.$THREE.Clock,this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.renderer.toneMapping=this.$THREE.ReinhardToneMapping,e.appendChild(this.renderer.domElement);var r=new this.$THREE.Scene;this.camera=new this.$THREE.PerspectiveCamera(40,this.$webglInnerWidth/window.innerHeight,1,100),this.camera.position.set(-5,2.5,-3.5),r.add(this.camera);var u=new a.a(this.camera,this.renderer.domElement);u.maxPolarAngle=.5*Math.PI,u.minDistance=1,u.maxDistance=10,r.add(new this.$THREE.AmbientLight(4210752));var h=new this.$THREE.PointLight(16777215,1);this.camera.add(h);var m=new n.a(r,this.camera),d=new l.a(new this.$THREE.Vector2(this.$webglInnerWidth,window.innerHeight),1.5,.4,.85);d.threshold=this.params.bloomThreshold,d.strength=this.params.bloomStrength,d.radius=this.params.bloomRadius,this.composer=new s.a(this.renderer),this.composer.addPass(m),this.composer.addPass(d),(new o.a).load("static/models/gltf/PrimaryIonDrive.glb",function(e){var i=e.scene;r.add(i),t.mixer=new t.$THREE.AnimationMixer(i);var a=e.animations[0];t.mixer.clipAction(a.optimize()).play(),t.animate()}),this.gui=new i.a,this.gui.add(this.params,"exposure",.1,2).onChange(function(e){t.renderer.toneMappingExposure=Math.pow(e,4)}),this.gui.add(this.params,"bloomThreshold",0,1).onChange(function(t){d.threshold=Number(t)}),this.gui.add(this.params,"bloomStrength",0,3).onChange(function(t){d.strength=Number(t)}),this.gui.add(this.params,"bloomRadius",0,1).step(.01).onChange(function(t){d.radius=Number(t)}),window.addEventListener("resize",this.onWindowResize)},onWindowResize:function(){var t=window.innerWidth-281,e=window.innerHeight;this.$onWindowResize(this.camera,this.renderer),this.composer.setSize(t,e)},animate:function(){requestAnimationFrame(this.animate);var t=this.clock.getDelta();this.mixer.update(t),this.stats.update(),this.composer.render()}}},h={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"webglPostprocessingUnrealBloom-container"},[r("div",{attrs:{id:"container"}}),t._v(" "),r("div",{attrs:{id:"info"}},[r("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[t._v("three.js")]),t._v(" - Bloom pass by "),r("a",{attrs:{href:"http://eduperiment.com",target:"_blank",rel:"noopener"}},[t._v("Prashant Sharma")]),t._v(" and "),r("a",{attrs:{href:"https://clara.io",target:"_blank",rel:"noopener"}},[t._v("Ben Houston")]),t._v(" "),r("br"),t._v("\n\t\t\tModel: "),r("a",{attrs:{href:"https://blog.sketchfab.com/art-spotlight-primary-ion-drive/",target:"_blank",rel:"noopener"}},[t._v("Primary Ion Drive")]),t._v(" by\n\t\t\t"),r("a",{attrs:{href:"http://mjmurdock.com/",target:"_blank",rel:"noopener"}},[t._v("Mike Murdock")]),t._v(", CC Attribution.\n\t\t")])])}]};var m=r("VU/8")(u,h,!1,function(t){r("elK4")},"data-v-3a5113fe",null);e.default=m.exports}});
//# sourceMappingURL=14.e59e2621982ffdf929b0.js.map