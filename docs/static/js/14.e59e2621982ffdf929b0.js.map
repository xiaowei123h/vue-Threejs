{"version":3,"sources":["webpack:///./src/components/jsm/shaders/LuminosityHighPassShader.js","webpack:///./src/components/jsm/postprocessing/UnrealBloomPass.js","webpack:///src/views/postprocessing/webglPostprocessingUnrealBloom.vue","webpack:///./src/views/postprocessing/webglPostprocessingUnrealBloom.vue?6c22","webpack:///./src/views/postprocessing/webglPostprocessingUnrealBloom.vue"],"names":["LuminosityHighPassShader","shaderID","uniforms","tDiffuse","value","luminosityThreshold","smoothWidth","defaultColor","Color","defaultOpacity","vertexShader","join","fragmentShader","__webpack_require__","d","__webpack_exports__","UnrealBloomPass_UnrealBloomPass","UnrealBloomPass","resolution","strength","radius","threshold","Pass","call","this","undefined","Vector2","x","y","clearColor","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","renderTargetsHorizontal","renderTargetsVertical","nMips","resx","Math","round","resy","renderTargetBright","WebGLRenderTarget","texture","name","generateMipmaps","i","renderTargetHorizonal","push","renderTargetVertical","console","error","highPassShader","highPassUniforms","UniformsUtils","clone","materialHighPassFilter","ShaderMaterial","defines","separableBlurMaterials","kernelSizeArray","getSeperableBlurMaterial","compositeMaterial","getCompositeMaterial","needsUpdate","bloomTintColors","Vector3","CopyShader","copyShader","copyUniforms","materialCopy","blending","AdditiveBlending","depthTest","depthWrite","transparent","enabled","needsSwap","oldClearColor","oldClearAlpha","basic","MeshBasicMaterial","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","dispose","length","setSize","width","height","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","copy","getClearColor","getClearAlpha","oldAutoClear","autoClear","setClearColor","state","buffers","stencil","setTest","renderToScreen","material","map","setRenderTarget","clear","inputRenderTarget","BlurDirectionX","BlurDirectionY","kernelRadius","KERNEL_RADIUS","SIGMA","colorTexture","texSize","direction","three_module","igXU","module","defineProperty","dat_gui_module","OrbitControls","GLTFLoader","EffectComposer","RenderPass","webglPostprocessingUnrealBloom","data","camera","stats","composer","mixer","clock","params","exposure","bloomStrength","bloomThreshold","bloomRadius","gui","mounted","init","beforeDestroy","destroy","methods","_this","container","document","getElementById","$Stats","dom","style","left","appendChild","$THREE","Clock","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","$webglInnerWidth","innerHeight","toneMapping","ReinhardToneMapping","domElement","scene","Scene","add","controls","maxPolarAngle","PI","minDistance","AmbientLight","pointLight","PointLight","renderScene","bloomPass","addPass","load","gltf","model","AnimationMixer","clip","animations","clipAction","optimize","play","animate","onChange","toneMappingExposure","pow","Number"],"mappings":"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","file":"static/js/14.e59e2621982ffdf929b0.js","sourcesContent":["import {\r\n\tColor\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Luminosity\r\n * http://en.wikipedia.org/wiki/Luminosity\r\n */\r\n\r\nvar LuminosityHighPassShader = {\r\n\r\n\tshaderID: \"luminosityHighPass\",\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"luminosityThreshold\": { value: 1.0 },\r\n\t\t\"smoothWidth\": { value: 1.0 },\r\n\t\t\"defaultColor\": { value: new Color( 0x000000 ) },\r\n\t\t\"defaultOpacity\": { value: 0.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform vec3 defaultColor;\",\r\n\t\t\"uniform float defaultOpacity;\",\r\n\t\t\"uniform float luminosityThreshold;\",\r\n\t\t\"uniform float smoothWidth;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t\"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\",\r\n\r\n\t\t\"\tfloat v = dot( texel.xyz, luma );\",\r\n\r\n\t\t\"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\r\n\r\n\t\t\"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\r\n\r\n\t\t\"\tgl_FragColor = mix( outputColor, texel, alpha );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { LuminosityHighPassShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/LuminosityHighPassShader.js","import {\r\n\tAdditiveBlending,\r\n\tColor,\r\n\tLinearFilter,\r\n\tMeshBasicMaterial,\r\n\tRGBAFormat,\r\n\tShaderMaterial,\r\n\tUniformsUtils,\r\n\tVector2,\r\n\tVector3,\r\n\tWebGLRenderTarget\r\n} from \"@/components/build/three.module.js\";\r\nimport { Pass } from \"../postprocessing/Pass.js\";\r\nimport { CopyShader } from \"../shaders/CopyShader.js\";\r\nimport { LuminosityHighPassShader } from \"../shaders/LuminosityHighPassShader.js\";\r\n\r\n/**\r\n * UnrealBloomPass is inspired by the bloom pass of Unreal Engine. It creates a\r\n * mip map chain of bloom textures and blurs them with different radii. Because\r\n * of the weighted combination of mips, and because larger blurs are done on\r\n * higher mips, this effect provides good quality and performance.\r\n *\r\n * Reference:\r\n * - https://docs.unrealengine.com/latest/INT/Engine/Rendering/PostProcessEffects/Bloom/\r\n */\r\nvar UnrealBloomPass = function ( resolution, strength, radius, threshold ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.strength = ( strength !== undefined ) ? strength : 1;\r\n\tthis.radius = radius;\r\n\tthis.threshold = threshold;\r\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\r\n\r\n\t// create color only once here, reuse it later inside the render function\r\n\tthis.clearColor = new Color( 0, 0, 0 );\r\n\r\n\t// render targets\r\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\r\n\tthis.renderTargetsHorizontal = [];\r\n\tthis.renderTargetsVertical = [];\r\n\tthis.nMips = 5;\r\n\tvar resx = Math.round( this.resolution.x / 2 );\r\n\tvar resy = Math.round( this.resolution.y / 2 );\r\n\r\n\tthis.renderTargetBright = new WebGLRenderTarget( resx, resy, pars );\r\n\tthis.renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\r\n\tthis.renderTargetBright.texture.generateMipmaps = false;\r\n\r\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\tvar renderTargetHorizonal = new WebGLRenderTarget( resx, resy, pars );\r\n\r\n\t\trenderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\r\n\t\trenderTargetHorizonal.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetsHorizontal.push( renderTargetHorizonal );\r\n\r\n\t\tvar renderTargetVertical = new WebGLRenderTarget( resx, resy, pars );\r\n\r\n\t\trenderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\r\n\t\trenderTargetVertical.texture.generateMipmaps = false;\r\n\r\n\t\tthis.renderTargetsVertical.push( renderTargetVertical );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t}\r\n\r\n\t// luminosity high pass material\r\n\r\n\tif ( LuminosityHighPassShader === undefined )\r\n\t\tconsole.error( \"UnrealBloomPass relies on LuminosityHighPassShader\" );\r\n\r\n\tvar highPassShader = LuminosityHighPassShader;\r\n\tthis.highPassUniforms = UniformsUtils.clone( highPassShader.uniforms );\r\n\r\n\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = threshold;\r\n\tthis.highPassUniforms[ \"smoothWidth\" ].value = 0.01;\r\n\r\n\tthis.materialHighPassFilter = new ShaderMaterial( {\r\n\t\tuniforms: this.highPassUniforms,\r\n\t\tvertexShader: highPassShader.vertexShader,\r\n\t\tfragmentShader: highPassShader.fragmentShader,\r\n\t\tdefines: {}\r\n\t} );\r\n\r\n\t// Gaussian Blur Materials\r\n\tthis.separableBlurMaterials = [];\r\n\tvar kernelSizeArray = [ 3, 5, 7, 9, 11 ];\r\n\tvar resx = Math.round( this.resolution.x / 2 );\r\n\tvar resy = Math.round( this.resolution.y / 2 );\r\n\r\n\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\tthis.separableBlurMaterials.push( this.getSeperableBlurMaterial( kernelSizeArray[ i ] ) );\r\n\r\n\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\r\n\r\n\t\tresx = Math.round( resx / 2 );\r\n\r\n\t\tresy = Math.round( resy / 2 );\r\n\r\n\t}\r\n\r\n\t// Composite material\r\n\tthis.compositeMaterial = this.getCompositeMaterial( this.nMips );\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture1\" ].value = this.renderTargetsVertical[ 0 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture2\" ].value = this.renderTargetsVertical[ 1 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture3\" ].value = this.renderTargetsVertical[ 2 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture4\" ].value = this.renderTargetsVertical[ 3 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"blurTexture5\" ].value = this.renderTargetsVertical[ 4 ].texture;\r\n\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = strength;\r\n\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = 0.1;\r\n\tthis.compositeMaterial.needsUpdate = true;\r\n\r\n\tvar bloomFactors = [ 1.0, 0.8, 0.6, 0.4, 0.2 ];\r\n\tthis.compositeMaterial.uniforms[ \"bloomFactors\" ].value = bloomFactors;\r\n\tthis.bloomTintColors = [ new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ),\r\n\t\t\t\t\t\t\t new Vector3( 1, 1, 1 ), new Vector3( 1, 1, 1 ) ];\r\n\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\r\n\r\n\t// copy material\r\n\tif ( CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( \"UnrealBloomPass relies on CopyShader\" );\r\n\r\n\t}\r\n\r\n\tvar copyShader = CopyShader;\r\n\r\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\r\n\tthis.copyUniforms[ \"opacity\" ].value = 1.0;\r\n\r\n\tthis.materialCopy = new ShaderMaterial( {\r\n\t\tuniforms: this.copyUniforms,\r\n\t\tvertexShader: copyShader.vertexShader,\r\n\t\tfragmentShader: copyShader.fragmentShader,\r\n\t\tblending: AdditiveBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true\r\n\t} );\r\n\r\n\tthis.enabled = true;\r\n\tthis.needsSwap = false;\r\n\r\n\tthis.oldClearColor = new Color();\r\n\tthis.oldClearAlpha = 1;\r\n\r\n\tthis.basic = new MeshBasicMaterial();\r\n\r\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\r\n\r\n};\r\n\r\nUnrealBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: UnrealBloomPass,\r\n\r\n\tdispose: function () {\r\n\r\n\t\tfor ( var i = 0; i < this.renderTargetsHorizontal.length; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsHorizontal[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.renderTargetsVertical.length; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsVertical[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTargetBright.dispose();\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tvar resx = Math.round( width / 2 );\r\n\t\tvar resy = Math.round( height / 2 );\r\n\r\n\t\tthis.renderTargetBright.setSize( resx, resy );\r\n\r\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\t\tthis.renderTargetsHorizontal[ i ].setSize( resx, resy );\r\n\t\t\tthis.renderTargetsVertical[ i ].setSize( resx, resy );\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"texSize\" ].value = new Vector2( resx, resy );\r\n\r\n\t\t\tresx = Math.round( resx / 2 );\r\n\t\t\tresy = Math.round( resy / 2 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\r\n\r\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\r\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\trenderer.setClearColor( this.clearColor, 0 );\r\n\r\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\r\n\r\n\t\t// Render input to screen\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\tthis.fsQuad.material = this.basic;\r\n\t\t\tthis.basic.map = readBuffer.texture;\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\trenderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t\t// 1. Extract Bright Areas\r\n\r\n\t\tthis.highPassUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.highPassUniforms[ \"luminosityThreshold\" ].value = this.threshold;\r\n\t\tthis.fsQuad.material = this.materialHighPassFilter;\r\n\r\n\t\trenderer.setRenderTarget( this.renderTargetBright );\r\n\t\trenderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t// 2. Blur All the mips progressively\r\n\r\n\t\tvar inputRenderTarget = this.renderTargetBright;\r\n\r\n\t\tfor ( var i = 0; i < this.nMips; i ++ ) {\r\n\r\n\t\t\tthis.fsQuad.material = this.separableBlurMaterials[ i ];\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = inputRenderTarget.texture;\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionX;\r\n\t\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ i ] );\r\n\t\t\trenderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"colorTexture\" ].value = this.renderTargetsHorizontal[ i ].texture;\r\n\t\t\tthis.separableBlurMaterials[ i ].uniforms[ \"direction\" ].value = UnrealBloomPass.BlurDirectionY;\r\n\t\t\trenderer.setRenderTarget( this.renderTargetsVertical[ i ] );\r\n\t\t\trenderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t\tinputRenderTarget = this.renderTargetsVertical[ i ];\r\n\r\n\t\t}\r\n\r\n\t\t// Composite All the mips\r\n\r\n\t\tthis.fsQuad.material = this.compositeMaterial;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomStrength\" ].value = this.strength;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomRadius\" ].value = this.radius;\r\n\t\tthis.compositeMaterial.uniforms[ \"bloomTintColors\" ].value = this.bloomTintColors;\r\n\r\n\t\trenderer.setRenderTarget( this.renderTargetsHorizontal[ 0 ] );\r\n\t\trenderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t// Blend it additively over the input texture\r\n\r\n\t\tthis.fsQuad.material = this.materialCopy;\r\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetsHorizontal[ 0 ].texture;\r\n\r\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( readBuffer );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t\t// Restore renderer settings\r\n\r\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t},\r\n\r\n\tgetSeperableBlurMaterial: function ( kernelRadius ) {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\r\n\t\t\tdefines: {\r\n\t\t\t\t\"KERNEL_RADIUS\": kernelRadius,\r\n\t\t\t\t\"SIGMA\": kernelRadius\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"colorTexture\": { value: null },\r\n\t\t\t\t\"texSize\": { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t\t\t\"direction\": { value: new Vector2( 0.5, 0.5 ) }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader:\r\n\t\t\t\t\"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\r\n\r\n\t\t\tfragmentShader:\r\n\t\t\t\t\"#include <common>\\\r\n\t\t\t\tvarying vec2 vUv;\\n\\\r\n\t\t\t\tuniform sampler2D colorTexture;\\n\\\r\n\t\t\t\tuniform vec2 texSize;\\\r\n\t\t\t\tuniform vec2 direction;\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\\\r\n\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\\r\n\t\t\t\t}\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\\\r\n\t\t\t\t\tfloat fSigma = float(SIGMA);\\\r\n\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\\\r\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\\r\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\\r\n\t\t\t\t\t\tfloat x = float(i);\\\r\n\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\\\r\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\\\r\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\\\r\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\\\r\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\\\r\n\t\t\t\t\t\tweightSum += 2.0 * w;\\\r\n\t\t\t\t\t}\\\r\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\\r\n\t\t\t\t}\"\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tgetCompositeMaterial: function ( nMips ) {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\r\n\t\t\tdefines: {\r\n\t\t\t\t\"NUM_MIPS\": nMips\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\t\"blurTexture1\": { value: null },\r\n\t\t\t\t\"blurTexture2\": { value: null },\r\n\t\t\t\t\"blurTexture3\": { value: null },\r\n\t\t\t\t\"blurTexture4\": { value: null },\r\n\t\t\t\t\"blurTexture5\": { value: null },\r\n\t\t\t\t\"dirtTexture\": { value: null },\r\n\t\t\t\t\"bloomStrength\": { value: 1.0 },\r\n\t\t\t\t\"bloomFactors\": { value: null },\r\n\t\t\t\t\"bloomTintColors\": { value: null },\r\n\t\t\t\t\"bloomRadius\": { value: 0.0 }\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader:\r\n\t\t\t\t\"varying vec2 vUv;\\n\\\r\n\t\t\t\tvoid main() {\\n\\\r\n\t\t\t\t\tvUv = uv;\\n\\\r\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\\r\n\t\t\t\t}\",\r\n\r\n\t\t\tfragmentShader:\r\n\t\t\t\t\"varying vec2 vUv;\\\r\n\t\t\t\tuniform sampler2D blurTexture1;\\\r\n\t\t\t\tuniform sampler2D blurTexture2;\\\r\n\t\t\t\tuniform sampler2D blurTexture3;\\\r\n\t\t\t\tuniform sampler2D blurTexture4;\\\r\n\t\t\t\tuniform sampler2D blurTexture5;\\\r\n\t\t\t\tuniform sampler2D dirtTexture;\\\r\n\t\t\t\tuniform float bloomStrength;\\\r\n\t\t\t\tuniform float bloomRadius;\\\r\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\\\r\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\\\r\n\t\t\t\t\\\r\n\t\t\t\tfloat lerpBloomFactor(const in float factor) { \\\r\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\\\r\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\\\r\n\t\t\t\t}\\\r\n\t\t\t\t\\\r\n\t\t\t\tvoid main() {\\\r\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\\r\n\t\t\t\t}\"\r\n\t\t} );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nUnrealBloomPass.BlurDirectionX = new Vector2( 1.0, 0.0 );\r\nUnrealBloomPass.BlurDirectionY = new Vector2( 0.0, 1.0 );\r\n\r\nexport { UnrealBloomPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/UnrealBloomPass.js","<template>\r\n    <div class=\"webglPostprocessingUnrealBloom-container\">\r\n        <div id=\"container\"></div>\r\n\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - Bloom pass by <a href=\"http://eduperiment.com\" target=\"_blank\" rel=\"noopener\">Prashant Sharma</a> and <a href=\"https://clara.io\" target=\"_blank\" rel=\"noopener\">Ben Houston</a>\r\n\t\t\t<br/>\r\n\t\t\tModel: <a href=\"https://blog.sketchfab.com/art-spotlight-primary-ion-drive/\" target=\"_blank\" rel=\"noopener\">Primary Ion Drive</a> by\r\n\t\t\t<a href=\"http://mjmurdock.com/\" target=\"_blank\" rel=\"noopener\">Mike Murdock</a>, CC Attribution.\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { GLTFLoader } from '@/components/jsm/loaders/GLTFLoader.js'\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { UnrealBloomPass } from '@/components/jsm/postprocessing/UnrealBloomPass.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            stats: null,\r\n            composer: null,\r\n            renderer: null,\r\n            mixer: null,\r\n            clock: null,\r\n\t\t\tparams: {\r\n\t\t\t\texposure: 1,\r\n\t\t\t\tbloomStrength: 1.5,\r\n\t\t\t\tbloomThreshold: 0,\r\n\t\t\t\tbloomRadius: 0\r\n            },\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.getElementById('container')\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            this.clock = new this.$THREE.Clock()\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.toneMapping = this.$THREE.ReinhardToneMapping\r\n            container.appendChild(this.renderer.domElement)\r\n            var scene = new this.$THREE.Scene()\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 100)\r\n            this.camera.position.set(- 5, 2.5, - 3.5)\r\n            scene.add(this.camera)\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.maxPolarAngle = Math.PI * 0.5\r\n            controls.minDistance = 1\r\n            controls.maxDistance = 10\r\n            scene.add(new this.$THREE.AmbientLight(0x404040))\r\n            var pointLight = new this.$THREE.PointLight(0xffffff, 1)\r\n            this.camera.add(pointLight)\r\n            var renderScene = new RenderPass(scene, this.camera)\r\n            var bloomPass = new UnrealBloomPass(new this.$THREE.Vector2(this.$webglInnerWidth, window.innerHeight), 1.5, 0.4, 0.85)\r\n            bloomPass.threshold = this.params.bloomThreshold\r\n            bloomPass.strength = this.params.bloomStrength\r\n            bloomPass.radius = this.params.bloomRadius\r\n            this.composer = new EffectComposer(this.renderer)\r\n            this.composer.addPass(renderScene)\r\n            this.composer.addPass(bloomPass)\r\n            new GLTFLoader().load('static/models/gltf/PrimaryIonDrive.glb', (gltf) => {\r\n                var model = gltf.scene\r\n                scene.add(model)\r\n                this.mixer = new this.$THREE.AnimationMixer(model)\r\n                var clip = gltf.animations[ 0 ]\r\n                this.mixer.clipAction(clip.optimize()).play()\r\n                this.animate()\r\n            })\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'exposure', 0.1, 2).onChange((value) => {\r\n                this.renderer.toneMappingExposure = Math.pow(value, 4.0)\r\n            })\r\n            this.gui.add(this.params, 'bloomThreshold', 0.0, 1.0).onChange((value) => {\r\n                bloomPass.threshold = Number(value)\r\n            })\r\n            this.gui.add(this.params, 'bloomStrength', 0.0, 3.0).onChange((value) => {\r\n                bloomPass.strength = Number(value)\r\n            })\r\n            this.gui.add(this.params, 'bloomRadius', 0.0, 1.0).step(0.01).onChange((value) => {\r\n                bloomPass.radius = Number(value)\r\n            })\r\n            window.addEventListener('resize', this.onWindowResize)\r\n        },\r\n        onWindowResize() {\r\n            var width = window.innerWidth - 281\r\n            var height = window.innerHeight\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.composer.setSize(width, height)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            var delta = this.clock.getDelta()\r\n            this.mixer.update(delta)\r\n            this.stats.update()\r\n            this.composer.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglPostprocessingUnrealBloom-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    max-width: 650px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/postprocessing/webglPostprocessingUnrealBloom.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglPostprocessingUnrealBloom-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - Bloom pass by \"),_c('a',{attrs:{\"href\":\"http://eduperiment.com\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Prashant Sharma\")]),_vm._v(\" and \"),_c('a',{attrs:{\"href\":\"https://clara.io\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Ben Houston\")]),_vm._v(\" \"),_c('br'),_vm._v(\"\\n\\t\\t\\tModel: \"),_c('a',{attrs:{\"href\":\"https://blog.sketchfab.com/art-spotlight-primary-ion-drive/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Primary Ion Drive\")]),_vm._v(\" by\\n\\t\\t\\t\"),_c('a',{attrs:{\"href\":\"http://mjmurdock.com/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Mike Murdock\")]),_vm._v(\", CC Attribution.\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3a5113fe\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/postprocessing/webglPostprocessingUnrealBloom.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3a5113fe\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglPostprocessingUnrealBloom.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessingUnrealBloom.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessingUnrealBloom.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3a5113fe\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglPostprocessingUnrealBloom.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3a5113fe\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/postprocessing/webglPostprocessingUnrealBloom.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}