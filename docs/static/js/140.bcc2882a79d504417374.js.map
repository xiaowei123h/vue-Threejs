{"version":3,"sources":["webpack:///src/views/lights/webglLightsPhysical.vue","webpack:///./src/views/lights/webglLightsPhysical.vue?5b42","webpack:///./src/views/lights/webglLightsPhysical.vue"],"names":["webglLightsPhysical","data","camera","scene","renderer","bulbLight","bulbMat","hemiLight","stats","ballMat","cubeMat","floorMat","previousShadowMap","bulbLuminousPowers","hemiLuminousIrradiances","params","gui","mounted","this","110000 lm (1000W)","3500 lm (300W)","1700 lm (100W)","800 lm (60W)","400 lm (40W)","180 lm (25W)","20 lm (4W)","Off","0.0001 lx (Moonless Night)","0.002 lx (Night Airglow)","0.5 lx (Full Moon)","3.4 lx (City Twilight)","50 lx (Living Room)","100 lx (Very Overcast)","350 lx (Office Room)","400 lx (Sunrise/Sunset)","1000 lx (Overcast)","18000 lx (Daylight)","50000 lx (Direct Sun)","shadows","exposure","bulbPower","Object","keys","hemiIrradiance","init","animate","beforeDestroy","destroy","methods","_this","container","document","getElementById","$Stats","dom","style","left","appendChild","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","x","z","y","Scene","SphereBufferGeometry","PointLight","MeshStandardMaterial","emissive","emissiveIntensity","color","add","Mesh","bulbGeometry","set","castShadow","HemisphereLight","roughness","metalness","bumpScale","textureLoader","TextureLoader","load","map","wrapS","RepeatWrapping","wrapT","anisotropy","repeat","encoding","sRGBEncoding","needsUpdate","bumpMap","roughnessMap","metalnessMap","floorGeometry","PlaneBufferGeometry","floorMesh","receiveShadow","rotation","Math","PI","ballGeometry","ballMesh","boxGeometry","BoxBufferGeometry","boxMesh","boxMesh2","boxMesh3","WebGLRenderer","physicallyCorrectLights","outputEncoding","shadowMap","enabled","toneMapping","ReinhardToneMapping","setPixelRatio","devicePixelRatio","setSize","domElement","controls","OrbitControls","minDistance","maxDistance","addEventListener","onWindowResize","dat_gui_module","open","$onWindowResize","requestAnimationFrame","render","toneMappingExposure","pow","power","intensity","time","Date","now","cos","update","lights_webglLightsPhysical","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/140.bcc2882a79d504417374.js","sourcesContent":["<template>\r\n    <div class=\"webglLightsPhysical-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - Physically accurate incandescent bulb by <a href=\"http://clara.io\" target=\"_blank\" rel=\"noopener\">Ben Houston</a><br />\r\n\t\t\tReal world scale: Brick cube is 50 cm in size. Globe is 50 cm in diameter.<br/>\r\n\t\t\tReinhard inline tonemapping with real-world light falloff (decay = 2).\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js';\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            bulbLight: null,\r\n            bulbMat: null,\r\n            hemiLight: null,\r\n            stats: null,\r\n            ballMat: null,\r\n            cubeMat: null,\r\n            floorMat: null,\r\n            previousShadowMap: false,\r\n            bulbLuminousPowers: null,\r\n            hemiLuminousIrradiances: null,\r\n            params: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        // ref for lumens: http://www.power-sure.com/lumens.htm\r\n        this.bulbLuminousPowers = {\r\n            \"110000 lm (1000W)\": 110000,\r\n            \"3500 lm (300W)\": 3500,\r\n            \"1700 lm (100W)\": 1700,\r\n            \"800 lm (60W)\": 800,\r\n            \"400 lm (40W)\": 400,\r\n            \"180 lm (25W)\": 180,\r\n            \"20 lm (4W)\": 20,\r\n            \"Off\": 0\r\n        }\r\n        // ref for solar irradiances: https://en.wikipedia.org/wiki/Lux\r\n        this.hemiLuminousIrradiances = {\r\n            \"0.0001 lx (Moonless Night)\": 0.0001,\r\n            \"0.002 lx (Night Airglow)\": 0.002,\r\n            \"0.5 lx (Full Moon)\": 0.5,\r\n            \"3.4 lx (City Twilight)\": 3.4,\r\n            \"50 lx (Living Room)\": 50,\r\n            \"100 lx (Very Overcast)\": 100,\r\n            \"350 lx (Office Room)\": 350,\r\n            \"400 lx (Sunrise/Sunset)\": 400,\r\n            \"1000 lx (Overcast)\": 1000,\r\n            \"18000 lx (Daylight)\": 18000,\r\n            \"50000 lx (Direct Sun)\": 50000\r\n        }\r\n        this.params = {\r\n            shadows: true,\r\n            exposure: 0.68,\r\n            bulbPower: Object.keys(this.bulbLuminousPowers)[4],\r\n            hemiIrradiance: Object.keys(this.hemiLuminousIrradiances)[0]\r\n        }\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.getElementById('container')\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 0.1, 100)\r\n            this.camera.position.x = - 4\r\n            this.camera.position.z = 4\r\n            this.camera.position.y = 2\r\n            this.scene = new this.$THREE.Scene()\r\n            var bulbGeometry = new this.$THREE.SphereBufferGeometry(0.02, 16, 8)\r\n            this.bulbLight = new this.$THREE.PointLight(0xffee88, 1, 100, 2)\r\n            this.bulbMat = new this.$THREE.MeshStandardMaterial({\r\n                emissive: 0xffffee,\r\n                emissiveIntensity: 1,\r\n                color: 0x000000\r\n            })\r\n            this.bulbLight.add(new this.$THREE.Mesh(this.bulbGeometry, this.bulbMat))\r\n            this.bulbLight.position.set(0, 2, 0)\r\n            this.bulbLight.castShadow = true\r\n            this.scene.add(this.bulbLight)\r\n            this.hemiLight = new this.$THREE.HemisphereLight(0xddeeff, 0x0f0e0d, 0.02)\r\n            this.scene.add(this.hemiLight)\r\n            this.floorMat = new this.$THREE.MeshStandardMaterial({\r\n                roughness: 0.8,\r\n                color: 0xffffff,\r\n                metalness: 0.2,\r\n                bumpScale: 0.0005\r\n            })\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            textureLoader.load(\"static/textures/hardwood2_diffuse.jpg\", (map) => {\r\n                map.wrapS = this.$THREE.RepeatWrapping\r\n                map.wrapT = this.$THREE.RepeatWrapping\r\n                map.anisotropy = 4\r\n                map.repeat.set(10, 24)\r\n                map.encoding = this.$THREE.sRGBEncoding\r\n                this.floorMat.map = map\r\n                this.floorMat.needsUpdate = true\r\n            })\r\n            textureLoader.load(\"static/textures/hardwood2_bump.jpg\", (map) => {\r\n                map.wrapS = this.$THREE.RepeatWrapping\r\n                map.wrapT = this.$THREE.RepeatWrapping\r\n                map.anisotropy = 4\r\n                map.repeat.set(10, 24)\r\n                this.floorMat.bumpMap = map\r\n                this.floorMat.needsUpdate = true\r\n            })\r\n            textureLoader.load(\"static/textures/hardwood2_roughness.jpg\", (map) => {\r\n                map.wrapS = this.$THREE.RepeatWrapping\r\n                map.wrapT = this.$THREE.RepeatWrapping\r\n                map.anisotropy = 4\r\n                map.repeat.set(10, 24)\r\n                this.floorMat.roughnessMap = map\r\n                this.floorMat.needsUpdate = true\r\n            })\r\n            this.cubeMat = new this.$THREE.MeshStandardMaterial({\r\n                roughness: 0.7,\r\n                color: 0xffffff,\r\n                bumpScale: 0.002,\r\n                metalness: 0.2\r\n            })\r\n            textureLoader.load(\"static/textures/brick_diffuse.jpg\", (map) => {\r\n                map.wrapS = this.$THREE.RepeatWrapping\r\n                map.wrapT = this.$THREE.RepeatWrapping\r\n                map.anisotropy = 4\r\n                map.repeat.set(1, 1)\r\n                map.encoding = this.$THREE.sRGBEncoding\r\n                this.cubeMat.map = map\r\n                this.cubeMat.needsUpdate = true\r\n            })\r\n            textureLoader.load(\"static/textures/brick_bump.jpg\", (map) => {\r\n                map.wrapS = this.$THREE.RepeatWrapping\r\n                map.wrapT = this.$THREE.RepeatWrapping\r\n                map.anisotropy = 4\r\n                map.repeat.set(1, 1)\r\n                this.cubeMat.bumpMap = map\r\n                this.cubeMat.needsUpdate = true\r\n            })\r\n            this.ballMat = new this.$THREE.MeshStandardMaterial({\r\n                color: 0xffffff,\r\n                roughness: 0.5,\r\n                metalness: 1.0\r\n            })\r\n            textureLoader.load(\"static/textures/planets/earth_atmos_2048.jpg\", (map) => {\r\n                map.anisotropy = 4\r\n                map.encoding = this.$THREE.sRGBEncoding\r\n                this.ballMat.map = map\r\n                this.ballMat.needsUpdate = true\r\n            })\r\n            textureLoader.load(\"static/textures/planets/earth_specular_2048.jpg\", (map) => {\r\n                map.anisotropy = 4\r\n                map.encoding = this.$THREE.sRGBEncoding\r\n                this.ballMat.metalnessMap = map\r\n                this.ballMat.needsUpdate = true\r\n            })\r\n            var floorGeometry = new this.$THREE.PlaneBufferGeometry(20, 20)\r\n            var floorMesh = new this.$THREE.Mesh(floorGeometry, this.floorMat)\r\n            floorMesh.receiveShadow = true\r\n            floorMesh.rotation.x = - Math.PI / 2.0\r\n            this.scene.add(floorMesh)\r\n            var ballGeometry = new this.$THREE.SphereBufferGeometry(0.25, 32, 32)\r\n            var ballMesh = new this.$THREE.Mesh(ballGeometry, this.ballMat)\r\n            ballMesh.position.set(1, 0.25, 1)\r\n            ballMesh.rotation.y = Math.PI\r\n            ballMesh.castShadow = true\r\n            this.scene.add(ballMesh)\r\n            var boxGeometry = new this.$THREE.BoxBufferGeometry(0.5, 0.5, 0.5)\r\n            var boxMesh = new this.$THREE.Mesh(boxGeometry, this.cubeMat)\r\n            boxMesh.position.set(- 0.5, 0.25, - 1)\r\n            boxMesh.castShadow = true\r\n            this.scene.add(boxMesh)\r\n            var boxMesh2 = new this.$THREE.Mesh(boxGeometry, this.cubeMat)\r\n            boxMesh2.position.set(0, 0.25, - 5)\r\n            boxMesh2.castShadow = true\r\n            this.scene.add(boxMesh2)\r\n            var boxMesh3 = new this.$THREE.Mesh(boxGeometry, this.cubeMat)\r\n            boxMesh3.position.set(7, 0.25, 0)\r\n            boxMesh3.castShadow = true\r\n            this.scene.add(boxMesh3)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.physicallyCorrectLights = true\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.toneMapping = this.$THREE.ReinhardToneMapping\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            container.appendChild(this.renderer.domElement)\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 1\r\n            controls.maxDistance = 20\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'hemiIrradiance', Object.keys(this.hemiLuminousIrradiances))\r\n            this.gui.add(this.params, 'bulbPower', Object.keys(this.bulbLuminousPowers))\r\n            this.gui.add(this.params, 'exposure', 0, 1)\r\n            this.gui.add(this.params, 'shadows')\r\n            this.gui.open()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.toneMappingExposure = Math.pow(this.params.exposure, 5.0) // to allow for very bright this.scenes.\r\n            this.renderer.shadowMap.enabled = this.params.shadows\r\n            this.bulbLight.castShadow = this.params.shadows\r\n            if (this.params.shadows !== this.previousShadowMap) {\r\n                this.ballMat.needsUpdate = true\r\n                this.cubeMat.needsUpdate = true\r\n                this.floorMat.needsUpdate = true\r\n                this.previousShadowMap = this.params.shadows\r\n            }\r\n            this.bulbLight.power = this.bulbLuminousPowers[this.params.bulbPower]\r\n            this.bulbMat.emissiveIntensity = this.bulbLight.intensity / Math.pow(0.02, 2.0) // convert from intensity to irradiance at bulb surface\r\n            this.hemiLight.intensity = this.hemiLuminousIrradiances[this.params.hemiIrradiance]\r\n            var time = Date.now() * 0.0005\r\n            this.bulbLight.position.y = Math.cos(time) * 0.75 + 1.25\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.update()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLightsPhysical-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/lights/webglLightsPhysical.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLightsPhysical-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - Physically accurate incandescent bulb by \"),_c('a',{attrs:{\"href\":\"http://clara.io\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Ben Houston\")]),_c('br'),_vm._v(\"\\n\\t\\t\\tReal world scale: Brick cube is 50 cm in size. Globe is 50 cm in diameter.\"),_c('br'),_vm._v(\"\\n\\t\\t\\tReinhard inline tonemapping with real-world light falloff (decay = 2).\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-317f009c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/lights/webglLightsPhysical.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-317f009c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLightsPhysical.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLightsPhysical.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLightsPhysical.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-317f009c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLightsPhysical.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-317f009c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/lights/webglLightsPhysical.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}