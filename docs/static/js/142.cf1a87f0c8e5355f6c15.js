webpackJsonp([142],{KMVM:function(t,e){},jmYn:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n("QEtz"),a={data:function(){return{proceduralVert:null,noiseRandom1DFrag:null,noiseRandom2DFrag:null,noiseRandom3DFrag:null,camera:null,postScene:null,renderer:null,postMaterial:null,noiseRandom1DMaterial:null,noiseRandom2DMaterial:null,noiseRandom3DMaterial:null,postQuad:null,stats:null,params:{procedure:"noiseRandom3D"},gui:null}},mounted:function(){this.proceduralVert="\n            varying vec2 vUv;\n\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }",this.noiseRandom1DFrag="\n            #include <common>\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor.xyz = vec3(rand(vUv));\n\t\t\t\tgl_FragColor.w = 1.0;\n            }",this.noiseRandom2DFrag="\n            #include <common>\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\t\t\t\tvec2 rand2 = vec2(rand(vUv), rand(vUv + vec2(0.4, 0.6)));\n\t\t\t\tgl_FragColor.xyz = mix(mix(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 1.0), rand2.x), vec3(0.0), rand2.y);\n\t\t\t\tgl_FragColor.w = 1.0;\n            }",this.noiseRandom3DFrag="\n            #include <common>\n\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\t\t\t\tvec3 rand3 = vec3(rand(vUv), rand(vUv + vec2(0.4, 0.6)), rand(vUv + vec2(0.6, 0.4)));\n\t\t\t\tgl_FragColor.xyz = rand3;\n\t\t\t\tgl_FragColor.w = 1.0;\n            }",this.init(),this.animate(),this.initGui()},beforeDestroy:function(){this.gui.destroy()},methods:{initGui:function(){this.gui=new i.a,this.gui.add(this.params,"procedure",["noiseRandom1D","noiseRandom2D","noiseRandom3D"])},init:function(){var t=document.getElementById("container");this.renderer=new this.$THREE.WebGLRenderer,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),document.getElementsByClassName("webglPostprocessingProcedural-container")[0].appendChild(this.renderer.domElement),this.stats=new this.$Stats,this.stats.dom.style.left="280px",t.appendChild(this.stats.dom),this.camera=new this.$THREE.OrthographicCamera(-1,1,1,-1,0,1),this.noiseRandom1DMaterial=new this.$THREE.ShaderMaterial({vertexShader:this.proceduralVert,fragmentShader:this.noiseRandom1DFrag}),this.noiseRandom2DMaterial=new this.$THREE.ShaderMaterial({vertexShader:this.proceduralVert,fragmentShader:this.noiseRandom2DFrag}),this.noiseRandom3DMaterial=new this.$THREE.ShaderMaterial({vertexShader:this.proceduralVert,fragmentShader:this.noiseRandom3DFrag}),this.postMaterial=this.noiseRandom3DMaterial;var e=new this.$THREE.PlaneBufferGeometry(2,2);this.postQuad=new this.$THREE.Mesh(e,this.postMaterial),this.postScene=new this.$THREE.Scene,this.postScene.add(this.postQuad),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){switch(requestAnimationFrame(this.animate),this.params.procedure){case"noiseRandom1D":this.postMaterial=this.noiseRandom1DMaterial;break;case"noiseRandom2D":this.postMaterial=this.noiseRandom2DMaterial;break;case"noiseRandom3D":this.postMaterial=this.noiseRandom3DMaterial}this.postQuad.material=this.postMaterial,this.renderer.render(this.postScene,this.camera),this.stats.update()}}},r={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglPostprocessingProcedural-container"},[e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" - Procedural Effects Example by "),e("a",{attrs:{href:"https://clara.io",target:"_blank",rel:"noopener"}},[this._v("Ben Houston")]),e("br"),e("br")]),this._v(" "),e("div",{attrs:{id:"container"}})])}]};var s=n("VU/8")(a,r,!1,function(t){n("KMVM")},"data-v-4489740a",null);e.default=s.exports}});
//# sourceMappingURL=142.cf1a87f0c8e5355f6c15.js.map