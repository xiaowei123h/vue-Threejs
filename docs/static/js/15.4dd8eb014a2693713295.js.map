{"version":3,"sources":["webpack:///./src/components/jsm/shaders/FocusShader.js","webpack:///src/views/points/webglPointsDynamic.vue","webpack:///./src/views/points/webglPointsDynamic.vue?68c1","webpack:///./src/views/points/webglPointsDynamic.vue","webpack:///./src/components/jsm/shaders/FilmShader.js","webpack:///./src/components/jsm/postprocessing/FilmPass.js"],"names":["FocusShader","uniforms","tDiffuse","value","screenWidth","screenHeight","sampleDistance","waveFactor","vertexShader","join","fragmentShader","webglPointsDynamic","data","camera","scene","renderer","mesh","parent","meshes","clonemeshes","composer","effectFocus","clock","stats","mounted","this","$THREE","Clock","init","animate","methods","_this","container","document","querySelector","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","background","Color","fog","FogExp2","lookAt","loader","OBJLoader","load","object","positions","combineBuffer","createMesh","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","autoClear","appendChild","domElement","Object3D","add","grid","Points","PlaneBufferGeometry","PointsMaterial","color","size","y","rotation","x","Math","PI","renderModel","RenderPass","effectBloom","BloomPass","effectFilm","FilmPass","ShaderPass","EffectComposer","addPass","$Stats","dom","style","left","addEventListener","onWindowResize","$onWindowResize","innerWidth","model","bufferName","count","traverse","child","isMesh","buffer","geometry","attributes","array","length","combined","Float32Array","offset","BufferAttribute","scale","z","BufferGeometry","setAttribute","clone","setUsage","DynamicDrawUsage","clones","i","c","push","speed","random","verticesDown","verticesUp","direction","delay","floor","start","requestAnimationFrame","render","update","delta","getDelta","j","cm","initialPositions","initialPosition","px","getX","py","getY","pz","getZ","setXYZ","ix","iy","iz","dx","abs","dy","dz","needsUpdate","points_webglPointsDynamic","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","FilmShader","time","nIntensity","sIntensity","sCount","grayscale","d","FilmPass_FilmPass","noiseIntensity","scanlinesIntensity","scanlinesCount","Pass","call","undefined","console","error","shader","UniformsUtils","material","ShaderMaterial","fsQuad","FullScreenQuad","prototype","Object","assign","create","constructor","writeBuffer","readBuffer","deltaTime","texture","renderToScreen","setRenderTarget","clear"],"mappings":"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","file":"static/js/15.4dd8eb014a2693713295.js","sourcesContent":["/**\r\n * Focus shader\r\n * based on PaintEffect postprocess from ro.me\r\n * http://code.google.com/p/3-dreams-of-black/source/browse/deploy/js/effects/PaintEffect.js\r\n */\r\n\r\nvar FocusShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"screenWidth\": { value: 1024 },\r\n\t\t\"screenHeight\": { value: 1024 },\r\n\t\t\"sampleDistance\": { value: 0.94 },\r\n\t\t\"waveFactor\": { value: 0.00125 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform float screenWidth;\",\r\n\t\t\"uniform float screenHeight;\",\r\n\t\t\"uniform float sampleDistance;\",\r\n\t\t\"uniform float waveFactor;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 color, org, tmp, add;\",\r\n\t\t\"\tfloat sample_dist, f;\",\r\n\t\t\"\tvec2 vin;\",\r\n\t\t\"\tvec2 uv = vUv;\",\r\n\r\n\t\t\"\tadd = color = org = texture2D( tDiffuse, uv );\",\r\n\r\n\t\t\"\tvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\",\r\n\t\t\"\tsample_dist = dot( vin, vin ) * 2.0;\",\r\n\r\n\t\t\"\tf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\",\r\n\r\n\t\t\"\tvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\",\r\n\t\t\"\tif( tmp.b < color.b ) color = tmp;\",\r\n\r\n\t\t\"\tcolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\",\r\n\t\t\"\tcolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\",\r\n\r\n\t\t\"\tgl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\r\n\t].join( \"\\n\" )\r\n};\r\n\r\nexport { FocusShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/FocusShader.js","<template>\r\n    <div class=\"webglPointsDynamic-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl dynamic particles + postprocessing<br/>\r\n\t\t\tmodels by <a href=\"http://sketchup.google.com/3dwarehouse/details?mid=2c6fd128fca34052adc5f5b98d513da1\" target=\"_blank\" rel=\"noopener\">Reallusion</a>\r\n\t\t\t<a href=\"http://sketchup.google.com/3dwarehouse/details?mid=f526cc4abf7cb68d76cab47c765b7255\" target=\"_blank\" rel=\"noopener\">iClone</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from '@/components/jsm/postprocessing/ShaderPass.js'\r\nimport { BloomPass } from '@/components/jsm/postprocessing/BloomPass.js'\r\nimport { FilmPass } from '@/components/jsm/postprocessing/FilmPass.js'\r\nimport { FocusShader } from '@/components/jsm/shaders/FocusShader.js'\r\nimport { OBJLoader } from '@/components/jsm/loaders/OBJLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            mesh: null,\r\n\t\t\tparent: null,\r\n            meshes: [],\r\n            clonemeshes: [],\r\n            composer: null,\r\n            effectFocus: null,\r\n\t\t\tclock: null,\r\n\t\t\tstats: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.clock = new this.$THREE.Clock()\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.querySelector('#container')\r\n            this.camera = new this.$THREE.PerspectiveCamera(20, this.$webglInnerWidth / window.innerHeight, 1, 50000)\r\n            this.camera.position.set(0, 700, 7000)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x000104)\r\n            this.scene.fog = new this.$THREE.FogExp2(0x000104, 0.0000675)\r\n            this.camera.lookAt(this.scene.position)\r\n            var loader = new OBJLoader()\r\n            loader.load('static/models/obj/male02/male02.obj', (object) => {\r\n                var positions = this.combineBuffer(object, 'position')\r\n                this.createMesh(positions, this.scene, 4.05, - 500, - 350, 600, 0xff7744)\r\n                this.createMesh(positions, this.scene, 4.05, 500, - 350, 0, 0xff5522)\r\n                this.createMesh(positions, this.scene, 4.05, - 250, - 350, 1500, 0xff9922)\r\n                this.createMesh(positions, this.scene, 4.05, - 250, - 350, - 1500, 0xff99ff)\r\n            })\r\n            loader.load('static/models/obj/female02/female02.obj', (object) => {\r\n                var positions = this.combineBuffer(object, 'position')\r\n                this.createMesh(positions, this.scene, 4.05, - 1000, - 350, 0, 0xffdd44)\r\n                this.createMesh(positions, this.scene, 4.05, 0, - 350, 0, 0xffffff)\r\n                this.createMesh(positions, this.scene, 4.05, 1000, - 350, 400, 0xff4422)\r\n                this.createMesh(positions, this.scene, 4.05, 250, - 350, 1500, 0xff9955)\r\n                this.createMesh(positions, this.scene, 4.05, 250, - 350, 2500, 0xff77dd)\r\n            })\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.autoClear = false\r\n            container.appendChild(this.renderer.domElement)\r\n            this.parent = new this.$THREE.Object3D()\r\n            this.scene.add(this.parent)\r\n            var grid = new this.$THREE.Points(new this.$THREE.PlaneBufferGeometry(15000, 15000, 64, 64), new this.$THREE.PointsMaterial({ color: 0xff0000, size: 10 }))\r\n            grid.position.y = - 400\r\n            grid.rotation.x = - Math.PI / 2\r\n            this.parent.add(grid)\r\n            // postprocessing\r\n            var renderModel = new RenderPass(this.scene, this.camera)\r\n            var effectBloom = new BloomPass(0.75)\r\n            var effectFilm = new FilmPass(0.5, 0.5, 1448, false)\r\n            this.effectFocus = new ShaderPass(FocusShader)\r\n            this.effectFocus.uniforms[ \"screenWidth\" ].value = this.$webglInnerWidth * window.devicePixelRatio\r\n            this.effectFocus.uniforms[ \"screenHeight\" ].value = window.innerHeight * window.devicePixelRatio\r\n            this.composer = new EffectComposer(this.renderer)\r\n            this.composer.addPass(renderModel)\r\n            this.composer.addPass(effectBloom)\r\n            this.composer.addPass(effectFilm)\r\n            this.composer.addPass(this.effectFocus)\r\n            //stats\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.camera.lookAt(this.scene.position)\r\n            this.composer.setSize(window.innerWidth - 281, window.innerHeight)\r\n            this.effectFocus.uniforms[ \"screenWidth\" ].value = (window.innerWidth - 281) * window.devicePixelRatio\r\n            this.effectFocus.uniforms[ \"screenHeight\" ].value = window.innerHeight * window.devicePixelRatio\r\n        },\r\n        combineBuffer(model, bufferName) {\r\n            var count = 0\r\n            model.traverse((child) => {\r\n                if (child.isMesh) {\r\n                    var buffer = child.geometry.attributes[ bufferName ]\r\n                    count += buffer.array.length\r\n                }\r\n            })\r\n            var combined = new Float32Array(count)\r\n            var offset = 0\r\n            model.traverse((child) => {\r\n                if (child.isMesh) {\r\n                    var buffer = child.geometry.attributes[ bufferName ]\r\n                    combined.set(buffer.array, offset)\r\n                    offset += buffer.array.length\r\n                }\r\n            })\r\n            return new this.$THREE.BufferAttribute(combined, 3)\r\n        },\r\n        createMesh(positions, scene, scale, x, y, z, color) {\r\n            var geometry = new this.$THREE.BufferGeometry()\r\n            geometry.setAttribute('position', positions.clone())\r\n            geometry.setAttribute('initialPosition', positions.clone())\r\n            geometry.attributes.position.setUsage(this.$THREE.DynamicDrawUsage)\r\n            var clones = [\r\n                [ 6000, 0, - 4000 ],\r\n                [ 5000, 0, 0 ],\r\n                [ 1000, 0, 5000 ],\r\n                [ 1000, 0, - 5000 ],\r\n                [ 4000, 0, 2000 ],\r\n                [ - 4000, 0, 1000 ],\r\n                [ - 5000, 0, - 5000 ],\r\n                [ 0, 0, 0 ]\r\n            ]\r\n            for (var i = 0; i < clones.length; i ++) {\r\n                var c = (i < clones.length - 1) ? 0x252525 : color\r\n                this.mesh = new this.$THREE.Points(geometry, new this.$THREE.PointsMaterial({ size: 30, color: c }))\r\n                this.mesh.scale.x = this.mesh.scale.y = this.mesh.scale.z = scale\r\n                this.mesh.position.x = x + clones[ i ][ 0 ]\r\n                this.mesh.position.y = y + clones[ i ][ 1 ]\r\n                this.mesh.position.z = z + clones[ i ][ 2 ]\r\n                this.parent.add(this.mesh)\r\n                this.clonemeshes.push({ mesh: this.mesh, speed: 0.5 + Math.random() })\r\n            }\r\n            this.meshes.push({\r\n                mesh: this.mesh, verticesDown: 0, verticesUp: 0, direction: 0, speed: 15, delay: Math.floor(200 + 200 * Math.random()),\r\n                start: Math.floor(100 + 200 * Math.random()),\r\n            })\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            var delta = 10 * this.clock.getDelta()\r\n            delta = delta < 2 ? delta : 2\r\n            this.parent.rotation.y += - 0.02 * delta\r\n            for (var j = 0; j < this.clonemeshes.length; j ++) {\r\n                var cm = this.clonemeshes[ j ]\r\n                cm.mesh.rotation.y += - 0.1 * delta * cm.speed\r\n            }\r\n            for (var j = 0; j < this.meshes.length; j ++) {\r\n                var data = this.meshes[ j ]\r\n                var positions = data.mesh.geometry.attributes.position\r\n                var initialPositions = data.mesh.geometry.attributes.initialPosition\r\n                var count = positions.count\r\n                if (data.start > 0) {\r\n                    data.start -= 1\r\n                } else {\r\n                    if (data.direction === 0) {\r\n                        data.direction = - 1\r\n                    }\r\n                }\r\n                for (var i = 0; i < count; i ++) {\r\n                    var px = positions.getX(i)\r\n                    var py = positions.getY(i)\r\n                    var pz = positions.getZ(i)\r\n                    // falling down\r\n                    if (data.direction < 0) {\r\n                        if (py > 0) {\r\n                            positions.setXYZ(\r\n                                i,\r\n                                px + 1.5 * (0.50 - Math.random()) * data.speed * delta,\r\n                                py + 3.0 * (0.25 - Math.random()) * data.speed * delta,\r\n                                pz + 1.5 * (0.50 - Math.random()) * data.speed * delta\r\n                        )\r\n                        } else {\r\n                            data.verticesDown += 1\r\n                        }\r\n                    }\r\n                    // rising up\r\n                    if (data.direction > 0) {\r\n                        var ix = initialPositions.getX(i)\r\n                        var iy = initialPositions.getY(i)\r\n                        var iz = initialPositions.getZ(i)\r\n                        var dx = Math.abs(px - ix)\r\n                        var dy = Math.abs(py - iy)\r\n                        var dz = Math.abs(pz - iz)\r\n                        var d = dx + dy + dx\r\n                        if (d > 1) {\r\n                            positions.setXYZ(\r\n                                i,\r\n                                px - (px - ix) / dx * data.speed * delta * (0.85 - Math.random()),\r\n                                py - (py - iy) / dy * data.speed * delta * (1 + Math.random()),\r\n                                pz - (pz - iz) / dz * data.speed * delta * (0.85 - Math.random())\r\n                        )\r\n                        } else {\r\n                            data.verticesUp += 1\r\n                        }\r\n                    }\r\n                }\r\n                // all vertices down\r\n                if (data.verticesDown >= count) {\r\n                    if (data.delay <= 0) {\r\n                        data.direction = 1\r\n                        data.speed = 5\r\n                        data.verticesDown = 0\r\n                        data.delay = 320\r\n                    } else {\r\n                        data.delay -= 1\r\n                    }\r\n                }\r\n                // all vertices up\r\n                if (data.verticesUp >= count) {\r\n                    if (data.delay <= 0) {\r\n                        data.direction = - 1\r\n                        data.speed = 15\r\n                        data.verticesUp = 0\r\n                        data.delay = 120\r\n                    } else {\r\n                        data.delay -= 1\r\n                    }\r\n                }\r\n                positions.needsUpdate = true\r\n            }\r\n            this.composer.render(0.01)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglPointsDynamic-container {\r\n    width: 100%;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/points/webglPointsDynamic.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglPointsDynamic-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl dynamic particles + postprocessing\"),_c('br'),_vm._v(\"\\n\\t\\t\\tmodels by \"),_c('a',{attrs:{\"href\":\"http://sketchup.google.com/3dwarehouse/details?mid=2c6fd128fca34052adc5f5b98d513da1\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Reallusion\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"http://sketchup.google.com/3dwarehouse/details?mid=f526cc4abf7cb68d76cab47c765b7255\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"iClone\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-079fa2a3\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/points/webglPointsDynamic.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-079fa2a3\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglPointsDynamic.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPointsDynamic.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPointsDynamic.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-079fa2a3\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglPointsDynamic.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-079fa2a3\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/points/webglPointsDynamic.vue\n// module id = null\n// module chunks = ","/**\r\n * Film grain & scanlines shader\r\n *\r\n * - ported from HLSL to WebGL / GLSL\r\n * http://www.truevision3d.com/forums/showcase/staticnoise_colorblackwhite_scanline_shaders-t18698.0.html\r\n *\r\n * Screen Space Static Postprocessor\r\n *\r\n * Produces an analogue noise overlay similar to a film grain / TV static\r\n *\r\n * Original implementation and noise algorithm\r\n * Pat 'Hawthorne' Shearon\r\n *\r\n * Optimized scanlines + noise version with intensity scaling\r\n * Georg 'Leviathan' Steinrohder\r\n *\r\n * This version is provided under a Creative Commons Attribution 3.0 License\r\n * http://creativecommons.org/licenses/by/3.0/\r\n */\r\n\r\nvar FilmShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"time\": { value: 0.0 },\r\n\t\t\"nIntensity\": { value: 0.5 },\r\n\t\t\"sIntensity\": { value: 0.05 },\r\n\t\t\"sCount\": { value: 4096 },\r\n\t\t\"grayscale\": { value: 1 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"#include <common>\",\r\n\r\n\t\t// control parameter\r\n\t\t\"uniform float time;\",\r\n\r\n\t\t\"uniform bool grayscale;\",\r\n\r\n\t\t// noise effect intensity value (0 = no effect, 1 = full effect)\r\n\t\t\"uniform float nIntensity;\",\r\n\r\n\t\t// scanlines effect intensity value (0 = no effect, 1 = full effect)\r\n\t\t\"uniform float sIntensity;\",\r\n\r\n\t\t// scanlines effect count value (0 = no effect, 4096 = full effect)\r\n\t\t\"uniform float sCount;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t// sample the source\r\n\t\t\"\tvec4 cTextureScreen = texture2D( tDiffuse, vUv );\",\r\n\r\n\t\t// make some noise\r\n\t\t\"\tfloat dx = rand( vUv + time );\",\r\n\r\n\t\t// add noise\r\n\t\t\"\tvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );\",\r\n\r\n\t\t// get us a sine and cosine\r\n\t\t\"\tvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\",\r\n\r\n\t\t// add scanlines\r\n\t\t\"\tcResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\",\r\n\r\n\t\t// interpolate between source and result by intensity\r\n\t\t\"\tcResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\",\r\n\r\n\t\t// convert to grayscale if desired\r\n\t\t\"\tif( grayscale ) {\",\r\n\r\n\t\t\"\t\tcResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\",\r\n\r\n\t\t\"\t}\",\r\n\r\n\t\t\"\tgl_FragColor =  vec4( cResult, cTextureScreen.a );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { FilmShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/FilmShader.js","import {\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\nimport { Pass } from \"../postprocessing/Pass.js\";\r\nimport { FilmShader } from \"../shaders/FilmShader.js\";\r\n\r\nvar FilmPass = function ( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tif ( FilmShader === undefined )\r\n\t\tconsole.error( \"FilmPass relies on FilmShader\" );\r\n\r\n\tvar shader = FilmShader;\r\n\r\n\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\tthis.material = new ShaderMaterial( {\r\n\r\n\t\tuniforms: this.uniforms,\r\n\t\tvertexShader: shader.vertexShader,\r\n\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t} );\r\n\r\n\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\r\n\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\r\n\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\r\n\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\r\n\r\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\r\n\r\n};\r\n\r\nFilmPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: FilmPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime /*, maskActive */ ) {\r\n\r\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ \"time\" ].value += deltaTime;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\tif ( this.clear ) renderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { FilmPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/FilmPass.js"],"sourceRoot":""}