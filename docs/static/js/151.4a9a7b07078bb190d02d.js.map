{"version":3,"sources":["webpack:///src/views/clipping/webglClippingStencil.vue","webpack:///./src/views/clipping/webglClippingStencil.vue?7712","webpack:///./src/views/clipping/webglClippingStencil.vue"],"names":["webglClippingStencil","data","camera","scene","renderer","object","stats","planes","planeObjects","planeHelpers","clock","params","animate","planeX","varant","negated","displayHelper","planeY","planeZ","gui","mounted","this","init","beforeDestroy","destroy","methods","createPlaneStencilGroup","geometry","plane","renderOrder","group","$THREE","Group","baseMat","MeshBasicMaterial","depthWrite","depthTest","colorWrite","stencilWrite","stencilFunc","AlwaysStencilFunc","mat0","clone","side","BackSide","clippingPlanes","stencilFail","IncrementWrapStencilOp","stencilZFail","stencilZPass","mesh0","Mesh","add","mat1","FrontSide","DecrementWrapStencilOp","mesh1","_this","Clock","Scene","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","AmbientLight","dirLight","DirectionalLight","castShadow","shadow","right","left","top","bottom","mapSize","width","height","Plane","Vector3","map","p","PlaneHelper","forEach","ph","visible","TorusKnotBufferGeometry","planeGeom","PlaneBufferGeometry","i","poGroup","stencilGroup","planeMat","MeshStandardMaterial","color","metalness","roughness","filter","stencilRef","NotEqualStencilFunc","ReplaceStencilOp","po","onAfterRender","clearStencil","push","material","clipShadows","shadowSide","DoubleSide","clippedColorFront","ground","ShadowMaterial","opacity","rotation","x","Math","PI","y","receiveShadow","$Stats","dom","style","document","getElementsByClassName","appendChild","WebGLRenderer","antialias","shadowMap","enabled","setPixelRatio","devicePixelRatio","setSize","setClearColor","addEventListener","onWindowResize","domElement","localClippingEnabled","controls","OrbitControls","minDistance","maxDistance","update","dat_gui_module","addFolder","onChange","v","min","max","d","negate","open","$onWindowResize","delta","getDelta","requestAnimationFrame","length","coplanarPoint","lookAt","normal","z","begin","render","end","clipping_webglClippingStencil","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/151.4a9a7b07078bb190d02d.js","sourcesContent":["<template>\r\n    <div class=\"webglClippingStencil-container\">\r\n        <div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - solid geometry with clip planes and stencil materials</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            object: null,\r\n            stats: null,\r\n            planes: null,\r\n            planeObjects: null,\r\n            planeHelpers: null,\r\n\t\t\tclock: null,\r\n\t\t\tparams: {\r\n\t\t\t\tanimate: true,\r\n\t\t\t\tplaneX: {\r\n\t\t\t\t\tvarant: 0,\r\n\t\t\t\t\tnegated: false,\r\n\t\t\t\t\tdisplayHelper: false\r\n\t\t\t\t},\r\n\t\t\t\tplaneY: {\r\n\t\t\t\t\tvarant: 0,\r\n\t\t\t\t\tnegated: false,\r\n\t\t\t\t\tdisplayHelper: false\r\n\t\t\t\t},\r\n\t\t\t\tplaneZ: {\r\n\t\t\t\t\tvarant: 0,\r\n\t\t\t\t\tnegated: false,\r\n\t\t\t\t\tdisplayHelper: false\r\n\t\t\t\t}\r\n            },\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        createPlaneStencilGroup(geometry, plane, renderOrder) {\r\n            var group = new this.$THREE.Group()\r\n            var baseMat = new this.$THREE.MeshBasicMaterial()\r\n            baseMat.depthWrite = false\r\n            baseMat.depthTest = false\r\n            baseMat.colorWrite = false\r\n            baseMat.stencilWrite = true\r\n            baseMat.stencilFunc = this.$THREE.AlwaysStencilFunc\r\n            // back faces\r\n            var mat0 = baseMat.clone()\r\n            mat0.side = this.$THREE.BackSide\r\n            mat0.clippingPlanes = [ plane ]\r\n            mat0.stencilFail = this.$THREE.IncrementWrapStencilOp\r\n            mat0.stencilZFail = this.$THREE.IncrementWrapStencilOp\r\n            mat0.stencilZPass = this.$THREE.IncrementWrapStencilOp\r\n            var mesh0 = new this.$THREE.Mesh(geometry, mat0)\r\n            mesh0.renderOrder = renderOrder\r\n            group.add(mesh0)\r\n            // front faces\r\n            var mat1 = baseMat.clone()\r\n            mat1.side = this.$THREE.FrontSide\r\n            mat1.clippingPlanes = [ plane ]\r\n            mat1.stencilFail = this.$THREE.DecrementWrapStencilOp\r\n            mat1.stencilZFail = this.$THREE.DecrementWrapStencilOp\r\n            mat1.stencilZPass = this.$THREE.DecrementWrapStencilOp\r\n            var mesh1 = new this.$THREE.Mesh(geometry, mat1)\r\n            mesh1.renderOrder = renderOrder\r\n            group.add(mesh1)\r\n            return group\r\n        },\r\n        init() {\r\n            this.clock = new this.$THREE.Clock()\r\n            this.scene = new this.$THREE.Scene()\r\n            this.camera = new this.$THREE.PerspectiveCamera(36, this.$webglInnerWidth / window.innerHeight, 1, 100)\r\n            this.camera.position.set(2, 2, 2)\r\n            this.scene.add(new this.$THREE.AmbientLight(0xffffff, 0.5))\r\n            var dirLight = new this.$THREE.DirectionalLight(0xffffff, 1)\r\n            dirLight.position.set(5, 10, 7.5)\r\n            dirLight.castShadow = true\r\n            dirLight.shadow.camera.right = 2\r\n            dirLight.shadow.camera.left = - 2\r\n            dirLight.shadow.camera.top\t= 2\r\n            dirLight.shadow.camera.bottom = - 2\r\n            dirLight.shadow.mapSize.width = 1024\r\n            dirLight.shadow.mapSize.height = 1024\r\n            this.scene.add(dirLight)\r\n            this.planes = [\r\n                new this.$THREE.Plane(new this.$THREE.Vector3(- 1, 0, 0), 0),\r\n                new this.$THREE.Plane(new this.$THREE.Vector3(0, - 1, 0), 0),\r\n                new this.$THREE.Plane(new this.$THREE.Vector3(0, 0, - 1), 0)\r\n            ]\r\n            this.planeHelpers = this.planes.map(p => new this.$THREE.PlaneHelper(p, 2, 0xffffff))\r\n            this.planeHelpers.forEach(ph => {\r\n                ph.visible = false\r\n                this.scene.add(ph)\r\n            })\r\n            var geometry = new this.$THREE.TorusKnotBufferGeometry(0.4, 0.15, 220, 60)\r\n            this.object = new this.$THREE.Group()\r\n            this.scene.add(this.object)\r\n            // Set up clip plane rendering\r\n            this.planeObjects = []\r\n            var planeGeom = new this.$THREE.PlaneBufferGeometry(4, 4)\r\n            for (var i = 0; i < 3; i ++) {\r\n                var poGroup = new this.$THREE.Group()\r\n                var plane = this.planes[ i ]\r\n                var stencilGroup = this.createPlaneStencilGroup(geometry, plane, i + 1)\r\n                // plane is clipped by the other clipping this.planes\r\n                var planeMat =\r\n                    new this.$THREE.MeshStandardMaterial({\r\n                        color: 0xE91E63,\r\n                        metalness: 0.1,\r\n                        roughness: 0.75,\r\n                        clippingPlanes: this.planes.filter(p => p !== plane),\r\n                        stencilWrite: true,\r\n                        stencilRef: 0,\r\n                        stencilFunc: this.$THREE.NotEqualStencilFunc,\r\n                        stencilFail: this.$THREE.ReplaceStencilOp,\r\n                        stencilZFail: this.$THREE.ReplaceStencilOp,\r\n                        stencilZPass: this.$THREE.ReplaceStencilOp,\r\n                    })\r\n                var po = new this.$THREE.Mesh(planeGeom, planeMat)\r\n                po.onAfterRender = function (renderer) {\r\n                    renderer.clearStencil()\r\n                }\r\n                po.renderOrder = i + 1.1\r\n                this.object.add(stencilGroup)\r\n                poGroup.add(po)\r\n                this.planeObjects.push(po)\r\n                this.scene.add(poGroup)\r\n            }\r\n            var material = new this.$THREE.MeshStandardMaterial({\r\n                color: 0xFFC107,\r\n                metalness: 0.1,\r\n                roughness: 0.75,\r\n                clippingPlanes: this.planes,\r\n                clipShadows: true,\r\n                shadowSide: this.$THREE.DoubleSide,\r\n            })\r\n            // add the color\r\n            var clippedColorFront = new this.$THREE.Mesh(geometry, material)\r\n            clippedColorFront.castShadow = true\r\n            clippedColorFront.renderOrder = 6\r\n            this.object.add(clippedColorFront)\r\n            var ground = new this.$THREE.Mesh(\r\n                new this.$THREE.PlaneBufferGeometry(9, 9, 1, 1),\r\n                new this.$THREE.ShadowMaterial({ color: 0, opacity: 0.25, side: this.$THREE.DoubleSide })\r\n            )\r\n            ground.rotation.x = - Math.PI / 2 // rotates X/Y to X/Z\r\n            ground.position.y = - 1\r\n            ground.receiveShadow = true\r\n            this.scene.add(ground)\r\n            // Stats\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglClippingStencil-container')[0].appendChild(this.stats.dom)\r\n            // Renderer\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.setClearColor(0x263238)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            document.getElementsByClassName('webglClippingStencil-container')[0].appendChild(this.renderer.domElement)\r\n            this.renderer.localClippingEnabled = true\r\n            // Controls\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 2\r\n            controls.maxDistance = 20\r\n            controls.update()\r\n            // GUI\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'animate')\r\n            var planeX = this.gui.addFolder('planeX')\r\n            planeX.add(this.params.planeX, 'displayHelper').onChange(v => this.planeHelpers[ 0 ].visible = v)\r\n            planeX.add(this.params.planeX, 'varant').min(- 1).max(1).onChange(d => this.planes[ 0 ].varant = d)\r\n            planeX.add(this.params.planeX, 'negated').onChange(() => {\r\n                this.planes[ 0 ].negate()\r\n                this.params.planeX.varant = this.planes[ 0 ].varant\r\n            })\r\n            planeX.open()\r\n            var planeY = this.gui.addFolder('planeY')\r\n            planeY.add(this.params.planeY, 'displayHelper').onChange(v => this.planeHelpers[ 1 ].visible = v)\r\n            planeY.add(this.params.planeY, 'varant').min(- 1).max(1).onChange(d => this.planes[ 1 ].varant = d)\r\n            planeY.add(this.params.planeY, 'negated').onChange(() => {\r\n                this.planes[ 1 ].negate()\r\n                this.params.planeY.varant = this.planes[ 1 ].varant\r\n            })\r\n            planeY.open()\r\n            var planeZ = this.gui.addFolder('planeZ')\r\n            planeZ.add(this.params.planeZ, 'displayHelper').onChange(v => this.planeHelpers[ 2 ].visible = v)\r\n            planeZ.add(this.params.planeZ, 'varant').min(- 1).max(1).onChange(d => this.planes[ 2 ].varant = d)\r\n            planeZ.add(this.params.planeZ, 'negated').onChange(() => {\r\n                this.planes[ 2 ].negate()\r\n                this.params.planeZ.varant = this.planes[ 2 ].varant\r\n            })\r\n            planeZ.open()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            var delta = this.clock.getDelta()\r\n            requestAnimationFrame(this.animate)\r\n            if (this.params.animate) {\r\n                this.object.rotation.x += delta * 0.5\r\n                this.object.rotation.y += delta * 0.2\r\n            }\r\n            for (var i = 0; i < this.planeObjects.length; i ++) {\r\n                var plane = this.planes[ i ]\r\n                var po = this.planeObjects[ i ]\r\n                plane.coplanarPoint(po.position)\r\n                po.lookAt(\r\n                    po.position.x - plane.normal.x,\r\n                    po.position.y - plane.normal.y,\r\n                    po.position.z - plane.normal.z,\r\n            )\r\n            }\r\n            this.stats.begin()\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.end()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglClippingStencil-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/clipping/webglClippingStencil.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglClippingStencil-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - solid geometry with clip planes and stencil materials\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-74caff66\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/clipping/webglClippingStencil.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-74caff66\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglClippingStencil.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglClippingStencil.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglClippingStencil.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-74caff66\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglClippingStencil.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-74caff66\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/clipping/webglClippingStencil.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}