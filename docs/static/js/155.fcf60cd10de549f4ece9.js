webpackJsonp([155],{"M0/+":function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=i("wIBv"),n={data:function(){return{fs:null,vs:null,stats:null,camera:null,scene:null,renderer:null,controls:null,group:null,loader:null}},mounted:function(){var t=this;this.fs="\n            varying vec2 vUv;\n\t\t\tvarying float flip;\n\t\t\tuniform vec3 color;\n\t\t\tfloat inCurve(vec2 uv) {\n\t\t\t\treturn uv.x * uv.x - uv.y;\n\t\t\t}\n\t\t\tfloat delta = 0.1;\n\t\t\tvoid main() {\n\t\t\t\tfloat x = inCurve(vUv);\n\t\t\t\tif (x * flip > 0.) discard;\n\t\t\t\tgl_FragColor = vec4(color, 1.);\n            }",this.vs="\n            varying vec2 vUv;\n\t\t\tattribute float invert;\n\t\t\tvarying float flip;\n\t\t\tvoid main() {\n\t\t\t\tvUv = uv;\n\t\t\t\tflip = invert;\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n            }",this.loader=new this.$THREE.FontLoader,this.loader.load("static/fonts/helvetiker_regular.typeface.json",function(e){t.init(e),t.animate()})},methods:{init:function(t){this.camera=new this.$THREE.PerspectiveCamera(50,this.$webglInnerWidth/window.innerHeight,1,1e4),this.camera.position.set(50,100,500),this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(15790320);this.group=new this.$THREE.Group,this.scene.add(this.group);var e=new this.$THREE.MeshBasicMaterial({color:new this.$THREE.Color(0,0,1),side:this.$THREE.DoubleSide,wireframe:!0}),i=t.generateShapes("&",180),n=new this.$THREE.ShapeBufferGeometry(i),r=new this.$THREE.Mesh(n,e);r.position.x=-200,this.group.add(r);var o,a,h,l,u,d=new this.$THREE.Vector2,c=new this.$THREE.Vector2,v=this;function E(t){var e,i=[],s=[],n=[],r=[];i.push(t[0].getPoint(0,new v.$THREE.Vector2)),s.push(t[0].getPoint(0,new v.$THREE.Vector2));for(var o=0;o<t.length;o++){var a=t[o];if(a instanceof v.$THREE.LineCurve)i.push(a.v2),s.push(a.v2);else if(a instanceof v.$THREE.QuadraticBezierCurve){d=d.subVectors(a.v1,a.v0),c=c.subVectors(a.v2,a.v1),(e=d.x*c.y-d.y*c.x<0)?(i.push(a.v1),i.push(a.v2),s.push(a.v2)):(i.push(a.v2),s.push(a.v1),s.push(a.v2));var h=e?1:-1;r.push(h,h,h),n.push(a.v0,a.v1,a.v2)}}return{pts:i,pts2:s,beziers:n,invert:r}}for(var f,p=[],w=[],R=[],m=[],$=0;$<i.length;$++){o=(f=E((h=i[$]).curves)).pts,a=f.pts2,R=R.concat(f.beziers),m=m.concat(f.invert),l=new this.$THREE.Shape(o),u=new this.$THREE.Shape(a),p.push(l),w.push(u);for(var H=0;H<h.holes.length;H++)o=(f=E(h.holes[H].curves)).pts,a=f.pts2,R=R.concat(f.beziers),m=m.concat(f.invert),l.holes.push(new this.$THREE.Shape(o)),u.holes.push(new this.$THREE.Shape(a))}var g=new this.$THREE.BufferGeometry,T=[],b=[];for(H=0;H<R.length;H++){var S=R[H];T.push(S.x,S.y,0)}for(H=0;H<R.length;H+=3)b.push(0,0,.5,0,1,1);g.setAttribute("position",new this.$THREE.Float32BufferAttribute(T,3)),g.setAttribute("uv",new this.$THREE.Float32BufferAttribute(b,2)),g.setAttribute("invert",new this.$THREE.Float32BufferAttribute(m,1)),n=new this.$THREE.ShapeBufferGeometry(p),(r=new this.$THREE.Mesh(n,e)).position.x=200,this.group.add(r),n=new this.$THREE.ShapeBufferGeometry(w),(r=new this.$THREE.Mesh(n,new this.$THREE.MeshBasicMaterial({color:new this.$THREE.Color(1,0,0),side:this.$THREE.DoubleSide,wireframe:!0}))).position.x=200,this.group.add(r);var y=new this.$THREE.ShaderMaterial({uniforms:{color:{value:new this.$THREE.Color(7549746.75)}},vertexShader:this.vs,fragmentShader:this.fs,side:this.$THREE.DoubleSide});(r=new this.$THREE.Mesh(g,y)).rotation.y=2*Math.PI,this.group.add(r),n=new this.$THREE.ShapeBufferGeometry(w),(r=new this.$THREE.Mesh(n,new this.$THREE.MeshBasicMaterial({color:7549746.75,side:this.$THREE.DoubleSide}))).rotation.y=2*Math.PI,this.group.add(r),this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),document.getElementsByClassName("webglShadersVector-container")[0].appendChild(this.renderer.domElement),this.controls=new s.b(this.camera,this.renderer.domElement),this.controls.target.set(50,100,0),this.controls.update(),this.stats=new this.$Stats,this.stats.dom.style.left="280px",document.getElementsByClassName("webglShadersVector-container")[0].appendChild(this.stats.dom),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){this.renderer.render(this.scene,this.camera)}}},r={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglShadersVector-container"},[e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" webgl - Resolution-Independent Vector Fonts. "),e("a",{attrs:{href:"https://github.com/mrdoob/three.js/issues/4746"}},[this._v("info")]),this._v(".\n\t\t")])])}]};var o=i("VU/8")(n,r,!1,function(t){i("faQh")},"data-v-45db3e57",null);e.default=o.exports},faQh:function(t,e){}});
//# sourceMappingURL=155.fcf60cd10de549f4ece9.js.map