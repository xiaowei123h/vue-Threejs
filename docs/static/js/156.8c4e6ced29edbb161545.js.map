{"version":3,"sources":["webpack:///src/views/animation/webglAnimationSkinningBlending.vue","webpack:///./src/views/animation/webglAnimationSkinningBlending.vue?d5e4","webpack:///./src/views/animation/webglAnimationSkinningBlending.vue"],"names":["webglAnimationSkinningBlending","data","scene","renderer","camera","stats","mixer","clock","model","skeleton","crossFadeControls","idleAction","walkAction","runAction","idleWeight","walkWeight","runWeight","actions","settings","singleStepMode","sizeOfNextStep","gui","mounted","this","init","beforeDestroy","destroy","methods","_this","container","document","getElementById","$moduleTHREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","lookAt","Clock","Scene","background","Color","fog","Fog","hemiLight","HemisphereLight","add","dirLight","DirectionalLight","castShadow","shadow","top","bottom","left","right","near","far","CameraHelper","mesh","Mesh","PlaneBufferGeometry","MeshPhongMaterial","color","depthWrite","rotation","x","Math","PI","receiveShadow","GLTFLoader","load","gltf","console","log","traverse","object","isMesh","SkeletonHelper","visible","createPanel","animations","AnimationMixer","clipAction","activateAllActions","animate","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","shadowMap","enabled","appendChild","domElement","$Stats","dom","style","addEventListener","onWindowResize","$onWindowResize","_this2","dat_gui_module","width","folder1","addFolder","folder2","folder3","folder4","folder5","folder6","show model","show skeleton","deactivate all","deactivateAllActions","activate all","pause/continue","pauseContinue","make single step","toSingleStepMode","modify step size","from walk to idle","prepareCrossFade","from idle to walk","from walk to run","from run to walk","use default duration","set custom duration","modify idle weight","modify walk weight","modify run weight","modify time scale","onChange","showModel","showSkeleton","push","listen","weight","setWeight","modifyTimeScale","open","forEach","control","classList1","parentElement","classList","classList2","previousElementSibling","setDisabled","setEnabled","remove","action","stop","play","setEffectiveTimeScale","setEffectiveWeight","unPauseAllActions","paused","pauseAllActions","startAction","endAction","defaultDuration","duration","setCrossFadeDuration","executeCrossFade","synchronizeCrossFade","time","crossFadeTo","onLoopFinished","event","that","removeEventListener","visibility","speed","timeScale","updateWeightSliders","updateCrossFadeControls","requestAnimationFrame","getEffectiveWeight","mixerUpdateDelta","getDelta","update","render","animation_webglAnimationSkinningBlending","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/156.8c4e6ced29edbb161545.js","sourcesContent":["<template>\r\n    <div class=\"webglAnimationSkinningBlending-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - Skeletal Animation Blending\r\n\t\t\t(model from <a href=\"https://www.mixamo.com/\" target=\"_blank\" rel=\"noopener\">mixamo.com</a>)<br/>\r\n\t\t\tNote: crossfades are possible with blend weights being set to (1,0,0), (0,1,0) or (0,0,1)\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { GLTFLoader } from '@/components/jsm/loaders/GLTFLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            scene: null,\r\n            renderer: null,\r\n            camera: null,\r\n            stats: null,\r\n            mixer: null,\r\n            clock: null,\r\n            model: null,\r\n            skeleton: null,\r\n            crossFadeControls: [],\r\n            idleAction: null,\r\n            walkAction: null,\r\n            runAction: null,\r\n            idleWeight: null,\r\n            walkWeight: null,\r\n            runWeight: null,\r\n            actions: null,\r\n            settings: null,\r\n            singleStepMode: false,\r\n            sizeOfNextStep: 0,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.getElementById('container')\r\n            this.camera = new this.$moduleTHREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set( 1, 2, - 3 )\r\n            this.camera.lookAt(0,1,0)\r\n            this.clock = new this.$moduleTHREE.Clock()\r\n            this.scene = new this.$moduleTHREE.Scene()\r\n            this.scene.background = new this.$moduleTHREE.Color(0xa0a0a0)\r\n            this.scene.fog = new this.$moduleTHREE.Fog(0xa0a0a0, 10, 50)\r\n            var hemiLight = new this.$moduleTHREE.HemisphereLight(0xffffff, 0x444444)\r\n            hemiLight.position.set(0, 20, 0)\r\n            this.scene.add(hemiLight)\r\n            var dirLight = new this.$moduleTHREE.DirectionalLight(0xffffff)\r\n            dirLight.position.set(- 3, 10, - 10)\r\n            dirLight.castShadow = true\r\n            dirLight.shadow.camera.top = 2\r\n            dirLight.shadow.camera.bottom = - 2\r\n            dirLight.shadow.camera.left = - 2\r\n            dirLight.shadow.camera.right = 2\r\n            dirLight.shadow.camera.near = 0.1\r\n            dirLight.shadow.camera.far = 40\r\n            this.scene.add(dirLight)\r\n            this.scene.add(new this.$moduleTHREE.CameraHelper(dirLight.shadow.camera))\r\n            // ground\r\n            var mesh = new this.$moduleTHREE.Mesh(new this.$moduleTHREE.PlaneBufferGeometry(100, 100), new this.$moduleTHREE.MeshPhongMaterial({color: 0x999999, depthWrite: false}))\r\n            mesh.rotation.x = - Math.PI / 2\r\n            mesh.receiveShadow = true\r\n            // this.scene.add(mesh)\r\n            var loader = new GLTFLoader()\r\n            \r\n            loader.load('static/models/gltf/Soldier.glb', (gltf) => {\r\n                console.log('gltf')\r\n                console.log(gltf.scene)\r\n                this.model = gltf.scene\r\n                this.scene.add(gltf.scene)\r\n                this.model.traverse((object) => {\r\n                    if(object.isMesh) object.castShadow = true\r\n                })\r\n                //\r\n                this.skeleton = new this.$moduleTHREE.SkeletonHelper(this.model)\r\n                this.skeleton.visible = false\r\n                this.scene.add(this.skeleton)\r\n                //\r\n                this.createPanel()\r\n                //\r\n                console.log(gltf.animations)\r\n                var animations = gltf.animations\r\n                console.log('this.model')\r\n                console.log(this.model)\r\n                this.mixer = new this.$moduleTHREE.AnimationMixer(this.model)\r\n                this.idleAction = this.mixer.clipAction(animations[0])\r\n                this.walkAction = this.mixer.clipAction(animations[3])\r\n                this.runAction = this.mixer.clipAction(animations[1])\r\n                this.actions = [this.idleAction, this.walkAction, this.runAction]\r\n                this.activateAllActions()\r\n                this.animate()\r\n            })\r\n            this.renderer = new this.$moduleTHREE.WebGLRenderer({antialias: true})\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$moduleTHREE.sRGBEncoding\r\n            this.renderer.shadowMap.enabled = true\r\n            container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        createPanel() {\r\n            this.gui = new GUI({width: 310})\r\n            var folder1 = this.gui.addFolder('Visibility')\r\n            var folder2 = this.gui.addFolder('Activation/Deactivation')\r\n            var folder3 = this.gui.addFolder('Pausing/Stepping')\r\n            var folder4 = this.gui.addFolder('Crossfading')\r\n            var folder5 = this.gui.addFolder('Blend Weights')\r\n            var folder6 = this.gui.addFolder('General Speed')\r\n            this.settings = {\r\n                'show model': true,\r\n                'show skeleton': false,\r\n                'deactivate all': this.deactivateAllActions,\r\n                'activate all': this.activateAllActions,\r\n                'pause/continue': this.pauseContinue,\r\n                'make single step': this.toSingleStepMode,\r\n                'modify step size': 0.05,\r\n                'from walk to idle': () => {\r\n                    this.prepareCrossFade(this.walkAction, this.idleAction, 1.0)\r\n                },\r\n                'from idle to walk': () => {\r\n                    this.prepareCrossFade(this.idleAction, this.walkAction, 0.5)\r\n                },\r\n                'from walk to run': () => {\r\n                    this.prepareCrossFade(this.walkAction, this.runAction, 2.5)\r\n                },\r\n                'from run to walk': () => {\r\n                    this.prepareCrossFade(this.runAction, this.walkAction, 5.0)\r\n                },\r\n                'use default duration': true,\r\n                'set custom duration': 3.5,\r\n                'modify idle weight': 0.0,\r\n                'modify walk weight': 1.0,\r\n                'modify run weight': 0.0,\r\n                'modify time scale': 1.0\r\n            }\r\n            folder1.add(this.settings, 'show model').onChange(this.showModel)\r\n            folder1.add(this.settings, 'show skeleton').onChange(this.showSkeleton)\r\n            folder2.add(this.settings, 'deactivate all')\r\n            folder2.add(this.settings, 'activate all')\r\n            folder3.add(this.settings, 'pause/continue')\r\n            folder3.add(this.settings, 'make single step')\r\n            folder3.add(this.settings, 'modify step size', 0.01, 0.1, 0.001)\r\n            this.crossFadeControls.push(folder4.add(this.settings, 'from walk to idle'))\r\n            this.crossFadeControls.push(folder4.add(this.settings, 'from idle to walk'))\r\n            this.crossFadeControls.push(folder4.add(this.settings, 'from walk to run'))\r\n            this.crossFadeControls.push(folder4.add(this.settings, 'from run to walk'))\r\n            folder4.add(this.settings, 'use default duration')\r\n            folder4.add(this.settings, 'set custom duration', 0, 10, 0.01)\r\n            folder5.add(this.settings, 'modify idle weight', 0.0, 1.0, 0.01).listen().onChange((weight) => {\r\n                this.setWeight(this.idleAction, weight)\r\n            })\r\n            folder5.add(this.settings, 'modify walk weight', 0.0, 1.0, 0.01).listen().onChange((weight) => {\r\n                this.setWeight(this.walkAction, weight)\r\n            })\r\n            folder5.add(this.settings, 'modify run weight', 0.0, 1.0, 0.01).listen().onChange((weight) => {\r\n                this.setWeight(this.runAction, weight)\r\n            })\r\n            folder6.add(this.settings, 'modify time scale', 0.0, 1.5, 0.01).onChange(this.modifyTimeScale)\r\n            folder1.open()\r\n            folder2.open()\r\n            folder3.open()\r\n            folder4.open()\r\n            folder5.open()\r\n            folder6.open()\r\n            this.crossFadeControls.forEach((control) => {\r\n                control.classList1 = control.domElement.parentElement.parentElement.classList\r\n                control.classList2 = control.domElement.previousElementSibling.classList\r\n                control.setDisabled = () => {\r\n                    control.classList1.add('no-pointer-events')\r\n                    control.classList2.add('control-disabled')\r\n                }\r\n                control.setEnabled = () => {\r\n                    control.classList1.remove('no-pointer-events')\r\n                    control.classList2.remove('control-disabled')\r\n                }\r\n            })\r\n        },\r\n        deactivateAllActions() {\r\n            this.actions.forEach((action) => {\r\n                action.stop()\r\n            })\r\n        },\r\n        activateAllActions() {\r\n            this.setWeight(this.idleAction, this.settings['modify idle weight'])\r\n            this.setWeight(this.walkAction, this.settings['modify walk weight'])\r\n            this.setWeight(this.runAction, this.settings['modify run weight'])\r\n            this.actions.forEach((action) => {\r\n                action.play()\r\n            })\r\n        },\r\n        // This function is needed, since animationAction.crossFadeTo() disables its start action and sets\r\n\t\t// the start action's timeScale to ((start animation's duration) / (end animation's duration))\r\n        setWeight(action, weight) {\r\n            action.enabled = true\r\n            action.setEffectiveTimeScale(1)\r\n            action.setEffectiveWeight(weight)\r\n        },\r\n        pauseContinue() {\r\n            if (this.singleStepMode) {\r\n                this.singleStepMode = false\r\n                this.unPauseAllActions()\r\n            } else {\r\n                if (this.idleAction.paused) {\r\n                    this.unPauseAllActions()\r\n                } else {\r\n                    this.pauseAllActions()\r\n                }\r\n            }\r\n        },\r\n        unPauseAllActions() {\r\n            this.actions.forEach((action) => {\r\n                action.paused = false\r\n            })\r\n        },\r\n        pauseAllActions() {\r\n            this.actions.forEach((action) => {\r\n                action.paused = true\r\n            })\r\n        },\r\n        toSingleStepMode() {\r\n            this.unPauseAllActions()\r\n            this.singleStepMode = true\r\n            this.sizeOfNextStep = this.settings['modify step size']\r\n        },\r\n        prepareCrossFade(startAction, endAction, defaultDuration) {\r\n            // Switch default / custom crossfade duration (according to the user's choice)\r\n            var duration = this.setCrossFadeDuration(defaultDuration)\r\n            // Make sure that we don't go on in singleStepMode, and that all actions are unpaused\r\n            this.singleStepMode = false\r\n            this.unPauseAllActions()\r\n            // If the current action is 'idle' (duration 4 sec), execute the crossfade immediately;\r\n            // else wait until the current action has finished its current loop\r\n            if (startAction === this.idleAction) {\r\n                this.executeCrossFade(startAction, endAction, duration)\r\n            } else {\r\n                this.synchronizeCrossFade(startAction, endAction, duration)\r\n            }\r\n        },\r\n        setCrossFadeDuration(defaultDuration) {\r\n            // Switch default crossfade duration <-> custom crossfade duration\r\n            if (this.settings['use default duration']) {\r\n                return defaultDuration\r\n            } else {\r\n                return this.settings['set custom duration']\r\n            }\r\n        },\r\n        executeCrossFade(startAction, endAction, duration) {\r\n            // Not only the start action, but also the end action must get a weight of 1 before fading\r\n            // (concerning the start action this is already guaranteed in this place)\r\n            this.setWeight(endAction, 1)\r\n            endAction.time = 0\r\n            // Crossfade with warping - you can also try without warping by setting the third parameter to false\r\n            startAction.crossFadeTo(endAction, duration, true)\r\n        },\r\n        synchronizeCrossFade(startAction, endAction, duration) {\r\n            this.mixer.addEventListener('loop', onLoopFinished)\r\n            var that = this\r\n            function onLoopFinished(event) {\r\n                if (event.action === startAction) {\r\n                    that.mixer.removeEventListener('loop', onLoopFinished)\r\n                    that.executeCrossFade(startAction, endAction, duration)\r\n                }\r\n            }\r\n        },\r\n        showModel(visibility) {\r\n            this.model.visible = visibility\r\n        },\r\n        showSkeleton(visibility) {\r\n            this.skeleton.visible = visibility\r\n        },\r\n        modifyTimeScale(speed) {\r\n            this.mixer.timeScale = speed\r\n        },\r\n        // Called by the render loop\r\n        updateWeightSliders() {\r\n            this.settings['modify idle weight'] = this.idleWeight\r\n            this.settings['modify walk weight'] = this.walkWeight\r\n            this.settings['modify run weight'] = this.runWeight\r\n        },\r\n        // Called by the render loop\r\n        updateCrossFadeControls() {\r\n            this.crossFadeControls.forEach(function(control) {\r\n                control.setDisabled()\r\n            })\r\n            if (this.idleWeight === 1 && this.walkWeight === 0 && this.runWeight === 0) {\r\n                this.crossFadeControls[1].setEnabled()\r\n            }\r\n            if (this.idleWeight === 0 && this.walkWeight === 1 && this.runWeight === 0) {\r\n                this.crossFadeControls[0].setEnabled()\r\n                this.crossFadeControls[2].setEnabled()\r\n            }\r\n            if (this.idleWeight === 0 && this.walkWeight === 0 && this.runWeight === 1) {\r\n                this.crossFadeControls[3].setEnabled()\r\n            }\r\n        },\r\n        animate() {\r\n            // Render loop\r\n            requestAnimationFrame(this.animate)\r\n            this.idleWeight = this.idleAction.getEffectiveWeight()\r\n            this.walkWeight = this.walkAction.getEffectiveWeight()\r\n            this.runWeight = this.runAction.getEffectiveWeight()\r\n            // Update the panel values if weights are modified from \"outside\" (by crossfadings)\r\n            this.updateWeightSliders()\r\n            // Enable/disable crossfade controls according to current weight values\r\n            this.updateCrossFadeControls()\r\n            // Get the time elapsed since the last frame, used for mixer update (if not in single step mode)\r\n            var mixerUpdateDelta = this.clock.getDelta()\r\n            // If in single step mode, make one step and then do nothing (until the user clicks again)\r\n            if (this.singleStepMode) {\r\n                this.mixerUpdateDelta = this.sizeOfNextStep\r\n                this.sizeOfNextStep = 0\r\n            }\r\n            // Update the animation mixer, the stats panel, and render this frame\r\n            this.mixer.update(mixerUpdateDelta)\r\n            this.stats.update()\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglAnimationSkinningBlending-container {\r\n    width: 100%;\r\n}\r\n#info a {\r\n    color: #f00;\r\n}\r\n.ac {  /* prevent dat-gui from being selected */\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n}\r\n.no-pointer-events {\r\n    pointer-events: none;\r\n}\r\n.control-disabled {\r\n    color: #888;\r\n    text-decoration: line-through;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/animation/webglAnimationSkinningBlending.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglAnimationSkinningBlending-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - Skeletal Animation Blending\\n\\t\\t\\t(model from \"),_c('a',{attrs:{\"href\":\"https://www.mixamo.com/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"mixamo.com\")]),_vm._v(\")\"),_c('br'),_vm._v(\"\\n\\t\\t\\tNote: crossfades are possible with blend weights being set to (1,0,0), (0,1,0) or (0,0,1)\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-730823ba\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/animation/webglAnimationSkinningBlending.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-730823ba\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglAnimationSkinningBlending.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglAnimationSkinningBlending.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglAnimationSkinningBlending.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-730823ba\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglAnimationSkinningBlending.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-730823ba\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/animation/webglAnimationSkinningBlending.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}