{"version":3,"sources":["webpack:///./src/components/jsm/libs/inflate.module.min.js","webpack:///./src/components/jsm/loaders/EXRLoader.js","webpack:///src/views/loader/webglLoaderTextureExr.vue","webpack:///./src/views/loader/webglLoaderTextureExr.vue?9f5b","webpack:///./src/views/loader/webglLoaderTextureExr.vue"],"names":["__webpack_require__","d","__webpack_exports__","Inflate","mod","l","aa","r","c","e","a","split","b","execScript","length","shift","t","Uint8Array","Uint16Array","Uint32Array","DataView","v","f","g","h","k","m","n","p","s","x","Number","POSITIVE_INFINITY","Array","w","this","input","i","y","index","bufferSize","bufferType","resize","A","z","j","Error","B","prototype","C","set","subarray","ba","ca","S","T","U","V","D","u","M","F","q","E","slice","P","fa","G","H","I","J","K","L","da","ea","N","O","R","ga","Q","W","verify","ha","method","o","push","buffer","charCodeAt","Y","Z","$","ia","X","ADAPTIVE","BLOCK","Object","keys","Zlib","EXRLoader","manager","DataTextureLoader","call","type","FloatType","assign","create","constructor","parse","USHORT_RANGE","BITMAP_SIZE","HUF_DECBITS","HUF_ENCSIZE","HUF_DECSIZE","HUF_DECMASK","A_OFFSET","MOD_MASK","SHORT_ZEROCODE_RUN","LONG_ZEROCODE_RUN","SHORTEST_LONG_RUN","ULONG_SIZE","FLOAT32_SIZE","INT32_SIZE","INT16_SIZE","INT8_SIZE","STATIC_HUFFMAN","DEFLATE","UNKNOWN","LOSSY_DCT","RLE","logBase","Math","pow","tmpDataView","ArrayBuffer","frexp","value","setFloat64","bits","getUint32","exponent","mantissa","steps","min","ceil","abs","result","floor","ldexp","getBitsReturn","lc","getBits","nBits","uInt8Array","inOffset","parseUint8Array","hufTableBuffer","hufUnpackEncTable","inDataView","ni","im","iM","hcode","zerun","nc","hufCanonicalCodeTable","hufLength","code","hufCode","getCharReturn","getChar","getCodeReturn","getCode","po","rlc","outBuffer","outBufferOffset","outBufferEndOffset","cs","UInt16","Int16","ref","wdec14Return","wdec14","ls","hs","ai","as","bs","wdec16","bb","wav2Decode","nx","ox","ny","oy","mx","p2","w14","i00","i01","i10","i11","py","ey","oy1","oy2","ox1","ox2","px","ex","p01","p11","p10","hufUncompress","nCompressed","nRaw","initialInOffset","parseUint32","freq","hdec","len","lit","hufClearDecTable","hdecod","pl","plOffset","hufBuildDecTable","encodingTable","decodingTable","no","outOffset","inOffsetEnd","trunc","hufDecode","predictor","source","interleaveScalar","out","t1","t2","stop","decodeRunLength","size","byteLength","reader","getInt8","count","getUint8","unRleAC","currAcComp","acBuffer","halfZigBlock","acValue","dctComp","unZigZag","src","dst","decodeFloat16","dctInverse","data","cos","alpha","beta","theta","gamma","row","rowPtr","column","csc709Inverse","cb","cr","convertToHalf","idx","DataUtils","toHalfFloat","toLinear","float","sign","uncompressZIP","info","compressed","array","offset","console","error","inflate","rawBuffer","decompress","tmpBuffer","uncompressDWA","viewer","width","lines","EXRHeader","channels","dwaHeader","version","parseInt64","unknownUncompressedSize","unknownCompressedSize","acCompressedSize","dcCompressedSize","rleCompressedSize","rleUncompressedSize","rleRawSize","totalAcUncompressedCount","totalDcUncompressedCount","acCompression","compression","channelRules","ruleSize","parseUint16","name","parseNullTerminatedString","parseUint8","Int8Array","channelData","cd","channel","decoded","pixelType","pLinear","height","cscSet","rule","zlibInfo","dcBuffer","rleBuffer","outBufferEnd","rowOffsets","chan","rowPtrs","dataView","numFullBlocksX","numBlocksX","numBlocksY","leftoverX","leftoverY","currDcComp","dctData","rowBlock","comp","Float32Array","blocky","maxY","maxX","blockx","fill","setUint16","halfRow","getUint16","setFloat32","lossyDctDecode","rleOffset","rowOffsetBytes","byte","uintBuffer","endOffset","stringValue","TextDecoder","decode","parseUlong","uLong","parseInt32","Int32","getInt32","Uint32","Uint8","int","getBigInt64","parseFloat32","getFloat32","binary","fraction","NaN","Infinity","Uint16","parseValue","parseFixedLengthString","startOffset","xSampling","ySampling","parseChlist","redX","redY","greenX","greenY","blueX","blueY","whiteX","whiteY","parseChromaticities","parseCompression","xMin","yMin","xMax","yMax","parseBox2i","parseLineOrder","parseV2f","parseV3f","parseRational","parseTimecode","bufferDataView","keepReading","attributeName","attributeType","attributeValue","undefined","warn","uncompress","scanlineBlockSize","size_t","getValue","dataWindowHeight","dataWindow","tmpBufSize","bitmap","pizChannelData","minNonZero","maxNonZero","lut","maxValue","reverseLutFromBitmap","start","nData","applyLut","tmpOffset","cp","end","sz","tmpBufferEnd","writePtr","ptr","pixel","UnsignedByteType","HalfFloatType","numBlocks","byteArray","line","channelOffsets","compressionInfo","scanlineBlockIdx","line_y","true_y","channelID","cOff","val","RGBEArray","red","green","blue","res","format","RGBEFormat","RGBAFormat","header","setDataType","load","url","onLoad","onProgress","onError","texture","texData","encoding","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","LinearEncoding","LinearFilter","webglLoaderTextureExr","params","exposure","renderer","scene","camera","gui","mounted","init","beforeDestroy","hide","methods","_this","$THREE","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","toneMapping","ReinhardToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","Scene","aspect","OrthographicCamera","EXRLoader_EXRLoader","textureData","material","MeshBasicMaterial","map","quad","PlaneBufferGeometry","mesh","Mesh","add","render","dat_gui_module","onChange","open","addEventListener","onWindowResize","innerWidth","frustumHeight","top","bottom","left","right","updateProjectionMatrix","loader_webglLoaderTextureExr","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","normalizeComponent","ssrContext"],"mappings":"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AAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,IAChCC,EAAK,IAAOC,GAAeF,EAAK,IAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAEhCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,IAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAEhCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAEhCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAEhCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAEhCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAChCC,EAAK,IAAOC,GAAeF,EAAK,KAIjC,SAASG,EAAYC,GAepB,IAbA,IAAMzP,EAAI,GAAMwH,KAAKkI,IAAK,UACpBxP,EAAI,GAAMsH,KAAKkI,IAAK,YACpB5P,EAAI,GAAM0H,KAAKkI,IAAK,WACpBnQ,EAAI,GAAMiI,KAAKkI,IAAK,EAAM,QAAU,IACpC3P,EAAI,GAAMyH,KAAKkI,IAAK,YACpB9O,EAAI,GAAM4G,KAAKkI,IAAK,EAAM,QAAU,GACpC7O,EAAI,GAAM2G,KAAKkI,IAAK,aAEtBC,EAAQ,IAAIpO,MAAO,GACnBqO,EAAO,IAAIrO,MAAO,GAClBsO,EAAQ,IAAItO,MAAO,GACnBuO,EAAQ,IAAIvO,MAAO,GAEbwO,EAAM,EAAGA,EAAM,IAAMA,EAAM,CAEpC,IAAIC,EAAe,EAAND,EAEbJ,EAAO,GAAM7P,EAAI2P,EAAMO,EAAS,GAChCL,EAAO,GAAM/O,EAAI6O,EAAMO,EAAS,GAChCL,EAAO,GAAM7P,EAAI2P,EAAMO,EAAS,GAChCL,EAAO,GAAM/O,EAAI6O,EAAMO,EAAS,GAEhCJ,EAAM,GAAM1P,EAAIuP,EAAMO,EAAS,GAAMzQ,EAAIkQ,EAAMO,EAAS,GAAMjQ,EAAI0P,EAAMO,EAAS,GAAMnP,EAAI4O,EAAMO,EAAS,GAC1GJ,EAAM,GAAMrQ,EAAIkQ,EAAMO,EAAS,GAAMnP,EAAI4O,EAAMO,EAAS,GAAM9P,EAAIuP,EAAMO,EAAS,GAAMjQ,EAAI0P,EAAMO,EAAS,GAC1GJ,EAAM,GAAM7P,EAAI0P,EAAMO,EAAS,GAAM9P,EAAIuP,EAAMO,EAAS,GAAMnP,EAAI4O,EAAMO,EAAS,GAAMzQ,EAAIkQ,EAAMO,EAAS,GAC1GJ,EAAM,GAAM/O,EAAI4O,EAAMO,EAAS,GAAMjQ,EAAI0P,EAAMO,EAAS,GAAMzQ,EAAIkQ,EAAMO,EAAS,GAAM9P,EAAIuP,EAAMO,EAAS,GAE1GH,EAAO,GAAM7P,GAAMyP,EAAMO,EAAS,GAAMP,EAAMO,EAAS,IACvDH,EAAO,GAAM7P,GAAMyP,EAAMO,EAAS,GAAMP,EAAMO,EAAS,IACvDH,EAAO,GAAMF,EAAO,GAAMA,EAAO,GACjCE,EAAO,GAAMF,EAAO,GAAMA,EAAO,GAEjCG,EAAO,GAAMD,EAAO,GAAMA,EAAO,GACjCC,EAAO,GAAMD,EAAO,GAAMA,EAAO,GACjCC,EAAO,GAAMD,EAAO,GAAMA,EAAO,GACjCC,EAAO,GAAMD,EAAO,GAAMA,EAAO,GAEjCJ,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GACxCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GACxCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GACxCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GAExCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GACxCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GACxCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GACxCH,EAAMO,EAAS,GAAMF,EAAO,GAAMF,EAAM,GAIzC,IAAM,IAAIK,EAAS,EAAGA,EAAS,IAAMA,EAEpCN,EAAO,GAAM7P,EAAI2P,EAAM,GAAKQ,GAC5BN,EAAO,GAAM/O,EAAI6O,EAAM,GAAKQ,GAC5BN,EAAO,GAAM7P,EAAI2P,EAAM,GAAKQ,GAC5BN,EAAO,GAAM/O,EAAI6O,EAAM,GAAKQ,GAE5BL,EAAM,GAAM1P,EAAIuP,EAAM,EAAIQ,GAAW1Q,EAAIkQ,EAAM,GAAKQ,GAAWlQ,EAAI0P,EAAM,GAAKQ,GAAWpP,EAAI4O,EAAM,GAAKQ,GACxGL,EAAM,GAAMrQ,EAAIkQ,EAAM,EAAIQ,GAAWpP,EAAI4O,EAAM,GAAKQ,GAAW/P,EAAIuP,EAAM,GAAKQ,GAAWlQ,EAAI0P,EAAM,GAAKQ,GACxGL,EAAM,GAAM7P,EAAI0P,EAAM,EAAIQ,GAAW/P,EAAIuP,EAAM,GAAKQ,GAAWpP,EAAI4O,EAAM,GAAKQ,GAAW1Q,EAAIkQ,EAAM,GAAKQ,GACxGL,EAAM,GAAM/O,EAAI4O,EAAM,EAAIQ,GAAWlQ,EAAI0P,EAAM,GAAKQ,GAAW1Q,EAAIkQ,EAAM,GAAKQ,GAAW/P,EAAIuP,EAAM,GAAKQ,GAExGJ,EAAO,GAAM7P,GAAMyP,EAAMQ,GAAWR,EAAM,GAAKQ,IAC/CJ,EAAO,GAAM7P,GAAMyP,EAAMQ,GAAWR,EAAM,GAAKQ,IAE/CJ,EAAO,GAAMF,EAAO,GAAMA,EAAO,GACjCE,EAAO,GAAMF,EAAO,GAAMA,EAAO,GAEjCG,EAAO,GAAMD,EAAO,GAAMA,EAAO,GACjCC,EAAO,GAAMD,EAAO,GAAMA,EAAO,GACjCC,EAAO,GAAMD,EAAO,GAAMA,EAAO,GACjCC,EAAO,GAAMD,EAAO,GAAMA,EAAO,GAEjCJ,EAAM,EAAIQ,GAAWH,EAAO,GAAMF,EAAM,GACxCH,EAAM,EAAIQ,GAAWH,EAAO,GAAMF,EAAM,GACxCH,EAAM,GAAKQ,GAAWH,EAAO,GAAMF,EAAM,GACzCH,EAAM,GAAKQ,GAAWH,EAAO,GAAMF,EAAM,GAEzCH,EAAM,GAAKQ,GAAWH,EAAO,GAAMF,EAAM,GACzCH,EAAM,GAAKQ,GAAWH,EAAO,GAAMF,EAAM,GACzCH,EAAM,GAAKQ,GAAWH,EAAO,GAAMF,EAAM,GACzCH,EAAM,GAAKQ,GAAWH,EAAO,GAAMF,EAAM,GAM3C,SAASM,EAAeT,GAEvB,IAAM,IAAI9N,EAAI,EAAGA,EAAI,KAAOA,EAAI,CAE/B,IAAIC,EAAI6N,EAAM,GAAK9N,GACfwO,EAAKV,EAAM,GAAK9N,GAChByO,EAAKX,EAAM,GAAK9N,GAEpB8N,EAAM,GAAK9N,GAAMC,EAAI,OAASwO,EAC9BX,EAAM,GAAK9N,GAAMC,EAAI,MAASuO,EAAK,MAASC,EAC5CX,EAAM,GAAK9N,GAAMC,EAAI,OAASuO,GAMhC,SAASE,EAAehB,EAAKC,EAAKgB,GAEjC,IAAM,IAAI3O,EAAI,EAAGA,EAAI,KAAOA,EAE3B2N,EAAKgB,EAAM3O,GAAM4O,IAAUC,YAAaC,EAAUpB,EAAK1N,KAMzD,SAAS8O,EAAUC,GAElB,OAAKA,GAAS,EAENlJ,KAAKmJ,KAAMD,GAAUlJ,KAAKC,IAAKD,KAAKc,IAAKoI,GAAS,KAIlDlJ,KAAKmJ,KAAMD,GAAUlJ,KAAKC,IAAKF,EAASC,KAAKc,IAAKoI,GAAU,GA2BrE,SAASE,EAAeC,GAEvB,IAAIC,EAAaD,EAAKE,MAAMzN,MAAOuN,EAAKG,OAAOnJ,MAAOgJ,EAAKG,OAAOnJ,MAAQgJ,EAAKrC,WAEvD,IAAZ/O,KAEXwR,QAAQC,MAAO,qHAIhB,IAAIC,EAAU,IAAI1R,IAASqR,GAAc9O,QAAQ,EAAMuC,QAAQ,IAE3D6M,EAAY,IAAI7Q,WAAY4Q,EAAQE,aAAazM,QACjD0M,EAAY,IAAI/Q,WAAY6Q,EAAUhR,QAM1C,OAJA4N,EAAWoD,GAEXlD,EAAkBkD,EAAWE,GAEtB,IAAI5Q,SAAU4Q,EAAU1M,QAuLhC,SAAS2M,GAAeV,GAEvB,IAAI1H,EAAa0H,EAAKW,OAClBzI,GAAalB,MAAOgJ,EAAKG,OAAOnJ,OAChCuC,EAAY,IAAI7J,WAAYsQ,EAAKY,MAAQZ,EAAKa,OAAUC,GAAUC,SAASxR,OAASyQ,EAAKjL,KAAOoB,IAGhG6K,GAEHC,QAASC,GAAY5I,EAAYJ,GACjCiJ,wBAAyBD,GAAY5I,EAAYJ,GACjDkJ,sBAAuBF,GAAY5I,EAAYJ,GAC/CmJ,iBAAkBH,GAAY5I,EAAYJ,GAC1CoJ,iBAAkBJ,GAAY5I,EAAYJ,GAC1CqJ,kBAAmBL,GAAY5I,EAAYJ,GAC3CsJ,oBAAqBN,GAAY5I,EAAYJ,GAC7CuJ,WAAYP,GAAY5I,EAAYJ,GACpCwJ,yBAA0BR,GAAY5I,EAAYJ,GAClDyJ,yBAA0BT,GAAY5I,EAAYJ,GAClD0J,cAAeV,GAAY5I,EAAYJ,IAIxC,GAAK8I,EAAUC,QAAU,EACxB,KAAM,oBAAsBH,GAAUe,YAAc,YAAcb,EAAUC,QAAU,kBAMvF,IAHA,IAAIa,EAAe,IAAIpR,MACnBqR,EAAWC,GAAa1J,EAAYJ,GAAa/B,EAE7C4L,EAAW,GAAI,CAEtB,IAAIE,EAAOC,GAA2B5J,EAAWvE,OAAQmE,GACrDlB,EAAQmL,GAAY7J,EAAYJ,GAChC2J,EAAgB7K,GAAS,EAAM,EAE/BhG,EAAQ,IAAIoR,YADJpL,GAAS,GAAM,IACW,GAClCjC,EAAOoN,GAAY7J,EAAYJ,GAEnC4J,EAAahO,MACZmO,KAAMA,EACNjR,MAAOA,EACP+D,KAAMA,EACN8M,YAAaA,IAGdE,GAAYE,EAAK1S,OAAS,EAQ3B,IAHA,IAAIwR,EAAWD,GAAUC,SACrBsB,EAAc,IAAI3R,MAAOsP,EAAKe,UAExBjQ,EAAI,EAAGA,EAAIkP,EAAKe,WAAajQ,EAAI,CAE1C,IAAIwR,EAAKD,EAAavR,MAClByR,EAAUxB,EAAUjQ,GAExBwR,EAAGL,KAAOM,EAAQN,KAClBK,EAAGT,YAActL,EACjB+L,EAAGE,SAAU,EACbF,EAAGvN,KAAOwN,EAAQE,UAClBH,EAAGI,QAAUH,EAAQG,QACrBJ,EAAG1B,MAAQZ,EAAKY,MAChB0B,EAAGK,OAAS3C,EAAKa,MAQlB,IAJA,IAAI+B,GACHnD,IAAK,IAAI/O,MAAO,IAGPyP,EAAS,EAAGA,EAASH,EAAKe,WAAaZ,EAIhD,IAFImC,EAAKD,EAAalC,GAEZrP,EAAI,EAAGA,EAAIgR,EAAavS,SAAWuB,EAAI,CAEhD,IAAI+R,EAAOf,EAAchR,GAEpBwR,EAAGL,MAAQY,EAAKZ,OAEpBK,EAAGT,YAAcgB,EAAKhB,YAEjBgB,EAAK7R,OAAS,IAElB4R,EAAOnD,IAAKoD,EAAK7R,OAAUmP,GAI5BmC,EAAGnC,OAASA,GASf,GAAKa,EAAUK,iBAAmB,EAEjC,OAASL,EAAUY,eAElB,KAAKvL,EAEJ,IAAI8H,EAAW,IAAIxO,YAAaqR,EAAUU,0BAC1C5F,EAAekE,EAAKE,MAAO5H,EAAYJ,EAAU8I,EAAUK,iBAAkBlD,EAAU6C,EAAUU,0BACjG,MAED,KAAKpL,EAEJ,IAAI2J,EAAaD,EAAKE,MAAMzN,MAAOyF,EAASlB,MAAOkB,EAASlB,MAAQgK,EAAUU,0BAC1EpB,EAAU,IAAI1R,IAASqR,GAAc9O,QAAQ,EAAMuC,QAAQ,IAC3DyK,EAAW,IAAIxO,YAAa2Q,EAAQE,aAAazM,QACrDmE,EAASlB,OAASgK,EAAUU,yBAS/B,GAAKV,EAAUM,iBAAmB,EAAI,CAErC,IAAIwB,GACH5C,MAAOF,EAAKE,MACZC,OAAQjI,EACRyF,KAAMqD,EAAUM,kBAEbyB,EAAW,IAAIpT,YAAaoQ,EAAe+C,GAAW/O,QAC1DmE,EAASlB,OAASgK,EAAUM,iBAK7B,GAAKN,EAAUS,WAAa,EAAI,CAE3BxB,EAAaD,EAAKE,MAAMzN,MAAOyF,EAASlB,MAAOkB,EAASlB,MAAQgK,EAAUO,mBAA9E,IAEIyB,EAAYtF,GADZ4C,EAAU,IAAI1R,IAASqR,GAAc9O,QAAQ,EAAMuC,QAAQ,KACtB8M,aAAazM,QAEtDmE,EAASlB,OAASgK,EAAUO,kBAK7B,IAAI0B,EAAe,EACfC,EAAa,IAAIxS,MAAO2R,EAAY9S,QACxC,IAAUuB,EAAI,EAAGA,EAAIoS,EAAW3T,SAAWuB,EAE1CoS,EAAYpS,GAAM,IAAIJ,MAIvB,IAAM,IAAIK,EAAI,EAAGA,EAAIiP,EAAKa,QAAU9P,EAEnC,IAAM,IAAIoS,EAAO,EAAGA,EAAOd,EAAY9S,SAAW4T,EAEjDD,EAAYC,GAAOrP,KAAMmP,GACzBA,GAAgBZ,EAAac,GAAOvC,MAAQZ,EAAKjL,KAAOoB,GA1wB3D,SAAyByM,EAAQQ,EAASf,EAAalE,EAAU4E,EAAUxJ,GAsB1E,IApBA,IAAI8J,EAAW,IAAIxT,SAAU0J,EAAUxF,QAEnC6M,EAAQyB,EAAaO,EAAOnD,IAAK,IAAMmB,MACvC+B,EAASN,EAAaO,EAAOnD,IAAK,IAAMkD,OAIxCW,EAAiB3M,KAAKgB,MAAOiJ,EAAQ,GACrC2C,EAAa5M,KAAKa,KAAMoJ,EAAQ,GAChC4C,EAAa7M,KAAKa,KAAMmL,EAAS,GACjCc,EAAY7C,EAA6B,GAAnB2C,EAAa,GACnCG,EAAYf,EAA8B,GAAnBa,EAAa,GAEpCtF,GAAelH,MAAO,GACtB2M,EAAa,IAAIjT,MATP,GAUVkT,EAAU,IAAIlT,MAVJ,GAWV0N,EAAe,IAAI1N,MAXT,GAYVmT,EAAW,IAAInT,MAZL,GAaVwS,EAAa,IAAIxS,MAbP,GAeJoT,EAAO,EAAGA,EAfN,IAeyBA,EAEtCZ,EAAYY,GAASV,EAASR,EAAOnD,IAAKqE,IAC1CH,EAAYG,GAAWA,EAAO,EAAM,EAAIH,EAAYG,EAAO,GAAMP,EAAaC,EAC9EI,EAASE,GAAS,IAAIC,aAAc,IACpC3F,EAAc0F,GAAS,IAAInU,YAAa,IACxCkU,EAAUC,GAAS,IAAInU,YAA0B,GAAb4T,GAIrC,IAAM,IAAIS,EAAS,EAAGA,EAASR,IAAeQ,EAAS,CAEtD,IAAIC,EAAO,EAEND,GAAUR,EAAa,IAC3BS,EAAOP,GAIR,IAFA,IAAIQ,EAAO,EAEDC,EAAS,EAAGA,EAASZ,IAAeY,EAAS,CAEjDA,GAAUZ,EAAa,IAC3BW,EAAOT,GAER,IAAM,IAAIK,EAAO,EAAGA,EAvCR,IAuC2BA,EAEtC1F,EAAc0F,GAAOM,KAAM,GAG3BhG,EAAc0F,GAAQ,GAAMf,EAAUY,EAAYG,MAElD7F,EAASC,EAAYC,EAAUC,EAAc0F,IAG7CvF,EAAUH,EAAc0F,GAAQF,EAASE,IAEzCnF,EAAYiF,EAASE,IAMrBzE,EAAeuE,GAIhB,IAAM,IAAIE,EAAO,EAAGA,EA7DR,IA6D2BA,EAEtCtE,EAAeoE,EAASE,GAAQD,EAAUC,GAAiB,GAATK,GAQpD,IAFA,IAAIhE,EAAS,EAEH2D,EAAO,EAAGA,EAvEP,IAuE0BA,EAAO,CAI7C,IAFA,IAAM/O,EAAOsN,EAAaO,EAAOnD,IAAKqE,IAAS/O,KAErChE,EAAI,EAAIiT,EAAQjT,EAAI,EAAIiT,EAASC,IAASlT,EAAI,CAEvDoP,EAAS+C,EAAYY,GAAQ/S,GAE7B,IAAM,IAAIoT,EAAS,EAAGA,EAASb,IAAmBa,EAAS,CAE1D,IAAM3F,EAAe,GAAT2F,EAA8B,GAAR,EAAJpT,GAE9BsS,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GACjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GACjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GACjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GAEjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GACjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GACjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GACjF6E,EAASgB,UAAWlE,EAAS,EAAIhK,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAM,IAAK,GAEjF2B,GAAU,EAAIhK,EAAapB,GAO7B,GAAKuO,GAAkBC,EAEtB,IAAM,IAAIxS,EAAI,EAAIiT,EAAQjT,EAAI,EAAIiT,EAASC,IAASlT,EAKnD,IAHA,IAAMoP,EAAS+C,EAAYY,GAAQ/S,GAAM,EAAIuS,EAAiBnN,EAAapB,EACrEyJ,EAAuB,GAAjB8E,EAAsC,GAAR,EAAJvS,GAE5BR,EAAI,EAAGA,EAAI2T,IAAS3T,EAE7B8S,EAASgB,UAAWlE,EAAS5P,EAAI4F,EAAapB,EAAM8O,EAAUC,GAAQtF,EAAMjO,IAAK,IAgBtF,IAJA,IAAI+T,EAAU,IAAI3U,YAAaiR,GAIrBkD,GAHNT,EAAW,IAAIxT,SAAU0J,EAAUxF,QAGtB,GAAG+P,EA7HN,IA6HyBA,EAAO,CAE7CzB,EAAaO,EAAOnD,IAAKqE,IAAStB,SAAU,EAC5C,IAAIzN,EAAOsN,EAAaO,EAAOnD,IAAKqE,IAAS/O,KAE7C,GAAiC,GAA5BsN,EAAayB,GAAO/O,KAEzB,IAAM,IAAIhE,EAAI,EAAGA,EAAI4R,IAAW5R,EAAI,CAInC,IAFA,IAAMoP,EAAS+C,EAAYY,GAAQ/S,GAEzBR,EAAI,EAAGA,EAAIqQ,IAAUrQ,EAE9B+T,EAAS/T,GAAM8S,EAASkB,UAAWpE,EAAS5P,EAAI4F,EAAapB,GAAM,GAIpE,IAAUxE,EAAI,EAAGA,EAAIqQ,IAAUrQ,EAE9B8S,EAASmB,WAAYrE,EAAS5P,EAAI4F,EAAapB,EAAM2J,GAAe4F,EAAS/T,KAAO,KA0nBvFkU,CAAgB7B,EAAQM,EAAYb,EAAalE,EAAU4E,EAAUxJ,GAGrE,IAAUzI,EAAI,EAAGA,EAAIuR,EAAY9S,SAAWuB,EAAI,CAI/C,KAFIwR,EAAKD,EAAavR,IAEd0R,QAER,OAASF,EAAGT,aAEX,KAAKpL,EAEJ,IAAIyI,EAAM,EACNwF,EAAY,EAEhB,IAAU3T,EAAI,EAAGA,EAAIiP,EAAKa,QAAU9P,EAAI,CAIvC,IAFA,IAAI4T,EAAiBzB,EAAYpS,GAAKoO,GAE5B3O,EAAI,EAAGA,EAAI+R,EAAG1B,QAAUrQ,EAAI,CAErC,IAAM,IAAIqU,EAAO,EAAGA,EAAOzO,EAAamM,EAAGvN,OAAS6P,EAEnDrL,EAAWoL,KAAsB3B,EAAW0B,EAAYE,EAAOtC,EAAG1B,MAAQ0B,EAAGK,QAI9E+B,IAIDxF,IAID,MAED,KAAK1I,EAEL,QACC,KAAM,oDAMT,OAAO,IAAI3G,SAAU0J,EAAUxF,QAIhC,SAASmO,GAA2BnO,EAAQoM,GAK3C,IAHA,IAAI0E,EAAa,IAAInV,WAAYqE,GAC7B+Q,EAAY,EAEkC,GAA1CD,EAAY1E,EAAOnJ,MAAQ8N,IAElCA,GAAa,EAId,IAAIC,GAAc,IAAIC,aAAcC,OACnCJ,EAAWpS,MAAO0N,EAAOnJ,MAAOmJ,EAAOnJ,MAAQ8N,IAKhD,OAFA3E,EAAOnJ,MAAQmJ,EAAOnJ,MAAQ8N,EAAY,EAEnCC,EAgBR,SAASG,GAAY7B,EAAUlD,GAE9B,IAAIgF,EAAQ9B,EAASlM,UAAW,GAAG,GAInC,OAFAgJ,EAAOnJ,MAAQmJ,EAAOnJ,MAAQhB,EAEvBmP,EAsBR,SAASC,GAAY/B,EAAUlD,GAE9B,IAAIkF,EAAQhC,EAASiC,SAAUnF,EAAOnJ,OAAO,GAI7C,OAFAmJ,EAAOnJ,MAAQmJ,EAAOnJ,MAAQd,EAEvBmP,EAIR,SAASnJ,GAAamH,EAAUlD,GAE/B,IAAIoF,EAASlC,EAASlM,UAAWgJ,EAAOnJ,OAAO,GAI/C,OAFAmJ,EAAOnJ,MAAQmJ,EAAOnJ,MAAQd,EAEvBqP,EAIR,SAASpN,GAAiBF,EAAYkI,GAErC,IAAIqF,EAAQvN,EAAYkI,EAAOnJ,OAI/B,OAFAmJ,EAAOnJ,MAAQmJ,EAAOnJ,MAAQZ,EAEvBoP,EAIR,SAASrD,GAAYkB,EAAUlD,GAE9B,IAAIqF,EAAQnC,EAASrF,SAAUmC,EAAOnJ,OAItC,OAFAmJ,EAAOnJ,MAAQmJ,EAAOnJ,MAAQZ,EAEvBoP,EAIR,SAAStE,GAAYmC,EAAUlD,GAE9B,IAAIsF,EAAMjV,OAAQ6S,EAASqC,YAAavF,EAAOnJ,OAAO,IAItD,OAFAmJ,EAAOnJ,OAAShB,EAETyP,EAIR,SAASE,GAActC,EAAUlD,GAEhC,IAAIN,EAAQwD,EAASuC,WAAYzF,EAAOnJ,OAAO,GAI/C,OAFAmJ,EAAOnJ,OAASf,EAET4J,EAWR,SAASnB,GAAemH,GAEvB,IAAIzO,GAAsB,MAATyO,IAAqB,GACrCC,EAAoB,KAATD,EAEZ,OAASA,GAAU,IAAO,EAAI,IAC7BzO,EAEe,KAAbA,EACC0O,EAAWC,IAAMC,IACjBrP,KAAKC,IAAK,EAAGQ,EAAW,KAAS,EAAI0O,EAAW,MAE/BA,EAAW,KAA9B,gBAKH,SAAS9D,GAAaqB,EAAUlD,GAE/B,IAAI8F,EAAS5C,EAASkB,UAAWpE,EAAOnJ,OAAO,GAI/C,OAFAmJ,EAAOnJ,OAASb,EAET8P,EAsHR,SAASC,GAAY7C,EAAUtP,EAAQoM,EAAQpL,EAAM4I,GAEpD,MAAc,WAAT5I,GAA8B,iBAATA,GAAoC,eAATA,EA1PtD,SAAiChB,EAAQoM,EAAQxC,GAEhD,IAAIoH,GAAc,IAAIC,aAAcC,OACnC,IAAIvV,WAAYqE,GAAStB,MAAO0N,EAAOnJ,MAAOmJ,EAAOnJ,MAAQ2G,IAK9D,OAFAwC,EAAOnJ,MAAQmJ,EAAOnJ,MAAQ2G,EAEvBoH,EAoPCoB,CAAwBpS,EAAQoM,EAAQxC,GAE3B,WAAT5I,EAlHb,SAAsBsO,EAAUtP,EAAQoM,EAAQxC,GAK/C,IAHA,IAAIyI,EAAcjG,EAAOnJ,MACrB+J,KAEIZ,EAAOnJ,MAAUoP,EAAczI,EAAO,GAAM,CAEnD,IAAIsE,EAAOC,GAA2BnO,EAAQoM,GAC1CsC,EAAY2C,GAAY/B,EAAUlD,GAClCuC,EAAUP,GAAYkB,EAAUlD,GACpCA,EAAOnJ,OAAS,EAChB,IAAIqP,EAAYjB,GAAY/B,EAAUlD,GAClCmG,EAAYlB,GAAY/B,EAAUlD,GAEtCY,EAASjN,MACRmO,KAAMA,EACNQ,UAAWA,EACXC,QAASA,EACT2D,UAAWA,EACXC,UAAWA,IAOb,OAFAnG,EAAOnJ,OAAS,EAET+J,EA0FCwF,CAAalD,EAAUtP,EAAQoM,EAAQxC,GAE1B,mBAAT5I,EAxFb,SAA8BsO,EAAUlD,GAWvC,OAASqG,KATEb,GAActC,EAAUlD,GASdsG,KARVd,GAActC,EAAUlD,GAQFuG,OAPpBf,GAActC,EAAUlD,GAOYwG,OANpChB,GAActC,EAAUlD,GAM4ByG,MALrDjB,GAActC,EAAUlD,GAK2C0G,MAJnElB,GAActC,EAAUlD,GAIyD2G,OAHhFnB,GAActC,EAAUlD,GAGwE4G,OAFhGpB,GAActC,EAAUlD,IAiF7B6G,CAAqB3D,EAAUlD,GAElB,gBAATpL,EA7Eb,SAA2BsO,EAAUlD,GAiBpC,OAdC,iBACA,kBACA,mBACA,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,oBAGiBgC,GAAYkB,EAAUlD,IAgEhC8G,CAAkB5D,EAAUlD,GAEf,UAATpL,EA5Db,SAAqBsO,EAAUlD,GAO9B,OAAS+G,KALEhL,GAAamH,EAAUlD,GAKbgH,KAJVjL,GAAamH,EAAUlD,GAIDiH,KAHtBlL,GAAamH,EAAUlD,GAGWkH,KAFlCnL,GAAamH,EAAUlD,IAyD1BmH,CAAYjE,EAAUlD,GAET,cAATpL,EArDb,SAAyBsO,EAAUlD,GAQlC,OALC,gBAGegC,GAAYkB,EAAUlD,IAiD9BoH,CAAgBlE,EAAUlD,GAEb,UAATpL,EAEJ4Q,GAActC,EAAUlD,GAEX,QAATpL,EAjDb,SAAmBsO,EAAUlD,GAK5B,OAHQwF,GAActC,EAAUlD,GACxBwF,GAActC,EAAUlD,IAgDxBqH,CAAUnE,EAAUlD,GAEP,QAATpL,EA5Cb,SAAmBsO,EAAUlD,GAM5B,OAJQwF,GAActC,EAAUlD,GACxBwF,GAActC,EAAUlD,GACxBwF,GAActC,EAAUlD,IA0CxBsH,CAAUpE,EAAUlD,GAEP,QAATpL,EAEJqQ,GAAY/B,EAAUlD,GAET,aAATpL,EA5Qb,SAAwBsO,EAAUlD,GAKjC,OAHQiF,GAAY/B,EAAUlD,GACtBjE,GAAamH,EAAUlD,IA2QvBuH,CAAerE,EAAUlD,GAEZ,aAATpL,EAvQb,SAAwBsO,EAAUlD,GAKjC,OAHQjE,GAAamH,EAAUlD,GACvBjE,GAAamH,EAAUlD,IAsQvBwH,CAAetE,EAAUlD,GAEZ,YAATpL,GAEXoL,EAAOnJ,OAAS2G,EACT,gBAIPwC,EAAOnJ,OAAS2G,GAOlB,IAAIiK,GAAiB,IAAI/X,SAAUkE,GAC/BkE,GAAa,IAAIvI,WAAYqE,GAE7B+M,MAEJ8G,GAAezQ,UAAW,GAAG,GAC7ByQ,GAAe5J,SAAU,GAAG,GAC5B4J,GAAe5J,SAAU,GAAG,GAQ5B,IAJA,IAAImC,IAAWnJ,MAAO,GAElB6Q,IAAc,EAEVA,IAAc,CAErB,IAAIC,GAAgB5F,GAA2BnO,EAAQoM,IAEvD,GAAsB,GAAjB2H,GAEJD,IAAc,MAER,CAEN,IAAIE,GAAgB7F,GAA2BnO,EAAQoM,IAEnD6H,GAAiB9B,GAAY0B,GAAgB7T,EAAQoM,GAAQ4H,GAD7C7L,GAAa0L,GAAgBzH,UAGzB8H,IAAnBD,GAEJ5H,QAAQ8H,KAAR,2DAA2EH,GAA3E,MAIAjH,GAAWgH,IAAkBE,IAShC,IAEIG,GACAC,GA0DAC,GACAC,GA9DAC,GAAmBzH,GAAU0H,WAAWnB,KAAO,EAKnD,OAASvG,GAAUe,aAElB,IAAK,iBAEJuG,GAAoB,EACpBD,GA7zBF,SAAwBnI,GAEvB,OAAO,IAAInQ,SAAUmQ,EAAKE,MAAMnM,OAAQiM,EAAKG,OAAOnJ,MAAOgJ,EAAKrC,OA4zB/D,MAED,IAAK,kBAEJyK,GAAoB,EACpBD,GA7zBF,SAAwBnI,GAEvB,IAAIC,EAAaD,EAAKW,OAAO5M,OAAOtB,MAAOuN,EAAKG,OAAOnJ,MAAOgJ,EAAKG,OAAOnJ,MAAQgJ,EAAKrC,MAEnF4C,EAAY,IAAI7Q,WAAYgO,EAAiBuC,IAC7CQ,EAAY,IAAI/Q,WAAY6Q,EAAUhR,QAM1C,OAJA4N,EAAWoD,GAEXlD,EAAkBkD,EAAWE,GAEtB,IAAI5Q,SAAU4Q,EAAU1M,SAmzB9B,MAED,IAAK,mBAEJqU,GAAoB,EACpBD,GAAapI,EACb,MAED,IAAK,kBAEJqI,GAAoB,GACpBD,GAAapI,EACb,MAED,IAAK,kBAEJqI,GAAoB,GACpBD,GAzyBF,SAAwBnI,GAYvB,IAVA,IAAI1H,EAAa0H,EAAKW,OAClBzI,GAAalB,MAAOgJ,EAAKG,OAAOnJ,OAEhCyR,EAAazI,EAAKY,MAAQwH,IAAsBtH,GAAUC,SAASxR,OAASyQ,EAAKjL,MACjFwE,EAAY,IAAI5J,YAAa8Y,GAC7BC,EAAS,IAAIhZ,WAAY4F,GAGzB2N,EAAe,EACf0F,EAAiB,IAAIjY,MAAOsP,EAAKe,UAC3BjQ,EAAI,EAAGA,EAAIkP,EAAKe,SAAUjQ,IAEnC6X,EAAgB7X,MAChB6X,EAAgB7X,GAAhB,MAAiCmS,EACjC0F,EAAgB7X,GAAhB,IAA+B6X,EAAgB7X,GAAhB,MAC/B6X,EAAgB7X,GAAhB,GAA8BkP,EAAKY,MACnC+H,EAAgB7X,GAAhB,GAA8BkP,EAAKa,MACnC8H,EAAgB7X,GAAhB,KAAgCkP,EAAKjL,KAErCkO,GAAgB0F,EAAgB7X,GAAI0J,GAAKmO,EAAgB7X,GAAI4J,GAAKiO,EAAgB7X,GAAI6M,KAKvF,IAAIiL,EAAa5G,GAAa1J,EAAYJ,GACtC2Q,EAAa7G,GAAa1J,EAAYJ,GAE1C,GAAK2Q,GAAcvT,EAElB,KAAM,sDAIP,GAAKsT,GAAcC,EAElB,IAAU/X,EAAI,EAAGA,EAAI+X,EAAaD,EAAa,EAAG9X,IAEjD4X,EAAQ5X,EAAI8X,GAAezG,GAAY7J,EAAYJ,GAOrD,IAAI4Q,EAAM,IAAInZ,YAAa0F,GACvB0T,EArqCL,SAA+BL,EAAQI,GAItC,IAFA,IAAI5Y,EAAI,EAEEY,EAAI,EAAGA,EAAIuE,IAAiBvE,GAEzB,GAALA,GAAc4X,EAAQ5X,GAAK,GAAQ,IAAW,EAAJA,MAEhDgY,EAAK5Y,KAASY,GAQhB,IAFA,IAAIV,EAAIF,EAAI,EAEJA,EAAImF,GAAeyT,EAAK5Y,KAAS,EAEzC,OAAOE,EAmpCQ4Y,CAAsBN,EAAQI,GAEzCvZ,EAAS2M,GAAa5D,EAAYJ,GAMtC,IAHA4D,EAAekE,EAAKE,MAAO5H,EAAYJ,EAAU3I,EAAQgK,EAAW0J,GAG1DnS,EAAI,EAAGA,EAAIkP,EAAKe,WAAajQ,EAItC,IAFA,IAAIwR,EAAKqG,EAAgB7X,GAEfQ,EAAI,EAAGA,EAAIqX,EAAgB7X,GAAI6M,OAASrM,EAEjDiJ,EACChB,EACA+I,EAAG2G,MAAQ3X,EACXgR,EAAG9H,GACH8H,EAAG3E,KACH2E,EAAG5H,GACH4H,EAAG9H,GAAK8H,EAAG3E,KACXoL,IA/kBJ,SAAmBD,EAAKlK,EAAMsK,GAE7B,IAAM,IAAIpY,EAAI,EAAGA,EAAIoY,IAAUpY,EAE9B8N,EAAM9N,GAAMgY,EAAKlK,EAAM9N,IAmlBxBqY,CAAUL,EAAKvP,EAAW0J,GAK1B,IAFA,IAAImG,EAAY,EACZ3I,EAAY,IAAI/Q,WAAY6J,EAAUxF,OAAO6J,YACvC7M,EAAI,EAAGA,EAAIiP,EAAKa,MAAO9P,IAEhC,IAAM,IAAI9B,EAAI,EAAGA,EAAI+Q,EAAKe,SAAU9R,IAAO,CAE1C,IAEImB,GAFAkS,EAAKqG,EAAgB1Z,IAEduL,GAAK8H,EAAG3E,KACf0L,EAAK,IAAI3Z,WAAY6J,EAAUxF,OAAQuO,EAAGgH,IAAMnT,EAAY/F,EAAI+F,GAEpEsK,EAAU9O,IAAK0X,EAAID,GACnBA,GAAahZ,EAAI+F,EACjBmM,EAAGgH,KAAOlZ,EAMZ,OAAO,IAAIP,SAAU4Q,EAAU1M,SAwsB9B,MAED,IAAK,oBAEJqU,GAAoB,GACpBD,GAzsBF,SAAwBnI,GAEvB,IAAIC,EAAaD,EAAKE,MAAMzN,MAAOuN,EAAKG,OAAOnJ,MAAOgJ,EAAKG,OAAOnJ,MAAQgJ,EAAKrC,WAEvD,IAAZ/O,KAEXwR,QAAQC,MAAO,qHAchB,IAVA,IAAMC,EAAU,IAAI1R,IAASqR,GAAc9O,QAAQ,EAAMuC,QAAQ,IAC3D6M,EAAY,IAAI7Q,WAAY4Q,EAAQE,aAAazM,QAEjDwV,EAAKvJ,EAAKa,MAAQb,EAAKe,SAAWf,EAAKY,MACvCH,EAA2B,GAAbT,EAAKjL,KAAc,IAAIpF,YAAa4Z,GAAO,IAAI3Z,YAAa2Z,GAE5EC,EAAe,EACfC,EAAW,EACTC,EAAM,IAAIhZ,MAAO,GAEbK,EAAI,EAAGA,EAAIiP,EAAKa,MAAO9P,IAEhC,IAAM,IAAI9B,EAAI,EAAGA,EAAI+Q,EAAKe,SAAU9R,IAAO,CAE1C,IAAI0a,EAAQ,EAEZ,OAAS3J,EAAKjL,MAEb,KAAK,EAEJ2U,EAAK,GAAMF,EACXE,EAAK,GAAMA,EAAK,GAAM1J,EAAKY,MAC3B4I,EAAeE,EAAK,GAAM1J,EAAKY,MAE/B,IAAM,IAAItP,EAAI,EAAGA,EAAI0O,EAAKY,QAAUtP,EAInCqY,GAFepJ,EAAWmJ,EAAK,OAAY,EAAMnJ,EAAWmJ,EAAK,MAIjEjJ,EAAWgJ,GAAaE,EACxBF,IAID,MAED,KAAK,EAEJC,EAAK,GAAMF,EACXE,EAAK,GAAMA,EAAK,GAAM1J,EAAKY,MAC3B8I,EAAK,GAAMA,EAAK,GAAM1J,EAAKY,MAC3B4I,EAAeE,EAAK,GAAM1J,EAAKY,MAE/B,IAAM,IAAItP,EAAI,EAAGA,EAAI0O,EAAKY,QAAUtP,EAInCqY,GAFepJ,EAAWmJ,EAAK,OAAY,GAASnJ,EAAWmJ,EAAK,OAAY,GAASnJ,EAAWmJ,EAAK,OAAY,EAIrHjJ,EAAWgJ,GAAaE,EACxBF,KAYL,OAAO,IAAI5Z,SAAU4Q,EAAU1M,SAioB9B,MAED,IAAK,mBAEJqU,GAAoB,GACpBD,GAAazH,GACb,MAED,IAAK,mBAEJ0H,GAAoB,IACpBD,GAAazH,GACb,MAED,QAEC,KAAM,oBAAsBI,GAAUe,YAAc,kBAQtD,IAAIY,GAAY3B,GAAUC,SAAU,GAAI0B,UAExC,GAAmB,IAAdA,GAEJ,OAAS7R,KAAKmE,MAEb,KAAK6U,MACL,KAAK5U,IAEJsT,GAxSH,SAAuBvU,EAAQoM,GAE9B,OAAOzB,GAAesD,GAAajO,EAAQoM,KAuSzCkI,GAASlS,EACT,MAED,KAAK0T,IAEJvB,GAAWtG,GACXqG,GAASlS,MAKL,IAAmB,IAAdsM,GAoBX,KAAM,0CAA4CA,GAAY,QAAU3B,GAAUe,YAAc,IAlBhG,OAASjR,KAAKmE,MAEb,KAAK6U,MACL,KAAK5U,IAEJsT,GAAW3C,GACX0C,GAASpS,EACT,MAED,KAAK4T,IAEJvB,GAnWH,SAAwBjF,EAAUlD,GAEjC,OAAOT,IAAUC,YAAagG,GAActC,EAAUlD,KAkWpDkI,GAASpS,GAYZ,IAFA,IAAI6T,GAAYvB,GAAmBH,GAEzBtX,GAAI,EAAGA,GAAIgZ,GAAWhZ,KAE/BoU,GAAY0C,GAAgBzH,IAM7B,IAAIS,GAAQE,GAAU0H,WAAWpB,KAAOtG,GAAU0H,WAAWtB,KAAO,EAChEvE,GAAS7B,GAAU0H,WAAWnB,KAAOvG,GAAU0H,WAAWrB,KAAO,EAIjExJ,GAAOiD,GAAQ+B,GADD,EAIlB,OAAS/R,KAAKmE,MAEb,KAAK6U,MACL,KAAK5U,IAEJ,IAAI+U,GAAY,IAAIhG,aAAcpG,IAE7BmD,GAAUC,SAASxR,OAXR,GAafwa,GAAU3F,KAAM,EAAG,EAAGzG,IAIvB,MAED,KAAKkM,IAEAE,GAAY,IAAIpa,YAAagO,IAE5BmD,GAAUC,SAASxR,OAvBR,GAyBfwa,GAAU3F,KAAM,MAAQ,EAAGzG,IAI5B,MAED,QAECyC,QAAQC,MAAO,sCAAuCzP,KAAKmE,MAgC7D,IA3BA,IAsBIiV,GAEArJ,GAxBAsJ,IACH3W,EAAG,EACHV,EAAG,EACHpB,EAAG,EACHJ,EAAG,GAGA8Y,IAEHvM,KAAM,EACNiD,MAAOA,GACPC,MAAOuH,GAEPjI,OAAQA,GACRD,MAAOjI,GACP0I,OAAQiH,GAER7S,KAAM0N,GACN1B,SAAUD,GAAUC,SAASxR,QAO1B6Z,IAAcpS,MAAO,GAEfmT,GAAmB,EAAGA,GAAmBxH,GAASyF,GAAmB+B,KAAsB,CAEpGH,GAAO9N,GAAa0L,GAAgBzH,IACpCxC,GAAOzB,GAAa0L,GAAgBzH,IAEpC+J,GAAgBrJ,MAAUmJ,GAAO5B,GAAoBzF,GAAWA,GAASqH,GAAO5B,GAChF8B,GAAgB/J,OAASA,GACzB+J,GAAgBvM,KAAOA,GAEvBgD,GAASwH,GAAY+B,IAErB/J,GAAOnJ,OAAS2G,GAEhB,IAAM,IAAIyM,GAAS,EAAGA,GAAShC,GAAmBgC,KAAY,CAE7D,IAAIC,GAASD,GAAWD,GAAmB/B,GAE3C,GAAKiC,IAAU1H,GAAS,MAExB,IAAM,IAAI2H,GAAY,EAAGA,GAAYxJ,GAAUC,SAASxR,OAAQ+a,KAI/D,IAFA,IAAIC,GAAON,GAAgBnJ,GAAUC,SAAUuJ,IAAYrI,MAEjD1R,GAAI,EAAGA,GAAIqQ,GAAOrQ,KAAO,CAElC,IAAIkP,GAAQ2K,IAAWtJ,GAAUC,SAASxR,OAASqR,IAAc0J,GAAY1J,GAAUrQ,GACvF6Y,GAAUpS,MAAQyI,GAAM4I,GAExB,IAAImC,GAAMlC,GAAU3H,GAAQyI,IAE5BW,GA/Fc,EA+F6BnJ,IAA1B+B,GAAS,EAAI0H,IA/FhB,EA+FyD9Z,GAAsBga,IAASC,KAU1G,GAAK5Z,KAAKmE,OAAS6U,MAAmB,CAMrC,IAJA,IAAI9Z,UAAGgB,UACD6M,GAAOoM,GAAUxa,OACjBkb,GAAY,IAAI/a,WAAYiO,IAExB1N,GAAI,EAAGA,GAAI0S,KAAW1S,GAE/B,IAAM,IAAIU,GAAI,EAAGA,GAAIiQ,KAAUjQ,GAAI,CAIlC,IAAM+Z,GAAMX,GAFZjZ,GAAIb,GAAI2Q,GAAQ,EAAQ,EAAJjQ,IAGdga,GAAQZ,GAAWjZ,GAAI,GACvB8Z,GAAOb,GAAWjZ,GAAI,GAK5B,IAFAhB,GAAM8a,IADN9a,GAAM4a,GAAMC,GAAUD,GAAMC,IACTC,GAAO9a,IAEjB,MAER2a,GAAW3Z,IAAM2Z,GAAW3Z,GAAI,GAAM2Z,GAAW3Z,GAAI,GAAM2Z,GAAW3Z,GAAI,GAAM,MAE1E,CAEN,IAAM+Z,GAAM9T,EAAOjH,IACnBA,GAAe,IAAX+a,GAAK,GAAY/a,GAErB2a,GAAW3Z,IAAM4Z,GAAM5a,GACvB2a,GAAW3Z,GAAI,GAAM6Z,GAAQ7a,GAC7B2a,GAAW3Z,GAAI,GAAM8Z,GAAO9a,GAC5B2a,GAAW3Z,GAAI,GAAM+Z,GAAK,GAAM,KAQnCd,GAAYU,GAIb,IAAMK,GAAWla,KAAKmE,OAAS6U,MAAqBmB,MAAqCC,MAEzF,OACCC,OAAQnK,GACRF,MAAOA,GACP+B,OAAQA,GACR/D,KAAMmL,GACNe,OAAQA,GACR/V,KAAMnE,KAAKmE,OAKbmW,YAAa,SAAWlU,GAGvB,OADApG,KAAKmE,KAAOiC,EACLpG,MAIRua,KAAM,SAAWC,EAAKC,EAAQC,EAAYC,GA+BzC,OAAO1W,IAAkBpD,UAAU0Z,KAAKrW,KAAMlE,KAAMwa,EA7BpD,SAAyBI,EAASC,GAEjC,OAASD,EAAQzW,MAEhB,KAAK6U,MAEJ4B,EAAQE,SAAWC,MACnBH,EAAQI,UAAYC,MACpBL,EAAQM,UAAYD,MACpBL,EAAQO,iBAAkB,EAC1BP,EAAQQ,OAAQ,EAChB,MAED,KAAKhX,IACL,KAAK6U,IAEJ2B,EAAQE,SAAWO,KACnBT,EAAQI,UAAYM,KACpBV,EAAQM,UAAYI,KACpBV,EAAQO,iBAAkB,EAC1BP,EAAQQ,OAAQ,EAKbX,GAASA,EAAQG,EAASC,IAIyCH,EAAYC,MC/1EvF,IAAAY,GACAvN,KADA,WAEA,OACAwN,QACAC,SAAA,GAEAC,SAAA,KACAC,MAAA,KACAC,OAAA,KACAC,IAAA,OAGAC,QAZA,WAaA9b,KAAA+b,QAEAC,cAfA,WAgBAhc,KAAA6b,IAAAI,QAEAC,SACAH,KADA,WACA,IAAAI,EAAAnc,KACAA,KAAA0b,SAAA,IAAA1b,KAAAoc,OAAAC,cACArc,KAAA0b,SAAAY,cAAAC,OAAAC,kBACAxc,KAAA0b,SAAAe,QAAAzc,KAAA0c,iBAAAH,OAAAI,aACAC,SAAAC,uBAAA,sCAAAC,YAAA9c,KAAA0b,SAAAqB,YACA/c,KAAA0b,SAAAsB,YAAAhd,KAAAoc,OAAAa,oBACAjd,KAAA0b,SAAAwB,oBAAAld,KAAAwb,OAAAC,SACAzb,KAAA0b,SAAAyB,eAAAnd,KAAAoc,OAAAgB,aACApd,KAAA2b,MAAA,IAAA3b,KAAAoc,OAAAiB,MACA,IAAAC,EAAAtd,KAAA0c,iBAAAH,OAAAI,YACA3c,KAAA4b,OAAA,IAAA5b,KAAAoc,OAAAmB,oBAAAD,IAAA,WACA,IAAAE,GACAlD,YAAAta,KAAAoc,OAAAhY,WACAmW,KAAA,wCAAAK,EAAA6C,GAQA,IAAAC,EAAA,IAAAvB,EAAAC,OAAAuB,mBAAAC,IAAAhD,IACAiD,EAAA,IAAA1B,EAAAC,OAAA0B,oBAAA,IAAAL,EAAAzN,MAAAyN,EAAA1L,OAAA,KACAgM,EAAA,IAAA5B,EAAAC,OAAA4B,KAAAH,EAAAH,GACAvB,EAAAR,MAAAsC,IAAAF,GACA5B,EAAA+B,WAGAle,KAAA6b,IAAA,IAAAsC,EAAA,EACAne,KAAA6b,IAAAoC,IAAAje,KAAAwb,OAAA,oBAAA4C,SAAApe,KAAAke,QACAle,KAAA6b,IAAAwC,OAEA9B,OAAA+B,iBAAA,SAAAte,KAAAue,gBAAA,IAEAA,eAnCA,WAoCA,IAAAjB,EAAAf,OAAAiC,WAAA,IAAAjC,OAAAI,YACA8B,EAAAze,KAAA4b,OAAA8C,IAAA1e,KAAA4b,OAAA+C,OACA3e,KAAA4b,OAAAgD,MAAAH,EAAAnB,EAAA,EACAtd,KAAA4b,OAAAiD,MAAAJ,EAAAnB,EAAA,EACAtd,KAAA4b,OAAAkD,yBACA9e,KAAA0b,SAAAe,QAAAF,OAAAiC,WAAA,IAAAjC,OAAAI,aACA3c,KAAAke,UAEAA,OA5CA,WA6CAle,KAAA0b,SAAAwB,oBAAAld,KAAAwb,OAAAC,SACAzb,KAAA0b,SAAAwC,OAAAle,KAAA2b,MAAA3b,KAAA4b,WCzEemD,GADEb,OAFjB,WAA0Ble,KAAagf,eAAbhf,KAAuCif,MAAAC,GAAwB,OAA/Dlf,KAA+Dmf,GAAA,IAExEC,iBADjB,WAAoC,IAAaC,EAAbrf,KAAagf,eAA0BE,EAAvClf,KAAuCif,MAAAC,IAAAG,EAAwB,OAAAH,EAAA,OAAiBI,YAAA,oCAA8CJ,EAAA,OAAYK,OAAOC,GAAA,UAAaN,EAAA,KAAUK,OAAOE,KAAA,sBAAAC,OAAA,SAAAC,IAAA,cAA/K3f,KAAgP4f,GAAA,cAAhP5f,KAAgP4f,GAAA,uCAAAV,EAAA,MAAhPlf,KAAgP4f,GAAA,8BAAAV,EAAA,KAA2HK,OAAOE,KAAA,2CAAAC,OAAA,SAAAC,IAAA,cAAlX3f,KAAwc4f,GAAA,kBAAxc5f,KAAwc4f,GAAA,kBCE5e,IAcAC,EAdyBhiB,EAAQ,OAcjCiiB,CACEvE,EACAwD,GATF,EAVA,SAAAgB,GACEliB,EAAQ,SAaV,kBAEA,MAUeE,EAAA,QAAA8hB,EAAiB","file":"static/js/16.528006587f562d72877a.js","sourcesContent":["/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */var mod={}, l=void 0,aa=mod;function r(c,d){var a=c.split(\".\"),b=aa;!(a[0]in b)&&b.execScript&&b.execScript(\"var \"+a[0]);for(var e;a.length&&(e=a.shift());)!a.length&&d!==l?b[e]=d:b=b[e]?b[e]:b[e]={}};var t=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function v(c){var d=c.length,a=0,b=Number.POSITIVE_INFINITY,e,f,g,h,k,m,n,p,s,x;for(p=0;p<d;++p)c[p]>a&&(a=c[p]),c[p]<b&&(b=c[p]);e=1<<a;f=new (t?Uint32Array:Array)(e);g=1;h=0;for(k=2;g<=a;){for(p=0;p<d;++p)if(c[p]===g){m=0;n=h;for(s=0;s<g;++s)m=m<<1|n&1,n>>=1;x=g<<16|p;for(s=m;s<e;s+=k)f[s]=x;++h}++g;h<<=1;k<<=1}return[f,a,b]};function w(c,d){this.g=[];this.h=32768;this.d=this.f=this.a=this.l=0;this.input=t?new Uint8Array(c):c;this.m=!1;this.i=y;this.r=!1;if(d||!(d={}))d.index&&(this.a=d.index),d.bufferSize&&(this.h=d.bufferSize),d.bufferType&&(this.i=d.bufferType),d.resize&&(this.r=d.resize);switch(this.i){case A:this.b=32768;this.c=new (t?Uint8Array:Array)(32768+this.h+258);break;case y:this.b=0;this.c=new (t?Uint8Array:Array)(this.h);this.e=this.z;this.n=this.v;this.j=this.w;break;default:throw Error(\"invalid inflate mode\");\r\n}}var A=0,y=1,B={t:A,s:y};\r\nw.prototype.k=function(){for(;!this.m;){var c=C(this,3);c&1&&(this.m=!0);c>>>=1;switch(c){case 0:var d=this.input,a=this.a,b=this.c,e=this.b,f=d.length,g=l,h=l,k=b.length,m=l;this.d=this.f=0;if(a+1>=f)throw Error(\"invalid uncompressed block header: LEN\");g=d[a++]|d[a++]<<8;if(a+1>=f)throw Error(\"invalid uncompressed block header: NLEN\");h=d[a++]|d[a++]<<8;if(g===~h)throw Error(\"invalid uncompressed block header: length verify\");if(a+g>d.length)throw Error(\"input buffer is broken\");switch(this.i){case A:for(;e+\r\ng>b.length;){m=k-e;g-=m;if(t)b.set(d.subarray(a,a+m),e),e+=m,a+=m;else for(;m--;)b[e++]=d[a++];this.b=e;b=this.e();e=this.b}break;case y:for(;e+g>b.length;)b=this.e({p:2});break;default:throw Error(\"invalid inflate mode\");}if(t)b.set(d.subarray(a,a+g),e),e+=g,a+=g;else for(;g--;)b[e++]=d[a++];this.a=a;this.b=e;this.c=b;break;case 1:this.j(ba,ca);break;case 2:for(var n=C(this,5)+257,p=C(this,5)+1,s=C(this,4)+4,x=new (t?Uint8Array:Array)(D.length),S=l,T=l,U=l,u=l,M=l,F=l,z=l,q=l,V=l,q=0;q<s;++q)x[D[q]]=\r\nC(this,3);if(!t){q=s;for(s=x.length;q<s;++q)x[D[q]]=0}S=v(x);u=new (t?Uint8Array:Array)(n+p);q=0;for(V=n+p;q<V;)switch(M=E(this,S),M){case 16:for(z=3+C(this,2);z--;)u[q++]=F;break;case 17:for(z=3+C(this,3);z--;)u[q++]=0;F=0;break;case 18:for(z=11+C(this,7);z--;)u[q++]=0;F=0;break;default:F=u[q++]=M}T=t?v(u.subarray(0,n)):v(u.slice(0,n));U=t?v(u.subarray(n)):v(u.slice(n));this.j(T,U);break;default:throw Error(\"unknown BTYPE: \"+c);}}return this.n()};\r\nvar G=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],D=t?new Uint16Array(G):G,H=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],I=t?new Uint16Array(H):H,J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],K=t?new Uint8Array(J):J,L=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],da=t?new Uint16Array(L):L,ea=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,\r\n13,13],N=t?new Uint8Array(ea):ea,O=new (t?Uint8Array:Array)(288),P,fa;P=0;for(fa=O.length;P<fa;++P)O[P]=143>=P?8:255>=P?9:279>=P?7:8;var ba=v(O),Q=new (t?Uint8Array:Array)(30),R,ga;R=0;for(ga=Q.length;R<ga;++R)Q[R]=5;var ca=v(Q);function C(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h;b<d;){if(f>=g)throw Error(\"input buffer is broken\");a|=e[f++]<<b;b+=8}h=a&(1<<d)-1;c.f=a>>>d;c.d=b-d;c.a=f;return h}\r\nfunction E(c,d){for(var a=c.f,b=c.d,e=c.input,f=c.a,g=e.length,h=d[0],k=d[1],m,n;b<k&&!(f>=g);)a|=e[f++]<<b,b+=8;m=h[a&(1<<k)-1];n=m>>>16;if(n>b)throw Error(\"invalid code length: \"+n);c.f=a>>n;c.d=b-n;c.a=f;return m&65535}\r\nw.prototype.j=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length-258,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(this.b=b,a=this.e(),b=this.b),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b>=e&&(this.b=b,a=this.e(),b=this.b);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\r\nw.prototype.w=function(c,d){var a=this.c,b=this.b;this.o=c;for(var e=a.length,f,g,h,k;256!==(f=E(this,c));)if(256>f)b>=e&&(a=this.e(),e=a.length),a[b++]=f;else{g=f-257;k=I[g];0<K[g]&&(k+=C(this,K[g]));f=E(this,d);h=da[f];0<N[f]&&(h+=C(this,N[f]));b+k>e&&(a=this.e(),e=a.length);for(;k--;)a[b]=a[b++-h]}for(;8<=this.d;)this.d-=8,this.a--;this.b=b};\r\nw.prototype.e=function(){var c=new (t?Uint8Array:Array)(this.b-32768),d=this.b-32768,a,b,e=this.c;if(t)c.set(e.subarray(32768,c.length));else{a=0;for(b=c.length;a<b;++a)c[a]=e[a+32768]}this.g.push(c);this.l+=c.length;if(t)e.set(e.subarray(d,d+32768));else for(a=0;32768>a;++a)e[a]=e[d+a];this.b=32768;return e};\r\nw.prototype.z=function(c){var d,a=this.input.length/this.a+1|0,b,e,f,g=this.input,h=this.c;c&&(\"number\"===typeof c.p&&(a=c.p),\"number\"===typeof c.u&&(a+=c.u));2>a?(b=(g.length-this.a)/this.o[2],f=258*(b/2)|0,e=f<h.length?h.length+f:h.length<<1):e=h.length*a;t?(d=new Uint8Array(e),d.set(h)):d=h;return this.c=d};\r\nw.prototype.n=function(){var c=0,d=this.c,a=this.g,b,e=new (t?Uint8Array:Array)(this.l+(this.b-32768)),f,g,h,k;if(0===a.length)return t?this.c.subarray(32768,this.b):this.c.slice(32768,this.b);f=0;for(g=a.length;f<g;++f){b=a[f];h=0;for(k=b.length;h<k;++h)e[c++]=b[h]}f=32768;for(g=this.b;f<g;++f)e[c++]=d[f];this.g=[];return this.buffer=e};\r\nw.prototype.v=function(){var c,d=this.b;t?this.r?(c=new Uint8Array(d),c.set(this.c.subarray(0,d))):c=this.c.subarray(0,d):(this.c.length>d&&(this.c.length=d),c=this.c);return this.buffer=c};function W(c,d){var a,b;this.input=c;this.a=0;if(d||!(d={}))d.index&&(this.a=d.index),d.verify&&(this.A=d.verify);a=c[this.a++];b=c[this.a++];switch(a&15){case ha:this.method=ha;break;default:throw Error(\"unsupported compression method\");}if(0!==((a<<8)+b)%31)throw Error(\"invalid fcheck flag:\"+((a<<8)+b)%31);if(b&32)throw Error(\"fdict flag is not supported\");this.q=new w(c,{index:this.a,bufferSize:d.bufferSize,bufferType:d.bufferType,resize:d.resize})}\r\nW.prototype.k=function(){var c=this.input,d,a;d=this.q.k();this.a=this.q.a;if(this.A){a=(c[this.a++]<<24|c[this.a++]<<16|c[this.a++]<<8|c[this.a++])>>>0;var b=d;if(\"string\"===typeof b){var e=b.split(\"\"),f,g;f=0;for(g=e.length;f<g;f++)e[f]=(e[f].charCodeAt(0)&255)>>>0;b=e}for(var h=1,k=0,m=b.length,n,p=0;0<m;){n=1024<m?1024:m;m-=n;do h+=b[p++],k+=h;while(--n);h%=65521;k%=65521}if(a!==(k<<16|h)>>>0)throw Error(\"invalid adler-32 checksum\");}return d};var ha=8;r(\"Zlib.Inflate\",W);r(\"Zlib.Inflate.prototype.decompress\",W.prototype.k);var X={ADAPTIVE:B.s,BLOCK:B.t},Y,Z,$,ia;if(Object.keys)Y=Object.keys(X);else for(Z in Y=[],$=0,X)Y[$++]=Z;$=0;for(ia=Y.length;$<ia;++$)Z=Y[$],r(\"Zlib.Inflate.BufferType.\"+Z,X[Z]);\r\nvar Inflate=mod.Zlib.Inflate;\r\nexport { Inflate }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/libs/inflate.module.min.js","import {\r\n\tDataTextureLoader,\r\n\tDataUtils,\r\n\tFloatType,\r\n\tHalfFloatType,\r\n\tLinearEncoding,\r\n\tLinearFilter,\r\n\tNearestFilter,\r\n\tRGBAFormat,\r\n\tRGBEEncoding,\r\n\tRGBEFormat,\r\n\tRGBFormat,\r\n\tUnsignedByteType\r\n} from \"@/components/build/three.module.js\";\r\nimport { Inflate } from \"../libs/inflate.module.min.js\";\r\n\r\n/**\r\n * OpenEXR loader currently supports uncompressed, ZIP(S), RLE, PIZ and DWA/B compression.\r\n * Supports reading as UnsignedByte, HalfFloat and Float type data texture.\r\n *\r\n * Referred to the original Industrial Light & Magic OpenEXR implementation and the TinyEXR / Syoyo Fujita\r\n * implementation, so I have preserved their copyright notices.\r\n */\r\n\r\n// /*\r\n// Copyright (c) 2014 - 2017, Syoyo Fujita\r\n// All rights reserved.\r\n\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//     * Redistributions of source code must retain the above copyright\r\n//       notice, this list of conditions and the following disclaimer.\r\n//     * Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//     * Neither the name of the Syoyo Fujita nor the\r\n//       names of its contributors may be used to endorse or promote products\r\n//       derived from this software without specific prior written permission.\r\n\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// */\r\n\r\n// // TinyEXR contains some OpenEXR code, which is licensed under ------------\r\n\r\n// ///////////////////////////////////////////////////////////////////////////\r\n// //\r\n// // Copyright (c) 2002, Industrial Light & Magic, a division of Lucas\r\n// // Digital Ltd. LLC\r\n// //\r\n// // All rights reserved.\r\n// //\r\n// // Redistribution and use in source and binary forms, with or without\r\n// // modification, are permitted provided that the following conditions are\r\n// // met:\r\n// // *       Redistributions of source code must retain the above copyright\r\n// // notice, this list of conditions and the following disclaimer.\r\n// // *       Redistributions in binary form must reproduce the above\r\n// // copyright notice, this list of conditions and the following disclaimer\r\n// // in the documentation and/or other materials provided with the\r\n// // distribution.\r\n// // *       Neither the name of Industrial Light & Magic nor the names of\r\n// // its contributors may be used to endorse or promote products derived\r\n// // from this software without specific prior written permission.\r\n// //\r\n// // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n// //\r\n// ///////////////////////////////////////////////////////////////////////////\r\n\r\n// // End of OpenEXR license -------------------------------------------------\r\n\r\nvar EXRLoader = function ( manager ) {\r\n\r\n\tDataTextureLoader.call( this, manager );\r\n\r\n\tthis.type = FloatType;\r\n\r\n};\r\n\r\nEXRLoader.prototype = Object.assign( Object.create( DataTextureLoader.prototype ), {\r\n\r\n\tconstructor: EXRLoader,\r\n\r\n\tparse: function ( buffer ) {\r\n\r\n\t\tconst USHORT_RANGE = ( 1 << 16 );\r\n\t\tconst BITMAP_SIZE = ( USHORT_RANGE >> 3 );\r\n\r\n\t\tconst HUF_ENCBITS = 16; // literal (value) bit length\r\n\t\tconst HUF_DECBITS = 14; // decoding bit size (>= 8)\r\n\r\n\t\tconst HUF_ENCSIZE = ( 1 << HUF_ENCBITS ) + 1; // encoding table size\r\n\t\tconst HUF_DECSIZE = 1 << HUF_DECBITS; // decoding table size\r\n\t\tconst HUF_DECMASK = HUF_DECSIZE - 1;\r\n\r\n\t\tconst NBITS = 16;\r\n\t\tconst A_OFFSET = 1 << ( NBITS - 1 );\r\n\t\tconst MOD_MASK = ( 1 << NBITS ) - 1;\r\n\r\n\t\tconst SHORT_ZEROCODE_RUN = 59;\r\n\t\tconst LONG_ZEROCODE_RUN = 63;\r\n\t\tconst SHORTEST_LONG_RUN = 2 + LONG_ZEROCODE_RUN - SHORT_ZEROCODE_RUN;\r\n\r\n\t\tconst ULONG_SIZE = 8;\r\n\t\tconst FLOAT32_SIZE = 4;\r\n\t\tconst INT32_SIZE = 4;\r\n\t\tconst INT16_SIZE = 2;\r\n\t\tconst INT8_SIZE = 1;\r\n\r\n\t\tconst STATIC_HUFFMAN = 0;\r\n\t\tconst DEFLATE = 1;\r\n\r\n\t\tconst UNKNOWN = 0;\r\n\t\tconst LOSSY_DCT = 1;\r\n\t\tconst RLE = 2;\r\n\r\n\t\tconst logBase = Math.pow( 2.7182818, 2.2 );\r\n\r\n\t\tvar tmpDataView = new DataView( new ArrayBuffer( 8 ) );\r\n\r\n\t\tfunction frexp( value ) {\r\n\r\n\t\t\tif ( value === 0 ) return [ value, 0 ];\r\n\r\n\t\t\ttmpDataView.setFloat64( 0, value );\r\n\r\n\t\t\tvar bits = ( tmpDataView.getUint32( 0 ) >>> 20 ) & 0x7FF;\r\n\t\t\tif ( bits === 0 ) { // denormal\r\n\r\n\t\t\t\ttmpDataView.setFloat64( 0, value * Math.pow( 2, 64 ) ); // exp + 64\r\n\t\t\t\tbits = ( ( tmpDataView.getUint32( 0 ) >>> 20 ) & 0x7FF ) - 64;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar exponent = bits - 1022;\r\n\t\t\tvar mantissa = ldexp( value, - exponent );\r\n\r\n\t\t\treturn [ mantissa, exponent ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction ldexp( mantissa, exponent ) {\r\n\r\n\t\t\tvar steps = Math.min( 3, Math.ceil( Math.abs( exponent ) / 1023 ) );\r\n\t\t\tvar result = mantissa;\r\n\r\n\t\t\tfor ( var i = 0; i < steps; i ++ )\r\n\t\t\t\tresult *= Math.pow( 2, Math.floor( ( exponent + i ) / steps ) );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\tfunction reverseLutFromBitmap( bitmap, lut ) {\r\n\r\n\t\t\tvar k = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < USHORT_RANGE; ++ i ) {\r\n\r\n\t\t\t\tif ( ( i == 0 ) || ( bitmap[ i >> 3 ] & ( 1 << ( i & 7 ) ) ) ) {\r\n\r\n\t\t\t\t\tlut[ k ++ ] = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar n = k - 1;\r\n\r\n\t\t\twhile ( k < USHORT_RANGE ) lut[ k ++ ] = 0;\r\n\r\n\t\t\treturn n;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufClearDecTable( hdec ) {\r\n\r\n\t\t\tfor ( var i = 0; i < HUF_DECSIZE; i ++ ) {\r\n\r\n\t\t\t\thdec[ i ] = {};\r\n\t\t\t\thdec[ i ].len = 0;\r\n\t\t\t\thdec[ i ].lit = 0;\r\n\t\t\t\thdec[ i ].p = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst getBitsReturn = { l: 0, c: 0, lc: 0 };\r\n\r\n\t\tfunction getBits( nBits, c, lc, uInt8Array, inOffset ) {\r\n\r\n\t\t\twhile ( lc < nBits ) {\r\n\r\n\t\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\r\n\t\t\t\tlc += 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlc -= nBits;\r\n\r\n\t\t\tgetBitsReturn.l = ( c >> lc ) & ( ( 1 << nBits ) - 1 );\r\n\t\t\tgetBitsReturn.c = c;\r\n\t\t\tgetBitsReturn.lc = lc;\r\n\r\n\t\t}\r\n\r\n\t\tconst hufTableBuffer = new Array( 59 );\r\n\r\n\t\tfunction hufCanonicalCodeTable( hcode ) {\r\n\r\n\t\t\tfor ( var i = 0; i <= 58; ++ i ) hufTableBuffer[ i ] = 0;\r\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) hufTableBuffer[ hcode[ i ] ] += 1;\r\n\r\n\t\t\tvar c = 0;\r\n\r\n\t\t\tfor ( var i = 58; i > 0; -- i ) {\r\n\r\n\t\t\t\tvar nc = ( ( c + hufTableBuffer[ i ] ) >> 1 );\r\n\t\t\t\thufTableBuffer[ i ] = c;\r\n\t\t\t\tc = nc;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) {\r\n\r\n\t\t\t\tvar l = hcode[ i ];\r\n\t\t\t\tif ( l > 0 ) hcode[ i ] = l | ( hufTableBuffer[ l ] ++ << 6 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, hcode ) {\r\n\r\n\t\t\tvar p = inOffset;\r\n\t\t\tvar c = 0;\r\n\t\t\tvar lc = 0;\r\n\r\n\t\t\tfor ( ; im <= iM; im ++ ) {\r\n\r\n\t\t\t\tif ( p.value - inOffset.value > ni ) return false;\r\n\r\n\t\t\t\tgetBits( 6, c, lc, uInt8Array, p );\r\n\r\n\t\t\t\tvar l = getBitsReturn.l;\r\n\t\t\t\tc = getBitsReturn.c;\r\n\t\t\t\tlc = getBitsReturn.lc;\r\n\r\n\t\t\t\thcode[ im ] = l;\r\n\r\n\t\t\t\tif ( l == LONG_ZEROCODE_RUN ) {\r\n\r\n\t\t\t\t\tif ( p.value - inOffset.value > ni ) {\r\n\r\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgetBits( 8, c, lc, uInt8Array, p );\r\n\r\n\t\t\t\t\tvar zerun = getBitsReturn.l + SHORTEST_LONG_RUN;\r\n\t\t\t\t\tc = getBitsReturn.c;\r\n\t\t\t\t\tlc = getBitsReturn.lc;\r\n\r\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\r\n\r\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\r\n\r\n\t\t\t\t\tim --;\r\n\r\n\t\t\t\t} else if ( l >= SHORT_ZEROCODE_RUN ) {\r\n\r\n\t\t\t\t\tvar zerun = l - SHORT_ZEROCODE_RUN + 2;\r\n\r\n\t\t\t\t\tif ( im + zerun > iM + 1 ) {\r\n\r\n\t\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\r\n\r\n\t\t\t\t\tim --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\thufCanonicalCodeTable( hcode );\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufLength( code ) {\r\n\r\n\t\t\treturn code & 63;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufCode( code ) {\r\n\r\n\t\t\treturn code >> 6;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufBuildDecTable( hcode, im, iM, hdecod ) {\r\n\r\n\t\t\tfor ( ; im <= iM; im ++ ) {\r\n\r\n\t\t\t\tvar c = hufCode( hcode[ im ] );\r\n\t\t\t\tvar l = hufLength( hcode[ im ] );\r\n\r\n\t\t\t\tif ( c >> l ) {\r\n\r\n\t\t\t\t\tthrow 'Invalid table entry';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( l > HUF_DECBITS ) {\r\n\r\n\t\t\t\t\tvar pl = hdecod[ ( c >> ( l - HUF_DECBITS ) ) ];\r\n\r\n\t\t\t\t\tif ( pl.len ) {\r\n\r\n\t\t\t\t\t\tthrow 'Invalid table entry';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpl.lit ++;\r\n\r\n\t\t\t\t\tif ( pl.p ) {\r\n\r\n\t\t\t\t\t\tvar p = pl.p;\r\n\t\t\t\t\t\tpl.p = new Array( pl.lit );\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < pl.lit - 1; ++ i ) {\r\n\r\n\t\t\t\t\t\t\tpl.p[ i ] = p[ i ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpl.p = new Array( 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpl.p[ pl.lit - 1 ] = im;\r\n\r\n\t\t\t\t} else if ( l ) {\r\n\r\n\t\t\t\t\tvar plOffset = 0;\r\n\r\n\t\t\t\t\tfor ( var i = 1 << ( HUF_DECBITS - l ); i > 0; i -- ) {\r\n\r\n\t\t\t\t\t\tvar pl = hdecod[ ( c << ( HUF_DECBITS - l ) ) + plOffset ];\r\n\r\n\t\t\t\t\t\tif ( pl.len || pl.p ) {\r\n\r\n\t\t\t\t\t\t\tthrow 'Invalid table entry';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpl.len = l;\r\n\t\t\t\t\t\tpl.lit = im;\r\n\r\n\t\t\t\t\t\tplOffset ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tconst getCharReturn = { c: 0, lc: 0 };\r\n\r\n\t\tfunction getChar( c, lc, uInt8Array, inOffset ) {\r\n\r\n\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\r\n\t\t\tlc += 8;\r\n\r\n\t\t\tgetCharReturn.c = c;\r\n\t\t\tgetCharReturn.lc = lc;\r\n\r\n\t\t}\r\n\r\n\t\tconst getCodeReturn = { c: 0, lc: 0 };\r\n\r\n\t\tfunction getCode( po, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outBufferOffset, outBufferEndOffset ) {\r\n\r\n\t\t\tif ( po == rlc ) {\r\n\r\n\t\t\t\tif ( lc < 8 ) {\r\n\r\n\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\r\n\t\t\t\t\tc = getCharReturn.c;\r\n\t\t\t\t\tlc = getCharReturn.lc;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlc -= 8;\r\n\r\n\t\t\t\tvar cs = ( c >> lc );\r\n\t\t\t\tvar cs = new Uint8Array( [ cs ] )[ 0 ];\r\n\r\n\t\t\t\tif ( outBufferOffset.value + cs > outBufferEndOffset ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar s = outBuffer[ outBufferOffset.value - 1 ];\r\n\r\n\t\t\t\twhile ( cs -- > 0 ) {\r\n\r\n\t\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = s;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( outBufferOffset.value < outBufferEndOffset ) {\r\n\r\n\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = po;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgetCodeReturn.c = c;\r\n\t\t\tgetCodeReturn.lc = lc;\r\n\r\n\t\t}\r\n\r\n\t\tfunction UInt16( value ) {\r\n\r\n\t\t\treturn ( value & 0xFFFF );\r\n\r\n\t\t}\r\n\r\n\t\tfunction Int16( value ) {\r\n\r\n\t\t\tvar ref = UInt16( value );\r\n\t\t\treturn ( ref > 0x7FFF ) ? ref - 0x10000 : ref;\r\n\r\n\t\t}\r\n\r\n\t\tconst wdec14Return = { a: 0, b: 0 };\r\n\r\n\t\tfunction wdec14( l, h ) {\r\n\r\n\t\t\tvar ls = Int16( l );\r\n\t\t\tvar hs = Int16( h );\r\n\r\n\t\t\tvar hi = hs;\r\n\t\t\tvar ai = ls + ( hi & 1 ) + ( hi >> 1 );\r\n\r\n\t\t\tvar as = ai;\r\n\t\t\tvar bs = ai - hi;\r\n\r\n\t\t\twdec14Return.a = as;\r\n\t\t\twdec14Return.b = bs;\r\n\r\n\t\t}\r\n\r\n\t\tfunction wdec16( l, h ) {\r\n\r\n\t\t\tvar m = UInt16( l );\r\n\t\t\tvar d = UInt16( h );\r\n\r\n\t\t\tvar bb = ( m - ( d >> 1 ) ) & MOD_MASK;\r\n\t\t\tvar aa = ( d + bb - A_OFFSET ) & MOD_MASK;\r\n\r\n\t\t\twdec14Return.a = aa;\r\n\t\t\twdec14Return.b = bb;\r\n\r\n\t\t}\r\n\r\n\t\tfunction wav2Decode( buffer, j, nx, ox, ny, oy, mx ) {\r\n\r\n\t\t\tvar w14 = mx < ( 1 << 14 );\r\n\t\t\tvar n = ( nx > ny ) ? ny : nx;\r\n\t\t\tvar p = 1;\r\n\t\t\tvar p2;\r\n\r\n\t\t\twhile ( p <= n ) p <<= 1;\r\n\r\n\t\t\tp >>= 1;\r\n\t\t\tp2 = p;\r\n\t\t\tp >>= 1;\r\n\r\n\t\t\twhile ( p >= 1 ) {\r\n\r\n\t\t\t\tvar py = 0;\r\n\t\t\t\tvar ey = py + oy * ( ny - p2 );\r\n\t\t\t\tvar oy1 = oy * p;\r\n\t\t\t\tvar oy2 = oy * p2;\r\n\t\t\t\tvar ox1 = ox * p;\r\n\t\t\t\tvar ox2 = ox * p2;\r\n\t\t\t\tvar i00, i01, i10, i11;\r\n\r\n\t\t\t\tfor ( ; py <= ey; py += oy2 ) {\r\n\r\n\t\t\t\t\tvar px = py;\r\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\r\n\r\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\r\n\r\n\t\t\t\t\t\tvar p01 = px + ox1;\r\n\t\t\t\t\t\tvar p10 = px + oy1;\r\n\t\t\t\t\t\tvar p11 = p10 + ox1;\r\n\r\n\t\t\t\t\t\tif ( w14 ) {\r\n\r\n\t\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\r\n\r\n\t\t\t\t\t\t\ti00 = wdec14Return.a;\r\n\t\t\t\t\t\t\ti10 = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t\twdec14( buffer[ p01 + j ], buffer[ p11 + j ] );\r\n\r\n\t\t\t\t\t\t\ti01 = wdec14Return.a;\r\n\t\t\t\t\t\t\ti11 = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t\twdec14( i00, i01 );\r\n\r\n\t\t\t\t\t\t\tbuffer[ px + j ] = wdec14Return.a;\r\n\t\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t\twdec14( i10, i11 );\r\n\r\n\t\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.a;\r\n\t\t\t\t\t\t\tbuffer[ p11 + j ] = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\twdec16( buffer[ px + j ], buffer[ p10 + j ] );\r\n\r\n\t\t\t\t\t\t\ti00 = wdec14Return.a;\r\n\t\t\t\t\t\t\ti10 = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t\twdec16( buffer[ p01 + j ], buffer[ p11 + j ] );\r\n\r\n\t\t\t\t\t\t\ti01 = wdec14Return.a;\r\n\t\t\t\t\t\t\ti11 = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t\twdec16( i00, i01 );\r\n\r\n\t\t\t\t\t\t\tbuffer[ px + j ] = wdec14Return.a;\r\n\t\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\r\n\r\n\t\t\t\t\t\t\twdec16( i10, i11 );\r\n\r\n\t\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.a;\r\n\t\t\t\t\t\t\tbuffer[ p11 + j ] = wdec14Return.b;\r\n\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( nx & p ) {\r\n\r\n\t\t\t\t\t\tvar p10 = px + oy1;\r\n\r\n\t\t\t\t\t\tif ( w14 )\r\n\t\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\twdec16( buffer[ px + j ], buffer[ p10 + j ] );\r\n\r\n\t\t\t\t\t\ti00 = wdec14Return.a;\r\n\t\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.b;\r\n\r\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ny & p ) {\r\n\r\n\t\t\t\t\tvar px = py;\r\n\t\t\t\t\tvar ex = py + ox * ( nx - p2 );\r\n\r\n\t\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\r\n\r\n\t\t\t\t\t\tvar p01 = px + ox1;\r\n\r\n\t\t\t\t\t\tif ( w14 )\r\n\t\t\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p01 + j ] );\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\twdec16( buffer[ px + j ], buffer[ p01 + j ] );\r\n\r\n\t\t\t\t\t\ti00 = wdec14Return.a;\r\n\t\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\r\n\r\n\t\t\t\t\t\tbuffer[ px + j ] = i00;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp2 = p;\r\n\t\t\t\tp >>= 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn py;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufDecode( encodingTable, decodingTable, uInt8Array, inDataView, inOffset, ni, rlc, no, outBuffer, outOffset ) {\r\n\r\n\t\t\tvar c = 0;\r\n\t\t\tvar lc = 0;\r\n\t\t\tvar outBufferEndOffset = no;\r\n\t\t\tvar inOffsetEnd = Math.trunc( inOffset.value + ( ni + 7 ) / 8 );\r\n\r\n\t\t\twhile ( inOffset.value < inOffsetEnd ) {\r\n\r\n\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\r\n\r\n\t\t\t\tc = getCharReturn.c;\r\n\t\t\t\tlc = getCharReturn.lc;\r\n\r\n\t\t\t\twhile ( lc >= HUF_DECBITS ) {\r\n\r\n\t\t\t\t\tvar index = ( c >> ( lc - HUF_DECBITS ) ) & HUF_DECMASK;\r\n\t\t\t\t\tvar pl = decodingTable[ index ];\r\n\r\n\t\t\t\t\tif ( pl.len ) {\r\n\r\n\t\t\t\t\t\tlc -= pl.len;\r\n\r\n\t\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\r\n\r\n\t\t\t\t\t\tc = getCodeReturn.c;\r\n\t\t\t\t\t\tlc = getCodeReturn.lc;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ! pl.p ) {\r\n\r\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar j;\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < pl.lit; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar l = hufLength( encodingTable[ pl.p[ j ] ] );\r\n\r\n\t\t\t\t\t\t\twhile ( lc < l && inOffset.value < inOffsetEnd ) {\r\n\r\n\t\t\t\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\r\n\r\n\t\t\t\t\t\t\t\tc = getCharReturn.c;\r\n\t\t\t\t\t\t\t\tlc = getCharReturn.lc;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( lc >= l ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( hufCode( encodingTable[ pl.p[ j ] ] ) == ( ( c >> ( lc - l ) ) & ( ( 1 << l ) - 1 ) ) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tlc -= l;\r\n\r\n\t\t\t\t\t\t\t\t\tgetCode( pl.p[ j ], rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\r\n\r\n\t\t\t\t\t\t\t\t\tc = getCodeReturn.c;\r\n\t\t\t\t\t\t\t\t\tlc = getCodeReturn.lc;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( j == pl.lit ) {\r\n\r\n\t\t\t\t\t\t\tthrow 'hufDecode issues';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i = ( 8 - ni ) & 7;\r\n\r\n\t\t\tc >>= i;\r\n\t\t\tlc -= i;\r\n\r\n\t\t\twhile ( lc > 0 ) {\r\n\r\n\t\t\t\tvar pl = decodingTable[ ( c << ( HUF_DECBITS - lc ) ) & HUF_DECMASK ];\r\n\r\n\t\t\t\tif ( pl.len ) {\r\n\r\n\t\t\t\t\tlc -= pl.len;\r\n\r\n\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\r\n\r\n\t\t\t\t\tc = getCodeReturn.c;\r\n\t\t\t\t\tlc = getCodeReturn.lc;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow 'hufDecode issues';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hufUncompress( uInt8Array, inDataView, inOffset, nCompressed, outBuffer, nRaw ) {\r\n\r\n\t\t\tvar outOffset = { value: 0 };\r\n\t\t\tvar initialInOffset = inOffset.value;\r\n\r\n\t\t\tvar im = parseUint32( inDataView, inOffset );\r\n\t\t\tvar iM = parseUint32( inDataView, inOffset );\r\n\r\n\t\t\tinOffset.value += 4;\r\n\r\n\t\t\tvar nBits = parseUint32( inDataView, inOffset );\r\n\r\n\t\t\tinOffset.value += 4;\r\n\r\n\t\t\tif ( im < 0 || im >= HUF_ENCSIZE || iM < 0 || iM >= HUF_ENCSIZE ) {\r\n\r\n\t\t\t\tthrow 'Something wrong with HUF_ENCSIZE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar freq = new Array( HUF_ENCSIZE );\r\n\t\t\tvar hdec = new Array( HUF_DECSIZE );\r\n\r\n\t\t\thufClearDecTable( hdec );\r\n\r\n\t\t\tvar ni = nCompressed - ( inOffset.value - initialInOffset );\r\n\r\n\t\t\thufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, freq );\r\n\r\n\t\t\tif ( nBits > 8 * ( nCompressed - ( inOffset.value - initialInOffset ) ) ) {\r\n\r\n\t\t\t\tthrow 'Something wrong with hufUncompress';\r\n\r\n\t\t\t}\r\n\r\n\t\t\thufBuildDecTable( freq, im, iM, hdec );\r\n\r\n\t\t\thufDecode( freq, hdec, uInt8Array, inDataView, inOffset, nBits, iM, nRaw, outBuffer, outOffset );\r\n\r\n\t\t}\r\n\r\n\t\tfunction applyLut( lut, data, nData ) {\r\n\r\n\t\t\tfor ( var i = 0; i < nData; ++ i ) {\r\n\r\n\t\t\t\tdata[ i ] = lut[ data[ i ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction predictor( source ) {\r\n\r\n\t\t\tfor ( var t = 1; t < source.length; t ++ ) {\r\n\r\n\t\t\t\tvar d = source[ t - 1 ] + source[ t ] - 128;\r\n\t\t\t\tsource[ t ] = d;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction interleaveScalar( source, out ) {\r\n\r\n\t\t\tvar t1 = 0;\r\n\t\t\tvar t2 = Math.floor( ( source.length + 1 ) / 2 );\r\n\t\t\tvar s = 0;\r\n\t\t\tvar stop = source.length - 1;\r\n\r\n\t\t\twhile ( true ) {\r\n\r\n\t\t\t\tif ( s > stop ) break;\r\n\t\t\t\tout[ s ++ ] = source[ t1 ++ ];\r\n\r\n\t\t\t\tif ( s > stop ) break;\r\n\t\t\t\tout[ s ++ ] = source[ t2 ++ ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction decodeRunLength( source ) {\r\n\r\n\t\t\tvar size = source.byteLength;\r\n\t\t\tvar out = new Array();\r\n\t\t\tvar p = 0;\r\n\r\n\t\t\tvar reader = new DataView( source );\r\n\r\n\t\t\twhile ( size > 0 ) {\r\n\r\n\t\t\t\tvar l = reader.getInt8( p ++ );\r\n\r\n\t\t\t\tif ( l < 0 ) {\r\n\r\n\t\t\t\t\tvar count = - l;\r\n\t\t\t\t\tsize -= count + 1;\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\t\t\t\tout.push( reader.getUint8( p ++ ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar count = l;\r\n\t\t\t\t\tsize -= 2;\r\n\r\n\t\t\t\t\tvar value = reader.getUint8( p ++ );\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < count + 1; i ++ ) {\r\n\r\n\t\t\t\t\t\tout.push( value );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\r\n\t\t}\r\n\r\n\t\tfunction lossyDctDecode( cscSet, rowPtrs, channelData, acBuffer, dcBuffer, outBuffer ) {\r\n\r\n\t\t\tvar dataView = new DataView( outBuffer.buffer );\r\n\r\n\t\t\tvar width = channelData[ cscSet.idx[ 0 ] ].width;\r\n\t\t\tvar height = channelData[ cscSet.idx[ 0 ] ].height;\r\n\r\n\t\t\tvar numComp = 3;\r\n\r\n\t\t\tvar numFullBlocksX = Math.floor( width / 8.0 );\r\n\t\t\tvar numBlocksX = Math.ceil( width / 8.0 );\r\n\t\t\tvar numBlocksY = Math.ceil( height / 8.0 );\r\n\t\t\tvar leftoverX = width - ( numBlocksX - 1 ) * 8;\r\n\t\t\tvar leftoverY = height - ( numBlocksY - 1 ) * 8;\r\n\r\n\t\t\tvar currAcComp = { value: 0 };\r\n\t\t\tvar currDcComp = new Array( numComp );\r\n\t\t\tvar dctData = new Array( numComp );\r\n\t\t\tvar halfZigBlock = new Array( numComp );\r\n\t\t\tvar rowBlock = new Array( numComp );\r\n\t\t\tvar rowOffsets = new Array( numComp );\r\n\r\n\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\r\n\r\n\t\t\t\trowOffsets[ comp ] = rowPtrs[ cscSet.idx[ comp ] ];\r\n\t\t\t\tcurrDcComp[ comp ] = ( comp < 1 ) ? 0 : currDcComp[ comp - 1 ] + numBlocksX * numBlocksY;\r\n\t\t\t\tdctData[ comp ] = new Float32Array( 64 );\r\n\t\t\t\thalfZigBlock[ comp ] = new Uint16Array( 64 );\r\n\t\t\t\trowBlock[ comp ] = new Uint16Array( numBlocksX * 64 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let blocky = 0; blocky < numBlocksY; ++ blocky ) {\r\n\r\n\t\t\t\tvar maxY = 8;\r\n\r\n\t\t\t\tif ( blocky == numBlocksY - 1 )\r\n\t\t\t\t\tmaxY = leftoverY;\r\n\r\n\t\t\t\tvar maxX = 8;\r\n\r\n\t\t\t\tfor ( let blockx = 0; blockx < numBlocksX; ++ blockx ) {\r\n\r\n\t\t\t\t\tif ( blockx == numBlocksX - 1 )\r\n\t\t\t\t\t\tmaxX = leftoverX;\r\n\r\n\t\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\r\n\r\n\t\t\t\t\t\thalfZigBlock[ comp ].fill( 0 );\r\n\r\n\t\t\t\t\t\t// set block DC component\r\n\t\t\t\t\t\thalfZigBlock[ comp ][ 0 ] = dcBuffer[ currDcComp[ comp ] ++ ];\r\n\t\t\t\t\t\t// set block AC components\r\n\t\t\t\t\t\tunRleAC( currAcComp, acBuffer, halfZigBlock[ comp ] );\r\n\r\n\t\t\t\t\t\t// UnZigZag block to float\r\n\t\t\t\t\t\tunZigZag( halfZigBlock[ comp ], dctData[ comp ] );\r\n\t\t\t\t\t\t// decode float dct\r\n\t\t\t\t\t\tdctInverse( dctData[ comp ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( numComp == 3 ) {\r\n\r\n\t\t\t\t\t\tcsc709Inverse( dctData );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\r\n\r\n\t\t\t\t\t\tconvertToHalf( dctData[ comp ], rowBlock[ comp ], blockx * 64 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // blockx\r\n\r\n\t\t\t\tlet offset = 0;\r\n\r\n\t\t\t\tfor ( let comp = 0; comp < numComp; ++ comp ) {\r\n\r\n\t\t\t\t\tconst type = channelData[ cscSet.idx[ comp ] ].type;\r\n\r\n\t\t\t\t\tfor ( let y = 8 * blocky; y < 8 * blocky + maxY; ++ y ) {\r\n\r\n\t\t\t\t\t\toffset = rowOffsets[ comp ][ y ];\r\n\r\n\t\t\t\t\t\tfor ( let blockx = 0; blockx < numFullBlocksX; ++ blockx ) {\r\n\r\n\t\t\t\t\t\t\tconst src = blockx * 64 + ( ( y & 0x7 ) * 8 );\r\n\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 0 * INT16_SIZE * type, rowBlock[ comp ][ src + 0 ], true );\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 1 * INT16_SIZE * type, rowBlock[ comp ][ src + 1 ], true );\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 2 * INT16_SIZE * type, rowBlock[ comp ][ src + 2 ], true );\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 3 * INT16_SIZE * type, rowBlock[ comp ][ src + 3 ], true );\r\n\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 4 * INT16_SIZE * type, rowBlock[ comp ][ src + 4 ], true );\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 5 * INT16_SIZE * type, rowBlock[ comp ][ src + 5 ], true );\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 6 * INT16_SIZE * type, rowBlock[ comp ][ src + 6 ], true );\r\n\t\t\t\t\t\t\tdataView.setUint16( offset + 7 * INT16_SIZE * type, rowBlock[ comp ][ src + 7 ], true );\r\n\r\n\t\t\t\t\t\t\toffset += 8 * INT16_SIZE * type;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// handle partial X blocks\r\n\t\t\t\t\tif ( numFullBlocksX != numBlocksX ) {\r\n\r\n\t\t\t\t\t\tfor ( let y = 8 * blocky; y < 8 * blocky + maxY; ++ y ) {\r\n\r\n\t\t\t\t\t\t\tconst offset = rowOffsets[ comp ][ y ] + 8 * numFullBlocksX * INT16_SIZE * type;\r\n\t\t\t\t\t\t\tconst src = numFullBlocksX * 64 + ( ( y & 0x7 ) * 8 );\r\n\r\n\t\t\t\t\t\t\tfor ( let x = 0; x < maxX; ++ x ) {\r\n\r\n\t\t\t\t\t\t\t\tdataView.setUint16( offset + x * INT16_SIZE * type, rowBlock[ comp ][ src + x ], true );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // comp\r\n\r\n\t\t\t} // blocky\r\n\r\n\t\t\tvar halfRow = new Uint16Array( width );\r\n\t\t\tvar dataView = new DataView( outBuffer.buffer );\r\n\r\n\t\t\t// convert channels back to float, if needed\r\n\t\t\tfor ( var comp = 0; comp < numComp; ++ comp ) {\r\n\r\n\t\t\t\tchannelData[ cscSet.idx[ comp ] ].decoded = true;\r\n\t\t\t\tvar type = channelData[ cscSet.idx[ comp ] ].type;\r\n\r\n\t\t\t\tif ( channelData[ comp ].type != 2 ) continue;\r\n\r\n\t\t\t\tfor ( var y = 0; y < height; ++ y ) {\r\n\r\n\t\t\t\t\tconst offset = rowOffsets[ comp ][ y ];\r\n\r\n\t\t\t\t\tfor ( var x = 0; x < width; ++ x ) {\r\n\r\n\t\t\t\t\t\thalfRow[ x ] = dataView.getUint16( offset + x * INT16_SIZE * type, true );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var x = 0; x < width; ++ x ) {\r\n\r\n\t\t\t\t\t\tdataView.setFloat32( offset + x * INT16_SIZE * type, decodeFloat16( halfRow[ x ] ), true );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction unRleAC( currAcComp, acBuffer, halfZigBlock ) {\r\n\r\n\t\t\tvar acValue;\r\n\t\t\tvar dctComp = 1;\r\n\r\n\t\t\twhile ( dctComp < 64 ) {\r\n\r\n\t\t\t\tacValue = acBuffer[ currAcComp.value ];\r\n\r\n\t\t\t\tif ( acValue == 0xff00 ) {\r\n\r\n\t\t\t\t\tdctComp = 64;\r\n\r\n\t\t\t\t} else if ( acValue >> 8 == 0xff ) {\r\n\r\n\t\t\t\t\tdctComp += acValue & 0xff;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thalfZigBlock[ dctComp ] = acValue;\r\n\t\t\t\t\tdctComp ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrAcComp.value ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction unZigZag( src, dst ) {\r\n\r\n\t\t\tdst[ 0 ] = decodeFloat16( src[ 0 ] );\r\n\t\t\tdst[ 1 ] = decodeFloat16( src[ 1 ] );\r\n\t\t\tdst[ 2 ] = decodeFloat16( src[ 5 ] );\r\n\t\t\tdst[ 3 ] = decodeFloat16( src[ 6 ] );\r\n\t\t\tdst[ 4 ] = decodeFloat16( src[ 14 ] );\r\n\t\t\tdst[ 5 ] = decodeFloat16( src[ 15 ] );\r\n\t\t\tdst[ 6 ] = decodeFloat16( src[ 27 ] );\r\n\t\t\tdst[ 7 ] = decodeFloat16( src[ 28 ] );\r\n\t\t\tdst[ 8 ] = decodeFloat16( src[ 2 ] );\r\n\t\t\tdst[ 9 ] = decodeFloat16( src[ 4 ] );\r\n\r\n\t\t\tdst[ 10 ] = decodeFloat16( src[ 7 ] );\r\n\t\t\tdst[ 11 ] = decodeFloat16( src[ 13 ] );\r\n\t\t\tdst[ 12 ] = decodeFloat16( src[ 16 ] );\r\n\t\t\tdst[ 13 ] = decodeFloat16( src[ 26 ] );\r\n\t\t\tdst[ 14 ] = decodeFloat16( src[ 29 ] );\r\n\t\t\tdst[ 15 ] = decodeFloat16( src[ 42 ] );\r\n\t\t\tdst[ 16 ] = decodeFloat16( src[ 3 ] );\r\n\t\t\tdst[ 17 ] = decodeFloat16( src[ 8 ] );\r\n\t\t\tdst[ 18 ] = decodeFloat16( src[ 12 ] );\r\n\t\t\tdst[ 19 ] = decodeFloat16( src[ 17 ] );\r\n\r\n\t\t\tdst[ 20 ] = decodeFloat16( src[ 25 ] );\r\n\t\t\tdst[ 21 ] = decodeFloat16( src[ 30 ] );\r\n\t\t\tdst[ 22 ] = decodeFloat16( src[ 41 ] );\r\n\t\t\tdst[ 23 ] = decodeFloat16( src[ 43 ] );\r\n\t\t\tdst[ 24 ] = decodeFloat16( src[ 9 ] );\r\n\t\t\tdst[ 25 ] = decodeFloat16( src[ 11 ] );\r\n\t\t\tdst[ 26 ] = decodeFloat16( src[ 18 ] );\r\n\t\t\tdst[ 27 ] = decodeFloat16( src[ 24 ] );\r\n\t\t\tdst[ 28 ] = decodeFloat16( src[ 31 ] );\r\n\t\t\tdst[ 29 ] = decodeFloat16( src[ 40 ] );\r\n\r\n\t\t\tdst[ 30 ] = decodeFloat16( src[ 44 ] );\r\n\t\t\tdst[ 31 ] = decodeFloat16( src[ 53 ] );\r\n\t\t\tdst[ 32 ] = decodeFloat16( src[ 10 ] );\r\n\t\t\tdst[ 33 ] = decodeFloat16( src[ 19 ] );\r\n\t\t\tdst[ 34 ] = decodeFloat16( src[ 23 ] );\r\n\t\t\tdst[ 35 ] = decodeFloat16( src[ 32 ] );\r\n\t\t\tdst[ 36 ] = decodeFloat16( src[ 39 ] );\r\n\t\t\tdst[ 37 ] = decodeFloat16( src[ 45 ] );\r\n\t\t\tdst[ 38 ] = decodeFloat16( src[ 52 ] );\r\n\t\t\tdst[ 39 ] = decodeFloat16( src[ 54 ] );\r\n\r\n\t\t\tdst[ 40 ] = decodeFloat16( src[ 20 ] );\r\n\t\t\tdst[ 41 ] = decodeFloat16( src[ 22 ] );\r\n\t\t\tdst[ 42 ] = decodeFloat16( src[ 33 ] );\r\n\t\t\tdst[ 43 ] = decodeFloat16( src[ 38 ] );\r\n\t\t\tdst[ 44 ] = decodeFloat16( src[ 46 ] );\r\n\t\t\tdst[ 45 ] = decodeFloat16( src[ 51 ] );\r\n\t\t\tdst[ 46 ] = decodeFloat16( src[ 55 ] );\r\n\t\t\tdst[ 47 ] = decodeFloat16( src[ 60 ] );\r\n\t\t\tdst[ 48 ] = decodeFloat16( src[ 21 ] );\r\n\t\t\tdst[ 49 ] = decodeFloat16( src[ 34 ] );\r\n\r\n\t\t\tdst[ 50 ] = decodeFloat16( src[ 37 ] );\r\n\t\t\tdst[ 51 ] = decodeFloat16( src[ 47 ] );\r\n\t\t\tdst[ 52 ] = decodeFloat16( src[ 50 ] );\r\n\t\t\tdst[ 53 ] = decodeFloat16( src[ 56 ] );\r\n\t\t\tdst[ 54 ] = decodeFloat16( src[ 59 ] );\r\n\t\t\tdst[ 55 ] = decodeFloat16( src[ 61 ] );\r\n\t\t\tdst[ 56 ] = decodeFloat16( src[ 35 ] );\r\n\t\t\tdst[ 57 ] = decodeFloat16( src[ 36 ] );\r\n\t\t\tdst[ 58 ] = decodeFloat16( src[ 48 ] );\r\n\t\t\tdst[ 59 ] = decodeFloat16( src[ 49 ] );\r\n\r\n\t\t\tdst[ 60 ] = decodeFloat16( src[ 57 ] );\r\n\t\t\tdst[ 61 ] = decodeFloat16( src[ 58 ] );\r\n\t\t\tdst[ 62 ] = decodeFloat16( src[ 62 ] );\r\n\t\t\tdst[ 63 ] = decodeFloat16( src[ 63 ] );\r\n\r\n\t\t}\r\n\r\n\t\tfunction dctInverse( data ) {\r\n\r\n\t\t\tconst a = 0.5 * Math.cos( 3.14159 / 4.0 );\r\n\t\t\tconst b = 0.5 * Math.cos( 3.14159 / 16.0 );\r\n\t\t\tconst c = 0.5 * Math.cos( 3.14159 / 8.0 );\r\n\t\t\tconst d = 0.5 * Math.cos( 3.0 * 3.14159 / 16.0 );\r\n\t\t\tconst e = 0.5 * Math.cos( 5.0 * 3.14159 / 16.0 );\r\n\t\t\tconst f = 0.5 * Math.cos( 3.0 * 3.14159 / 8.0 );\r\n\t\t\tconst g = 0.5 * Math.cos( 7.0 * 3.14159 / 16.0 );\r\n\r\n\t\t\tvar alpha = new Array( 4 );\r\n\t\t\tvar beta = new Array( 4 );\r\n\t\t\tvar theta = new Array( 4 );\r\n\t\t\tvar gamma = new Array( 4 );\r\n\r\n\t\t\tfor ( var row = 0; row < 8; ++ row ) {\r\n\r\n\t\t\t\tvar rowPtr = row * 8;\r\n\r\n\t\t\t\talpha[ 0 ] = c * data[ rowPtr + 2 ];\r\n\t\t\t\talpha[ 1 ] = f * data[ rowPtr + 2 ];\r\n\t\t\t\talpha[ 2 ] = c * data[ rowPtr + 6 ];\r\n\t\t\t\talpha[ 3 ] = f * data[ rowPtr + 6 ];\r\n\r\n\t\t\t\tbeta[ 0 ] = b * data[ rowPtr + 1 ] + d * data[ rowPtr + 3 ] + e * data[ rowPtr + 5 ] + g * data[ rowPtr + 7 ];\r\n\t\t\t\tbeta[ 1 ] = d * data[ rowPtr + 1 ] - g * data[ rowPtr + 3 ] - b * data[ rowPtr + 5 ] - e * data[ rowPtr + 7 ];\r\n\t\t\t\tbeta[ 2 ] = e * data[ rowPtr + 1 ] - b * data[ rowPtr + 3 ] + g * data[ rowPtr + 5 ] + d * data[ rowPtr + 7 ];\r\n\t\t\t\tbeta[ 3 ] = g * data[ rowPtr + 1 ] - e * data[ rowPtr + 3 ] + d * data[ rowPtr + 5 ] - b * data[ rowPtr + 7 ];\r\n\r\n\t\t\t\ttheta[ 0 ] = a * ( data[ rowPtr + 0 ] + data[ rowPtr + 4 ] );\r\n\t\t\t\ttheta[ 3 ] = a * ( data[ rowPtr + 0 ] - data[ rowPtr + 4 ] );\r\n\t\t\t\ttheta[ 1 ] = alpha[ 0 ] + alpha[ 3 ];\r\n\t\t\t\ttheta[ 2 ] = alpha[ 1 ] - alpha[ 2 ];\r\n\r\n\t\t\t\tgamma[ 0 ] = theta[ 0 ] + theta[ 1 ];\r\n\t\t\t\tgamma[ 1 ] = theta[ 3 ] + theta[ 2 ];\r\n\t\t\t\tgamma[ 2 ] = theta[ 3 ] - theta[ 2 ];\r\n\t\t\t\tgamma[ 3 ] = theta[ 0 ] - theta[ 1 ];\r\n\r\n\t\t\t\tdata[ rowPtr + 0 ] = gamma[ 0 ] + beta[ 0 ];\r\n\t\t\t\tdata[ rowPtr + 1 ] = gamma[ 1 ] + beta[ 1 ];\r\n\t\t\t\tdata[ rowPtr + 2 ] = gamma[ 2 ] + beta[ 2 ];\r\n\t\t\t\tdata[ rowPtr + 3 ] = gamma[ 3 ] + beta[ 3 ];\r\n\r\n\t\t\t\tdata[ rowPtr + 4 ] = gamma[ 3 ] - beta[ 3 ];\r\n\t\t\t\tdata[ rowPtr + 5 ] = gamma[ 2 ] - beta[ 2 ];\r\n\t\t\t\tdata[ rowPtr + 6 ] = gamma[ 1 ] - beta[ 1 ];\r\n\t\t\t\tdata[ rowPtr + 7 ] = gamma[ 0 ] - beta[ 0 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var column = 0; column < 8; ++ column ) {\r\n\r\n\t\t\t\talpha[ 0 ] = c * data[ 16 + column ];\r\n\t\t\t\talpha[ 1 ] = f * data[ 16 + column ];\r\n\t\t\t\talpha[ 2 ] = c * data[ 48 + column ];\r\n\t\t\t\talpha[ 3 ] = f * data[ 48 + column ];\r\n\r\n\t\t\t\tbeta[ 0 ] = b * data[ 8 + column ] + d * data[ 24 + column ] + e * data[ 40 + column ] + g * data[ 56 + column ];\r\n\t\t\t\tbeta[ 1 ] = d * data[ 8 + column ] - g * data[ 24 + column ] - b * data[ 40 + column ] - e * data[ 56 + column ];\r\n\t\t\t\tbeta[ 2 ] = e * data[ 8 + column ] - b * data[ 24 + column ] + g * data[ 40 + column ] + d * data[ 56 + column ];\r\n\t\t\t\tbeta[ 3 ] = g * data[ 8 + column ] - e * data[ 24 + column ] + d * data[ 40 + column ] - b * data[ 56 + column ];\r\n\r\n\t\t\t\ttheta[ 0 ] = a * ( data[ column ] + data[ 32 + column ] );\r\n\t\t\t\ttheta[ 3 ] = a * ( data[ column ] - data[ 32 + column ] );\r\n\r\n\t\t\t\ttheta[ 1 ] = alpha[ 0 ] + alpha[ 3 ];\r\n\t\t\t\ttheta[ 2 ] = alpha[ 1 ] - alpha[ 2 ];\r\n\r\n\t\t\t\tgamma[ 0 ] = theta[ 0 ] + theta[ 1 ];\r\n\t\t\t\tgamma[ 1 ] = theta[ 3 ] + theta[ 2 ];\r\n\t\t\t\tgamma[ 2 ] = theta[ 3 ] - theta[ 2 ];\r\n\t\t\t\tgamma[ 3 ] = theta[ 0 ] - theta[ 1 ];\r\n\r\n\t\t\t\tdata[ 0 + column ] = gamma[ 0 ] + beta[ 0 ];\r\n\t\t\t\tdata[ 8 + column ] = gamma[ 1 ] + beta[ 1 ];\r\n\t\t\t\tdata[ 16 + column ] = gamma[ 2 ] + beta[ 2 ];\r\n\t\t\t\tdata[ 24 + column ] = gamma[ 3 ] + beta[ 3 ];\r\n\r\n\t\t\t\tdata[ 32 + column ] = gamma[ 3 ] - beta[ 3 ];\r\n\t\t\t\tdata[ 40 + column ] = gamma[ 2 ] - beta[ 2 ];\r\n\t\t\t\tdata[ 48 + column ] = gamma[ 1 ] - beta[ 1 ];\r\n\t\t\t\tdata[ 56 + column ] = gamma[ 0 ] - beta[ 0 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction csc709Inverse( data ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 64; ++ i ) {\r\n\r\n\t\t\t\tvar y = data[ 0 ][ i ];\r\n\t\t\t\tvar cb = data[ 1 ][ i ];\r\n\t\t\t\tvar cr = data[ 2 ][ i ];\r\n\r\n\t\t\t\tdata[ 0 ][ i ] = y + 1.5747 * cr;\r\n\t\t\t\tdata[ 1 ][ i ] = y - 0.1873 * cb - 0.4682 * cr;\r\n\t\t\t\tdata[ 2 ][ i ] = y + 1.8556 * cb;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction convertToHalf( src, dst, idx ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 64; ++ i ) {\r\n\r\n\t\t\t\tdst[ idx + i ] = DataUtils.toHalfFloat( toLinear( src[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction toLinear( float ) {\r\n\r\n\t\t\tif ( float <= 1 ) {\r\n\r\n\t\t\t\treturn Math.sign( float ) * Math.pow( Math.abs( float ), 2.2 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn Math.sign( float ) * Math.pow( logBase, Math.abs( float ) - 1.0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction uncompressRAW( info ) {\r\n\r\n\t\t\treturn new DataView( info.array.buffer, info.offset.value, info.size );\r\n\r\n\t\t}\r\n\r\n\t\tfunction uncompressRLE( info ) {\r\n\r\n\t\t\tvar compressed = info.viewer.buffer.slice( info.offset.value, info.offset.value + info.size );\r\n\r\n\t\t\tvar rawBuffer = new Uint8Array( decodeRunLength( compressed ) );\r\n\t\t\tvar tmpBuffer = new Uint8Array( rawBuffer.length );\r\n\r\n\t\t\tpredictor( rawBuffer ); // revert predictor\r\n\r\n\t\t\tinterleaveScalar( rawBuffer, tmpBuffer ); // interleave pixels\r\n\r\n\t\t\treturn new DataView( tmpBuffer.buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction uncompressZIP( info ) {\r\n\r\n\t\t\tvar compressed = info.array.slice( info.offset.value, info.offset.value + info.size );\r\n\r\n\t\t\tif ( typeof Inflate === 'undefined' ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.EXRLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar inflate = new Inflate( compressed, { resize: true, verify: true } ); // eslint-disable-line no-undef\r\n\r\n\t\t\tvar rawBuffer = new Uint8Array( inflate.decompress().buffer );\r\n\t\t\tvar tmpBuffer = new Uint8Array( rawBuffer.length );\r\n\r\n\t\t\tpredictor( rawBuffer ); // revert predictor\r\n\r\n\t\t\tinterleaveScalar( rawBuffer, tmpBuffer ); // interleave pixels\r\n\r\n\t\t\treturn new DataView( tmpBuffer.buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction uncompressPIZ( info ) {\r\n\r\n\t\t\tvar inDataView = info.viewer;\r\n\t\t\tvar inOffset = { value: info.offset.value };\r\n\r\n\t\t\tvar tmpBufSize = info.width * scanlineBlockSize * ( EXRHeader.channels.length * info.type );\r\n\t\t\tvar outBuffer = new Uint16Array( tmpBufSize );\r\n\t\t\tvar bitmap = new Uint8Array( BITMAP_SIZE );\r\n\r\n\t\t\t// Setup channel info\r\n\t\t\tvar outBufferEnd = 0;\r\n\t\t\tvar pizChannelData = new Array( info.channels );\r\n\t\t\tfor ( var i = 0; i < info.channels; i ++ ) {\r\n\r\n\t\t\t\tpizChannelData[ i ] = {};\r\n\t\t\t\tpizChannelData[ i ][ 'start' ] = outBufferEnd;\r\n\t\t\t\tpizChannelData[ i ][ 'end' ] = pizChannelData[ i ][ 'start' ];\r\n\t\t\t\tpizChannelData[ i ][ 'nx' ] = info.width;\r\n\t\t\t\tpizChannelData[ i ][ 'ny' ] = info.lines;\r\n\t\t\t\tpizChannelData[ i ][ 'size' ] = info.type;\r\n\r\n\t\t\t\toutBufferEnd += pizChannelData[ i ].nx * pizChannelData[ i ].ny * pizChannelData[ i ].size;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Read range compression data\r\n\t\t\tvar minNonZero = parseUint16( inDataView, inOffset );\r\n\t\t\tvar maxNonZero = parseUint16( inDataView, inOffset );\r\n\r\n\t\t\tif ( maxNonZero >= BITMAP_SIZE ) {\r\n\r\n\t\t\t\tthrow 'Something is wrong with PIZ_COMPRESSION BITMAP_SIZE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( minNonZero <= maxNonZero ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < maxNonZero - minNonZero + 1; i ++ ) {\r\n\r\n\t\t\t\t\tbitmap[ i + minNonZero ] = parseUint8( inDataView, inOffset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse LUT\r\n\t\t\tvar lut = new Uint16Array( USHORT_RANGE );\r\n\t\t\tvar maxValue = reverseLutFromBitmap( bitmap, lut );\r\n\r\n\t\t\tvar length = parseUint32( inDataView, inOffset );\r\n\r\n\t\t\t// Huffman decoding\r\n\t\t\thufUncompress( info.array, inDataView, inOffset, length, outBuffer, outBufferEnd );\r\n\r\n\t\t\t// Wavelet decoding\r\n\t\t\tfor ( var i = 0; i < info.channels; ++ i ) {\r\n\r\n\t\t\t\tvar cd = pizChannelData[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0; j < pizChannelData[ i ].size; ++ j ) {\r\n\r\n\t\t\t\t\twav2Decode(\r\n\t\t\t\t\t\toutBuffer,\r\n\t\t\t\t\t\tcd.start + j,\r\n\t\t\t\t\t\tcd.nx,\r\n\t\t\t\t\t\tcd.size,\r\n\t\t\t\t\t\tcd.ny,\r\n\t\t\t\t\t\tcd.nx * cd.size,\r\n\t\t\t\t\t\tmaxValue\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Expand the pixel data to their original range\r\n\t\t\tapplyLut( lut, outBuffer, outBufferEnd );\r\n\r\n\t\t\t// Rearrange the pixel data into the format expected by the caller.\r\n\t\t\tvar tmpOffset = 0;\r\n\t\t\tvar tmpBuffer = new Uint8Array( outBuffer.buffer.byteLength );\r\n\t\t\tfor ( var y = 0; y < info.lines; y ++ ) {\r\n\r\n\t\t\t\tfor ( var c = 0; c < info.channels; c ++ ) {\r\n\r\n\t\t\t\t\tvar cd = pizChannelData[ c ];\r\n\r\n\t\t\t\t\tvar n = cd.nx * cd.size;\r\n\t\t\t\t\tvar cp = new Uint8Array( outBuffer.buffer, cd.end * INT16_SIZE, n * INT16_SIZE );\r\n\r\n\t\t\t\t\ttmpBuffer.set( cp, tmpOffset );\r\n\t\t\t\t\ttmpOffset += n * INT16_SIZE;\r\n\t\t\t\t\tcd.end += n;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new DataView( tmpBuffer.buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction uncompressPXR( info ) {\r\n\r\n\t\t\tvar compressed = info.array.slice( info.offset.value, info.offset.value + info.size );\r\n\r\n\t\t\tif ( typeof Inflate === 'undefined' ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.EXRLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst inflate = new Inflate( compressed, { resize: true, verify: true } ); // eslint-disable-line no-undef\r\n\t\t\tconst rawBuffer = new Uint8Array( inflate.decompress().buffer );\r\n\r\n\t\t\tconst sz = info.lines * info.channels * info.width;\r\n\t\t\tconst tmpBuffer = ( info.type == 1 ) ? new Uint16Array( sz ) : new Uint32Array( sz );\r\n\r\n\t\t\tlet tmpBufferEnd = 0;\r\n\t\t\tlet writePtr = 0;\r\n\t\t\tconst ptr = new Array( 4 );\r\n\r\n\t\t\tfor ( let y = 0; y < info.lines; y ++ ) {\r\n\r\n\t\t\t\tfor ( let c = 0; c < info.channels; c ++ ) {\r\n\r\n\t\t\t\t\tlet pixel = 0;\r\n\r\n\t\t\t\t\tswitch ( info.type ) {\r\n\r\n\t\t\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\t\t\tptr[ 0 ] = tmpBufferEnd;\r\n\t\t\t\t\t\t\tptr[ 1 ] = ptr[ 0 ] + info.width;\r\n\t\t\t\t\t\t\ttmpBufferEnd = ptr[ 1 ] + info.width;\r\n\r\n\t\t\t\t\t\t\tfor ( let j = 0; j < info.width; ++ j ) {\r\n\r\n\t\t\t\t\t\t\t\tconst diff = ( rawBuffer[ ptr[ 0 ] ++ ] << 8 ) | rawBuffer[ ptr[ 1 ] ++ ];\r\n\r\n\t\t\t\t\t\t\t\tpixel += diff;\r\n\r\n\t\t\t\t\t\t\t\ttmpBuffer[ writePtr ] = pixel;\r\n\t\t\t\t\t\t\t\twritePtr ++;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\t\t\tptr[ 0 ] = tmpBufferEnd;\r\n\t\t\t\t\t\t\tptr[ 1 ] = ptr[ 0 ] + info.width;\r\n\t\t\t\t\t\t\tptr[ 2 ] = ptr[ 1 ] + info.width;\r\n\t\t\t\t\t\t\ttmpBufferEnd = ptr[ 2 ] + info.width;\r\n\r\n\t\t\t\t\t\t\tfor ( let j = 0; j < info.width; ++ j ) {\r\n\r\n\t\t\t\t\t\t\t\tconst diff = ( rawBuffer[ ptr[ 0 ] ++ ] << 24 ) | ( rawBuffer[ ptr[ 1 ] ++ ] << 16 ) | ( rawBuffer[ ptr[ 2 ] ++ ] << 8 );\r\n\r\n\t\t\t\t\t\t\t\tpixel += diff;\r\n\r\n\t\t\t\t\t\t\t\ttmpBuffer[ writePtr ] = pixel;\r\n\t\t\t\t\t\t\t\twritePtr ++;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new DataView( tmpBuffer.buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction uncompressDWA( info ) {\r\n\r\n\t\t\tvar inDataView = info.viewer;\r\n\t\t\tvar inOffset = { value: info.offset.value };\r\n\t\t\tvar outBuffer = new Uint8Array( info.width * info.lines * ( EXRHeader.channels.length * info.type * INT16_SIZE ) );\r\n\r\n\t\t\t// Read compression header information\r\n\t\t\tvar dwaHeader = {\r\n\r\n\t\t\t\tversion: parseInt64( inDataView, inOffset ),\r\n\t\t\t\tunknownUncompressedSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\tunknownCompressedSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\tacCompressedSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\tdcCompressedSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\trleCompressedSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\trleUncompressedSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\trleRawSize: parseInt64( inDataView, inOffset ),\r\n\t\t\t\ttotalAcUncompressedCount: parseInt64( inDataView, inOffset ),\r\n\t\t\t\ttotalDcUncompressedCount: parseInt64( inDataView, inOffset ),\r\n\t\t\t\tacCompression: parseInt64( inDataView, inOffset )\r\n\r\n\t\t\t};\r\n\r\n\t\t\tif ( dwaHeader.version < 2 )\r\n\t\t\t\tthrow 'EXRLoader.parse: ' + EXRHeader.compression + ' version ' + dwaHeader.version + ' is unsupported';\r\n\r\n\t\t\t// Read channel ruleset information\r\n\t\t\tvar channelRules = new Array();\r\n\t\t\tvar ruleSize = parseUint16( inDataView, inOffset ) - INT16_SIZE;\r\n\r\n\t\t\twhile ( ruleSize > 0 ) {\r\n\r\n\t\t\t\tvar name = parseNullTerminatedString( inDataView.buffer, inOffset );\r\n\t\t\t\tvar value = parseUint8( inDataView, inOffset );\r\n\t\t\t\tvar compression = ( value >> 2 ) & 3;\r\n\t\t\t\tvar csc = ( value >> 4 ) - 1;\r\n\t\t\t\tvar index = new Int8Array( [ csc ] )[ 0 ];\r\n\t\t\t\tvar type = parseUint8( inDataView, inOffset );\r\n\r\n\t\t\t\tchannelRules.push( {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tcompression: compression,\r\n\t\t\t\t} );\r\n\r\n\t\t\t\truleSize -= name.length + 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Classify channels\r\n\t\t\tvar channels = EXRHeader.channels;\r\n\t\t\tvar channelData = new Array( info.channels );\r\n\r\n\t\t\tfor ( var i = 0; i < info.channels; ++ i ) {\r\n\r\n\t\t\t\tvar cd = channelData[ i ] = {};\r\n\t\t\t\tvar channel = channels[ i ];\r\n\r\n\t\t\t\tcd.name = channel.name;\r\n\t\t\t\tcd.compression = UNKNOWN;\r\n\t\t\t\tcd.decoded = false;\r\n\t\t\t\tcd.type = channel.pixelType;\r\n\t\t\t\tcd.pLinear = channel.pLinear;\r\n\t\t\t\tcd.width = info.width;\r\n\t\t\t\tcd.height = info.lines;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar cscSet = {\r\n\t\t\t\tidx: new Array( 3 )\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var offset = 0; offset < info.channels; ++ offset ) {\r\n\r\n\t\t\t\tvar cd = channelData[ offset ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < channelRules.length; ++ i ) {\r\n\r\n\t\t\t\t\tvar rule = channelRules[ i ];\r\n\r\n\t\t\t\t\tif ( cd.name == rule.name ) {\r\n\r\n\t\t\t\t\t\tcd.compression = rule.compression;\r\n\r\n\t\t\t\t\t\tif ( rule.index >= 0 ) {\r\n\r\n\t\t\t\t\t\t\tcscSet.idx[ rule.index ] = offset;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcd.offset = offset;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Read DCT - AC component data\r\n\t\t\tif ( dwaHeader.acCompressedSize > 0 ) {\r\n\r\n\t\t\t\tswitch ( dwaHeader.acCompression ) {\r\n\r\n\t\t\t\t\tcase STATIC_HUFFMAN:\r\n\r\n\t\t\t\t\t\tvar acBuffer = new Uint16Array( dwaHeader.totalAcUncompressedCount );\r\n\t\t\t\t\t\thufUncompress( info.array, inDataView, inOffset, dwaHeader.acCompressedSize, acBuffer, dwaHeader.totalAcUncompressedCount );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase DEFLATE:\r\n\r\n\t\t\t\t\t\tvar compressed = info.array.slice( inOffset.value, inOffset.value + dwaHeader.totalAcUncompressedCount );\r\n\t\t\t\t\t\tvar inflate = new Inflate( compressed, { resize: true, verify: true } ); // eslint-disable-line no-undef\r\n\t\t\t\t\t\tvar acBuffer = new Uint16Array( inflate.decompress().buffer );\r\n\t\t\t\t\t\tinOffset.value += dwaHeader.totalAcUncompressedCount;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Read DCT - DC component data\r\n\t\t\tif ( dwaHeader.dcCompressedSize > 0 ) {\r\n\r\n\t\t\t\tvar zlibInfo = {\r\n\t\t\t\t\tarray: info.array,\r\n\t\t\t\t\toffset: inOffset,\r\n\t\t\t\t\tsize: dwaHeader.dcCompressedSize\r\n\t\t\t\t};\r\n\t\t\t\tvar dcBuffer = new Uint16Array( uncompressZIP( zlibInfo ).buffer );\r\n\t\t\t\tinOffset.value += dwaHeader.dcCompressedSize;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Read RLE compressed data\r\n\t\t\tif ( dwaHeader.rleRawSize > 0 ) {\r\n\r\n\t\t\t\tvar compressed = info.array.slice( inOffset.value, inOffset.value + dwaHeader.rleCompressedSize );\r\n\t\t\t\tvar inflate = new Inflate( compressed, { resize: true, verify: true } ); // eslint-disable-line no-undef\r\n\t\t\t\tvar rleBuffer = decodeRunLength( inflate.decompress().buffer );\r\n\r\n\t\t\t\tinOffset.value += dwaHeader.rleCompressedSize;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare outbuffer data offset\r\n\t\t\tvar outBufferEnd = 0;\r\n\t\t\tvar rowOffsets = new Array( channelData.length );\r\n\t\t\tfor ( var i = 0; i < rowOffsets.length; ++ i ) {\r\n\r\n\t\t\t\trowOffsets[ i ] = new Array();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var y = 0; y < info.lines; ++ y ) {\r\n\r\n\t\t\t\tfor ( var chan = 0; chan < channelData.length; ++ chan ) {\r\n\r\n\t\t\t\t\trowOffsets[ chan ].push( outBufferEnd );\r\n\t\t\t\t\toutBufferEnd += channelData[ chan ].width * info.type * INT16_SIZE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Lossy DCT decode RGB channels\r\n\t\t\tlossyDctDecode( cscSet, rowOffsets, channelData, acBuffer, dcBuffer, outBuffer );\r\n\r\n\t\t\t// Decode other channels\r\n\t\t\tfor ( var i = 0; i < channelData.length; ++ i ) {\r\n\r\n\t\t\t\tvar cd = channelData[ i ];\r\n\r\n\t\t\t\tif ( cd.decoded ) continue;\r\n\r\n\t\t\t\tswitch ( cd.compression ) {\r\n\r\n\t\t\t\t\tcase RLE:\r\n\r\n\t\t\t\t\t\tvar row = 0;\r\n\t\t\t\t\t\tvar rleOffset = 0;\r\n\r\n\t\t\t\t\t\tfor ( var y = 0; y < info.lines; ++ y ) {\r\n\r\n\t\t\t\t\t\t\tvar rowOffsetBytes = rowOffsets[ i ][ row ];\r\n\r\n\t\t\t\t\t\t\tfor ( var x = 0; x < cd.width; ++ x ) {\r\n\r\n\t\t\t\t\t\t\t\tfor ( var byte = 0; byte < INT16_SIZE * cd.type; ++ byte ) {\r\n\r\n\t\t\t\t\t\t\t\t\toutBuffer[ rowOffsetBytes ++ ] = rleBuffer[ rleOffset + byte * cd.width * cd.height ];\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\trleOffset ++;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\trow ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase LOSSY_DCT: // skip\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow 'EXRLoader.parse: unsupported channel compression';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new DataView( outBuffer.buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseNullTerminatedString( buffer, offset ) {\r\n\r\n\t\t\tvar uintBuffer = new Uint8Array( buffer );\r\n\t\t\tvar endOffset = 0;\r\n\r\n\t\t\twhile ( uintBuffer[ offset.value + endOffset ] != 0 ) {\r\n\r\n\t\t\t\tendOffset += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar stringValue = new TextDecoder().decode(\r\n\t\t\t\tuintBuffer.slice( offset.value, offset.value + endOffset )\r\n\t\t\t);\r\n\r\n\t\t\toffset.value = offset.value + endOffset + 1;\r\n\r\n\t\t\treturn stringValue;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseFixedLengthString( buffer, offset, size ) {\r\n\r\n\t\t\tvar stringValue = new TextDecoder().decode(\r\n\t\t\t\tnew Uint8Array( buffer ).slice( offset.value, offset.value + size )\r\n\t\t\t);\r\n\r\n\t\t\toffset.value = offset.value + size;\r\n\r\n\t\t\treturn stringValue;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseUlong( dataView, offset ) {\r\n\r\n\t\t\tvar uLong = dataView.getUint32( 0, true );\r\n\r\n\t\t\toffset.value = offset.value + ULONG_SIZE;\r\n\r\n\t\t\treturn uLong;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseRational( dataView, offset ) {\r\n\r\n\t\t\tvar x = parseInt32( dataView, offset );\r\n\t\t\tvar y = parseUint32( dataView, offset );\r\n\r\n\t\t\treturn [ x, y ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseTimecode( dataView, offset ) {\r\n\r\n\t\t\tvar x = parseUint32( dataView, offset );\r\n\t\t\tvar y = parseUint32( dataView, offset );\r\n\r\n\t\t\treturn [ x, y ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseInt32( dataView, offset ) {\r\n\r\n\t\t\tvar Int32 = dataView.getInt32( offset.value, true );\r\n\r\n\t\t\toffset.value = offset.value + INT32_SIZE;\r\n\r\n\t\t\treturn Int32;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseUint32( dataView, offset ) {\r\n\r\n\t\t\tvar Uint32 = dataView.getUint32( offset.value, true );\r\n\r\n\t\t\toffset.value = offset.value + INT32_SIZE;\r\n\r\n\t\t\treturn Uint32;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseUint8Array( uInt8Array, offset ) {\r\n\r\n\t\t\tvar Uint8 = uInt8Array[ offset.value ];\r\n\r\n\t\t\toffset.value = offset.value + INT8_SIZE;\r\n\r\n\t\t\treturn Uint8;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseUint8( dataView, offset ) {\r\n\r\n\t\t\tvar Uint8 = dataView.getUint8( offset.value );\r\n\r\n\t\t\toffset.value = offset.value + INT8_SIZE;\r\n\r\n\t\t\treturn Uint8;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseInt64( dataView, offset ) {\r\n\r\n\t\t\tvar int = Number( dataView.getBigInt64( offset.value, true ) );\r\n\r\n\t\t\toffset.value += ULONG_SIZE;\r\n\r\n\t\t\treturn int;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseFloat32( dataView, offset ) {\r\n\r\n\t\t\tvar float = dataView.getFloat32( offset.value, true );\r\n\r\n\t\t\toffset.value += FLOAT32_SIZE;\r\n\r\n\t\t\treturn float;\r\n\r\n\t\t}\r\n\r\n\t\tfunction decodeFloat32( dataView, offset ) {\r\n\r\n\t\t\treturn DataUtils.toHalfFloat( parseFloat32( dataView, offset ) );\r\n\r\n\t\t}\r\n\r\n\t\t// https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\r\n\t\tfunction decodeFloat16( binary ) {\r\n\r\n\t\t\tvar exponent = ( binary & 0x7C00 ) >> 10,\r\n\t\t\t\tfraction = binary & 0x03FF;\r\n\r\n\t\t\treturn ( binary >> 15 ? - 1 : 1 ) * (\r\n\t\t\t\texponent ?\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\texponent === 0x1F ?\r\n\t\t\t\t\t\t\tfraction ? NaN : Infinity :\r\n\t\t\t\t\t\t\tMath.pow( 2, exponent - 15 ) * ( 1 + fraction / 0x400 )\r\n\t\t\t\t\t) :\r\n\t\t\t\t\t6.103515625e-5 * ( fraction / 0x400 )\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseUint16( dataView, offset ) {\r\n\r\n\t\t\tvar Uint16 = dataView.getUint16( offset.value, true );\r\n\r\n\t\t\toffset.value += INT16_SIZE;\r\n\r\n\t\t\treturn Uint16;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseFloat16( buffer, offset ) {\r\n\r\n\t\t\treturn decodeFloat16( parseUint16( buffer, offset ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseChlist( dataView, buffer, offset, size ) {\r\n\r\n\t\t\tvar startOffset = offset.value;\r\n\t\t\tvar channels = [];\r\n\r\n\t\t\twhile ( offset.value < ( startOffset + size - 1 ) ) {\r\n\r\n\t\t\t\tvar name = parseNullTerminatedString( buffer, offset );\r\n\t\t\t\tvar pixelType = parseInt32( dataView, offset );\r\n\t\t\t\tvar pLinear = parseUint8( dataView, offset );\r\n\t\t\t\toffset.value += 3; // reserved, three chars\r\n\t\t\t\tvar xSampling = parseInt32( dataView, offset );\r\n\t\t\t\tvar ySampling = parseInt32( dataView, offset );\r\n\r\n\t\t\t\tchannels.push( {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tpixelType: pixelType,\r\n\t\t\t\t\tpLinear: pLinear,\r\n\t\t\t\t\txSampling: xSampling,\r\n\t\t\t\t\tySampling: ySampling\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset.value += 1;\r\n\r\n\t\t\treturn channels;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseChromaticities( dataView, offset ) {\r\n\r\n\t\t\tvar redX = parseFloat32( dataView, offset );\r\n\t\t\tvar redY = parseFloat32( dataView, offset );\r\n\t\t\tvar greenX = parseFloat32( dataView, offset );\r\n\t\t\tvar greenY = parseFloat32( dataView, offset );\r\n\t\t\tvar blueX = parseFloat32( dataView, offset );\r\n\t\t\tvar blueY = parseFloat32( dataView, offset );\r\n\t\t\tvar whiteX = parseFloat32( dataView, offset );\r\n\t\t\tvar whiteY = parseFloat32( dataView, offset );\r\n\r\n\t\t\treturn { redX: redX, redY: redY, greenX: greenX, greenY: greenY, blueX: blueX, blueY: blueY, whiteX: whiteX, whiteY: whiteY };\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCompression( dataView, offset ) {\r\n\r\n\t\t\tvar compressionCodes = [\r\n\t\t\t\t'NO_COMPRESSION',\r\n\t\t\t\t'RLE_COMPRESSION',\r\n\t\t\t\t'ZIPS_COMPRESSION',\r\n\t\t\t\t'ZIP_COMPRESSION',\r\n\t\t\t\t'PIZ_COMPRESSION',\r\n\t\t\t\t'PXR24_COMPRESSION',\r\n\t\t\t\t'B44_COMPRESSION',\r\n\t\t\t\t'B44A_COMPRESSION',\r\n\t\t\t\t'DWAA_COMPRESSION',\r\n\t\t\t\t'DWAB_COMPRESSION'\r\n\t\t\t];\r\n\r\n\t\t\tvar compression = parseUint8( dataView, offset );\r\n\r\n\t\t\treturn compressionCodes[ compression ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBox2i( dataView, offset ) {\r\n\r\n\t\t\tvar xMin = parseUint32( dataView, offset );\r\n\t\t\tvar yMin = parseUint32( dataView, offset );\r\n\t\t\tvar xMax = parseUint32( dataView, offset );\r\n\t\t\tvar yMax = parseUint32( dataView, offset );\r\n\r\n\t\t\treturn { xMin: xMin, yMin: yMin, xMax: xMax, yMax: yMax };\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseLineOrder( dataView, offset ) {\r\n\r\n\t\t\tvar lineOrders = [\r\n\t\t\t\t'INCREASING_Y'\r\n\t\t\t];\r\n\r\n\t\t\tvar lineOrder = parseUint8( dataView, offset );\r\n\r\n\t\t\treturn lineOrders[ lineOrder ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseV2f( dataView, offset ) {\r\n\r\n\t\t\tvar x = parseFloat32( dataView, offset );\r\n\t\t\tvar y = parseFloat32( dataView, offset );\r\n\r\n\t\t\treturn [ x, y ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseV3f( dataView, offset ) {\r\n\r\n\t\t\tvar x = parseFloat32( dataView, offset );\r\n\t\t\tvar y = parseFloat32( dataView, offset );\r\n\t\t\tvar z = parseFloat32( dataView, offset );\r\n\r\n\t\t\treturn [ x, y, z ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseValue( dataView, buffer, offset, type, size ) {\r\n\r\n\t\t\tif ( type === 'string' || type === 'stringvector' || type === 'iccProfile' ) {\r\n\r\n\t\t\t\treturn parseFixedLengthString( buffer, offset, size );\r\n\r\n\t\t\t} else if ( type === 'chlist' ) {\r\n\r\n\t\t\t\treturn parseChlist( dataView, buffer, offset, size );\r\n\r\n\t\t\t} else if ( type === 'chromaticities' ) {\r\n\r\n\t\t\t\treturn parseChromaticities( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'compression' ) {\r\n\r\n\t\t\t\treturn parseCompression( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'box2i' ) {\r\n\r\n\t\t\t\treturn parseBox2i( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'lineOrder' ) {\r\n\r\n\t\t\t\treturn parseLineOrder( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'float' ) {\r\n\r\n\t\t\t\treturn parseFloat32( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'v2f' ) {\r\n\r\n\t\t\t\treturn parseV2f( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'v3f' ) {\r\n\r\n\t\t\t\treturn parseV3f( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'int' ) {\r\n\r\n\t\t\t\treturn parseInt32( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'rational' ) {\r\n\r\n\t\t\t\treturn parseRational( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'timecode' ) {\r\n\r\n\t\t\t\treturn parseTimecode( dataView, offset );\r\n\r\n\t\t\t} else if ( type === 'preview' ) {\r\n\r\n\t\t\t\toffset.value += size;\r\n\t\t\t\treturn 'skipped';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toffset.value += size;\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar bufferDataView = new DataView( buffer );\r\n\t\tvar uInt8Array = new Uint8Array( buffer );\r\n\r\n\t\tvar EXRHeader = {};\r\n\r\n\t\tbufferDataView.getUint32( 0, true ); // magic\r\n\t\tbufferDataView.getUint8( 4, true ); // versionByteZero\r\n\t\tbufferDataView.getUint8( 5, true ); // fullMask\r\n\r\n\t\t// start of header\r\n\r\n\t\tvar offset = { value: 8 }; // start at 8, after magic stuff\r\n\r\n\t\tvar keepReading = true;\r\n\r\n\t\twhile ( keepReading ) {\r\n\r\n\t\t\tvar attributeName = parseNullTerminatedString( buffer, offset );\r\n\r\n\t\t\tif ( attributeName == 0 ) {\r\n\r\n\t\t\t\tkeepReading = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar attributeType = parseNullTerminatedString( buffer, offset );\r\n\t\t\t\tvar attributeSize = parseUint32( bufferDataView, offset );\r\n\t\t\t\tvar attributeValue = parseValue( bufferDataView, buffer, offset, attributeType, attributeSize );\r\n\r\n\t\t\t\tif ( attributeValue === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( `EXRLoader.parse: skipped unknown header attribute type \\'${ attributeType }\\'.` );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tEXRHeader[ attributeName ] = attributeValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// offsets\r\n\t\tvar dataWindowHeight = EXRHeader.dataWindow.yMax + 1;\r\n\r\n\t\tvar uncompress;\r\n\t\tvar scanlineBlockSize;\r\n\r\n\t\tswitch ( EXRHeader.compression ) {\r\n\r\n\t\t\tcase 'NO_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 1;\r\n\t\t\t\tuncompress = uncompressRAW;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'RLE_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 1;\r\n\t\t\t\tuncompress = uncompressRLE;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZIPS_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 1;\r\n\t\t\t\tuncompress = uncompressZIP;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZIP_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 16;\r\n\t\t\t\tuncompress = uncompressZIP;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PIZ_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 32;\r\n\t\t\t\tuncompress = uncompressPIZ;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PXR24_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 16;\r\n\t\t\t\tuncompress = uncompressPXR;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DWAA_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 32;\r\n\t\t\t\tuncompress = uncompressDWA;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DWAB_COMPRESSION':\r\n\r\n\t\t\t\tscanlineBlockSize = 256;\r\n\t\t\t\tuncompress = uncompressDWA;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tthrow 'EXRLoader.parse: ' + EXRHeader.compression + ' is unsupported';\r\n\r\n\t\t}\r\n\r\n\t\tvar size_t;\r\n\t\tvar getValue;\r\n\r\n\t\t// mixed pixelType not supported\r\n\t\tvar pixelType = EXRHeader.channels[ 0 ].pixelType;\r\n\r\n\t\tif ( pixelType === 1 ) { // half\r\n\r\n\t\t\tswitch ( this.type ) {\r\n\r\n\t\t\t\tcase UnsignedByteType:\r\n\t\t\t\tcase FloatType:\r\n\r\n\t\t\t\t\tgetValue = parseFloat16;\r\n\t\t\t\t\tsize_t = INT16_SIZE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HalfFloatType:\r\n\r\n\t\t\t\t\tgetValue = parseUint16;\r\n\t\t\t\t\tsize_t = INT16_SIZE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( pixelType === 2 ) { // float\r\n\r\n\t\t\tswitch ( this.type ) {\r\n\r\n\t\t\t\tcase UnsignedByteType:\r\n\t\t\t\tcase FloatType:\r\n\r\n\t\t\t\t\tgetValue = parseFloat32;\r\n\t\t\t\t\tsize_t = FLOAT32_SIZE;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase HalfFloatType:\r\n\r\n\t\t\t\t\tgetValue = decodeFloat32;\r\n\t\t\t\t\tsize_t = FLOAT32_SIZE;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow 'EXRLoader.parse: unsupported pixelType ' + pixelType + ' for ' + EXRHeader.compression + '.';\r\n\r\n\t\t}\r\n\r\n\t\tvar numBlocks = dataWindowHeight / scanlineBlockSize;\r\n\r\n\t\tfor ( var i = 0; i < numBlocks; i ++ ) {\r\n\r\n\t\t\tparseUlong( bufferDataView, offset ); // scanlineOffset\r\n\r\n\t\t}\r\n\r\n\t\t// we should be passed the scanline offset table, start reading pixel data\r\n\r\n\t\tvar width = EXRHeader.dataWindow.xMax - EXRHeader.dataWindow.xMin + 1;\r\n\t\tvar height = EXRHeader.dataWindow.yMax - EXRHeader.dataWindow.yMin + 1;\r\n\t\t// Firefox only supports RGBA (half) float textures\r\n\t\t// var numChannels = EXRHeader.channels.length;\r\n\t\tvar numChannels = 4;\r\n\t\tvar size = width * height * numChannels;\r\n\r\n\t\t// Fill initially with 1s for the alpha value if the texture is not RGBA, RGB values will be overwritten\r\n\t\tswitch ( this.type ) {\r\n\r\n\t\t\tcase UnsignedByteType:\r\n\t\t\tcase FloatType:\r\n\r\n\t\t\t\tvar byteArray = new Float32Array( size );\r\n\r\n\t\t\t\tif ( EXRHeader.channels.length < numChannels ) {\r\n\r\n\t\t\t\t\tbyteArray.fill( 1, 0, size );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase HalfFloatType:\r\n\r\n\t\t\t\tvar byteArray = new Uint16Array( size );\r\n\r\n\t\t\t\tif ( EXRHeader.channels.length < numChannels ) {\r\n\r\n\t\t\t\t\tbyteArray.fill( 0x3C00, 0, size ); // Uint16Array holds half float data, 0x3C00 is 1\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tconsole.error( 'THREE.EXRLoader: unsupported type: ', this.type );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tvar channelOffsets = {\r\n\t\t\tR: 0,\r\n\t\t\tG: 1,\r\n\t\t\tB: 2,\r\n\t\t\tA: 3\r\n\t\t};\r\n\r\n\t\tvar compressionInfo = {\r\n\r\n\t\t\tsize: 0,\r\n\t\t\twidth: width,\r\n\t\t\tlines: scanlineBlockSize,\r\n\r\n\t\t\toffset: offset,\r\n\t\t\tarray: uInt8Array,\r\n\t\t\tviewer: bufferDataView,\r\n\r\n\t\t\ttype: pixelType,\r\n\t\t\tchannels: EXRHeader.channels.length,\r\n\r\n\t\t};\r\n\r\n\t\tvar line;\r\n\t\tvar size;\r\n\t\tvar viewer;\r\n\t\tvar tmpOffset = { value: 0 };\r\n\r\n\t\tfor ( var scanlineBlockIdx = 0; scanlineBlockIdx < height / scanlineBlockSize; scanlineBlockIdx ++ ) {\r\n\r\n\t\t\tline = parseUint32( bufferDataView, offset ); // line_no\r\n\t\t\tsize = parseUint32( bufferDataView, offset ); // data_len\r\n\r\n\t\t\tcompressionInfo.lines = ( line + scanlineBlockSize > height ) ? height - line : scanlineBlockSize;\r\n\t\t\tcompressionInfo.offset = offset;\r\n\t\t\tcompressionInfo.size = size;\r\n\r\n\t\t\tviewer = uncompress( compressionInfo );\r\n\r\n\t\t\toffset.value += size;\r\n\r\n\t\t\tfor ( var line_y = 0; line_y < scanlineBlockSize; line_y ++ ) {\r\n\r\n\t\t\t\tvar true_y = line_y + ( scanlineBlockIdx * scanlineBlockSize );\r\n\r\n\t\t\t\tif ( true_y >= height ) break;\r\n\r\n\t\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\r\n\r\n\t\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\r\n\r\n\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\t\t\t\tvar idx = ( line_y * ( EXRHeader.channels.length * width ) ) + ( channelID * width ) + x;\r\n\t\t\t\t\t\ttmpOffset.value = idx * size_t;\r\n\r\n\t\t\t\t\t\tvar val = getValue( viewer, tmpOffset );\r\n\r\n\t\t\t\t\t\tbyteArray[ ( ( ( height - 1 - true_y ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.type === UnsignedByteType ) {\r\n\r\n\t\t\tlet v, i;\r\n\t\t\tconst size = byteArray.length;\r\n\t\t\tconst RGBEArray = new Uint8Array( size );\r\n\r\n\t\t\tfor ( let h = 0; h < height; ++ h ) {\r\n\r\n\t\t\t\tfor ( let w = 0; w < width; ++ w ) {\r\n\r\n\t\t\t\t\ti = h * width * 4 + w * 4;\r\n\r\n\t\t\t\t\tconst red = byteArray[ i ];\r\n\t\t\t\t\tconst green = byteArray[ i + 1 ];\r\n\t\t\t\t\tconst blue = byteArray[ i + 2 ];\r\n\r\n\t\t\t\t\tv = ( red > green ) ? red : green;\r\n\t\t\t\t\tv = ( blue > v ) ? blue : v;\r\n\r\n\t\t\t\t\tif ( v < 1e-32 ) {\r\n\r\n\t\t\t\t\t\tRGBEArray[ i ] = RGBEArray[ i + 1 ] = RGBEArray[ i + 2 ] = RGBEArray[ i + 3 ] = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst res = frexp( v );\r\n\t\t\t\t\t\tv = res[ 0 ] * 256 / v;\r\n\r\n\t\t\t\t\t\tRGBEArray[ i ] = red * v;\r\n\t\t\t\t\t\tRGBEArray[ i + 1 ] = green * v;\r\n\t\t\t\t\t\tRGBEArray[ i + 2 ] = blue * v;\r\n\t\t\t\t\t\tRGBEArray[ i + 3 ] = res[ 1 ] + 128;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbyteArray = RGBEArray;\r\n\r\n\t\t}\r\n\r\n\t\tconst format = ( this.type === UnsignedByteType ) ? RGBEFormat : ( numChannels === 4 ) ? RGBAFormat : RGBFormat;\r\n\r\n\t\treturn {\r\n\t\t\theader: EXRHeader,\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdata: byteArray,\r\n\t\t\tformat: format,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t},\r\n\r\n\tsetDataType: function ( value ) {\r\n\r\n\t\tthis.type = value;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tfunction onLoadCallback( texture, texData ) {\r\n\r\n\t\t\tswitch ( texture.type ) {\r\n\r\n\t\t\t\tcase UnsignedByteType:\r\n\r\n\t\t\t\t\ttexture.encoding = RGBEEncoding;\r\n\t\t\t\t\ttexture.minFilter = NearestFilter;\r\n\t\t\t\t\ttexture.magFilter = NearestFilter;\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttexture.flipY = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase FloatType:\r\n\t\t\t\tcase HalfFloatType:\r\n\r\n\t\t\t\t\ttexture.encoding = LinearEncoding;\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\t\ttexture.magFilter = LinearFilter;\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\t\t\t\ttexture.flipY = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}\r\n\r\n\t\treturn DataTextureLoader.prototype.load.call( this, url, onLoadCallback, onProgress, onError );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { EXRLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/EXRLoader.js","<template>\r\n    <div class=\"webglLoaderTextureExr-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl EXR texture loader example<br/>\r\n\t\t\tImage courtesy of <a href=\"http://www.pauldebevec.com/Research/HDR/\" target=\"_blank\" rel=\"noopener\">Paul Debevec</a>.\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { EXRLoader } from '@/components/jsm/loaders/EXRLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            params: {\r\n\t\t\t\texposure: 2.0\r\n\t\t\t},\r\n            renderer: null,\r\n            scene: null,\r\n            camera: null,\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglLoaderTextureExr-container')[0].appendChild(this.renderer.domElement)\r\n            this.renderer.toneMapping = this.$THREE.ReinhardToneMapping\r\n            this.renderer.toneMappingExposure = this.params.exposure\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.scene = new this.$THREE.Scene()\r\n            var aspect = this.$webglInnerWidth / window.innerHeight\r\n            this.camera = new this.$THREE.OrthographicCamera(- aspect, aspect, 1, - 1, 0, 1)\r\n            new EXRLoader()\r\n                .setDataType(this.$THREE.FloatType)\r\n                .load('static/textures/memorial.exr', (texture, textureData) => {\r\n                    // memorial.exr is NPOT\r\n                    //console.log(textureData)\r\n                    //console.log(texture)\r\n                    // EXRLoader sets these default settings\r\n                    //texture.generateMipmaps = false\r\n                    //texture.minFilter = LinearFilter\r\n                    //texture.magFilter = LinearFilter\r\n                    var material = new this.$THREE.MeshBasicMaterial({ map: texture })\r\n                    var quad = new this.$THREE.PlaneBufferGeometry(1.5 * textureData.width / textureData.height, 1.5)\r\n                    var mesh = new this.$THREE.Mesh(quad, material)\r\n                    this.scene.add(mesh)\r\n                    this.render()\r\n                })\r\n            //\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'exposure', 0, 4, 0.01).onChange(this.render)\r\n            this.gui.open()\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            var aspect = window.innerWidth - 281 / window.innerHeight\r\n            var frustumHeight = this.camera.top - this.camera.bottom\r\n            this.camera.left = - frustumHeight * aspect / 2\r\n            this.camera.right = frustumHeight * aspect / 2\r\n            this.camera.updateProjectionMatrix()\r\n            this.renderer.setSize(window.innerWidth - 281, window.innerHeight)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.toneMappingExposure = this.params.exposure\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoaderTextureExr-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoaderTextureExr.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoaderTextureExr-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl EXR texture loader example\"),_c('br'),_vm._v(\"\\n\\t\\t\\tImage courtesy of \"),_c('a',{attrs:{\"href\":\"http://www.pauldebevec.com/Research/HDR/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Paul Debevec\")]),_vm._v(\".\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e5b10648\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoaderTextureExr.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e5b10648\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoaderTextureExr.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderTextureExr.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderTextureExr.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e5b10648\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoaderTextureExr.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e5b10648\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoaderTextureExr.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}