{"version":3,"sources":["webpack:///./src/components/jsm/objects/ShadowMesh.js","webpack:///src/views/shadowmesh/webglShadowmesh.vue","webpack:///./src/views/shadowmesh/webglShadowmesh.vue?5892","webpack:///./src/views/shadowmesh/webglShadowmesh.vue"],"names":["shadowMatrix","ShadowMesh","mesh","shadowMaterial","MeshBasicMaterial","color","transparent","opacity","depthWrite","Mesh","call","this","geometry","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","prototype","Object","create","constructor","update","Matrix4","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices","webglShadowmesh","data","SCREEN_WIDTH","SCREEN_HEIGHT","scene","camera","clock","renderer","sunLight","useDirectionalLight","arrowHelper1","arrowHelper2","arrowHelper3","arrowDirection","arrowPosition1","arrowPosition2","arrowPosition3","groundMesh","lightSphere","lightHolder","pyramid","pyramidShadow","sphere","sphereShadow","cube","cubeShadow","cylinder","cylinderShadow","torus","torusShadow","normalVector","planeConstant","groundPlane","verticalAngle","horizontalAngle","frameTime","TWO_PI","mounted","$webglInnerWidth","window","innerHeight","$THREE","Scene","PerspectiveCamera","Clock","WebGLRenderer","DirectionalLight","Vector3","Plane","Vector4","Math","PI","init","animate","methods","background","Color","setPixelRatio","devicePixelRatio","setSize","document","getElementById","appendChild","domElement","addEventListener","onWindowResize","position","set","add","lookAt","subVectors","normalize","copy","ArrowHelper","lightSphereGeometry","SphereBufferGeometry","lightSphereMaterial","visible","lightHolderGeometry","CylinderBufferGeometry","lightHolderMaterial","groundGeometry","BoxBufferGeometry","groundMaterial","MeshLambertMaterial","cubeGeometry","cubeMaterial","emissive","ShadowMesh_ShadowMesh","cylinderGeometry","cylinderMaterial","MeshPhongMaterial","torusGeometry","TorusBufferGeometry","torusMaterial","sphereGeometry","sphereMaterial","pyramidGeometry","pyramidMaterial","flatShading","shininess","requestAnimationFrame","getDelta","rotation","sin","cos","render","$onWindowResize","lightButtonHandler","setHex","material","value","shadowmesh_webglShadowmesh","_h","$createElement","_c","_self","staticClass","attrs","id","href","target","rel","_v","size","on","click","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/162.8ec885c6b8d2ed5e0164.js","sourcesContent":["import {\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshBasicMaterial\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * A shadow Mesh that follows a shadow-casting Mesh in the scene, but is confined to a single plane.\r\n */\r\n\r\nvar ShadowMesh = function ( mesh ) {\r\n\r\n\tvar shadowMaterial = new MeshBasicMaterial( {\r\n\r\n\t\tcolor: 0x000000,\r\n\t\ttransparent: true,\r\n\t\topacity: 0.6,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n\tMesh.call( this, mesh.geometry, shadowMaterial );\r\n\r\n\tthis.meshMatrix = mesh.matrixWorld;\r\n\r\n\tthis.frustumCulled = false;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nShadowMesh.prototype = Object.create( Mesh.prototype );\r\nShadowMesh.prototype.constructor = ShadowMesh;\r\n\r\nShadowMesh.prototype.update = function () {\r\n\r\n\tvar shadowMatrix = new Matrix4();\r\n\r\n\treturn function ( plane, lightPosition4D ) {\r\n\r\n\t\t// based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\r\n\r\n\t\tvar dot = plane.normal.x * lightPosition4D.x +\r\n\t\t\t  plane.normal.y * lightPosition4D.y +\r\n\t\t\t  plane.normal.z * lightPosition4D.z +\r\n\t\t\t  - plane.constant * lightPosition4D.w;\r\n\r\n\t\tvar sme = shadowMatrix.elements;\r\n\r\n\t\tsme[ 0 ] = dot - lightPosition4D.x * plane.normal.x;\r\n\t\tsme[ 4 ] = - lightPosition4D.x * plane.normal.y;\r\n\t\tsme[ 8 ] = - lightPosition4D.x * plane.normal.z;\r\n\t\tsme[ 12 ] = - lightPosition4D.x * - plane.constant;\r\n\r\n\t\tsme[ 1 ] = - lightPosition4D.y * plane.normal.x;\r\n\t\tsme[ 5 ] = dot - lightPosition4D.y * plane.normal.y;\r\n\t\tsme[ 9 ] = - lightPosition4D.y * plane.normal.z;\r\n\t\tsme[ 13 ] = - lightPosition4D.y * - plane.constant;\r\n\r\n\t\tsme[ 2 ] = - lightPosition4D.z * plane.normal.x;\r\n\t\tsme[ 6 ] = - lightPosition4D.z * plane.normal.y;\r\n\t\tsme[ 10 ] = dot - lightPosition4D.z * plane.normal.z;\r\n\t\tsme[ 14 ] = - lightPosition4D.z * - plane.constant;\r\n\r\n\t\tsme[ 3 ] = - lightPosition4D.w * plane.normal.x;\r\n\t\tsme[ 7 ] = - lightPosition4D.w * plane.normal.y;\r\n\t\tsme[ 11 ] = - lightPosition4D.w * plane.normal.z;\r\n\t\tsme[ 15 ] = dot - lightPosition4D.w * - plane.constant;\r\n\r\n\t\tthis.matrix.multiplyMatrices( shadowMatrix, this.meshMatrix );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nexport { ShadowMesh };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/objects/ShadowMesh.js","<template>\r\n    <div class=\"webglShadowmesh-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - shadow mesh<br />\r\n            <el-button id=\"lightButton\" size=\"mini\" @click=\"lightButtonHandler\">Switch to PointLight</el-button>\r\n\t\t\t<!-- <input id=\"lightButton\" type=\"button\" value=\"Switch to PointLight\"> -->\r\n\t\t</div>\r\n        <div id=\"container\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ShadowMesh } from '@/components/jsm/objects/ShadowMesh.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            SCREEN_WIDTH: null,\r\n\t\t\tSCREEN_HEIGHT: null,\r\n\t\t\tscene: null,\r\n\t\t\tcamera: null,\r\n\t\t\tclock: null,\r\n\t\t\trenderer: null,\r\n\t\t\tsunLight: null,\r\n\t\t\tuseDirectionalLight: true,\r\n            arrowHelper1: null,\r\n            arrowHelper2: null,\r\n            arrowHelper3: null,\r\n\t\t\tarrowDirection: null,\r\n\t\t\tarrowPosition1: null,\r\n\t\t\tarrowPosition2: null,\r\n\t\t\tarrowPosition3: null,\r\n\t\t\tgroundMesh: null,\r\n            lightSphere: null,\r\n            lightHolder: null,\r\n            pyramid: null,\r\n            pyramidShadow: null,\r\n            sphere: null,\r\n            sphereShadow: null,\r\n            cube: null,\r\n            cubeShadow: null,\r\n            cylinder: null,\r\n            cylinderShadow: null,\r\n            torus: null,\r\n            torusShadow: null,\r\n\t\t\tnormalVector: null,\r\n\t\t\tplaneConstant: 0.01, // this value must be slightly higher than the groundMesh's y position of 0.0\r\n\t\t\tgroundPlane: null,\r\n\t\t\tlightPosition4D: null,\r\n\t\t\tverticalAngle: 0,\r\n\t\t\thorizontalAngle: 0,\r\n\t\t\tframeTime: 0,\r\n\t\t\tTWO_PI: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.SCREEN_WIDTH = this.$webglInnerWidth\r\n        this.SCREEN_HEIGHT = window.innerHeight\r\n        this.scene = new this.$THREE.Scene()\r\n        this.camera = new this.$THREE.PerspectiveCamera(55, this.SCREEN_WIDTH / this.SCREEN_HEIGHT, 1, 3000)\r\n        this.clock = new this.$THREE.Clock()\r\n        this.renderer = new this.$THREE.WebGLRenderer()\r\n        this.sunLight = new this.$THREE.DirectionalLight('rgb(255,255,255)', 1)\r\n        this.arrowDirection = new this.$THREE.Vector3()\r\n        this.arrowPosition1 = new this.$THREE.Vector3()\r\n        this.arrowPosition2 = new this.$THREE.Vector3()\r\n        this.arrowPosition3 = new this.$THREE.Vector3()\r\n        this.normalVector = new this.$THREE.Vector3(0, 1, 0)\r\n        this.groundPlane = new this.$THREE.Plane(this.normalVector, this.planeConstant)\r\n        this.lightPosition4D = new this.$THREE.Vector4()\r\n        this.TWO_PI = Math.PI * 2\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.scene.background = new this.$THREE.Color(0x0096ff)\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.SCREEN_WIDTH, this.SCREEN_HEIGHT)\r\n            document.getElementById(\"container\").appendChild(this.renderer.domElement)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            this.camera.position.set(0, 2.5, 10)\r\n            this.scene.add(this.camera)\r\n            this.onWindowResize()\r\n            this.sunLight.position.set(5, 7, - 1)\r\n            this.sunLight.lookAt(this.scene.position)\r\n            this.scene.add(this.sunLight)\r\n            this.lightPosition4D.x = this.sunLight.position.x\r\n            this.lightPosition4D.y = this.sunLight.position.y\r\n            this.lightPosition4D.z = this.sunLight.position.z\r\n            // amount of light-ray divergence. Ranging from:\r\n            // 0.001 = sunlight(min divergence) to 1.0 = pointlight(max divergence)\r\n            this.lightPosition4D.w = 0.001 // must be slightly greater than 0, due to 0 causing matrixInverse errors\r\n            // YELLOW ARROW HELPERS\r\n            this.arrowDirection.subVectors(this.scene.position, this.sunLight.position).normalize()\r\n            this.arrowPosition1.copy(this.sunLight.position)\r\n            this.arrowHelper1 = new this.$THREE.ArrowHelper(this.arrowDirection, this.arrowPosition1, 0.9, 0xffff00, 0.25, 0.08)\r\n            this.scene.add(this.arrowHelper1)\r\n            this.arrowPosition2.copy(this.sunLight.position).add(new this.$THREE.Vector3(0, 0.2, 0))\r\n            this.arrowHelper2 = new this.$THREE.ArrowHelper(this.arrowDirection, this.arrowPosition2, 0.9, 0xffff00, 0.25, 0.08)\r\n            this.scene.add(this.arrowHelper2)\r\n            this.arrowPosition3.copy(this.sunLight.position).add(new this.$THREE.Vector3(0, - 0.2, 0))\r\n            this.arrowHelper3 = new this.$THREE.ArrowHelper(this.arrowDirection, this.arrowPosition3, 0.9, 0xffff00, 0.25, 0.08)\r\n            this.scene.add(this.arrowHelper3)\r\n            // LIGHTBULB\r\n            var lightSphereGeometry = new this.$THREE.SphereBufferGeometry(0.09)\r\n            var lightSphereMaterial = new this.$THREE.MeshBasicMaterial({ color: 'rgb(255,255,255)' })\r\n            this.lightSphere = new this.$THREE.Mesh(lightSphereGeometry, lightSphereMaterial)\r\n            this.scene.add(this.lightSphere)\r\n            this.lightSphere.visible = false\r\n            var lightHolderGeometry = new this.$THREE.CylinderBufferGeometry(0.05, 0.05, 0.13)\r\n            var lightHolderMaterial = new this.$THREE.MeshBasicMaterial({ color: 'rgb(75,75,75)' })\r\n            this.lightHolder = new this.$THREE.Mesh(lightHolderGeometry, lightHolderMaterial)\r\n            this.scene.add(this.lightHolder)\r\n            this.lightHolder.visible = false\r\n            // GROUND\r\n            var groundGeometry = new this.$THREE.BoxBufferGeometry(30, 0.01, 40)\r\n            var groundMaterial = new this.$THREE.MeshLambertMaterial({ color: 'rgb(0,130,0)' })\r\n            this.groundMesh = new this.$THREE.Mesh(groundGeometry, groundMaterial)\r\n            this.groundMesh.position.y = 0.0 //this value must be slightly lower than the planeConstant (0.01) parameter above\r\n            this.scene.add(this.groundMesh)\r\n            // RED CUBE and CUBE's SHADOW\r\n            var cubeGeometry = new this.$THREE.BoxBufferGeometry(1, 1, 1)\r\n            var cubeMaterial = new this.$THREE.MeshLambertMaterial({ color: 'rgb(255,0,0)', emissive: 0x200000 })\r\n            this.cube = new this.$THREE.Mesh(cubeGeometry, cubeMaterial)\r\n            this.cube.position.z = - 1\r\n            this.scene.add(this.cube)\r\n            this.cubeShadow = new ShadowMesh(this.cube)\r\n            this.scene.add(this.cubeShadow)\r\n            // BLUE CYLINDER and CYLINDER's SHADOW\r\n            var cylinderGeometry = new this.$THREE.CylinderBufferGeometry(0.3, 0.3, 2)\r\n            var cylinderMaterial = new this.$THREE.MeshPhongMaterial({ color: 'rgb(0,0,255)', emissive: 0x000020 })\r\n            this.cylinder = new this.$THREE.Mesh(cylinderGeometry, cylinderMaterial)\r\n            this.cylinder.position.z = - 2.5\r\n            this.scene.add(this.cylinder)\r\n            this.cylinderShadow = new ShadowMesh(this.cylinder)\r\n            this.scene.add(this.cylinderShadow)\r\n            // MAGENTA TORUS and TORUS' SHADOW\r\n            var torusGeometry = new this.$THREE.TorusBufferGeometry(1, 0.2, 10, 16, this.TWO_PI)\r\n            var torusMaterial = new this.$THREE.MeshPhongMaterial({ color: 'rgb(255,0,255)', emissive: 0x200020 })\r\n            this.torus = new this.$THREE.Mesh(torusGeometry, torusMaterial)\r\n            this.torus.position.z = - 6\r\n            this.scene.add(this.torus)\r\n            this.torusShadow = new ShadowMesh(this.torus)\r\n            this.scene.add(this.torusShadow)\r\n            // WHITE SPHERE and SPHERE'S SHADOW\r\n            var sphereGeometry = new this.$THREE.SphereBufferGeometry(0.5, 20, 10)\r\n            var sphereMaterial = new this.$THREE.MeshPhongMaterial({ color: 'rgb(255,255,255)', emissive: 0x222222 })\r\n            this.sphere = new this.$THREE.Mesh(sphereGeometry, sphereMaterial)\r\n            this.sphere.position.set(4, 0.5, 2)\r\n            this.scene.add(this.sphere)\r\n            this.sphereShadow = new ShadowMesh(this.sphere)\r\n            this.scene.add(this.sphereShadow)\r\n            // YELLOW PYRAMID and PYRAMID'S SHADOW\r\n            var pyramidGeometry = new this.$THREE.CylinderBufferGeometry(0, 0.5, 2, 4)\r\n            var pyramidMaterial = new this.$THREE.MeshPhongMaterial({ color: 'rgb(255,255,0)', emissive: 0x440000, flatShading: true, shininess: 0 })\r\n            this.pyramid = new this.$THREE.Mesh(pyramidGeometry, pyramidMaterial)\r\n            this.pyramid.position.set(- 4, 1, 2)\r\n            this.scene.add(this.pyramid)\r\n            this.pyramidShadow = new ShadowMesh(this.pyramid)\r\n            this.scene.add(this.pyramidShadow)\r\n            // document.getElementById('lightButton').addEventListener('click', this.lightButtonHandler)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.frameTime = this.clock.getDelta()\r\n            this.cube.rotation.x += 1.0 * this.frameTime\r\n            this.cube.rotation.y += 1.0 * this.frameTime\r\n            this.cylinder.rotation.y += 1.0 * this.frameTime\r\n            this.cylinder.rotation.z -= 1.0 * this.frameTime\r\n            this.torus.rotation.x -= 1.0 * this.frameTime\r\n            this.torus.rotation.y -= 1.0 * this.frameTime\r\n            this.pyramid.rotation.y += 0.5 * this.frameTime\r\n            this.horizontalAngle += 0.5 * this.frameTime\r\n            if (this.horizontalAngle > this.TWO_PI)\r\n                this.horizontalAngle -= this.TWO_PI\r\n            this.cube.position.x = Math.sin(this.horizontalAngle) * 4\r\n            this.cylinder.position.x = Math.sin(this.horizontalAngle) * - 4\r\n            this.torus.position.x = Math.cos(this.horizontalAngle) * 4\r\n            this.verticalAngle += 1.5 * this.frameTime\r\n            if (this.verticalAngle > this.TWO_PI)\r\n                this.verticalAngle -= this.TWO_PI\r\n            this.cube.position.y = Math.sin(this.verticalAngle) * 2 + 2.9\r\n            this.cylinder.position.y = Math.sin(this.verticalAngle) * 2 + 3.1\r\n            this.torus.position.y = Math.cos(this.verticalAngle) * 2 + 3.3\r\n            // update the ShadowMeshes to follow their shadow-casting objects\r\n            this.cubeShadow.update(this.groundPlane, this.lightPosition4D)\r\n            this.cylinderShadow.update(this.groundPlane, this.lightPosition4D)\r\n            this.torusShadow.update(this.groundPlane, this.lightPosition4D)\r\n            this.sphereShadow.update(this.groundPlane, this.lightPosition4D)\r\n            this.pyramidShadow.update(this.groundPlane, this.lightPosition4D)\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        lightButtonHandler() {\r\n            this.useDirectionalLight = ! this.useDirectionalLight\r\n            if (this.useDirectionalLight) {\r\n                this.scene.background.setHex(0x0096ff)\r\n                this.groundMesh.material.color.setHex(0x008200)\r\n                this.sunLight.position.set(5, 7, - 1)\r\n                this.sunLight.lookAt(this.scene.position)\r\n                this.lightPosition4D.x = this.sunLight.position.x\r\n                this.lightPosition4D.y = this.sunLight.position.y\r\n                this.lightPosition4D.z = this.sunLight.position.z\r\n                this.lightPosition4D.w = 0.001 // more of a directional Light value\r\n                this.arrowHelper1.visible = true\r\n                this.arrowHelper2.visible = true\r\n                this.arrowHelper3.visible = true\r\n                this.lightSphere.visible = false\r\n                this.lightHolder.visible = false\r\n                document.getElementById('lightButton').value = \"Switch to PointLight\"\r\n            } else {\r\n                this.scene.background.setHex(0x000000)\r\n                this.groundMesh.material.color.setHex(0x969696)\r\n                this.sunLight.position.set(0, 6, - 2)\r\n                this.sunLight.lookAt(this.scene.position)\r\n                this.lightSphere.position.copy(this.sunLight.position)\r\n                this.lightHolder.position.copy(this.lightSphere.position)\r\n                this.lightHolder.position.y += 0.12\r\n                this.lightPosition4D.x = this.sunLight.position.x\r\n                this.lightPosition4D.y = this.sunLight.position.y\r\n                this.lightPosition4D.z = this.sunLight.position.z\r\n                this.lightPosition4D.w = 0.9 // more of a point Light value\r\n                this.arrowHelper1.visible = false\r\n                this.arrowHelper2.visible = false\r\n                this.arrowHelper3.visible = false\r\n                this.lightSphere.visible = true\r\n                this.lightHolder.visible = true\r\n                document.getElementById('lightButton').value = \"Switch to this.$THREE.DirectionalLight\"\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglShadowmesh-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    left: calc(50% + 140.5px);\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/shadowmesh/webglShadowmesh.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglShadowmesh-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - shadow mesh\"),_c('br'),_vm._v(\" \"),_c('el-button',{attrs:{\"id\":\"lightButton\",\"size\":\"mini\"},on:{\"click\":_vm.lightButtonHandler}},[_vm._v(\"Switch to PointLight\")])],1),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container\"}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6efbb548\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/shadowmesh/webglShadowmesh.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6efbb548\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglShadowmesh.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadowmesh.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadowmesh.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6efbb548\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglShadowmesh.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6efbb548\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/shadowmesh/webglShadowmesh.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}