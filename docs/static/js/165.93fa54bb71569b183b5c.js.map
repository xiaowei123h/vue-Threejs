{"version":3,"sources":["webpack:///src/views/materials/webglMaterialsEnvmapsHdr.vue","webpack:///./src/views/materials/webglMaterialsEnvmapsHdr.vue?e4a7","webpack:///./src/views/materials/webglMaterialsEnvmapsHdr.vue"],"names":["webglMaterialsEnvmapsHdr","data","params","envMap","roughness","metalness","exposure","debug","container","stats","camera","scene","renderer","controls","torusMesh","planeMesh","generatedCubeRenderTarget","ldrCubeRenderTarget","hdrCubeRenderTarget","rgbmCubeRenderTarget","ldrCubeMap","hdrCubeMap","rgbmCubeMap","gui","mounted","this","init","animate","beforeDestroy","destroy","methods","getEnvScene","envScene","$THREE","Scene","geometry","BoxBufferGeometry","deleteAttribute","roomMaterial","MeshStandardMaterial","side","BackSide","room","Mesh","scale","setScalar","add","mainLight","PointLight","lightMaterial","MeshLambertMaterial","color","emissive","emissiveIntensity","light1","material","setHex","position","set","light2","clone","light3","_this","document","createElement","getElementsByClassName","appendChild","PerspectiveCamera","$webglInnerWidth","window","innerHeight","background","Color","WebGLRenderer","physicallyCorrectLights","toneMapping","ACESFilmicToneMapping","TorusKnotBufferGeometry","PlaneBufferGeometry","MeshBasicMaterial","y","rotation","x","Math","PI","DefaultLoadingManager","onLoad","pmremGenerator","dispose","HDRCubeTextureLoader","setPath","setDataType","UnsignedByteType","load","fromCubemap","magFilter","LinearFilter","needsUpdate","CubeTextureLoader","encoding","sRGBEncoding","RGBM16Encoding","format","RGBAFormat","PMREMGenerator","compileCubemapShader","fromScene","setPixelRatio","devicePixelRatio","setSize","domElement","outputEncoding","$Stats","dom","style","left","OrbitControls","minDistance","maxDistance","addEventListener","onWindowResize","dat_gui_module","open","$onWindowResize","requestAnimationFrame","begin","render","end","renderTarget","cubeMap","texture","newEnvMap","map","visible","toneMappingExposure","materials_webglMaterialsEnvmapsHdr","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/165.93fa54bb71569b183b5c.js","sourcesContent":["<template>\r\n    <div class=\"webglMaterialsEnvmapsHdr-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">threejs</a> - High dynamic range (RGBE) Image-based Lighting (IBL)<br />using run-time generated pre-filtered roughness mipmaps (PMREM)<br/>\r\n\t\t\tCreated by Prashant Sharma and <a href=\"http://clara.io/\" target=\"_blank\" rel=\"noopener\">Ben Houston</a>.\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { HDRCubeTextureLoader } from '@/components/jsm/loaders/HDRCubeTextureLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            params: {\r\n\t\t\t\tenvMap: 'HDR',\r\n\t\t\t\troughness: 0.0,\r\n\t\t\t\tmetalness: 0.0,\r\n\t\t\t\texposure: 1.0,\r\n\t\t\t\tdebug: false\r\n\t\t\t},\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            controls: null,\r\n            torusMesh: null,\r\n            planeMesh: null,\r\n            generatedCubeRenderTarget: null,\r\n            ldrCubeRenderTarget: null,\r\n            hdrCubeRenderTarget: null,\r\n            rgbmCubeRenderTarget: null,\r\n            ldrCubeMap: null,\r\n            hdrCubeMap: null,\r\n            rgbmCubeMap: null,\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        getEnvScene() {\r\n            var envScene = new this.$THREE.Scene()\r\n            var geometry = new this.$THREE.BoxBufferGeometry()\r\n            geometry.deleteAttribute('uv')\r\n            var roomMaterial = new this.$THREE.MeshStandardMaterial({ metalness: 0, side: this.$THREE.BackSide })\r\n            var room = new this.$THREE.Mesh(geometry, roomMaterial)\r\n            room.scale.setScalar(10)\r\n            envScene.add(room)\r\n            var mainLight = new this.$THREE.PointLight(0xffffff, 50, 0, 2)\r\n            envScene.add(mainLight)\r\n            var lightMaterial = new this.$THREE.MeshLambertMaterial({ color: 0x000000, emissive: 0xffffff, emissiveIntensity: 10 })\r\n            var light1 = new this.$THREE.Mesh(geometry, lightMaterial)\r\n            light1.material.color.setHex(0xff0000)\r\n            light1.position.set(- 5, 2, 0)\r\n            light1.scale.set(0.1, 1, 1)\r\n            envScene.add(light1)\r\n            var light2 = new this.$THREE.Mesh(geometry, lightMaterial.clone())\r\n            light2.material.color.setHex(0x00ff00)\r\n            light2.position.set(0, 5, 0)\r\n            light2.scale.set(1, 0.1, 1)\r\n            envScene.add(light2)\r\n            var light3 = new this.$THREE.Mesh(geometry, lightMaterial.clone())\r\n            light3.material.color.setHex(0x0000ff)\r\n            light3.position.set(2, 1, 5)\r\n            light3.scale.set(1.5, 2, 0.1)\r\n            envScene.add(light3)\r\n            return envScene\r\n        },\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsEnvmapsHdr-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set(0, 0, 120)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x000000)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.physicallyCorrectLights = true\r\n            this.renderer.toneMapping = this.$THREE.ACESFilmicToneMapping\r\n            //\r\n            var geometry = new this.$THREE.TorusKnotBufferGeometry(18, 8, 150, 20)\r\n            // var geometry = new this.$THREE.SphereBufferGeometry(26, 64, 32)\r\n            var material = new this.$THREE.MeshStandardMaterial({\r\n                color: 0xffffff,\r\n                metalness: this.params.metalness,\r\n                roughness: this.params.roughness\r\n            })\r\n            this.torusMesh = new this.$THREE.Mesh(geometry, material)\r\n            this.scene.add(this.torusMesh)\r\n            geometry = new this.$THREE.PlaneBufferGeometry(200, 200)\r\n            material = new this.$THREE.MeshBasicMaterial()\r\n            this.planeMesh = new this.$THREE.Mesh(geometry, material)\r\n            this.planeMesh.position.y = - 50\r\n            this.planeMesh.rotation.x = - Math.PI * 0.5\r\n            this.scene.add(this.planeMesh)\r\n            this.$THREE.DefaultLoadingManager.onLoad = () => {\r\n                pmremGenerator.dispose()\r\n            }\r\n            var hdrUrls = [ 'px.hdr', 'nx.hdr', 'py.hdr', 'ny.hdr', 'pz.hdr', 'nz.hdr' ]\r\n            this.hdrCubeMap = new HDRCubeTextureLoader()\r\n                .setPath('static/textures/cube/pisaHDR/')\r\n                .setDataType(this.$THREE.UnsignedByteType)\r\n                .load(hdrUrls, () => {\r\n                    this.hdrCubeRenderTarget = pmremGenerator.fromCubemap(this.hdrCubeMap)\r\n                    this.hdrCubeMap.magFilter = this.$THREE.LinearFilter\r\n                    this.hdrCubeMap.needsUpdate = true\r\n                })\r\n            var ldrUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ]\r\n            this.ldrCubeMap = new this.$THREE.CubeTextureLoader()\r\n                .setPath('static/textures/cube/pisa/')\r\n                .load(ldrUrls, () => {\r\n                    this.ldrCubeMap.encoding = this.$THREE.sRGBEncoding\r\n                    this.ldrCubeRenderTarget = pmremGenerator.fromCubemap(this.ldrCubeMap)\r\n                })\r\n            var rgbmUrls = [ 'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png' ]\r\n            this.rgbmCubeMap = new this.$THREE.CubeTextureLoader()\r\n                .setPath('static/textures/cube/pisaRGBM16/')\r\n                .load(rgbmUrls, () => {\r\n                    this.rgbmCubeMap.encoding = this.$THREE.RGBM16Encoding\r\n                    this.rgbmCubeMap.format = this.$THREE.RGBAFormat\r\n                    this.rgbmCubeRenderTarget = pmremGenerator.fromCubemap(this.rgbmCubeMap)\r\n                    this.rgbmCubeMap.magFilter = this.$THREE.LinearFilter\r\n                    this.rgbmCubeMap.needsUpdate = true\r\n                })\r\n            var pmremGenerator = new this.$THREE.PMREMGenerator(this.renderer)\r\n            pmremGenerator.compileCubemapShader()\r\n            var envScene = this.getEnvScene()\r\n            this.generatedCubeRenderTarget = pmremGenerator.fromScene(envScene, 0.04)\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            //this.renderer.toneMapping = ReinhardToneMapping\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.controls.minDistance = 50\r\n            this.controls.maxDistance = 300\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'envMap', [ 'Generated', 'LDR', 'HDR', 'RGBM16' ])\r\n            this.gui.add(this.params, 'roughness', 0, 1, 0.01)\r\n            this.gui.add(this.params, 'metalness', 0, 1, 0.01)\r\n            this.gui.add(this.params, 'exposure', 0, 2, 0.01)\r\n            this.gui.add(this.params, 'debug', false)\r\n            this.gui.open()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.stats.begin()\r\n            this.render()\r\n            this.stats.end()\r\n        },\r\n        render() {\r\n            this.torusMesh.material.roughness = this.params.roughness\r\n            this.torusMesh.material.metalness = this.params.metalness\r\n            var renderTarget, cubeMap\r\n            switch (this.params.envMap) {\r\n                case 'Generated':\r\n                    renderTarget = this.generatedCubeRenderTarget\r\n                    cubeMap = this.generatedCubeRenderTarget.texture\r\n                    break\r\n                case 'LDR':\r\n                    renderTarget = this.ldrCubeRenderTarget\r\n                    cubeMap = this.ldrCubeMap\r\n                    break\r\n                case 'HDR':\r\n                    renderTarget = this.hdrCubeRenderTarget\r\n                    cubeMap = this.hdrCubeMap\r\n                    break\r\n                case 'RGBM16':\r\n                    renderTarget = this.rgbmCubeRenderTarget\r\n                    cubeMap = this.rgbmCubeMap\r\n                    break\r\n            }\r\n            var newEnvMap = renderTarget ? renderTarget.texture : null\r\n            if (newEnvMap && newEnvMap !== this.torusMesh.material.envMap) {\r\n                this.torusMesh.material.envMap = newEnvMap\r\n                this.torusMesh.material.needsUpdate = true\r\n                this.planeMesh.material.map = newEnvMap\r\n                this.planeMesh.material.needsUpdate = true\r\n            }\r\n            this.torusMesh.rotation.y += 0.005\r\n            this.planeMesh.visible = this.params.debug\r\n            this.scene.background = cubeMap\r\n            this.renderer.toneMappingExposure = this.params.exposure\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsEnvmapsHdr-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsEnvmapsHdr.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsEnvmapsHdr-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"threejs\")]),_vm._v(\" - High dynamic range (RGBE) Image-based Lighting (IBL)\"),_c('br'),_vm._v(\"using run-time generated pre-filtered roughness mipmaps (PMREM)\"),_c('br'),_vm._v(\"\\n\\t\\t\\tCreated by Prashant Sharma and \"),_c('a',{attrs:{\"href\":\"http://clara.io/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Ben Houston\")]),_vm._v(\".\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6d764c4a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsEnvmapsHdr.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6d764c4a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsEnvmapsHdr.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsEnvmapsHdr.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsEnvmapsHdr.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6d764c4a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsEnvmapsHdr.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6d764c4a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsEnvmapsHdr.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}