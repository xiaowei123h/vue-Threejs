{"version":3,"sources":["webpack:///./src/components/jsm/loaders/3DMLoader.js","webpack:///src/views/loader/webglLoader3dm.vue","webpack:///./src/views/loader/webglLoader3dm.vue?f366","webpack:///./src/views/loader/webglLoader3dm.vue"],"names":["Rhino3dmLoader","manager","Loader","call","this","libraryPath","libraryPending","libraryBinary","libraryConfig","workerLimit","workerPool","workerNextTaskID","workerSourceURL","workerConfig","materials","taskCache","WeakMap","prototype","Object","assign","create","constructor","setLibraryPath","path","setWorkerLimit","load","url","onLoad","onProgress","onError","_this","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","buffer","has","get","promise","then","catch","decodeObjects","debug","console","log","map","worker","_taskLoad","taskID","_this2","taskCost","byteLength","objectPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","data","_releaseTask","set","parse","_compareMaterials","material","mat","name","color","r","g","b","i","length","m","_mat","JSON","stringify","push","_createMaterial","undefined","MeshStandardMaterial","Color","metalness","side","_diffuseColor","diffuseColor","diffusecolor","transparent","transparency","opacity","textureLoader","TextureLoader","textures","texture","image","bumpMap","alphaMap","envMap","object","Object3D","instanceDefinitionObjects","instanceDefinitions","instanceReferences","userData","layers","groups","settings","objects","obj","attributes","objectType","hasOwnProperty","rMaterial","find","materialUUID","_object","_createObject","layer","layerIndex","visible","isInstanceDefinitionObject","add","iDef","j","objectIds","objId","p","iRef","geometry","parentIdefId","iRefObject","xf","xform","array","matrix","Matrix4","applyMatrix4","clone","BufferGeometryLoader","_color","drawColor","PointsMaterial","sizeAttenuation","size","vertexColors","points","Points","mesh","Mesh","castShadow","castsShadows","receiveShadow","receivesShadows","brepObject","LineBasicMaterial","lines","Line","ctx","document","createElement","getContext","font","fontHeight","fontFace","width","measureText","text","height","window","devicePixelRatio","canvas","style","setTransform","textBaseline","textAlign","fillStyle","a","fillRect","fillText","CanvasTexture","minFilter","LinearFilter","wrapS","ClampToEdgeWrapping","wrapT","SpriteMaterial","depthTest","sprite","Sprite","position","point","scale","light","isDirectionalLight","DirectionalLight","location","target","direction","shadow","normalBias","isPointLight","PointLight","isRectangularLight","RectAreaLight","Math","abs","lookAt","Vector3","isSpotLight","SpotLight","angle","spotAngleRadians","isLinearLight","warn","intensity","diffuse","_initLibrary","_this3","jsLoader","jsContent","binaryLoader","binaryContent","all","_ref","_ref2","_slicedToArray","wasmBinary","fn","Rhino3dmWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","_this4","Worker","_taskCosts","onmessage","e","error","sort","dispose","terminate","rhino","extractObjectData","doc","_geometry","_attributes","ObjectType","Curve","pts","curveToPoints","curve","pointLimit","pointCount","rc","ts","LineCurve","pointAtStart","pointAtEnd","PolylineCurve","PolyCurve","segmentCount","segment","segmentCurve","segmentArray","concat","delete","ArcCurve","floor","angleDegrees","NurbsCurve","degree","domain","divisions","t","tan","tangentAt","prevTan","slice","tS","ptS","denominator","sqrt","PI","theta","x","y","z","acos","max","min","pointAt","itemSize","Point","pt","PointSet","toThreejsJSON","Brep","faces","faceIndex","count","face","getMesh","MeshType","Any","Extrusion","TextDot","Light","extractProperties","InstanceReference","toFloatArray","SubD","subdivide","createFromSubDControlNet","groupCount","groupIds","getGroupList","userStringCount","userStrings","getUserStrings","result","property","RhinoModule","onRuntimeInitialized","rhino3dm","arr","Uint8Array","File3dm","fromByteArray","views","namedViews","materialIndex","mId","findIndex","idef","idefAttributes","getObjectIds","textureTypes","TextureType","Diffuse","Bump","Transparency","Opacity","Emap","pbrTextureTypes","PBR_BaseColor","PBR_Subsurface","PBR_SubsurfaceScattering","PBR_SubsurfaceScatteringRadius","PBR_Metallic","PBR_Specular","PBR_SpecularTint","PBR_Roughness","PBR_Anisotropic","PBR_Anisotropic_Rotation","PBR_Sheen","PBR_SheenTint","PBR_Clearcoat","PBR_ClearcoatBump","PBR_ClearcoatRoughness","PBR_OpacityIor","PBR_OpacityRoughness","PBR_Emission","PBR_AmbientOcclusion","PBR_Displacement","_material","_pbrMaterial","physicallyBased","_texture","getTexture","textureType","getEmbeddedFileAsBase64","fileName","supported","pbMaterialProperties","_layer","_view","view","_namedView","namedView","_group","group","self","webglLoader3dm","container","controls","camera","scene","renderer","gui","mounted","init","animate","beforeDestroy","destroy","methods","$THREE","DefaultUp","getElementsByClassName","appendChild","PerspectiveCamera","$webglInnerWidth","innerHeight","Scene","directionalLight","_DMLoader_Rhino3dmLoader","initGUI","WebGLRenderer","antialias","setPixelRatio","setSize","domElement","OrbitControls","addEventListener","resize","$onWindowResize","update","render","requestAnimationFrame","that","dat_gui_module","layersControl","addFolder","open","onChange","val","traverse","child","loader_webglLoader3dm","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/166.785d685682c8adf6a4bb.js","sourcesContent":["import {\r\n\tBufferGeometryLoader,\r\n\tFileLoader,\r\n\tLoader,\r\n\tObject3D,\r\n\tMeshStandardMaterial,\r\n\tMesh,\r\n\tColor,\r\n\tPoints,\r\n\tPointsMaterial,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tMatrix4,\r\n\tDirectionalLight,\r\n\tPointLight,\r\n\tSpotLight,\r\n\tRectAreaLight,\r\n\tVector3,\r\n\tSprite,\r\n\tSpriteMaterial,\r\n\tCanvasTexture,\r\n\tLinearFilter,\r\n\tClampToEdgeWrapping,\r\n\tTextureLoader\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar Rhino3dmLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n\tthis.libraryPath = '';\r\n\tthis.libraryPending = null;\r\n\tthis.libraryBinary = null;\r\n\tthis.libraryConfig = {};\r\n\r\n\tthis.workerLimit = 4;\r\n\tthis.workerPool = [];\r\n\tthis.workerNextTaskID = 1;\r\n\tthis.workerSourceURL = '';\r\n\tthis.workerConfig = {};\r\n\r\n\tthis.materials = [];\r\n\r\n};\r\n\r\nRhino3dmLoader.taskCache = new WeakMap();\r\n\r\nRhino3dmLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: Rhino3dmLoader,\r\n\r\n\tsetLibraryPath: function ( path ) {\r\n\r\n\t\tthis.libraryPath = path;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetWorkerLimit: function ( workerLimit ) {\r\n\r\n\t\tthis.workerLimit = workerLimit;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar loader = new FileLoader( this.manager );\r\n\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\r\n\t\tloader.load( url, ( buffer ) => {\r\n\r\n\t\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\r\n\t\t\t// again from this thread.\r\n\t\t\tif ( Rhino3dmLoader.taskCache.has( buffer ) ) {\r\n\r\n\t\t\t\tvar cachedTask = Rhino3dmLoader.taskCache.get( buffer );\r\n\r\n\t\t\t\treturn cachedTask.promise.then( onLoad ).catch( onError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.decodeObjects( buffer, url )\r\n\t\t\t\t.then( onLoad )\r\n\t\t\t\t.catch( onError );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t},\r\n\r\n\tdebug: function () {\r\n\r\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\r\n\r\n\t},\r\n\r\n\tdecodeObjects: function ( buffer, url ) {\r\n\r\n\t\tvar worker;\r\n\t\tvar taskID;\r\n\r\n\t\tvar taskCost = buffer.byteLength;\r\n\r\n\t\tvar objectPending = this._getWorker( taskCost )\r\n\t\t\t.then( ( _worker ) => {\r\n\r\n\t\t\t\tworker = _worker;\r\n\t\t\t\ttaskID = this.workerNextTaskID ++; //hmmm\r\n\r\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\r\n\r\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, buffer }, [ buffer ] );\r\n\r\n\t\t\t\t\t//this.debug();\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} )\r\n\t\t\t.then( ( message ) => this._createGeometry( message.data ) );\r\n\r\n\t\t// Remove task from the task list.\r\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\r\n\t\tobjectPending\r\n\t\t\t.catch( () => true )\r\n\t\t\t.then( () => {\r\n\r\n\t\t\t\tif ( worker && taskID ) {\r\n\r\n\t\t\t\t\tthis._releaseTask( worker, taskID );\r\n\r\n\t\t\t\t\t//this.debug();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t// Cache the task result.\r\n\t\tRhino3dmLoader.taskCache.set( buffer, {\r\n\r\n\t\t\turl: url,\r\n\t\t\tpromise: objectPending\r\n\r\n\t\t} );\r\n\r\n\t\treturn objectPending;\r\n\r\n\t},\r\n\r\n\tparse: function ( data, onLoad, onError ) {\r\n\r\n\t\tthis.decodeObjects( data, '' )\r\n\t\t\t.then( onLoad )\r\n\t\t\t.catch( onError );\r\n\r\n\t},\r\n\r\n\t_compareMaterials: function ( material ) {\r\n\r\n\t\tvar mat = {};\r\n\t\tmat.name = material.name;\r\n\t\tmat.color = {};\r\n\t\tmat.color.r = material.color.r;\r\n\t\tmat.color.g = material.color.g;\r\n\t\tmat.color.b = material.color.b;\r\n\t\tmat.type = material.type;\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tvar m = this.materials[ i ];\r\n\t\t\tvar _mat = {};\r\n\t\t\t_mat.name = m.name;\r\n\t\t\t_mat.color = {};\r\n\t\t\t_mat.color.r = m.color.r;\r\n\t\t\t_mat.color.g = m.color.g;\r\n\t\t\t_mat.color.b = m.color.b;\r\n\t\t\t_mat.type = m.type;\r\n\r\n\t\t\tif ( JSON.stringify( mat ) === JSON.stringify( _mat ) ) {\r\n\r\n\t\t\t\treturn m;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.materials.push( material );\r\n\r\n\t\treturn material;\r\n\r\n\t},\r\n\r\n\t_createMaterial: function ( material ) {\r\n\r\n\t\tif ( material === undefined ) {\r\n\r\n\t\t\treturn new MeshStandardMaterial( {\r\n\t\t\t\tcolor: new Color( 1, 1, 1 ),\r\n\t\t\t\tmetalness: 0.8,\r\n\t\t\t\tname: 'default',\r\n\t\t\t\tside: 2\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tvar _diffuseColor = material.diffuseColor;\r\n\r\n\t\tvar diffusecolor = new Color( _diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0 );\r\n\r\n\t\tif ( _diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0 ) {\r\n\r\n\t\t\tdiffusecolor.r = 1;\r\n\t\t\tdiffusecolor.g = 1;\r\n\t\t\tdiffusecolor.b = 1;\r\n\r\n\t\t}\r\n\r\n\t\t// console.log( material );\r\n\r\n\t\tvar mat = new MeshStandardMaterial( {\r\n\t\t\tcolor: diffusecolor,\r\n\t\t\tname: material.name,\r\n\t\t\tside: 2,\r\n\t\t\ttransparent: material.transparency > 0 ? true : false,\r\n\t\t\topacity: 1.0 - material.transparency\r\n\t\t} );\r\n\r\n\t\tvar textureLoader = new TextureLoader();\r\n\r\n\t\tfor ( var i = 0; i < material.textures.length; i ++ ) {\r\n\r\n\t\t\tvar texture = material.textures[ i ];\r\n\r\n\t\t\tif ( texture.image !== null ) {\r\n\r\n\t\t\t\tvar map = textureLoader.load( texture.image );\r\n\r\n\t\t\t\tswitch ( texture.type ) {\r\n\r\n\t\t\t\t\tcase 'Diffuse':\r\n\r\n\t\t\t\t\t\tmat.map = map;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Bump':\r\n\r\n\t\t\t\t\t\tmat.bumpMap = map;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Transparency':\r\n\r\n\t\t\t\t\t\tmat.alphaMap = map;\r\n\t\t\t\t\t\tmat.transparent = true;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Emap':\r\n\r\n\t\t\t\t\t\tmat.envMap = map;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn mat;\r\n\r\n\t},\r\n\r\n\t_createGeometry: function ( data ) {\r\n\r\n\t\t// console.log(data);\r\n\r\n\t\tvar object = new Object3D();\r\n\t\tvar instanceDefinitionObjects = [];\r\n\t\tvar instanceDefinitions = [];\r\n\t\tvar instanceReferences = [];\r\n\r\n\t\tobject.userData[ 'layers' ] = data.layers;\r\n\t\tobject.userData[ 'groups' ] = data.groups;\r\n\t\tobject.userData[ 'settings' ] = data.settings;\r\n\r\n\t\tvar objects = data.objects;\r\n\t\tvar materials = data.materials;\r\n\r\n\t\tfor ( var i = 0; i < objects.length; i ++ ) {\r\n\r\n\t\t\tvar obj = objects[ i ];\r\n\t\t\tvar attributes = obj.attributes;\r\n\r\n\t\t\tswitch ( obj.objectType ) {\r\n\r\n\t\t\t\tcase 'InstanceDefinition':\r\n\r\n\t\t\t\t\tinstanceDefinitions.push( obj );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'InstanceReference':\r\n\r\n\t\t\t\t\tinstanceReferences.push( obj );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tif ( attributes.hasOwnProperty( 'materialUUID' ) ) {\r\n\r\n\t\t\t\t\t\tvar rMaterial = materials.find( m => m.id === attributes.materialUUID );\r\n\t\t\t\t\t\tvar material = this._createMaterial( rMaterial );\r\n\t\t\t\t\t\tmaterial = this._compareMaterials( material );\r\n\t\t\t\t\t\tvar _object = this._createObject( obj, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar _object = this._createObject( obj, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( _object === undefined ) {\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar layer = data.layers[ attributes.layerIndex ];\r\n\r\n\t\t\t\t\t_object.visible = layer ? data.layers[ attributes.layerIndex ].visible : true;\r\n\r\n\t\t\t\t\tif ( attributes.isInstanceDefinitionObject ) {\r\n\r\n\t\t\t\t\t\tinstanceDefinitionObjects.push( _object );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject.add( _object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < instanceDefinitions.length; i ++ ) {\r\n\r\n\t\t\tvar iDef = instanceDefinitions[ i ];\r\n\r\n\t\t\tvar objects = [];\r\n\r\n\t\t\tfor ( var j = 0; j < iDef.attributes.objectIds.length; j ++ ) {\r\n\r\n\t\t\t\tvar objId = iDef.attributes.objectIds[ j ];\r\n\r\n\t\t\t\tfor ( var p = 0; p < instanceDefinitionObjects.length; p ++ ) {\r\n\r\n\t\t\t\t\tvar idoId = instanceDefinitionObjects[ p ].userData.attributes.id;\r\n\r\n\t\t\t\t\tif ( objId === idoId ) {\r\n\r\n\t\t\t\t\t\tobjects.push( instanceDefinitionObjects[ p ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Currently clones geometry and does not take advantage of instancing\r\n\r\n\t\t\tfor ( var j = 0; j < instanceReferences.length; j ++ ) {\r\n\r\n\t\t\t\tvar iRef = instanceReferences[ j ];\r\n\r\n\t\t\t\tif ( iRef.geometry.parentIdefId === iDef.attributes.id ) {\r\n\r\n\t\t\t\t\tvar iRefObject = new Object3D();\r\n\t\t\t\t\tvar xf = iRef.geometry.xform.array;\r\n\r\n\t\t\t\t\tvar matrix = new Matrix4();\r\n          \t\t\tmatrix.set( xf[ 0 ], xf[ 1 ], xf[ 2 ], xf[ 3 ], xf[ 4 ], xf[ 5 ], xf[ 6 ], xf[ 7 ], xf[ 8 ], xf[ 9 ], xf[ 10 ], xf[ 11 ], xf[ 12 ], xf[ 13 ], xf[ 14 ], xf[ 15 ] );\r\n\r\n\t\t\t\t\tiRefObject.applyMatrix4( matrix );\r\n\r\n\t\t\t\t\tfor ( var p = 0; p < objects.length; p ++ ) {\r\n\r\n\t\t\t\t\t\tiRefObject.add( objects[ p ].clone( true ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.add( iRefObject );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.materials = [];\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\t_createObject: function ( obj, mat ) {\r\n\r\n\t\tvar loader = new BufferGeometryLoader();\r\n\r\n\t\tvar attributes = obj.attributes;\r\n\r\n\t\tswitch ( obj.objectType ) {\r\n\r\n\t\t\tcase 'Point':\r\n\t\t\tcase 'PointSet':\r\n\r\n\t\t\t\tvar geometry = loader.parse( obj.geometry );\r\n\t\t\t\tvar _color = attributes.drawColor;\r\n\t\t\t\tvar color = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\r\n\t\t\t\tvar material = new PointsMaterial( { color: color, sizeAttenuation: false, size: 2 } );\r\n\r\n\t\t\t\tif ( geometry.attributes.hasOwnProperty( 'color' ) ) {\r\n\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterial = this._compareMaterials( material );\r\n\r\n\t\t\t\tvar points = new Points( geometry, material );\r\n\t\t\t\tpoints.userData[ 'attributes' ] = attributes;\r\n\t\t\t\tpoints.userData[ 'objectType' ] = obj.objectType;\r\n\t\t\t\treturn points;\r\n\r\n\t\t\tcase 'Mesh':\r\n\t\t\tcase 'Extrusion':\r\n\t\t\tcase 'SubD':\r\n\r\n\t\t\t\tvar geometry = loader.parse( obj.geometry );\r\n\r\n\t\t\t\tif ( geometry.attributes.hasOwnProperty( 'color' ) ) {\r\n\r\n\t\t\t\t\tmat.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( mat === null ) {\r\n\r\n\t\t\t\t\tmat = this._createMaterial();\r\n\t\t\t\t\tmat = this._compareMaterials( mat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar mesh = new Mesh( geometry, mat );\r\n\t\t\t\tmesh.castShadow = attributes.castsShadows;\r\n\t\t\t\tmesh.receiveShadow = attributes.receivesShadows;\r\n\t\t\t\tmesh.userData[ 'attributes' ] = attributes;\r\n\t\t\t\tmesh.userData[ 'objectType' ] = obj.objectType;\r\n\r\n\t\t\t\treturn mesh;\r\n\r\n\t\t\tcase 'Brep':\r\n\r\n\t\t\t\tvar brepObject = new Object3D();\r\n\r\n\t\t\t\tfor ( var j = 0; j < obj.geometry.length; j ++ ) {\r\n\r\n\t\t\t\t\tgeometry = loader.parse( obj.geometry[ j ] );\r\n\t\t\t\t\tvar mesh = new Mesh( geometry, mat );\r\n\t\t\t\t\tmesh.castShadow = attributes.castsShadows;\r\n\t\t\t\t\tmesh.receiveShadow = attributes.receivesShadows;\r\n\r\n\t\t\t\t\tbrepObject.add( mesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbrepObject.userData[ 'attributes' ] = attributes;\r\n\t\t\t\tbrepObject.userData[ 'objectType' ] = obj.objectType;\r\n\r\n\t\t\t\treturn brepObject;\r\n\r\n\t\t\tcase 'Curve':\r\n\r\n\t\t\t\tgeometry = loader.parse( obj.geometry );\r\n\r\n\t\t\t\tvar _color = attributes.drawColor;\r\n\t\t\t\tvar color = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\r\n\r\n\t\t\t\tvar material = new LineBasicMaterial( { color: color } );\r\n\t\t\t\tmaterial = this._compareMaterials( material );\r\n\r\n\t\t\t\tvar lines = new Line( geometry, material );\r\n\t\t\t\tlines.userData[ 'attributes' ] = attributes;\r\n\t\t\t\tlines.userData[ 'objectType' ] = obj.objectType;\r\n\r\n\t\t\t\treturn lines;\r\n\r\n\t\t\tcase 'TextDot':\r\n\r\n\t\t\t\tgeometry = obj.geometry;\r\n\r\n\t\t\t\tvar ctx = document.createElement( 'canvas' ).getContext( '2d' );\r\n\t\t\t\tvar font = `${geometry.fontHeight}px ${geometry.fontFace}`;\r\n\t\t\t\tctx.font = font;\r\n\t\t\t\tvar width = ctx.measureText( geometry.text ).width + 10;\r\n\t\t\t\tvar height = geometry.fontHeight + 10;\r\n\r\n\t\t\t\tvar r = window.devicePixelRatio;\r\n\r\n\t\t\t\tctx.canvas.width = width * r;\r\n\t\t\t\tctx.canvas.height = height * r;\r\n\t\t\t\tctx.canvas.style.width = width + 'px';\r\n\t\t\t\tctx.canvas.style.height = height + 'px';\r\n\t\t\t\tctx.setTransform( r, 0, 0, r, 0, 0 );\r\n\r\n\t\t\t\tctx.font = font;\r\n\t\t\t\tctx.textBaseline = 'middle';\r\n\t\t\t\tctx.textAlign = 'center';\r\n\t\t\t\tvar color = attributes.drawColor;\r\n\t\t\t\tctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\r\n\t\t\t\tctx.fillRect( 0, 0, width, height );\r\n\t\t\t\tctx.fillStyle = 'white';\r\n\t\t\t\tctx.fillText( geometry.text, width / 2, height / 2 );\r\n\r\n\t\t\t\tvar texture = new CanvasTexture( ctx.canvas );\r\n\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\ttexture.wrapS = ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = ClampToEdgeWrapping;\r\n\r\n\t\t\t\tvar material = new SpriteMaterial( { map: texture, depthTest: false } );\r\n\t\t\t\tvar sprite = new Sprite( material );\r\n\t\t\t\tsprite.position.set( geometry.point[ 0 ], geometry.point[ 1 ], geometry.point[ 2 ] );\r\n\t\t\t\tsprite.scale.set( width / 10, height / 10, 1.0 );\r\n\r\n\t\t\t\tsprite.userData[ 'attributes' ] = attributes;\r\n\t\t\t\tsprite.userData[ 'objectType' ] = obj.objectType;\r\n\r\n\t\t\t\treturn sprite;\r\n\r\n\t\t\tcase 'Light':\r\n\r\n\t\t\t\tgeometry = obj.geometry;\r\n\r\n\t\t\t\tvar light;\r\n\r\n\t\t\t\tif ( geometry.isDirectionalLight ) {\r\n\r\n\t\t\t\t\tlight = new DirectionalLight();\r\n\t\t\t\t\tlight.castShadow = attributes.castsShadows;\r\n\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\r\n\t\t\t\t\tlight.target.position.set( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\r\n\t\t\t\t\tlight.shadow.normalBias = 0.1;\r\n\r\n\t\t\t\t} else if ( geometry.isPointLight ) {\r\n\r\n\t\t\t\t\tlight = new PointLight();\r\n\t\t\t\t\tlight.castShadow = attributes.castsShadows;\r\n\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\r\n\t\t\t\t\tlight.shadow.normalBias = 0.1;\r\n\r\n\t\t\t\t} else if ( geometry.isRectangularLight ) {\r\n\r\n\t\t\t\t\tlight = new RectAreaLight();\r\n\r\n\t\t\t\t\tvar width = Math.abs( geometry.width[ 2 ] );\r\n\t\t\t\t\tvar height = Math.abs( geometry.length[ 0 ] );\r\n\r\n\t\t\t\t\tlight.position.set( geometry.location[ 0 ] - ( height / 2 ), geometry.location[ 1 ], geometry.location[ 2 ] - ( width / 2 ) );\r\n\r\n\t\t\t\t\tlight.height = height;\r\n\t\t\t\t\tlight.width = width;\r\n\r\n\t\t\t\t\tlight.lookAt( new Vector3( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] ) );\r\n\r\n\t\t\t\t} else if ( geometry.isSpotLight ) {\r\n\r\n\t\t\t\t\tlight = new SpotLight();\r\n\t\t\t\t\tlight.castShadow = attributes.castsShadows;\r\n\t\t\t\t\tlight.position.set( geometry.location[ 0 ], geometry.location[ 1 ], geometry.location[ 2 ] );\r\n\t\t\t\t\tlight.target.position.set( geometry.direction[ 0 ], geometry.direction[ 1 ], geometry.direction[ 2 ] );\r\n\t\t\t\t\tlight.angle = geometry.spotAngleRadians;\r\n\t\t\t\t\tlight.shadow.normalBias = 0.1;\r\n\r\n\t\t\t\t} else if ( geometry.isLinearLight ) {\r\n\r\n\t\t\t\t\tconsole.warn( `THREE.3DMLoader:  No conversion exists for linear lights.` );\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( light ) {\r\n\r\n\t\t\t\t\tlight.intensity = geometry.intensity;\r\n\t\t\t\t\tvar _color = geometry.diffuse;\r\n\t\t\t\t\tvar color = new Color( _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 );\r\n\t\t\t\t\tlight.color = color;\r\n\t\t\t\t\tlight.userData[ 'attributes' ] = attributes;\r\n\t\t\t\t\tlight.userData[ 'objectType' ] = obj.objectType;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn light;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_initLibrary: function () {\r\n\r\n\t\tif ( ! this.libraryPending ) {\r\n\r\n\t\t\t// Load rhino3dm wrapper.\r\n\t\t\tvar jsLoader = new FileLoader( this.manager );\r\n\t\t\tjsLoader.setPath( this.libraryPath );\r\n\t\t\tvar jsContent = new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\t\tjsLoader.load( 'rhino3dm.js', resolve, undefined, reject );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// Load rhino3dm WASM binary.\r\n\t\t\tvar binaryLoader = new FileLoader( this.manager );\r\n\t\t\tbinaryLoader.setPath( this.libraryPath );\r\n\t\t\tbinaryLoader.setResponseType( 'arraybuffer' );\r\n\t\t\tvar binaryContent = new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\t\tbinaryLoader.load( 'rhino3dm.wasm', resolve, undefined, reject );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tthis.libraryPending = Promise.all( [ jsContent, binaryContent ] )\r\n\t\t\t\t.then( ( [ jsContent, binaryContent ] ) => {\r\n\r\n\t\t\t\t\t//this.libraryBinary = binaryContent;\r\n\t\t\t\t\tthis.libraryConfig.wasmBinary = binaryContent;\r\n\r\n\t\t\t\t\tvar fn = Rhino3dmLoader.Rhino3dmWorker.toString();\r\n\r\n\t\t\t\t\tvar body = [\r\n\t\t\t\t\t\t'/* rhino3dm.js */',\r\n\t\t\t\t\t\tjsContent,\r\n\t\t\t\t\t\t'/* worker */',\r\n\t\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\r\n\t\t\t\t\t].join( '\\n' );\r\n\r\n\t\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.libraryPending;\r\n\r\n\t},\r\n\r\n\t_getWorker: function ( taskCost ) {\r\n\r\n\t\treturn this._initLibrary().then( () => {\r\n\r\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\r\n\r\n\t\t\t\tvar worker = new Worker( this.workerSourceURL );\r\n\r\n\t\t\t\tworker._callbacks = {};\r\n\t\t\t\tworker._taskCosts = {};\r\n\t\t\t\tworker._taskLoad = 0;\r\n\r\n\t\t\t\tworker.postMessage( {\r\n\t\t\t\t\ttype: 'init',\r\n\t\t\t\t\tlibraryConfig: this.libraryConfig\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tworker.onmessage = function ( e ) {\r\n\r\n\t\t\t\t\tvar message = e.data;\r\n\r\n\t\t\t\t\tswitch ( message.type ) {\r\n\r\n\t\t\t\t\t\tcase 'decode':\r\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'error':\r\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.workerPool.push( worker );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\r\n\r\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar worker = this.workerPool[ this.workerPool.length - 1 ];\r\n\r\n\t\t\tworker._taskLoad += taskCost;\r\n\r\n\t\t\treturn worker;\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t_releaseTask: function ( worker, taskID ) {\r\n\r\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\r\n\t\tdelete worker._callbacks[ taskID ];\r\n\t\tdelete worker._taskCosts[ taskID ];\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tfor ( var i = 0; i < this.workerPool.length; ++ i ) {\r\n\r\n\t\t\tthis.workerPool[ i ].terminate();\r\n\r\n\t\t}\r\n\r\n\t\tthis.workerPool.length = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n/* WEB WORKER */\r\n\r\nRhino3dmLoader.Rhino3dmWorker = function () {\r\n\r\n\tvar libraryPending;\r\n\tvar libraryConfig;\r\n\tvar rhino;\r\n\r\n\tonmessage = function ( e ) {\r\n\r\n\t\tvar message = e.data;\r\n\r\n\t\tswitch ( message.type ) {\r\n\r\n\t\t\tcase 'init':\r\n\r\n\t\t\t\tlibraryConfig = message.libraryConfig;\r\n\t\t\t\tvar wasmBinary = libraryConfig.wasmBinary;\r\n\t\t\t\tvar RhinoModule;\r\n\t\t\t\tlibraryPending = new Promise( function ( resolve ) {\r\n\r\n\t\t\t\t\t/* Like Basis Loader */\r\n\t\t\t\t\tRhinoModule = { wasmBinary, onRuntimeInitialized: resolve };\r\n\r\n\t\t\t\t\trhino3dm( RhinoModule ); // eslint-disable-line no-undef\r\n\r\n\t\t\t\t } ).then( () => {\r\n\r\n\t\t\t\t\trhino = RhinoModule;\r\n\r\n\t\t\t\t } );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'decode':\r\n\r\n\t\t\t\tvar buffer = message.buffer;\r\n\t\t\t\tlibraryPending.then( () => {\r\n\r\n\t\t\t\t\tvar data = decodeObjects( rhino, buffer );\r\n\r\n\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, data } );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction decodeObjects( rhino, buffer ) {\r\n\r\n\t\tvar arr = new Uint8Array( buffer );\r\n\t\tvar doc = rhino.File3dm.fromByteArray( arr );\r\n\r\n\t\tvar objects = [];\r\n\t\tvar materials = [];\r\n\t\tvar layers = [];\r\n\t\tvar views = [];\r\n\t\tvar namedViews = [];\r\n\t\tvar groups = [];\r\n\r\n\t\t//Handle objects\r\n\r\n\t\tfor ( var i = 0; i < doc.objects().count; i ++ ) {\r\n\r\n\t\t\tvar _object = doc.objects().get( i );\r\n\r\n\t\t\tvar object = extractObjectData( _object, doc );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\tif ( object.attributes.materialIndex >= 0 ) {\r\n\r\n\t\t\t\t\tvar mId = doc.materials().findIndex( object.attributes.materialIndex ).id;\r\n\t\t\t\t\tobject.attributes.materialUUID = mId;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_object.delete();\r\n\r\n\t\t}\r\n\r\n\t\t// Handle instance definitions\r\n\t\t// console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\r\n\r\n\t\tfor ( var i = 0; i < doc.instanceDefinitions().count(); i ++ ) {\r\n\r\n\t\t\tvar idef = doc.instanceDefinitions().get( i );\r\n\t\t\tvar idefAttributes = extractProperties( idef );\r\n\t\t\tidefAttributes.objectIds = idef.getObjectIds();\r\n\r\n\t\t\tobjects.push( { geometry: null, attributes: idefAttributes, objectType: 'InstanceDefinition' } );\r\n\r\n\t\t}\r\n\r\n\t\t// Handle materials\r\n\r\n\t\tvar textureTypes = [\r\n\t\t\t// rhino.TextureType.Bitmap,\r\n\t\t\trhino.TextureType.Diffuse,\r\n\t\t\trhino.TextureType.Bump,\r\n\t\t\trhino.TextureType.Transparency,\r\n\t\t\trhino.TextureType.Opacity,\r\n\t\t\trhino.TextureType.Emap\r\n\t\t];\r\n\r\n\t\tvar pbrTextureTypes = [\r\n\t\t\trhino.TextureType.PBR_BaseColor,\r\n\t\t\trhino.TextureType.PBR_Subsurface,\r\n\t\t\trhino.TextureType.PBR_SubsurfaceScattering,\r\n\t\t\trhino.TextureType.PBR_SubsurfaceScatteringRadius,\r\n\t\t\trhino.TextureType.PBR_Metallic,\r\n\t\t\trhino.TextureType.PBR_Specular,\r\n\t\t\trhino.TextureType.PBR_SpecularTint,\r\n\t\t\trhino.TextureType.PBR_Roughness,\r\n\t\t\trhino.TextureType.PBR_Anisotropic,\r\n\t\t\trhino.TextureType.PBR_Anisotropic_Rotation,\r\n\t\t\trhino.TextureType.PBR_Sheen,\r\n\t\t\trhino.TextureType.PBR_SheenTint,\r\n\t\t\trhino.TextureType.PBR_Clearcoat,\r\n\t\t\trhino.TextureType.PBR_ClearcoatBump,\r\n\t\t\trhino.TextureType.PBR_ClearcoatRoughness,\r\n\t\t\trhino.TextureType.PBR_OpacityIor,\r\n\t\t\trhino.TextureType.PBR_OpacityRoughness,\r\n\t\t\trhino.TextureType.PBR_Emission,\r\n\t\t\trhino.TextureType.PBR_AmbientOcclusion,\r\n\t\t\trhino.TextureType.PBR_Displacement\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0; i < doc.materials().count(); i ++ ) {\r\n\r\n\t\t\tvar _material = doc.materials().get( i );\r\n\t\t\tvar _pbrMaterial = _material.physicallyBased();\r\n\r\n\t\t\tvar material = extractProperties( _material );\r\n\r\n\t\t\tvar textures = [];\r\n\r\n\t\t\tfor ( var j = 0; j < textureTypes.length; j ++ ) {\r\n\r\n\t\t\t\tvar _texture = _material.getTexture( textureTypes[ j ] );\r\n\t\t\t\tif ( _texture ) {\r\n\r\n\t\t\t\t\tvar textureType = textureTypes[ j ].constructor.name;\r\n\t\t\t\t\ttextureType = textureType.substring( 12, textureType.length );\r\n\t\t\t\t\tvar texture = { type: textureType };\r\n\r\n\t\t\t\t\tvar image = doc.getEmbeddedFileAsBase64( _texture.fileName );\r\n\r\n\t\t\t\t\tif ( image ) {\r\n\r\n\t\t\t\t\t\ttexture.image = 'data:image/png;base64,' + image;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( `THREE.3DMLoader: Image for ${textureType} texture not embedded in file.` );\r\n\t\t\t\t\t\ttexture.image = null;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttextures.push( texture );\r\n\r\n\t\t\t\t\t_texture.delete();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.textures = textures;\r\n\r\n\t\t\tif ( _pbrMaterial.supported ) {\r\n\r\n\t\t\t\tconsole.log( 'pbr true' );\r\n\r\n\t\t\t\tfor ( var j = 0; j < pbrTextureTypes.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar _texture = _material.getTexture( textureTypes[ j ] );\r\n\t\t\t\t\tif ( _texture ) {\r\n\r\n\t\t\t\t\t\tvar image = doc.getEmbeddedFileAsBase64( _texture.fileName );\r\n\t\t\t\t\t\tvar textureType = textureTypes[ j ].constructor.name;\r\n\t\t\t\t\t\ttextureType = textureType.substring( 12, textureType.length );\r\n\t\t\t\t\t\tvar texture = { type: textureType, image: 'data:image/png;base64,' + image };\r\n\t\t\t\t\t\ttextures.push( texture );\r\n\r\n\t\t\t\t\t\t_texture.delete();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pbMaterialProperties = extractProperties( _material.physicallyBased() );\r\n\r\n\t\t\t\tmaterial = Object.assign( pbMaterialProperties, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterials.push( material );\r\n\r\n\t\t\t_material.delete();\r\n\t\t\t_pbrMaterial.delete();\r\n\r\n\t\t}\r\n\r\n\t\t// Handle layers\r\n\r\n\t\tfor ( var i = 0; i < doc.layers().count(); i ++ ) {\r\n\r\n\t\t\tvar _layer = doc.layers().get( i );\r\n\t\t\tvar layer = extractProperties( _layer );\r\n\r\n\t\t\tlayers.push( layer );\r\n\r\n\t\t\t_layer.delete();\r\n\r\n\t\t}\r\n\r\n\t\t// Handle views\r\n\r\n\t\tfor ( var i = 0; i < doc.views().count(); i ++ ) {\r\n\r\n\t\t\tvar _view = doc.views().get( i );\r\n\t\t\tvar view = extractProperties( _view );\r\n\r\n\t\t\tviews.push( view );\r\n\r\n\t\t\t_view.delete();\r\n\r\n\t\t}\r\n\r\n\t\t// Handle named views\r\n\r\n\t\tfor ( var i = 0; i < doc.namedViews().count(); i ++ ) {\r\n\r\n\t\t\tvar _namedView = doc.namedViews().get( i );\r\n\t\t\tvar namedView = extractProperties( _namedView );\r\n\r\n\t\t\tnamedViews.push( namedView );\r\n\r\n\t\t\t_namedView.delete();\r\n\r\n\t\t}\r\n\r\n\t\t// Handle groups\r\n\r\n\t\tfor ( var i = 0; i < doc.groups().count(); i ++ ) {\r\n\r\n\t\t\tvar _group = doc.groups().get( i );\r\n\t\t\tvar group = extractProperties( _group );\r\n\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t\t_group.delete();\r\n\r\n\t\t}\r\n\r\n\t\t// Handle settings\r\n\r\n\t\tvar settings = extractProperties( doc.settings() );\r\n\r\n\t\t//TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\r\n\r\n\t\t// Handle dimstyles\r\n\t\t// console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\r\n\r\n\t\t// Handle bitmaps\r\n\t\t// console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\r\n\r\n\t\t// Handle strings -- this seems to be broken at the moment in rhino3dm\r\n\t\t// console.log( `Document Strings Count: ${doc.strings().count()}` );\r\n\r\n\t\t/*\r\n\t\tfor( var i = 0; i < doc.strings().count(); i++ ){\r\n\r\n\t\t\tvar _string= doc.strings().get( i );\r\n\r\n\t\t\tconsole.log(_string);\r\n\t\t\tvar string = extractProperties( _group );\r\n\r\n\t\t\tstrings.push( string );\r\n\r\n\t\t\t_string.delete();\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tdoc.delete();\r\n\r\n\t\treturn { objects, materials, layers, views, namedViews, groups, settings };\r\n\r\n\t}\r\n\r\n\tfunction extractObjectData( object, doc ) {\r\n\r\n\t\tvar _geometry = object.geometry();\r\n\t\tvar _attributes = object.attributes();\r\n\t\tvar objectType = _geometry.objectType;\r\n\t\tvar geometry = null;\r\n\t\tvar attributes = null;\r\n\r\n\t\t// skip instance definition objects\r\n\t\t//if( _attributes.isInstanceDefinitionObject ) { continue; }\r\n\r\n\t\t// TODO: handle other geometry types\r\n\t\tswitch ( objectType ) {\r\n\r\n\t\t\tcase rhino.ObjectType.Curve:\r\n\r\n\t\t\t\tvar pts = curveToPoints( _geometry, 100 );\r\n\r\n\t\t\t\tvar position = {};\r\n\t\t\t\tvar attributes = {};\r\n\t\t\t\tvar data = {};\r\n\r\n\t\t\t\tposition.itemSize = 3;\r\n\t\t\t\tposition.type = 'Float32Array';\r\n\t\t\t\tposition.array = [];\r\n\r\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\r\n\r\n\t\t\t\t\tposition.array.push( pts[ j ][ 0 ] );\r\n\t\t\t\t\tposition.array.push( pts[ j ][ 1 ] );\r\n\t\t\t\t\tposition.array.push( pts[ j ][ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattributes.position = position;\r\n\t\t\t\tdata.attributes = attributes;\r\n\r\n\t\t\t\tgeometry = { data };\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.Point:\r\n\r\n\t\t\t\tvar pt = _geometry.location;\r\n\r\n\t\t\t\tvar position = {};\r\n\t\t\t\tvar color = {};\r\n\t\t\t\tvar attributes = {};\r\n\t\t\t\tvar data = {};\r\n\r\n\t\t\t\tposition.itemSize = 3;\r\n\t\t\t\tposition.type = 'Float32Array';\r\n\t\t\t\tposition.array = [ pt[ 0 ], pt[ 1 ], pt[ 2 ] ];\r\n\r\n\t\t\t\tvar _color = _attributes.drawColor( doc );\r\n\r\n\t\t\t\tcolor.itemSize = 3;\r\n\t\t\t\tcolor.type = 'Float32Array';\r\n\t\t\t\tcolor.array = [ _color.r / 255.0, _color.g / 255.0, _color.b / 255.0 ];\r\n\r\n\t\t\t\tattributes.position = position;\r\n\t\t\t\tattributes.color = color;\r\n\t\t\t\tdata.attributes = attributes;\r\n\r\n\t\t\t\tgeometry = { data };\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.PointSet:\r\n\t\t\tcase rhino.ObjectType.Mesh:\r\n\r\n\t\t\t\tgeometry = _geometry.toThreejsJSON();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.Brep:\r\n\r\n\t\t\t\tvar faces = _geometry.faces();\r\n\t\t\t\tgeometry = [];\r\n\r\n\t\t\t\tfor ( var faceIndex = 0; faceIndex < faces.count; faceIndex ++ ) {\r\n\r\n\t\t\t\t\tvar face = faces.get( faceIndex );\r\n\t\t\t\t\tvar mesh = face.getMesh( rhino.MeshType.Any );\r\n\r\n\t\t\t\t\tif ( mesh ) {\r\n\r\n\t\t\t\t\t\tgeometry.push( mesh.toThreejsJSON() );\r\n\t\t\t\t\t\tmesh.delete();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tface.delete();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaces.delete();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.Extrusion:\r\n\r\n\t\t\t\tvar mesh = _geometry.getMesh( rhino.MeshType.Any );\r\n\r\n\t\t\t\tif ( mesh ) {\r\n\r\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\r\n\t\t\t\t\tmesh.delete();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.TextDot:\r\n\r\n\t\t\t\tgeometry = extractProperties( _geometry );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.Light:\r\n\r\n\t\t\t\tgeometry = extractProperties( _geometry );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.InstanceReference:\r\n\r\n\t\t\t\tgeometry = extractProperties( _geometry );\r\n\t\t\t\tgeometry.xform = extractProperties( _geometry.xform );\r\n\t\t\t\tgeometry.xform.array = _geometry.xform.toFloatArray( true );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase rhino.ObjectType.SubD:\r\n\r\n\t\t\t\t// TODO: precalculate resulting vertices and faces and warn on excessive results\r\n\t\t\t\t_geometry.subdivide( 3 );\r\n\t\t\t\tvar mesh = rhino.Mesh.createFromSubDControlNet( _geometry );\r\n\t\t\t\tif ( mesh ) {\r\n\r\n\t\t\t\t\tgeometry = mesh.toThreejsJSON();\r\n\t\t\t\t\tmesh.delete();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tcase rhino.ObjectType.Annotation:\r\n\t\t\t\tcase rhino.ObjectType.Hatch:\r\n\t\t\t\tcase rhino.ObjectType.ClipPlane:\r\n\t\t\t\t*/\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn( `THREE.3DMLoader: TODO: Implement ${objectType.constructor.name}` );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry ) {\r\n\r\n\t\t\tvar attributes = extractProperties( _attributes );\r\n\t\t\tattributes.geometry = extractProperties( _geometry );\r\n\r\n\t\t\tif ( _attributes.groupCount > 0 ) {\r\n\r\n\t\t\t\tattributes.groupIds = _attributes.getGroupList();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _attributes.userStringCount > 0 ) {\r\n\r\n\t\t\t\tattributes.userStrings = _attributes.getUserStrings();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattributes.drawColor = _attributes.drawColor( doc );\r\n\r\n\t\t\tobjectType = objectType.constructor.name;\r\n\t\t\tobjectType = objectType.substring( 11, objectType.length );\r\n\t\t\tattributes.geometry.objectType = objectType;\r\n\r\n\t\t\treturn { geometry, attributes, objectType };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction extractProperties( object ) {\r\n\r\n\t\tvar result = {};\r\n\r\n\t\tfor ( var property in object ) {\r\n\r\n\t\t\tif ( typeof object[ property ] !== 'function' ) {\r\n\r\n\t\t\t\tresult[ property ] = object[ property ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log( `${property}: ${object[ property ]}` );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tfunction curveToPoints( curve, pointLimit ) {\r\n\r\n\t\tvar pointCount = pointLimit;\r\n\t\tvar rc = [];\r\n\t\tvar ts = [];\r\n\r\n\t\tif ( curve instanceof rhino.LineCurve ) {\r\n\r\n\t\t\treturn [ curve.pointAtStart, curve.pointAtEnd ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( curve instanceof rhino.PolylineCurve ) {\r\n\r\n\t\t\tpointCount = curve.pointCount;\r\n\t\t\tfor ( var i = 0; i < pointCount; i ++ ) {\r\n\r\n\t\t\t\trc.push( curve.point( i ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn rc;\r\n\r\n\t\t}\r\n\r\n\t\tif ( curve instanceof rhino.PolyCurve ) {\r\n\r\n\t\t\tvar segmentCount = curve.segmentCount;\r\n\r\n\t\t\tfor ( var i = 0; i < segmentCount; i ++ ) {\r\n\r\n\t\t\t\tvar segment = curve.segmentCurve( i );\r\n\t\t\t\tvar segmentArray = curveToPoints( segment, pointCount );\r\n\t\t\t\trc = rc.concat( segmentArray );\r\n\t\t\t\tsegment.delete();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn rc;\r\n\r\n\t\t}\r\n\r\n\t\tif ( curve instanceof rhino.ArcCurve ) {\r\n\r\n\t\t\tpointCount = Math.floor( curve.angleDegrees / 5 );\r\n\t\t\tpointCount = pointCount < 1 ? 2 : pointCount;\r\n\t\t\t// alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\r\n\r\n\t\t}\r\n\r\n\t\tif ( curve instanceof rhino.NurbsCurve && curve.degree === 1 ) {\r\n\r\n\t\t\tif ( curve.segmentCount === undefined || curve.segmentCount === 1 ) {\r\n\r\n\t\t\t\treturn [ curve.pointAtStart, curve.pointAtEnd ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar domain = curve.domain;\r\n\t\tvar divisions = pointCount - 1.0;\r\n\r\n\t\tfor ( var j = 0; j < pointCount; j ++ ) {\r\n\r\n\t\t\tvar t = domain[ 0 ] + ( j / divisions ) * ( domain[ 1 ] - domain[ 0 ] );\r\n\r\n\t\t\tif ( t === domain[ 0 ] || t === domain[ 1 ] ) {\r\n\r\n\t\t\t\tts.push( t );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tan = curve.tangentAt( t );\r\n\t\t\tvar prevTan = curve.tangentAt( ts.slice( - 1 )[ 0 ] );\r\n\r\n\t\t\t// Duplicaated from THREE.Vector3\r\n\t\t\t// How to pass imports to worker?\r\n\r\n\t\t\tvar tS = tan[ 0 ] * tan[ 0 ] + tan[ 1 ] * tan[ 1 ] + tan[ 2 ] * tan[ 2 ];\r\n\t\t\tvar ptS = prevTan[ 0 ] * prevTan[ 0 ] + prevTan[ 1 ] * prevTan[ 1 ] + prevTan[ 2 ] * prevTan[ 2 ];\r\n\r\n\t\t\tvar denominator = Math.sqrt( tS * ptS );\r\n\r\n\t\t\tvar angle;\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\tangle = Math.PI / 2;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar theta = ( tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z ) / denominator;\r\n\t\t\t\tangle = Math.acos( Math.max( - 1, Math.min( 1, theta ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( angle < 0.1 ) continue;\r\n\r\n\t\t\tts.push( t );\r\n\r\n\t\t}\r\n\r\n\t\trc = ts.map( t => curve.pointAt( t ) );\r\n\t\treturn rc;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { Rhino3dmLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/3DMLoader.js","<template>\r\n    <div class=\"webglLoader3dm-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - Rhino 3DM loader\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js';\r\nimport { Rhino3dmLoader } from '@/components/jsm/loaders/3DMLoader.js';\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            controls: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tgui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.$THREE.Object3D.DefaultUp = new this.$THREE.Vector3(0, 0, 1)\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglLoader3dm-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(60, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set(26, - 40, 5)\r\n            this.scene = new this.$THREE.Scene()\r\n            var directionalLight = new this.$THREE.DirectionalLight(0xffffff)\r\n            directionalLight.position.set(0, 0, 2)\r\n            directionalLight.castShadow = true\r\n            directionalLight.intensity = 2\r\n            this.scene.add(directionalLight)\r\n            var loader = new Rhino3dmLoader()\r\n            loader.setLibraryPath('static/jsm/libs/rhino3dm/')\r\n            loader.load('static/models/3dm/Rhino_Logo.3dm', (object) => {\r\n                this.scene.add(object)\r\n                this.initGUI(object.userData.layers)\r\n            })\r\n            var width = this.$webglInnerWidth\r\n            var height = window.innerHeight\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(width, height)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.controls = new OrbitControls(this.camera, this.container)\r\n            window.addEventListener('resize', this.resize, false)\r\n        },\r\n        resize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            this.controls.update()\r\n            this.renderer.render(this.scene, this.camera)\r\n            requestAnimationFrame(this.animate)\r\n        },\r\n        initGUI(layers) {\r\n            var that = this\r\n            this.gui = new GUI({ width: 300 })\r\n            var layersControl = this.gui.addFolder('layers')\r\n            layersControl.open()\r\n            for (var i = 0; i < layers.length; i ++) {\r\n                var layer = layers[ i ]\r\n                layersControl.add(layer, 'visible').name(layer.name).onChange(function (val) {\r\n                    var name = this.object.name\r\n                    that.scene.traverse((child) => {\r\n                        if (child.userData.hasOwnProperty('attributes')) {\r\n                            if ('layerIndex' in child.userData.attributes) {\r\n                                var layerName = layers[ child.userData.attributes.layerIndex ].name\r\n                                if (layerName === name) {\r\n                                    child.visible = val\r\n                                    layer.visible = val\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoader3dm-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoader3dm.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoader3dm-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - Rhino 3DM loader\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6d2a14a4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoader3dm.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6d2a14a4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoader3dm.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoader3dm.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoader3dm.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6d2a14a4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoader3dm.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6d2a14a4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoader3dm.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}