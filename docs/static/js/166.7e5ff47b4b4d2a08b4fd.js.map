{"version":3,"sources":["webpack:///./src/components/jsm/shaders/DigitalGlitch.js","webpack:///./src/components/jsm/postprocessing/GlitchPass.js","webpack:///src/views/postprocessing/webglPostprocessingGlitch.vue","webpack:///./src/views/postprocessing/webglPostprocessingGlitch.vue?5625","webpack:///./src/views/postprocessing/webglPostprocessingGlitch.vue"],"names":["DigitalGlitch","uniforms","tDiffuse","value","tDisp","byp","amount","angle","seed","seed_x","seed_y","distortion_x","distortion_y","col_s","vertexShader","join","fragmentShader","GlitchPass","dt_size","Pass","call","this","undefined","console","error","shader","UniformsUtils","clone","generateHeightmap","material","ShaderMaterial","fsQuad","FullScreenQuad","goWild","curF","generateTrigger","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","texture","Math","random","randX","MathUtils","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","length","i","val","DataTexture","RGBFormat","FloatType","webglPostprocessingGlitch","data","camera","scene","composer","object","light","glitchPass","mounted","init","animate","methods","updateOptions","wildGlitch","document","getElementById","checked","$THREE","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","getElementsByClassName","appendChild","domElement","PerspectiveCamera","position","z","Scene","fog","Fog","Object3D","add","geometry","SphereBufferGeometry","MeshPhongMaterial","color","flatShading","mesh","Mesh","set","normalize","multiplyScalar","rotation","scale","x","y","AmbientLight","DirectionalLight","EffectComposer","addPass","RenderPass","GlitchPass_GlitchPass","addEventListener","onWindowResize","$onWindowResize","innerWidth","requestAnimationFrame","postprocessing_webglPostprocessingGlitch","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","for","_v","type","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/166.7e5ff47b4b4d2a08b4fd.js","sourcesContent":["/**\r\n * RGB Shift Shader\r\n * Shifts red and blue channels from center in opposite directions\r\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\r\n * by Tom Butterworth / http://kriss.cx/tom/\r\n *\r\n * amount: shift distance (1 is width of input)\r\n * angle: shift angle in radians\r\n */\r\n\r\nvar DigitalGlitch = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null }, //diffuse texture\r\n\t\t\"tDisp\": { value: null }, //displacement texture for digital glitch squares\r\n\t\t\"byp\": { value: 0 }, //apply the glitch ?\r\n\t\t\"amount\": { value: 0.08 },\r\n\t\t\"angle\": { value: 0.02 },\r\n\t\t\"seed\": { value: 0.02 },\r\n\t\t\"seed_x\": { value: 0.02 }, //-1,1\r\n\t\t\"seed_y\": { value: 0.02 }, //-1,1\r\n\t\t\"distortion_x\": { value: 0.5 },\r\n\t\t\"distortion_y\": { value: 0.6 },\r\n\t\t\"col_s\": { value: 0.05 }\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"void main() {\",\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\"}\"\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"uniform int byp;\", //should we apply the glitch ?\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform sampler2D tDisp;\",\r\n\r\n\t\t\"uniform float amount;\",\r\n\t\t\"uniform float angle;\",\r\n\t\t\"uniform float seed;\",\r\n\t\t\"uniform float seed_x;\",\r\n\t\t\"uniform float seed_y;\",\r\n\t\t\"uniform float distortion_x;\",\r\n\t\t\"uniform float distortion_y;\",\r\n\t\t\"uniform float col_s;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\r\n\t\t\"float rand(vec2 co){\",\r\n\t\t\"\treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\",\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\t\t\"\tif(byp<1) {\",\r\n\t\t\"\t\tvec2 p = vUv;\",\r\n\t\t\"\t\tfloat xs = floor(gl_FragCoord.x / 0.5);\",\r\n\t\t\"\t\tfloat ys = floor(gl_FragCoord.y / 0.5);\",\r\n\t\t//based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\r\n\t\t\"\t\tvec4 normal = texture2D (tDisp, p*seed*seed);\",\r\n\t\t\"\t\tif(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\",\r\n\t\t\"\t\t\tif(seed_x>0.){\",\r\n\t\t\"\t\t\t\tp.y = 1. - (p.y + distortion_y);\",\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t\telse {\",\r\n\t\t\"\t\t\t\tp.y = distortion_y;\",\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t\tif(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {\",\r\n\t\t\"\t\t\tif(seed_y>0.){\",\r\n\t\t\"\t\t\t\tp.x=distortion_x;\",\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t\telse {\",\r\n\t\t\"\t\t\t\tp.x = 1. - (p.x + distortion_x);\",\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t\tp.x+=normal.x*seed_x*(seed/5.);\",\r\n\t\t\"\t\tp.y+=normal.y*seed_y*(seed/5.);\",\r\n\t\t//base from RGB shift shader\r\n\t\t\"\t\tvec2 offset = amount * vec2( cos(angle), sin(angle));\",\r\n\t\t\"\t\tvec4 cr = texture2D(tDiffuse, p + offset);\",\r\n\t\t\"\t\tvec4 cga = texture2D(tDiffuse, p);\",\r\n\t\t\"\t\tvec4 cb = texture2D(tDiffuse, p - offset);\",\r\n\t\t\"\t\tgl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\",\r\n\t\t//add noise\r\n\t\t\"\t\tvec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);\",\r\n\t\t\"\t\tgl_FragColor = gl_FragColor+ snow;\",\r\n\t\t\"\t}\",\r\n\t\t\"\telse {\",\r\n\t\t\"\t\tgl_FragColor=texture2D (tDiffuse, vUv);\",\r\n\t\t\"\t}\",\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { DigitalGlitch };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/DigitalGlitch.js","import {\r\n\tDataTexture,\r\n\tFloatType,\r\n\tMathUtils,\r\n\tRGBFormat,\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\nimport { Pass } from \"../postprocessing/Pass.js\";\r\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\r\n\r\nvar GlitchPass = function ( dt_size ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tif ( DigitalGlitch === undefined ) console.error( \"GlitchPass relies on DigitalGlitch\" );\r\n\r\n\tvar shader = DigitalGlitch;\r\n\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\tif ( dt_size == undefined ) dt_size = 64;\r\n\r\n\r\n\tthis.uniforms[ \"tDisp\" ].value = this.generateHeightmap( dt_size );\r\n\r\n\r\n\tthis.material = new ShaderMaterial( {\r\n\t\tuniforms: this.uniforms,\r\n\t\tvertexShader: shader.vertexShader,\r\n\t\tfragmentShader: shader.fragmentShader\r\n\t} );\r\n\r\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\r\n\r\n\tthis.goWild = false;\r\n\tthis.curF = 0;\r\n\tthis.generateTrigger();\r\n\r\n};\r\n\r\nGlitchPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: GlitchPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tthis.uniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ 'seed' ].value = Math.random();//default seeding\r\n\t\tthis.uniforms[ 'byp' ].value = 0;\r\n\r\n\t\tif ( this.curF % this.randX == 0 || this.goWild == true ) {\r\n\r\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 30;\r\n\t\t\tthis.uniforms[ 'angle' ].value = MathUtils.randFloat( - Math.PI, Math.PI );\r\n\t\t\tthis.uniforms[ 'seed_x' ].value = MathUtils.randFloat( - 1, 1 );\r\n\t\t\tthis.uniforms[ 'seed_y' ].value = MathUtils.randFloat( - 1, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_x' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_y' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.curF = 0;\r\n\t\t\tthis.generateTrigger();\r\n\r\n\t\t} else if ( this.curF % this.randX < this.randX / 5 ) {\r\n\r\n\t\t\tthis.uniforms[ 'amount' ].value = Math.random() / 90;\r\n\t\t\tthis.uniforms[ 'angle' ].value = MathUtils.randFloat( - Math.PI, Math.PI );\r\n\t\t\tthis.uniforms[ 'distortion_x' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'distortion_y' ].value = MathUtils.randFloat( 0, 1 );\r\n\t\t\tthis.uniforms[ 'seed_x' ].value = MathUtils.randFloat( - 0.3, 0.3 );\r\n\t\t\tthis.uniforms[ 'seed_y' ].value = MathUtils.randFloat( - 0.3, 0.3 );\r\n\r\n\t\t} else if ( this.goWild == false ) {\r\n\r\n\t\t\tthis.uniforms[ 'byp' ].value = 1;\r\n\r\n\t\t}\r\n\r\n\t\tthis.curF ++;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\tif ( this.clear ) renderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgenerateTrigger: function () {\r\n\r\n\t\tthis.randX = MathUtils.randInt( 120, 240 );\r\n\r\n\t},\r\n\r\n\tgenerateHeightmap: function ( dt_size ) {\r\n\r\n\t\tvar data_arr = new Float32Array( dt_size * dt_size * 3 );\r\n\t\tvar length = dt_size * dt_size;\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar val = MathUtils.randFloat( 0, 1 );\r\n\t\t\tdata_arr[ i * 3 + 0 ] = val;\r\n\t\t\tdata_arr[ i * 3 + 1 ] = val;\r\n\t\t\tdata_arr[ i * 3 + 2 ] = val;\r\n\r\n\t\t}\r\n\r\n\t\treturn new DataTexture( data_arr, dt_size, dt_size, RGBFormat, FloatType );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { GlitchPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/GlitchPass.js","<template>\r\n    <div class=\"webglPostprocessingGlitch-container\">\r\n        <div id=\"info\">\r\n\t\t\t<label for=\"dotScreen\">Glitch me wild:</label><input id=\"wildGlitch\" type=\"checkbox\"/><br />\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { GlitchPass } from '@/components/jsm/postprocessing/GlitchPass.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            composer: null,\r\n            object: null,\r\n            light: null,\r\n\t\t\tglitchPass: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        updateOptions() {\r\n            var wildGlitch = document.getElementById('wildGlitch')\r\n            this.glitchPass.goWild = wildGlitch.checked\r\n        },\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglPostprocessingGlitch-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            this.camera = new this.$THREE.PerspectiveCamera(70, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.z = 400\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.fog = new this.$THREE.Fog(0x000000, 1, 1000)\r\n            this.object = new this.$THREE.Object3D()\r\n            this.scene.add(this.object)\r\n            var geometry = new this.$THREE.SphereBufferGeometry(1, 4, 4)\r\n            for (var i = 0; i < 100; i ++) {\r\n                var material = new this.$THREE.MeshPhongMaterial({ color: 0xffffff * Math.random(), flatShading: true })\r\n                var mesh = new this.$THREE.Mesh(geometry, material)\r\n                mesh.position.set(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5).normalize()\r\n                mesh.position.multiplyScalar(Math.random() * 400)\r\n                mesh.rotation.set(Math.random() * 2, Math.random() * 2, Math.random() * 2)\r\n                mesh.scale.x = mesh.scale.y = mesh.scale.z = Math.random() * 50\r\n                this.object.add(mesh)\r\n            }\r\n            this.scene.add(new this.$THREE.AmbientLight(0x222222))\r\n            this.light = new this.$THREE.DirectionalLight(0xffffff)\r\n            this.light.position.set(1, 1, 1)\r\n            this.scene.add(this.light)\r\n            // postprocessing\r\n            this.composer = new EffectComposer(this.renderer)\r\n            this.composer.addPass(new RenderPass(this.scene, this.camera))\r\n            this.glitchPass = new GlitchPass()\r\n            this.composer.addPass(this.glitchPass)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            var wildGlitchOption = document.getElementById('wildGlitch')\r\n            wildGlitchOption.addEventListener('change', this.updateOptions)\r\n            this.updateOptions()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.composer.setSize(window.innerWidth - 281, window.innerHeight)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.object.rotation.x += 0.005\r\n            this.object.rotation.y += 0.01\r\n            this.composer.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglPostprocessingGlitch-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/postprocessing/webglPostprocessingGlitch.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglPostprocessingGlitch-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('label',{attrs:{\"for\":\"dotScreen\"}},[_vm._v(\"Glitch me wild:\")]),_c('input',{attrs:{\"id\":\"wildGlitch\",\"type\":\"checkbox\"}}),_c('br')])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3c024449\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/postprocessing/webglPostprocessingGlitch.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3c024449\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglPostprocessingGlitch.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessingGlitch.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessingGlitch.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3c024449\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglPostprocessingGlitch.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3c024449\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/postprocessing/webglPostprocessingGlitch.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}