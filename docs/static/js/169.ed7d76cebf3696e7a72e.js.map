{"version":3,"sources":["webpack:///src/views/vr/webxrVrHaptics.vue","webpack:///./src/views/vr/webxrVrHaptics.vue?f352","webpack:///./src/views/vr/webxrVrHaptics.vue"],"names":["webxrVrHaptics","data","container","camera","scene","renderer","controller1","controller2","controllerGrip1","controllerGrip2","box","controllers","oscillators","controls","group","audioCtx","mounted","this","$THREE","Box3","init","animate","methods","initAudio","createOscillator","oscillator","real","Array","from","length","_","n","Math","PI","sin","imag","map","setPeriodicWave","createPeriodicWave","Float32Array","start","window","AudioContext","webkitAudioContext","push","_this","document","createElement","getElementsByClassName","appendChild","Scene","background","Color","PerspectiveCamera","$webglInnerWidth","innerHeight","position","set","OrbitControls","target","update","floorGeometry","PlaneBufferGeometry","floorMaterial","MeshStandardMaterial","color","roughness","metalness","floor","Mesh","rotation","x","receiveShadow","add","HemisphereLight","light","DirectionalLight","castShadow","shadow","top","bottom","right","left","mapSize","Group","z","i","intensity","geometry","BoxBufferGeometry","material","object","userData","index","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","shadowMap","enabled","xr","domElement","VRButton","createButton","getElementById","addEventListener","getController","controllerModelFactory","XRControllerModelFactory","getControllerGrip","controllerConnected","controllerDisconnected","createControllerModel","onWindowResize","evt","gamepad","grip","colliding","playing","findIndex","o","controller","splice","$onWindowResize","setAnimationLoop","render","handleCollisions","g","_controllers$g","sphere","radius","center","hapticActuators","children","child","setFromObject","intersectsSphere","emissive","b","scale","setScalar","random","pulse","frequency","value","connect","destination","disconnect","vr_webxrVrHaptics","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/169.ed7d76cebf3696e7a72e.js","sourcesContent":["<template>\r\n    <div class=\"webxrVrHaptics-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> vr - haptics\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { VRButton } from '@/components/jsm/webxr/VRButton.js'\r\nimport { XRControllerModelFactory } from '@/components/jsm/webxr/XRControllerModelFactory.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            controller1: null,\r\n            controller2: null,\r\n            controllerGrip1: null,\r\n            controllerGrip2: null,\r\n\t\t\tbox: null,\r\n\t\t\tcontrollers: [],\r\n\t\t\toscillators: [],\r\n            controls: null,\r\n            group: null,\r\n\t\t\taudioCtx: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.box = new this.$THREE.Box3()\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        initAudio() {\r\n            if (this.audioCtx !== null) {\r\n                return\r\n            }\r\n            this.audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n            function createOscillator() {\r\n                var oscillator = this.audioCtx.createOscillator()\r\n                var real = Array.from({ length: 8192 }, (_, n) => (\r\n                    n === 0 ?\r\n                        0 :\r\n                        4 / (n * Math.PI) * Math.sin(Math.PI * n * 0.18)\r\n            ))\r\n                var imag = real.map(() => 0)\r\n                oscillator.setPeriodicWave(this.audioCtx.createPeriodicWave(Float32Array.from(real), Float32Array.from(imag)))\r\n                oscillator.start()\r\n                return oscillator\r\n            }\r\n            this.oscillators.push(createOscillator())\r\n            this.oscillators.push(createOscillator())\r\n            window.this.oscillators = this.oscillators\r\n        },\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webxrVrHaptics-container')[0].appendChild(this.container)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x808080)\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 0.1, 10)\r\n            this.camera.position.set(0, 1.6, 3)\r\n            this.controls = new OrbitControls(this.camera, this.container)\r\n            this.controls.target.set(0, 1.6, 0)\r\n            this.controls.update()\r\n            var floorGeometry = new this.$THREE.PlaneBufferGeometry(4, 4)\r\n            var floorMaterial = new this.$THREE.MeshStandardMaterial({\r\n                color: 0xeeeeee,\r\n                roughness: 1.0,\r\n                metalness: 0.0\r\n            })\r\n            var floor = new this.$THREE.Mesh(floorGeometry, floorMaterial)\r\n            floor.rotation.x = - Math.PI / 2\r\n            floor.receiveShadow = true\r\n            this.scene.add(floor)\r\n            this.scene.add(new this.$THREE.HemisphereLight(0x808080, 0x606060))\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(0, 6, 0)\r\n            light.castShadow = true\r\n            light.shadow.camera.top = 2\r\n            light.shadow.camera.bottom = - 2\r\n            light.shadow.camera.right = 2\r\n            light.shadow.camera.left = - 2\r\n            light.shadow.mapSize.set(4096, 4096)\r\n            this.scene.add(light)\r\n            this.group = new this.$THREE.Group()\r\n            this.group.position.z = - 0.5\r\n            this.scene.add(this.group)\r\n            for (var i = 0; i < 10; i ++) {\r\n                var intensity = (i + 1) / 10\r\n                var w = 0.1\r\n                var h = 0.1\r\n                var minH = 1\r\n                var geometry = new this.$THREE.BoxBufferGeometry(w, h * i + minH, w)\r\n                var material = new this.$THREE.MeshStandardMaterial({\r\n                    color: new this.$THREE.Color(intensity, 0.1, 0.1),\r\n                    roughness: 0.7,\r\n                    metalness: 0.0\r\n                })\r\n                var object = new this.$THREE.Mesh(geometry, material)\r\n                object.position.x = (i - 5) * (w + 0.05)\r\n                object.castShadow = true\r\n                object.receiveShadow = true\r\n                object.userData = {\r\n                    index: i + 1,\r\n                    intensity: intensity\r\n                }\r\n                this.group.add(object)\r\n            }\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.xr.enabled = true\r\n            this.container.appendChild(this.renderer.domElement)\r\n            document.getElementsByClassName('webxrVrHaptics-container')[0].appendChild(VRButton.createButton(this.renderer))\r\n            document.getElementById(\"VRButton\").addEventListener(\"click\", () => {\r\n                this.initAudio()\r\n            })\r\n            // controllers\r\n            this.controller1 = this.renderer.xr.getController(0)\r\n            this.scene.add(this.controller1)\r\n            this.controller2 = this.renderer.xr.getController(1)\r\n            this.scene.add(this.controller2)\r\n            var controllerModelFactory = new XRControllerModelFactory()\r\n            this.controllerGrip1 = this.renderer.xr.getControllerGrip(0)\r\n            this.controllerGrip1.addEventListener(\"connected\", this.controllerConnected)\r\n            this.controllerGrip1.addEventListener(\"disconnected\", this.controllerDisconnected)\r\n            this.controllerGrip1.add(controllerModelFactory.createControllerModel(this.controllerGrip1))\r\n            this.scene.add(this.controllerGrip1)\r\n            this.controllerGrip2 = this.renderer.xr.getControllerGrip(1)\r\n            this.controllerGrip2.addEventListener(\"connected\", this.controllerConnected)\r\n            this.controllerGrip2.addEventListener(\"disconnected\", this.controllerDisconnected)\r\n            this.controllerGrip2.add(controllerModelFactory.createControllerModel(this.controllerGrip2))\r\n            this.scene.add(this.controllerGrip2)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        controllerConnected(evt) {\r\n            this.controllers.push({\r\n                gamepad: evt.data.gamepad,\r\n                grip: evt.target,\r\n                colliding: false,\r\n                playing: false\r\n            })\r\n        },\r\n        controllerDisconnected(evt) {\r\n            var index = this.controllers.findIndex(o => o.controller === evt.target)\r\n            if (index !== - 1) {\r\n                this.controllers.splice(index, 1)\r\n            }\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            this.renderer.setAnimationLoop(this.render)\r\n        },\r\n        handleCollisions() {\r\n            for (var g = 0; g < this.controllers.length; g ++) {\r\n                this.controllers[ g ].colliding = false\r\n                var { grip, gamepad } = this.controllers[ g ]\r\n                var sphere = {\r\n                    radius: 0.03,\r\n                    center: grip.position\r\n                }\r\n                if (\"hapticActuators\" in gamepad && gamepad.hapticActuators != null && gamepad.hapticActuators.length > 0) {\r\n                    for (var i = 0; i < group.children.length; i ++) {\r\n                        var child = group.children[ i ]\r\n                        box.setFromObject(child)\r\n                        if (box.intersectsSphere(sphere)) {\r\n                            child.material.emissive.b = 1\r\n                            var intensity = child.userData.index / group.children.length\r\n                            child.scale.setScalar(1 + Math.random() * 0.1 * intensity)\r\n                            gamepad.hapticActuators[ 0 ].pulse(intensity, 100)\r\n                            oscillators[ g ].frequency.value = 100 + intensity * 60\r\n                            this.controllers[ g ].colliding = true\r\n                        } else {\r\n                            child.material.emissive.b = 0\r\n                            child.scale.setScalar(1)\r\n                        }\r\n                    }\r\n                }\r\n                if (this.controllers[ g ].colliding) {\r\n                    if (! this.controllers[ g ].playing) {\r\n                        this.controllers[ g ].playing = true\r\n                        oscillators[ g ].connect(this.audioCtx.destination)\r\n                    }\r\n                } else {\r\n                    if (this.controllers[ g ].playing) {\r\n                        this.controllers[ g ].playing = false\r\n                        oscillators[ g ].disconnect(this.audioCtx.destination)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        render() {\r\n            this.handleCollisions()\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webxrVrHaptics-container {\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/vr/webxrVrHaptics.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webxrVrHaptics-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" vr - haptics\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6a73e952\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/vr/webxrVrHaptics.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6a73e952\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webxrVrHaptics.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webxrVrHaptics.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webxrVrHaptics.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6a73e952\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webxrVrHaptics.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6a73e952\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/vr/webxrVrHaptics.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}