{"version":3,"sources":["webpack:///./src/components/jsm/physics/AmmoPhysics.js","webpack:///src/views/physics/physicsAmmoInstancing.vue","webpack:///./src/views/physics/physicsAmmoInstancing.vue?59f1","webpack:///./src/views/physics/physicsAmmoInstancing.vue"],"names":["_callee","AmmoLib","frameRate","collisionConfiguration","dispatcher","broadphase","solver","world","worldTransform","getShape","meshes","meshMap","addMesh","handleMesh","handleInstancedMesh","setMeshPosition","lastTime","step","regeneratorRuntime","wrap","_context","prev","next","time","performance","now","delta","stepSimulation","i","l","length","mesh","isInstancedMesh","array","instanceMatrix","bodies","get","j","getMotionState","getWorldTransform","compose","getOrigin","getRotation","needsUpdate","isMesh","position","quaternion","set","x","y","z","w","index","arguments","undefined","body","setAngularVelocity","btVector3","setLinearVelocity","setIdentity","setOrigin","setWorldTransform","mass","shape","count","transform","btTransform","setFromOpenGLMatrix","slice","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","btRigidBody","addRigidBody","push","setUsage","setRotation","btQuaternion","geometry","parameters","type","sx","width","sy","height","sz","depth","btBoxShape","setMargin","radius","btSphereShape","window","console","error","abrupt","Ammo","sent","btDefaultCollisionConfiguration","btCollisionDispatcher","btDbvtBroadphase","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","WeakMap","setInterval","stop","this","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","physicsAmmoInstancing","data","camera","scene","renderer","stats","physics","boxes","spheres","mounted","init","methods","_this","mark","hemiLight","dirLight","floor","material","matrix","color","geometryBox","geometrySphere","controls","AmmoPhysics","$THREE","Vector3","PerspectiveCamera","$webglInnerWidth","innerHeight","lookAt","Scene","background","Color","HemisphereLight","intensity","add","DirectionalLight","castShadow","shadow","zoom","Mesh","BoxBufferGeometry","ShadowMaterial","receiveShadow","MeshLambertMaterial","Matrix4","InstancedMesh","setPosition","Math","random","setMatrixAt","setColorAt","setHex","IcosahedronBufferGeometry","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","outputEncoding","sRGBEncoding","document","getElementsByClassName","appendChild","domElement","$Stats","dom","style","left","OrbitControls","target","update","animate","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","render","physics_physicsAmmoInstancing","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/170.37c1b23c247c94393dac.js","sourcesContent":["async function AmmoPhysics() {\r\n\r\n\tif ( 'Ammo' in window === false ) {\r\n\r\n\t\tconsole.error( 'AmmoPhysics: Couldn\\'t find Ammo.js' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst AmmoLib = await Ammo(); // eslint-disable-line no-undef\r\n\r\n\tconst frameRate = 60;\r\n\r\n\tconst collisionConfiguration = new AmmoLib.btDefaultCollisionConfiguration();\r\n\tconst dispatcher = new AmmoLib.btCollisionDispatcher( collisionConfiguration );\r\n\tconst broadphase = new AmmoLib.btDbvtBroadphase();\r\n\tconst solver = new AmmoLib.btSequentialImpulseConstraintSolver();\r\n\tconst world = new AmmoLib.btDiscreteDynamicsWorld( dispatcher, broadphase, solver, collisionConfiguration );\r\n\tworld.setGravity( new AmmoLib.btVector3( 0, - 9.8, 0 ) );\r\n\r\n\tconst worldTransform = new AmmoLib.btTransform();\r\n\r\n\t//\r\n\r\n\tfunction getShape( geometry ) {\r\n\r\n\t\tconst parameters = geometry.parameters;\r\n\r\n\t\t// TODO change type to is*\r\n\r\n\t\tif ( geometry.type === 'BoxBufferGeometry' ) {\r\n\r\n\t\t\tconst sx = parameters.width !== undefined ? parameters.width / 2 : 0.5;\r\n\t\t\tconst sy = parameters.height !== undefined ? parameters.height / 2 : 0.5;\r\n\t\t\tconst sz = parameters.depth !== undefined ? parameters.depth / 2 : 0.5;\r\n\r\n\t\t\tconst shape = new AmmoLib.btBoxShape( new AmmoLib.btVector3( sx, sy, sz ) );\r\n\t\t\tshape.setMargin( 0.05 );\r\n\r\n\t\t\treturn shape;\r\n\r\n\t\t} else if ( geometry.type === 'SphereBufferGeometry' || geometry.type === 'IcosahedronBufferGeometry' ) {\r\n\r\n\t\t\tconst radius = parameters.radius !== undefined ? parameters.radius : 1;\r\n\r\n\t\t\tconst shape = new AmmoLib.btSphereShape( radius );\r\n\t\t\tshape.setMargin( 0.05 );\r\n\r\n\t\t\treturn shape;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tconst meshes = [];\r\n\tconst meshMap = new WeakMap();\r\n\r\n\tfunction addMesh( mesh, mass = 0 ) {\r\n\r\n\t\tconst shape = getShape( mesh.geometry );\r\n\r\n\t\tif ( shape !== null ) {\r\n\r\n\t\t\tif ( mesh.isInstancedMesh ) {\r\n\r\n\t\t\t\thandleInstancedMesh( mesh, mass, shape );\r\n\r\n\t\t\t} else if ( mesh.isMesh ) {\r\n\r\n\t\t\t\thandleMesh( mesh, mass, shape );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleMesh( mesh, mass, shape ) {\r\n\r\n\t\tconst position = mesh.position;\r\n\t\tconst quaternion = mesh.quaternion;\r\n\r\n\t\tconst transform = new AmmoLib.btTransform();\r\n\t\ttransform.setIdentity();\r\n\t\ttransform.setOrigin( new AmmoLib.btVector3( position.x, position.y, position.z ) );\r\n\t\ttransform.setRotation( new AmmoLib.btQuaternion( quaternion.x, quaternion.y, quaternion.z, quaternion.w ) );\r\n\r\n\t\tconst motionState = new AmmoLib.btDefaultMotionState( transform );\r\n\r\n\t\tconst localInertia = new AmmoLib.btVector3( 0, 0, 0 );\r\n\t\tshape.calculateLocalInertia( mass, localInertia );\r\n\r\n\t\tconst rbInfo = new AmmoLib.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\r\n\r\n\t\tconst body = new AmmoLib.btRigidBody( rbInfo );\r\n\t\t// body.setFriction( 4 );\r\n\t\tworld.addRigidBody( body );\r\n\r\n\t\tif ( mass > 0 ) {\r\n\r\n\t\t\tmeshes.push( mesh );\r\n\t\t\tmeshMap.set( mesh, body );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction handleInstancedMesh( mesh, mass, shape ) {\r\n\r\n\t\tconst array = mesh.instanceMatrix.array;\r\n\r\n\t\tconst bodies = [];\r\n\r\n\t\tfor ( let i = 0; i < mesh.count; i ++ ) {\r\n\r\n\t\t\tconst index = i * 16;\r\n\r\n\t\t\tconst transform = new AmmoLib.btTransform();\r\n\t\t\ttransform.setFromOpenGLMatrix( array.slice( index, index + 16 ) );\r\n\r\n\t\t\tconst motionState = new AmmoLib.btDefaultMotionState( transform );\r\n\r\n\t\t\tconst localInertia = new AmmoLib.btVector3( 0, 0, 0 );\r\n\t\t\tshape.calculateLocalInertia( mass, localInertia );\r\n\r\n\t\t\tconst rbInfo = new AmmoLib.btRigidBodyConstructionInfo( mass, motionState, shape, localInertia );\r\n\r\n\t\t\tconst body = new AmmoLib.btRigidBody( rbInfo );\r\n\t\t\tworld.addRigidBody( body );\r\n\r\n\t\t\tbodies.push( body );\r\n\r\n\t\t}\r\n\r\n\t\tif ( mass > 0 ) {\r\n\r\n\t\t\tmesh.instanceMatrix.setUsage( 35048 ); // THREE.DynamicDrawUsage = 35048\r\n\t\t\tmeshes.push( mesh );\r\n\r\n\t\t\tmeshMap.set( mesh, bodies );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction setMeshPosition( mesh, position, index = 0 ) {\r\n\r\n\t\tif ( mesh.isInstancedMesh ) {\r\n\r\n\t\t\tconst bodies = meshMap.get( mesh );\r\n\t\t\tconst body = bodies[ index ];\r\n\r\n\t\t\tbody.setAngularVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\r\n\t\t\tbody.setLinearVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\r\n\r\n\t\t\tworldTransform.setIdentity();\r\n\t\t\tworldTransform.setOrigin( new AmmoLib.btVector3( position.x, position.y, position.z ) );\r\n\t\t\tbody.setWorldTransform( worldTransform );\r\n\r\n\t\t} else if ( mesh.isMesh ) {\r\n\r\n\t\t\tconst body = meshMap.get( mesh );\r\n\r\n\t\t\tbody.setAngularVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\r\n\t\t\tbody.setLinearVelocity( new AmmoLib.btVector3( 0, 0, 0 ) );\r\n\r\n\t\t\tworldTransform.setIdentity();\r\n\t\t\tworldTransform.setOrigin( new AmmoLib.btVector3( position.x, position.y, position.z ) );\r\n\t\t\tbody.setWorldTransform( worldTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tlet lastTime = 0;\r\n\r\n\tfunction step() {\r\n\r\n\t\tconst time = performance.now();\r\n\r\n\t\tif ( lastTime > 0 ) {\r\n\r\n\t\t\tconst delta = ( time - lastTime ) / 1000;\r\n\r\n\t\t\t// console.time( 'world.step' );\r\n\t\t\tworld.stepSimulation( delta, 10 );\r\n\t\t\t// console.timeEnd( 'world.step' );\r\n\r\n\t\t}\r\n\r\n\t\tlastTime = time;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst mesh = meshes[ i ];\r\n\r\n\t\t\tif ( mesh.isInstancedMesh ) {\r\n\r\n\t\t\t\tconst array = mesh.instanceMatrix.array;\r\n\t\t\t\tconst bodies = meshMap.get( mesh );\r\n\r\n\t\t\t\tfor ( let j = 0; j < bodies.length; j ++ ) {\r\n\r\n\t\t\t\t\tconst body = bodies[ j ];\r\n\r\n\t\t\t\t\tconst motionState = body.getMotionState();\r\n\t\t\t\t\tmotionState.getWorldTransform( worldTransform );\r\n\r\n\t\t\t\t\tconst position = worldTransform.getOrigin();\r\n\t\t\t\t\tconst quaternion = worldTransform.getRotation();\r\n\r\n\t\t\t\t\tcompose( position, quaternion, array, j * 16 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.instanceMatrix.needsUpdate = true;\r\n\r\n\t\t\t} else if ( mesh.isMesh ) {\r\n\r\n\t\t\t\tconst body = meshMap.get( mesh );\r\n\r\n\t\t\t\tconst motionState = body.getMotionState();\r\n\t\t\t\tmotionState.getWorldTransform( worldTransform );\r\n\r\n\t\t\t\tconst position = worldTransform.getOrigin();\r\n\t\t\t\tconst quaternion = worldTransform.getRotation();\r\n\t\t\t\tmesh.position.set( position.x(), position.y(), position.z() );\r\n\t\t\t\tmesh.quaternion.set( quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// animate\r\n\r\n\tsetInterval( step, 1000 / frameRate );\r\n\r\n\treturn {\r\n\t\taddMesh: addMesh,\r\n\t\tsetMeshPosition: setMeshPosition\r\n\t\t// addCompoundMesh\r\n\t};\r\n\r\n}\r\n\r\nfunction compose( position, quaternion, array, index ) {\r\n\r\n\tconst x = quaternion.x(), y = quaternion.y(), z = quaternion.z(), w = quaternion.w();\r\n\tconst x2 = x + x, y2 = y + y, z2 = z + z;\r\n\tconst xx = x * x2, xy = x * y2, xz = x * z2;\r\n\tconst yy = y * y2, yz = y * z2, zz = z * z2;\r\n\tconst wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\tarray[ index + 0 ] = ( 1 - ( yy + zz ) );\r\n\tarray[ index + 1 ] = ( xy + wz );\r\n\tarray[ index + 2 ] = ( xz - wy );\r\n\tarray[ index + 3 ] = 0;\r\n\r\n\tarray[ index + 4 ] = ( xy - wz );\r\n\tarray[ index + 5 ] = ( 1 - ( xx + zz ) );\r\n\tarray[ index + 6 ] = ( yz + wx );\r\n\tarray[ index + 7 ] = 0;\r\n\r\n\tarray[ index + 8 ] = ( xz + wy );\r\n\tarray[ index + 9 ] = ( yz - wx );\r\n\tarray[ index + 10 ] = ( 1 - ( xx + yy ) );\r\n\tarray[ index + 11 ] = 0;\r\n\r\n\tarray[ index + 12 ] = position.x();\r\n\tarray[ index + 13 ] = position.y();\r\n\tarray[ index + 14 ] = position.z();\r\n\tarray[ index + 15 ] = 1;\r\n\r\n}\r\n\r\nexport { AmmoPhysics };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/physics/AmmoPhysics.js","<template>\r\n    <div class=\"physicsAmmoInstancing-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> physics - ammo.js instancing\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { AmmoPhysics } from '@/components/jsm/physics/AmmoPhysics.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            stats: null,\r\n            physics: null,\r\n            position: null,\r\n            boxes: null,\r\n            spheres: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    methods: {\r\n        async init() {\r\n            this.physics = await AmmoPhysics()\r\n            this.position = new this.$THREE.Vector3()\r\n            //\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 0.1, 100)\r\n            this.camera.position.set(- 1, 1.5, 2)\r\n            this.camera.lookAt(0, 0.5, 0)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x666666)\r\n            var hemiLight = new this.$THREE.HemisphereLight()\r\n            hemiLight.intensity = 0.35\r\n            this.scene.add(hemiLight)\r\n            var dirLight = new this.$THREE.DirectionalLight()\r\n            dirLight.position.set(5, 5, 5)\r\n            dirLight.castShadow = true\r\n            dirLight.shadow.camera.zoom = 2\r\n            this.scene.add(dirLight)\r\n            var floor = new this.$THREE.Mesh(\r\n                new this.$THREE.BoxBufferGeometry(10, 5, 10),\r\n                new this.$THREE.ShadowMaterial({ color: 0x111111 })\r\n            )\r\n            floor.position.y = - 2.5\r\n            floor.receiveShadow = true\r\n            this.scene.add(floor)\r\n            this.physics.addMesh(floor)\r\n            //\r\n            var material = new this.$THREE.MeshLambertMaterial()\r\n            var matrix = new this.$THREE.Matrix4()\r\n            var color = new this.$THREE.Color()\r\n            // Boxes\r\n            var geometryBox = new this.$THREE.BoxBufferGeometry(0.1, 0.1, 0.1)\r\n            this.boxes = new this.$THREE.InstancedMesh(geometryBox, material, 100)\r\n            this.boxes.castShadow = true\r\n            this.boxes.receiveShadow = true\r\n            this.scene.add(this.boxes)\r\n            for (var i = 0; i < this.boxes.count; i ++) {\r\n                matrix.setPosition(Math.random() - 0.5, Math.random() * 2, Math.random() - 0.5)\r\n                this.boxes.setMatrixAt(i, matrix)\r\n                this.boxes.setColorAt(i, color.setHex(0xffffff * Math.random()))\r\n            }\r\n            this.physics.addMesh(this.boxes, 1)\r\n            // Spheres\r\n            var geometrySphere = new this.$THREE.IcosahedronBufferGeometry(0.075, 3)\r\n            this.spheres = new this.$THREE.InstancedMesh(geometrySphere, material, 100)\r\n            this.spheres.castShadow = true\r\n            this.spheres.receiveShadow = true\r\n            this.scene.add(this.spheres)\r\n            for (var i = 0; i < this.spheres.count; i ++) {\r\n                matrix.setPosition(Math.random() - 0.5, Math.random() * 2, Math.random() - 0.5)\r\n                this.spheres.setMatrixAt(i, matrix)\r\n                this.spheres.setColorAt(i, color.setHex(0xffffff * Math.random()))\r\n            }\r\n            this.physics.addMesh(this.spheres, 1)\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            document.getElementsByClassName('physicsAmmoInstancing-container')[0].appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('physicsAmmoInstancing-container')[0].appendChild(this.stats.dom)\r\n            //\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.target.y = 0.5\r\n            controls.update()\r\n            this.animate()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            //\r\n            var index = Math.floor(Math.random() * this.boxes.count)\r\n            this.position.set(0, Math.random() + 1, 0)\r\n            this.physics.setMeshPosition(this.boxes, this.position, index)\r\n            //\r\n            index = Math.floor(Math.random() * this.spheres.count)\r\n            this.position.set(0, Math.random() + 1, 0)\r\n            this.physics.setMeshPosition(this.spheres, this.position, index)\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.update()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.physicsAmmoInstancing-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/physics/physicsAmmoInstancing.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"physicsAmmoInstancing-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" physics - ammo.js instancing\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-69f02276\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/physics/physicsAmmoInstancing.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-69f02276\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./physicsAmmoInstancing.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./physicsAmmoInstancing.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./physicsAmmoInstancing.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-69f02276\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./physicsAmmoInstancing.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-69f02276\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/physics/physicsAmmoInstancing.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}