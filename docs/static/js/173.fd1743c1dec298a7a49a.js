webpackJsonp([173],{OblE:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={data:function(){return{vshader:null,fshader:null,container:null,stats:null,camera:null,scene:null,renderer:null,geometry:null,material:null,mesh:null}},mounted:function(){this.vshader="\n            precision highp float;\n            uniform mat4 modelViewMatrix;\n            uniform mat4 projectionMatrix;\n            uniform float time;\n            attribute vec3 position;\n            attribute vec2 uv;\n            attribute vec3 translate;\n            varying vec2 vUv;\n            varying float vScale;\n            void main() {\n                vec4 mvPosition = modelViewMatrix * vec4( translate, 1.0 );\n                vec3 trTime = vec3(translate.x + time,translate.y + time,translate.z + time);\n                float scale =  sin( trTime.x * 2.1 ) + sin( trTime.y * 3.2 ) + sin( trTime.z * 4.3 );\n                vScale = scale;\n                scale = scale * 10.0 + 10.0;\n                mvPosition.xyz += position * scale;\n                vUv = uv;\n                gl_Position = projectionMatrix * mvPosition;\n            }",this.fshader="\n            precision highp float;\n            uniform sampler2D map;\n            varying vec2 vUv;\n            varying float vScale;\n            // HSL to RGB Convertion helpers\n            vec3 HUEtoRGB(float H){\n                H = mod(H,1.0);\n                float R = abs(H * 6.0 - 3.0) - 1.0;\n                float G = 2.0 - abs(H * 6.0 - 2.0);\n                float B = 2.0 - abs(H * 6.0 - 4.0);\n                return clamp(vec3(R,G,B),0.0,1.0);\n            }\n            vec3 HSLtoRGB(vec3 HSL){\n                vec3 RGB = HUEtoRGB(HSL.x);\n                float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;\n                return (RGB - 0.5) * C + HSL.z;\n            }\n            void main() {\n                vec4 diffuseColor = texture2D( map, vUv );\n                gl_FragColor = vec4( diffuseColor.xyz * HSLtoRGB(vec3(vScale/5.0, 1.0, 0.5)), diffuseColor.w );\n\n                if ( diffuseColor.w < 0.5 ) discard;\n            }",this.init()&&this.animate()},methods:{init:function(){if(this.renderer=new this.$THREE.WebGLRenderer,!1===this.renderer.capabilities.isWebGL2&&!1===this.renderer.extensions.has("ANGLE_instanced_arrays"))return document.getElementById("notSupported").style.display="",!1;this.container=document.createElement("div"),document.getElementsByClassName("webglBuffergeometryInstancingBillboards-container")[0].appendChild(this.container),this.camera=new this.$THREE.PerspectiveCamera(50,this.$webglInnerWidth/window.innerHeight,1,5e3),this.camera.position.z=1400,this.scene=new this.$THREE.Scene;var e=new this.$THREE.CircleBufferGeometry(1,6);this.geometry=new this.$THREE.InstancedBufferGeometry,this.geometry.index=e.index,this.geometry.attributes=e.attributes;for(var t=new Float32Array(225e3),n=0,i=0;n<75e3;n++,i+=3)t[i+0]=2*Math.random()-1,t[i+1]=2*Math.random()-1,t[i+2]=2*Math.random()-1;return this.geometry.setAttribute("translate",new this.$THREE.InstancedBufferAttribute(t,3)),this.material=new this.$THREE.RawShaderMaterial({uniforms:{map:{value:(new this.$THREE.TextureLoader).load("static/textures/sprites/circle.png")},time:{value:0}},vertexShader:this.vshader,fragmentShader:this.fshader,depthTest:!0,depthWrite:!0}),this.mesh=new this.$THREE.Mesh(this.geometry,this.material),this.mesh.scale.set(500,500,500),this.scene.add(this.mesh),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement),this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom),window.addEventListener("resize",this.onWindowResize,!1),!0},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){var e=5e-4*performance.now();this.material.uniforms.time.value=e,this.mesh.rotation.x=.2*e,this.mesh.rotation.y=.4*e,this.renderer.render(this.scene,this.camera)}}},r={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webglBuffergeometryInstancingBillboards-container"},[t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" - instanced circle billboards - colors\n        "),t("div",{staticStyle:{display:"none"},attrs:{id:"notSupported"}},[this._v("Sorry, your graphics card + browser does not support hardware instancing")])])])}]};var s=n("VU/8")(i,r,!1,function(e){n("RntE")},"data-v-68ca0ef6",null);t.default=s.exports},RntE:function(e,t){}});
//# sourceMappingURL=173.fd1743c1dec298a7a49a.js.map