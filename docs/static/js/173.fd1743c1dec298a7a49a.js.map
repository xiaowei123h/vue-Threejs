{"version":3,"sources":["webpack:///src/views/buffergeometry/webglBuffergeometryInstancingBillboards.vue","webpack:///./src/views/buffergeometry/webglBuffergeometryInstancingBillboards.vue?3058","webpack:///./src/views/buffergeometry/webglBuffergeometryInstancingBillboards.vue"],"names":["webglBuffergeometryInstancingBillboards","data","vshader","fshader","container","stats","camera","scene","renderer","geometry","material","mesh","mounted","this","init","animate","methods","$THREE","WebGLRenderer","capabilities","isWebGL2","extensions","has","document","getElementById","style","display","createElement","getElementsByClassName","appendChild","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","z","Scene","circleGeometry","CircleBufferGeometry","InstancedBufferGeometry","index","attributes","translateArray","Float32Array","particleCount","i","i3","Math","random","setAttribute","InstancedBufferAttribute","RawShaderMaterial","uniforms","map","value","TextureLoader","load","time","vertexShader","fragmentShader","depthTest","depthWrite","Mesh","scale","set","add","setPixelRatio","devicePixelRatio","setSize","domElement","$Stats","dom","left","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","render","update","performance","now","rotation","x","y","buffergeometry_webglBuffergeometryInstancingBillboards","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","staticStyle","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/173.fd1743c1dec298a7a49a.js","sourcesContent":["<template>\r\n    <div class=\"webglBuffergeometryInstancingBillboards-container\">\r\n        <div id=\"info\">\r\n            <a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - instanced circle billboards - colors\r\n            <div id=\"notSupported\" style=\"display:none\">Sorry, your graphics card + browser does not support hardware instancing</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            vshader: null,\r\n            fshader: null,\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            geometry: null,\r\n            material: null,\r\n            mesh: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.vshader = `\r\n            precision highp float;\r\n            uniform mat4 modelViewMatrix;\r\n            uniform mat4 projectionMatrix;\r\n            uniform float time;\r\n            attribute vec3 position;\r\n            attribute vec2 uv;\r\n            attribute vec3 translate;\r\n            varying vec2 vUv;\r\n            varying float vScale;\r\n            void main() {\r\n                vec4 mvPosition = modelViewMatrix * vec4( translate, 1.0 );\r\n                vec3 trTime = vec3(translate.x + time,translate.y + time,translate.z + time);\r\n                float scale =  sin( trTime.x * 2.1 ) + sin( trTime.y * 3.2 ) + sin( trTime.z * 4.3 );\r\n                vScale = scale;\r\n                scale = scale * 10.0 + 10.0;\r\n                mvPosition.xyz += position * scale;\r\n                vUv = uv;\r\n                gl_Position = projectionMatrix * mvPosition;\r\n            }`\r\n        this.fshader = `\r\n            precision highp float;\r\n            uniform sampler2D map;\r\n            varying vec2 vUv;\r\n            varying float vScale;\r\n            // HSL to RGB Convertion helpers\r\n            vec3 HUEtoRGB(float H){\r\n                H = mod(H,1.0);\r\n                float R = abs(H * 6.0 - 3.0) - 1.0;\r\n                float G = 2.0 - abs(H * 6.0 - 2.0);\r\n                float B = 2.0 - abs(H * 6.0 - 4.0);\r\n                return clamp(vec3(R,G,B),0.0,1.0);\r\n            }\r\n            vec3 HSLtoRGB(vec3 HSL){\r\n                vec3 RGB = HUEtoRGB(HSL.x);\r\n                float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;\r\n                return (RGB - 0.5) * C + HSL.z;\r\n            }\r\n            void main() {\r\n                vec4 diffuseColor = texture2D( map, vUv );\r\n                gl_FragColor = vec4( diffuseColor.xyz * HSLtoRGB(vec3(vScale/5.0, 1.0, 0.5)), diffuseColor.w );\r\n\r\n                if ( diffuseColor.w < 0.5 ) discard;\r\n            }`\r\n        if (this.init()) {\r\n\t\t\tthis.animate()\r\n\t\t}\r\n    },\r\n    methods: {\r\n        init() {\r\n\t\t\tthis.renderer = new this.$THREE.WebGLRenderer()\r\n\t\t\tif (this.renderer.capabilities.isWebGL2 === false && this.renderer.extensions.has('ANGLE_instanced_arrays') === false) {\r\n\t\t\t\tdocument.getElementById('notSupported').style.display = ''\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tthis.container = document.createElement('div')\r\n\t\t\tdocument.getElementsByClassName('webglBuffergeometryInstancingBillboards-container')[0].appendChild(this.container)\r\n\t\t\tthis.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 1, 5000)\r\n\t\t\tthis.camera.position.z = 1400\r\n\t\t\tthis.scene = new this.$THREE.Scene()\r\n\t\t\tvar circleGeometry = new this.$THREE.CircleBufferGeometry(1, 6)\r\n\t\t\tthis.geometry = new this.$THREE.InstancedBufferGeometry()\r\n\t\t\tthis.geometry.index = circleGeometry.index\r\n\t\t\tthis.geometry.attributes = circleGeometry.attributes\r\n\t\t\tvar particleCount = 75000\r\n\t\t\tvar translateArray = new Float32Array(particleCount * 3)\r\n\t\t\tfor (let i = 0, i3 = 0, l = particleCount; i < l; i ++, i3 += 3) {\r\n\t\t\t\ttranslateArray[ i3 + 0 ] = Math.random() * 2 - 1\r\n\t\t\t\ttranslateArray[ i3 + 1 ] = Math.random() * 2 - 1\r\n\t\t\t\ttranslateArray[ i3 + 2 ] = Math.random() * 2 - 1\r\n\t\t\t}\r\n\t\t\tthis.geometry.setAttribute('translate', new this.$THREE.InstancedBufferAttribute(translateArray, 3))\r\n\t\t\tthis.material = new this.$THREE.RawShaderMaterial({\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\t\"map\": { value: new this.$THREE.TextureLoader().load('static/textures/sprites/circle.png') },\r\n\t\t\t\t\t\"time\": { value: 0.0 }\r\n\t\t\t\t},\r\n\t\t\t\tvertexShader: this.vshader,\r\n\t\t\t\tfragmentShader: this.fshader,\r\n\t\t\t\tdepthTest: true,\r\n\t\t\t\tdepthWrite: true\r\n\t\t\t})\r\n\t\t\tthis.mesh = new this.$THREE.Mesh(this.geometry, this.material)\r\n\t\t\tthis.mesh.scale.set(500, 500, 500)\r\n\t\t\tthis.scene.add(this.mesh)\r\n\t\t\tthis.renderer.setPixelRatio(window.devicePixelRatio)\r\n\t\t\tthis.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n\t\t\tthis.container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n\t\t\tthis.container.appendChild(this.stats.dom)\r\n\t\t\twindow.addEventListener('resize', this.onWindowResize, false)\r\n\t\t\treturn true\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n\t\t\trequestAnimationFrame(this.animate)\r\n\t\t\tthis.render()\r\n\t\t\tthis.stats.update()\r\n        },\r\n        render() {\r\n\t\t\tvar time = performance.now() * 0.0005\r\n\t\t\tthis.material.uniforms[ \"time\" ].value = time\r\n\t\t\tthis.mesh.rotation.x = time * 0.2\r\n\t\t\tthis.mesh.rotation.y = time * 0.4\r\n\t\t\tthis.renderer.render(this.scene, this.camera)\r\n\t\t}\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglBuffergeometryInstancingBillboards-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/buffergeometry/webglBuffergeometryInstancingBillboards.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglBuffergeometryInstancingBillboards-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - instanced circle billboards - colors\\n        \"),_c('div',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"notSupported\"}},[_vm._v(\"Sorry, your graphics card + browser does not support hardware instancing\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-68ca0ef6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/buffergeometry/webglBuffergeometryInstancingBillboards.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-68ca0ef6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglBuffergeometryInstancingBillboards.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglBuffergeometryInstancingBillboards.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglBuffergeometryInstancingBillboards.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-68ca0ef6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglBuffergeometryInstancingBillboards.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-68ca0ef6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/buffergeometry/webglBuffergeometryInstancingBillboards.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}