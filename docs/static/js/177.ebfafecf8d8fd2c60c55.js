webpackJsonp([177],{DGpu:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r={data:function(){return{vertexShader:null,fragmentShader:null,camera:null,scene:null,renderer:null,mesh:null}},mounted:function(){this.vertexShader='\n            in int textureIndex;\n\t\t\tflat out int vIndex; // "flat" indicates that the value will not be interpolated (required for integer attributes)\n\t\t\tout vec2 vUv;\n\t\t\tvoid main()\t{\n\t\t\t\tvIndex = textureIndex;\n\t\t\t\tvUv = uv;\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }',this.fragmentShader="\n            flat in int vIndex;\n\t\t\tin vec2 vUv;\n\t\t\tuniform sampler2D uTextures[ 3 ];\n\t\t\tout vec4 outColor;\n\t\t\tvoid main()\t{\n\t\t\t\tif (vIndex == 0) outColor = texture(uTextures[ 0 ], vUv);\n\t\t\t\telse if (vIndex == 1) outColor = texture(uTextures[ 1 ], vUv);\n\t\t\t\telse if (vIndex == 2) outColor = texture(uTextures[ 2 ], vUv);\n            }",this.init(),this.animate()},methods:{init:function(){this.camera=new this.$THREE.PerspectiveCamera(27,this.$webglInnerWidth/window.innerHeight,1,3500),this.camera.position.z=2500,this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(328965),this.scene.fog=new this.$THREE.Fog(328965,2e3,3500);for(var t=new this.$THREE.BufferGeometry,e=[],n=[],r=[],i=800,s=50,a=0;a<1e4;a++){var o=Math.random()*i-400,h=Math.random()*i-400,u=Math.random()*i-400,d=o+Math.random()*s-25,l=h+Math.random()*s-25,m=u+Math.random()*s-25,f=o+Math.random()*s-25,v=h+Math.random()*s-25,c=u+Math.random()*s-25,E=o+Math.random()*s-25,g=h+Math.random()*s-25,x=u+Math.random()*s-25;e.push(d,l,m),e.push(f,v,c),e.push(E,g,x),n.push(0,0),n.push(.5,1),n.push(1,0);var w=a%3;r.push(w,w,w)}t.setAttribute("position",new this.$THREE.Float32BufferAttribute(e,3)),t.setAttribute("uv",new this.$THREE.Float32BufferAttribute(n,2)),t.setAttribute("textureIndex",new this.$THREE.Int32BufferAttribute(r,1)),t.computeBoundingSphere();var p=new this.$THREE.TextureLoader,b=p.load("static/textures/crate.gif"),T=p.load("static/textures/floors/FloorsCheckerboard_S_Diffuse.jpg"),R=p.load("static/textures/terrain/grasslight-big.jpg"),$=new this.$THREE.ShaderMaterial({uniforms:{uTextures:{value:[b,T,R]}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,side:this.$THREE.DoubleSide,glslVersion:this.$THREE.GLSL3});this.mesh=new this.$THREE.Mesh(t,$),this.scene.add(this.mesh),this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),document.getElementsByClassName("webgl2BuffergeometryAttributesInteger-container")[0].appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate);var t=.001*Date.now();this.mesh.rotation.x=.25*t,this.mesh.rotation.y=.5*t,this.renderer.render(this.scene,this.camera)}}},i={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webgl2BuffergeometryAttributesInteger-container"},[e("div",{attrs:{id:"container"}}),this._v(" "),e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" WebGL 2 - buffergeometry - integer attributes")])])}]};var s=n("VU/8")(r,i,!1,function(t){n("nm0d")},"data-v-33fab58d",null);e.default=s.exports},nm0d:function(t,e){}});
//# sourceMappingURL=177.ebfafecf8d8fd2c60c55.js.map