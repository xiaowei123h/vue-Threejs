{"version":3,"sources":["webpack:///./src/components/jsm/shaders/ParallaxShader.js","webpack:///src/views/materials/webglMaterialsParallaxmap.vue","webpack:///./src/views/materials/webglMaterialsParallaxmap.vue?ff35","webpack:///./src/views/materials/webglMaterialsParallaxmap.vue"],"names":["ParallaxShader","modes","none","basic","steep","occlusion","relief","uniforms","bumpMap","value","map","parallaxScale","parallaxMinLayers","parallaxMaxLayers","vertexShader","join","fragmentShader","webglMaterialsParallaxmap","data","camera","scene","material","renderer","stats","gui","effectController","mode","scale","minLayers","maxLayers","mounted","this","init","initGUI","animate","beforeDestroy","destroy","methods","container","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","z","Scene","shader","UniformsUtils","clone","parameters","textureLoader","TextureLoader","ShaderMaterial","load","anisotropy","geometry","BoxBufferGeometry","mesh","Mesh","add","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","domElement","outputEncoding","sRGBEncoding","controls","OrbitControls","minDistance","maxDistance","$Stats","dom","style","left","addEventListener","onWindowResize","guiChanged","defines","needsUpdate","dat_gui_module","Object","keys","onChange","$onWindowResize","requestAnimationFrame","render","update","materials_webglMaterialsParallaxmap","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","href","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/179.3d85b4e46c08a5140f1f.js","sourcesContent":["// Parallax Occlusion shaders from\r\n//    http://sunandblackcat.com/tipFullView.php?topicid=28\r\n// No tangent-space transforms logic based on\r\n//   http://mmikkelsen3d.blogspot.sk/2012/02/parallaxpoc-mapping-and-no-tangent.html\r\n\r\nvar ParallaxShader = {\r\n\t// Ordered from fastest to best quality.\r\n\tmodes: {\r\n\t\tnone: \"NO_PARALLAX\",\r\n\t\tbasic: \"USE_BASIC_PARALLAX\",\r\n\t\tsteep: \"USE_STEEP_PARALLAX\",\r\n\t\tocclusion: \"USE_OCLUSION_PARALLAX\", // a.k.a. POM\r\n\t\trelief: \"USE_RELIEF_PARALLAX\"\r\n\t},\r\n\r\n\tuniforms: {\r\n\t\t\"bumpMap\": { value: null },\r\n\t\t\"map\": { value: null },\r\n\t\t\"parallaxScale\": { value: null },\r\n\t\t\"parallaxMinLayers\": { value: null },\r\n\t\t\"parallaxMaxLayers\": { value: null }\r\n\t},\r\n\r\n\tvertexShader: [\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\"\tvViewPosition = -mvPosition.xyz;\",\r\n\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"uniform sampler2D bumpMap;\",\r\n\t\t\"uniform sampler2D map;\",\r\n\r\n\t\t\"uniform float parallaxScale;\",\r\n\t\t\"uniform float parallaxMinLayers;\",\r\n\t\t\"uniform float parallaxMaxLayers;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\t\t\"varying vec3 vViewPosition;\",\r\n\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\"#ifdef USE_BASIC_PARALLAX\",\r\n\r\n\t\t\"\tvec2 parallaxMap( in vec3 V ) {\",\r\n\r\n\t\t\"\t\tfloat initialHeight = texture2D( bumpMap, vUv ).r;\",\r\n\r\n\t\t// No Offset Limitting: messy, floating output at grazing angles.\r\n\t\t//\"vec2 texCoordOffset = parallaxScale * V.xy / V.z * initialHeight;\",\r\n\r\n\t\t// Offset Limiting\r\n\t\t\"\t\tvec2 texCoordOffset = parallaxScale * V.xy * initialHeight;\",\r\n\t\t\"\t\treturn vUv - texCoordOffset;\",\r\n\r\n\t\t\"\t}\",\r\n\r\n\t\t\"#else\",\r\n\r\n\t\t\"\tvec2 parallaxMap( in vec3 V ) {\",\r\n\r\n\t\t// Determine number of layers from angle between V and N\r\n\t\t\"\t\tfloat numLayers = mix( parallaxMaxLayers, parallaxMinLayers, abs( dot( vec3( 0.0, 0.0, 1.0 ), V ) ) );\",\r\n\r\n\t\t\"\t\tfloat layerHeight = 1.0 / numLayers;\",\r\n\t\t\"\t\tfloat currentLayerHeight = 0.0;\",\r\n\t\t// Shift of texture coordinates for each iteration\r\n\t\t\"\t\tvec2 dtex = parallaxScale * V.xy / V.z / numLayers;\",\r\n\r\n\t\t\"\t\tvec2 currentTextureCoords = vUv;\",\r\n\r\n\t\t\"\t\tfloat heightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\r\n\r\n\t\t// while ( heightFromTexture > currentLayerHeight )\r\n\t\t// Infinite loops are not well supported. Do a \"large\" finite\r\n\t\t// loop, but not too large, as it slows down some compilers.\r\n\t\t\"\t\tfor ( int i = 0; i < 30; i += 1 ) {\",\r\n\t\t\"\t\t\tif ( heightFromTexture <= currentLayerHeight ) {\",\r\n\t\t\"\t\t\t\tbreak;\",\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t\tcurrentLayerHeight += layerHeight;\",\r\n\t\t// Shift texture coordinates along vector V\r\n\t\t\"\t\t\tcurrentTextureCoords -= dtex;\",\r\n\t\t\"\t\t\theightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\r\n\t\t\"\t\t}\",\r\n\r\n\t\t\"\t\t#ifdef USE_STEEP_PARALLAX\",\r\n\r\n\t\t\"\t\t\treturn currentTextureCoords;\",\r\n\r\n\t\t\"\t\t#elif defined( USE_RELIEF_PARALLAX )\",\r\n\r\n\t\t\"\t\t\tvec2 deltaTexCoord = dtex / 2.0;\",\r\n\t\t\"\t\t\tfloat deltaHeight = layerHeight / 2.0;\",\r\n\r\n\t\t// Return to the mid point of previous layer\r\n\t\t\"\t\t\tcurrentTextureCoords += deltaTexCoord;\",\r\n\t\t\"\t\t\tcurrentLayerHeight -= deltaHeight;\",\r\n\r\n\t\t// Binary search to increase precision of Steep Parallax Mapping\r\n\t\t\"\t\t\tconst int numSearches = 5;\",\r\n\t\t\"\t\t\tfor ( int i = 0; i < numSearches; i += 1 ) {\",\r\n\r\n\t\t\"\t\t\t\tdeltaTexCoord /= 2.0;\",\r\n\t\t\"\t\t\t\tdeltaHeight /= 2.0;\",\r\n\t\t\"\t\t\t\theightFromTexture = texture2D( bumpMap, currentTextureCoords ).r;\",\r\n\t\t// Shift along or against vector V\r\n\t\t\"\t\t\t\tif( heightFromTexture > currentLayerHeight ) {\", // Below the surface\r\n\r\n\t\t\"\t\t\t\t\tcurrentTextureCoords -= deltaTexCoord;\",\r\n\t\t\"\t\t\t\t\tcurrentLayerHeight += deltaHeight;\",\r\n\r\n\t\t\"\t\t\t\t} else {\", // above the surface\r\n\r\n\t\t\"\t\t\t\t\tcurrentTextureCoords += deltaTexCoord;\",\r\n\t\t\"\t\t\t\t\tcurrentLayerHeight -= deltaHeight;\",\r\n\r\n\t\t\"\t\t\t\t}\",\r\n\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t\treturn currentTextureCoords;\",\r\n\r\n\t\t\"\t\t#elif defined( USE_OCLUSION_PARALLAX )\",\r\n\r\n\t\t\"\t\t\tvec2 prevTCoords = currentTextureCoords + dtex;\",\r\n\r\n\t\t// Heights for linear interpolation\r\n\t\t\"\t\t\tfloat nextH = heightFromTexture - currentLayerHeight;\",\r\n\t\t\"\t\t\tfloat prevH = texture2D( bumpMap, prevTCoords ).r - currentLayerHeight + layerHeight;\",\r\n\r\n\t\t// Proportions for linear interpolation\r\n\t\t\"\t\t\tfloat weight = nextH / ( nextH - prevH );\",\r\n\r\n\t\t// Interpolation of texture coordinates\r\n\t\t\"\t\t\treturn prevTCoords * weight + currentTextureCoords * ( 1.0 - weight );\",\r\n\r\n\t\t\"\t\t#else\", // NO_PARALLAX\r\n\r\n\t\t\"\t\t\treturn vUv;\",\r\n\r\n\t\t\"\t\t#endif\",\r\n\r\n\t\t\"\t}\",\r\n\t\t\"#endif\",\r\n\r\n\t\t\"vec2 perturbUv( vec3 surfPosition, vec3 surfNormal, vec3 viewPosition ) {\",\r\n\r\n \t\t\"\tvec2 texDx = dFdx( vUv );\",\r\n\t\t\"\tvec2 texDy = dFdy( vUv );\",\r\n\r\n\t\t\"\tvec3 vSigmaX = dFdx( surfPosition );\",\r\n\t\t\"\tvec3 vSigmaY = dFdy( surfPosition );\",\r\n\t\t\"\tvec3 vR1 = cross( vSigmaY, surfNormal );\",\r\n\t\t\"\tvec3 vR2 = cross( surfNormal, vSigmaX );\",\r\n\t\t\"\tfloat fDet = dot( vSigmaX, vR1 );\",\r\n\r\n\t\t\"\tvec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, viewPosition ), dot( vR2, viewPosition ) );\",\r\n\t\t\"\tvec3 vProjVtex;\",\r\n\t\t\"\tvProjVtex.xy = texDx * vProjVscr.x + texDy * vProjVscr.y;\",\r\n\t\t\"\tvProjVtex.z = dot( surfNormal, viewPosition );\",\r\n\r\n\t\t\"\treturn parallaxMap( vProjVtex );\",\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec2 mapUv = perturbUv( -vViewPosition, normalize( vNormal ), normalize( vViewPosition ) );\",\r\n\t\t\"\tgl_FragColor = texture2D( map, mapUv );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { ParallaxShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/ParallaxShader.js","<template>\r\n    <div class=\"webglMaterialsParallaxmap-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\">Three.js</a> parallax mapping <br />\r\n\t\t\tOryginal shaders authors:\r\n\t\t\t<a href=\"http://sunandblackcat.com/tipFullView.php?topicid=28\">Igor Dyhta</a>,\r\n\t\t\t<a href=\"http://mmikkelsen3d.blogspot.sk/2012/02/parallaxpoc-mapping-and-no-tangent.html\">Morten S. Mikkelsen</a><br />\r\n\t\t\tTexture by <a href=\"http://agf81.deviantart.com/\">AGF81</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { ParallaxShader } from '@/components/jsm/shaders/ParallaxShader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            material: null,\r\n            renderer: null,\r\n            stats: null,\r\n            gui: null,\r\n            effectController: {\r\n\t\t\t\t'mode': 'relief',\r\n\t\t\t\t'scale': 0.005,\r\n\t\t\t\t'minLayers': 20,\r\n\t\t\t\t'maxLayers': 25\r\n\t\t\t}\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n        this.initGUI()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsParallaxmap-container')[0].appendChild(container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 0.01, 10)\r\n            this.camera.position.z = 2\r\n            this.scene = new this.$THREE.Scene()\r\n            //\r\n            var shader = ParallaxShader\r\n            var uniforms = this.$THREE.UniformsUtils.clone(shader.uniforms)\r\n            var parameters = {\r\n                fragmentShader: shader.fragmentShader,\r\n                vertexShader: shader.vertexShader,\r\n                uniforms: uniforms\r\n            }\r\n            //\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            this.material = new this.$THREE.ShaderMaterial(parameters)\r\n            this.material.map = textureLoader.load('static/textures/brick_diffuse.jpg')\r\n            this.material.bumpMap = textureLoader.load('static/textures/brick_bump.jpg')\r\n            this.material.map.anisotropy = 4\r\n            this.material.bumpMap.anisotropy = 4\r\n            uniforms[ 'map' ].value = this.material.map\r\n            uniforms[ 'bumpMap' ].value = this.material.bumpMap\r\n            //\r\n            var geometry = new this.$THREE.BoxBufferGeometry(1.0, 1.0, 1.0)\r\n            var mesh = new this.$THREE.Mesh(geometry, this.material)\r\n            this.scene.add(mesh)\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            container.appendChild(this.renderer.domElement)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            //\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 1\r\n            controls.maxDistance = 5\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        guiChanged() {\r\n            var uniforms = this.material.uniforms\r\n            uniforms[ 'parallaxScale' ].value = - 1.0 * this.effectController.scale\r\n            uniforms[ 'parallaxMinLayers' ].value = this.effectController.minLayers\r\n            uniforms[ 'parallaxMaxLayers' ].value = this.effectController.maxLayers\r\n            this.material.defines = {}\r\n            this.material.defines[ ParallaxShader.modes[ this.effectController.mode ] ] = ''\r\n            this.material.needsUpdate = true\r\n        },\r\n        initGUI() {\r\n            this.gui = new GUI()\r\n            this.gui.add(this.effectController, 'mode', Object.keys(ParallaxShader.modes)).onChange(this.guiChanged)\r\n            this.gui.add(this.effectController, 'scale', 0.0, 0.01, 0.001).onChange(this.guiChanged)\r\n            this.gui.add(this.effectController, 'minLayers', 1.0, 30, 1).onChange(this.guiChanged)\r\n            this.gui.add(this.effectController, 'maxLayers', 1.0, 30, 1).onChange(this.guiChanged)\r\n            this.guiChanged()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsParallaxmap-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsParallaxmap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsParallaxmap-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\"}},[_vm._v(\"Three.js\")]),_vm._v(\" parallax mapping \"),_c('br'),_vm._v(\"\\n\\t\\t\\tOryginal shaders authors:\\n\\t\\t\\t\"),_c('a',{attrs:{\"href\":\"http://sunandblackcat.com/tipFullView.php?topicid=28\"}},[_vm._v(\"Igor Dyhta\")]),_vm._v(\",\\n\\t\\t\\t\"),_c('a',{attrs:{\"href\":\"http://mmikkelsen3d.blogspot.sk/2012/02/parallaxpoc-mapping-and-no-tangent.html\"}},[_vm._v(\"Morten S. Mikkelsen\")]),_c('br'),_vm._v(\"\\n\\t\\t\\tTexture by \"),_c('a',{attrs:{\"href\":\"http://agf81.deviantart.com/\"}},[_vm._v(\"AGF81\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-66089bc8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsParallaxmap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-66089bc8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsParallaxmap.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsParallaxmap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsParallaxmap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-66089bc8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsParallaxmap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-66089bc8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsParallaxmap.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}