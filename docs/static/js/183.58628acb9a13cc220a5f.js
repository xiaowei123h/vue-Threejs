webpackJsonp([183],{Uc5O:function(e,t){},"biw/":function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i("QEtz"),s=i("wIBv"),a=i("6+nK");var r,o,h,c=a.ShaderChunk.meshphong_frag.slice(0,a.ShaderChunk.meshphong_frag.indexOf("void main() {")),l=a.ShaderChunk.meshphong_frag.slice(a.ShaderChunk.meshphong_frag.indexOf("void main() {")),d={uniforms:a.UniformsUtils.merge([a.ShaderLib.phong.uniforms,{thicknessMap:{value:null},thicknessColor:{value:new a.Color(16777215)},thicknessDistortion:{value:.1},thicknessAmbient:{value:0},thicknessAttenuation:{value:.1},thicknessPower:{value:2},thicknessScale:{value:10}}]),vertexShader:["#define USE_UV",a.ShaderChunk.meshphong_vert].join("\n"),fragmentShader:["#define USE_UV","#define SUBSURFACE",c,"uniform sampler2D thicknessMap;","uniform float thicknessPower;","uniform float thicknessScale;","uniform float thicknessDistortion;","uniform float thicknessAmbient;","uniform float thicknessAttenuation;","uniform vec3 thicknessColor;","void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {","\tvec3 thickness = thicknessColor * texture2D(thicknessMap, uv).r;","\tvec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));","\tfloat scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;","\tvec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;","\treflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;","}",l.replace("#include <lights_fragment_begin>",(r=a.ShaderChunk.lights_fragment_begin,o="RE_Direct( directLight, geometry, material, reflectedLight );",h=["RE_Direct( directLight, geometry, material, reflectedLight );","#if defined( SUBSURFACE ) && defined( USE_UV )"," RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);","#endif"].join("\n"),r.split(o).join(h)))].join("\n")},u=i("+T91"),m={data:function(){return{container:null,stats:null,camera:null,scene:null,renderer:null,model:null,gui:null}},mounted:function(){this.init(),this.animate()},beforeDestroy:function(){this.gui.destroy()},methods:{init:function(){this.container=document.createElement("div"),document.getElementsByClassName("webglMaterialsSubsurfaceScattering-container")[0].appendChild(this.container),this.camera=new this.$THREE.PerspectiveCamera(40,this.$webglInnerWidth/window.innerHeight,1,5e3),this.camera.position.set(0,300,1600),this.scene=new this.$THREE.Scene,this.scene.add(new this.$THREE.AmbientLight(8947848));var e=new this.$THREE.DirectionalLight(16777215,.03);e.position.set(0,.5,.5).normalize(),this.scene.add(e);var t=new this.$THREE.Mesh(new this.$THREE.SphereBufferGeometry(4,8,8),new this.$THREE.MeshBasicMaterial({color:8947848}));t.add(new this.$THREE.PointLight(8947848,7,300)),this.scene.add(t),t.position.x=0,t.position.y=-50,t.position.z=350;var i=new this.$THREE.Mesh(new this.$THREE.SphereBufferGeometry(4,8,8),new this.$THREE.MeshBasicMaterial({color:8947712}));i.add(new this.$THREE.PointLight(8947712,1,500)),this.scene.add(i),i.position.x=-100,i.position.y=20,i.position.z=-260,this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement),this.renderer.outputEncoding=this.$THREE.sRGBEncoding,this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom);var n=new s.b(this.camera,this.container);n.minDistance=500,n.maxDistance=3e3,window.addEventListener("resize",this.onWindowResize,!1),this.initMaterial()},initMaterial:function(){var e=this,t=new this.$THREE.TextureLoader,i=t.load("static/models/fbx/white.jpg"),n=t.load("static/models/fbx/bunny_thickness.jpg");i.wrapS=i.wrapT=this.$THREE.RepeatWrapping;var s=d,a=this.$THREE.UniformsUtils.clone(s.uniforms);a.map.value=i,a.diffuse.value=new this.$THREE.Vector3(1,.2,.2),a.shininess.value=500,a.thicknessMap.value=n,a.thicknessColor.value=new this.$THREE.Vector3(.5,.3,0),a.thicknessDistortion.value=.1,a.thicknessAmbient.value=.4,a.thicknessAttenuation.value=.8,a.thicknessPower.value=2,a.thicknessScale.value=16;var r=new this.$THREE.ShaderMaterial({uniforms:a,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,lights:!0});r.extensions.derivatives=!0,(new u.a).load("static/models/fbx/stanford-bunny.fbx",function(t){e.model=t.children[0],e.model.position.set(0,0,10),e.model.scale.setScalar(1),e.model.material=r,e.scene.add(e.model)}),this.initGUI(a)},initGUI:function(e){this.gui=new n.a;var t=new function(){this.distortion=e.thicknessDistortion.value,this.ambient=e.thicknessAmbient.value,this.attenuation=e.thicknessAttenuation.value,this.power=e.thicknessPower.value,this.scale=e.thicknessScale.value},i=this.gui.addFolder("Thickness Control");i.add(t,"distortion").min(.01).max(1).step(.01).onChange(function(){e.thicknessDistortion.value=t.distortion}),i.add(t,"ambient").min(.01).max(5).step(.05).onChange(function(){e.thicknessAmbient.value=t.ambient}),i.add(t,"attenuation").min(.01).max(5).step(.05).onChange(function(){e.thicknessAttenuation.value=t.attenuation}),i.add(t,"power").min(.01).max(16).step(.1).onChange(function(){e.thicknessPower.value=t.power}),i.add(t,"scale").min(.01).max(50).step(.1).onChange(function(){e.thicknessScale.value=t.scale}),i.open()},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){this.model&&(this.model.rotation.y=performance.now()/5e3),this.renderer.render(this.scene,this.camera)}}},f={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webglMaterialsSubsurfaceScattering-container"},[t("div",{attrs:{id:"container"}}),this._v(" "),t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" "),t("br"),this._v("Fast subsurface scattering in Blinn-Phong shading demo"),t("br"),this._v("\n        [Thanks for the art support from "),t("a",{attrs:{href:"https://github.com/shaochun",target:"_blank",rel:"noopener"}},[this._v("Shaochun Lin")]),this._v("]\n    ")])])}]};var g=i("VU/8")(m,f,!1,function(e){i("Uc5O")},"data-v-63623c2c",null);t.default=g.exports}});
//# sourceMappingURL=183.58628acb9a13cc220a5f.js.map