{"version":3,"sources":["webpack:///./src/components/jsm/shaders/SubsurfaceScatteringShader.js","webpack:///src/views/materials/webglMaterialsSubsurfaceScattering.vue","webpack:///./src/views/materials/webglMaterialsSubsurfaceScattering.vue?b2f6","webpack:///./src/views/materials/webglMaterialsSubsurfaceScattering.vue"],"names":["string","find","replace","meshphong_frag_head","ShaderChunk","slice","indexOf","meshphong_frag_body","SubsurfaceScatteringShader","uniforms","UniformsUtils","merge","ShaderLib","thicknessMap","value","thicknessColor","Color","thicknessDistortion","thicknessAmbient","thicknessAttenuation","thicknessPower","thicknessScale","vertexShader","join","fragmentShader","split","webglMaterialsSubsurfaceScattering","data","container","stats","camera","scene","renderer","model","gui","mounted","this","init","animate","beforeDestroy","destroy","methods","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","add","AmbientLight","directionalLight","DirectionalLight","normalize","pointLight1","Mesh","SphereBufferGeometry","MeshBasicMaterial","color","PointLight","x","y","z","pointLight2","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","domElement","outputEncoding","sRGBEncoding","$Stats","dom","style","left","controls","OrbitControls","minDistance","maxDistance","addEventListener","onWindowResize","initMaterial","_this","loader","TextureLoader","imgTexture","load","thicknessTexture","wrapS","wrapT","RepeatWrapping","shader","clone","Vector3","material","ShaderMaterial","lights","extensions","derivatives","FBXLoader","object","children","scale","setScalar","initGUI","dat_gui_module","thicknessControls","distortion","ambient","attenuation","power","thicknessFolder","addFolder","min","max","step","onChange","open","$onWindowResize","requestAnimationFrame","render","update","rotation","performance","now","materials_webglMaterialsSubsurfaceScattering","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/183.58628acb9a13cc220a5f.js","sourcesContent":["import {\r\n\tColor,\r\n\tShaderChunk,\r\n\tShaderLib,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * ------------------------------------------------------------------------------------------\r\n * Subsurface Scattering shader\r\n * Based on GDC 2011 â€“ Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering Look\r\n * https://colinbarrebrisebois.com/2011/03/07/gdc-2011-approximating-translucency-for-a-fast-cheap-and-convincing-subsurface-scattering-look/\r\n *------------------------------------------------------------------------------------------\r\n */\r\n\r\nfunction replaceAll( string, find, replace ) {\r\n\r\n\treturn string.split( find ).join( replace );\r\n\r\n}\r\n\r\nvar meshphong_frag_head = ShaderChunk[ \"meshphong_frag\" ].slice( 0, ShaderChunk[ \"meshphong_frag\" ].indexOf( 'void main() {' ) );\r\nvar meshphong_frag_body = ShaderChunk[ \"meshphong_frag\" ].slice( ShaderChunk[ \"meshphong_frag\" ].indexOf( 'void main() {' ) );\r\n\r\nvar SubsurfaceScatteringShader = {\r\n\r\n\tuniforms: UniformsUtils.merge( [\r\n\t\tShaderLib[ \"phong\" ].uniforms,\r\n\t\t{\r\n\t\t\t\"thicknessMap\": { value: null },\r\n\t\t\t\"thicknessColor\": { value: new Color( 0xffffff ) },\r\n\t\t\t\"thicknessDistortion\": { value: 0.1 },\r\n\t\t\t\"thicknessAmbient\": { value: 0.0 },\r\n\t\t\t\"thicknessAttenuation\": { value: 0.1 },\r\n\t\t\t\"thicknessPower\": { value: 2.0 },\r\n\t\t\t\"thicknessScale\": { value: 10.0 }\r\n\t\t}\r\n\r\n\t] ),\r\n\r\n\tvertexShader: [\r\n\t\t\"#define USE_UV\",\r\n\t\tShaderChunk[ \"meshphong_vert\" ],\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\t\t\"#define USE_UV\",\r\n\t\t\"#define SUBSURFACE\",\r\n\r\n\t\tmeshphong_frag_head,\r\n\r\n\t\t\"uniform sampler2D thicknessMap;\",\r\n\t\t\"uniform float thicknessPower;\",\r\n\t\t\"uniform float thicknessScale;\",\r\n\t\t\"uniform float thicknessDistortion;\",\r\n\t\t\"uniform float thicknessAmbient;\",\r\n\t\t\"uniform float thicknessAttenuation;\",\r\n\t\t\"uniform vec3 thicknessColor;\",\r\n\r\n\t\t\"void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {\",\r\n\t\t\"\tvec3 thickness = thicknessColor * texture2D(thicknessMap, uv).r;\",\r\n\t\t\"\tvec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));\",\r\n\t\t\"\tfloat scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\",\r\n\t\t\"\tvec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;\",\r\n\t\t\"\treflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\",\r\n\t\t\"}\",\r\n\r\n\t\tmeshphong_frag_body.replace( \"#include <lights_fragment_begin>\",\r\n\r\n\t\t\treplaceAll(\r\n\t\t\t\tShaderChunk[ 'lights_fragment_begin' ],\r\n\t\t\t\t'RE_Direct( directLight, geometry, material, reflectedLight );',\r\n\t\t\t\t[\r\n\t\t\t\t\t\"RE_Direct( directLight, geometry, material, reflectedLight );\",\r\n\r\n\t\t\t\t\t\"#if defined( SUBSURFACE ) && defined( USE_UV )\",\r\n\t\t\t\t\t\" RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);\",\r\n\t\t\t\t\t\"#endif\",\r\n\t\t\t\t].join( \"\\n\" )\r\n\t\t\t),\r\n\r\n\t\t),\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n};\r\n\r\nexport { SubsurfaceScatteringShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/SubsurfaceScatteringShader.js","<template>\r\n    <div class=\"webglMaterialsSubsurfaceScattering-container\">\r\n        <div id=\"container\"></div>\r\n        <div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a>\r\n            <br/>Fast subsurface scattering in Blinn-Phong shading demo<br/>\r\n            [Thanks for the art support from <a href=\"https://github.com/shaochun\" target=\"_blank\" rel=\"noopener\">Shaochun Lin</a>]\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { SubsurfaceScatteringShader } from '@/components/jsm/shaders/SubsurfaceScatteringShader.js'\r\nimport { FBXLoader } from '@/components/jsm/loaders/FBXLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            model: null,\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n\t\t\tthis.container = document.createElement('div')\r\n\t\t\tdocument.getElementsByClassName('webglMaterialsSubsurfaceScattering-container')[0].appendChild(this.container)\r\n\t\t\tthis.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 5000)\r\n\t\t\tthis.camera.position.set(0.0, 300, 400 * 4)\r\n\t\t\tthis.scene = new this.$THREE.Scene()\r\n\t\t\t// Lights\r\n\t\t\tthis.scene.add(new this.$THREE.AmbientLight(0x888888))\r\n\t\t\tvar directionalLight = new this.$THREE.DirectionalLight(0xffffff, 0.03)\r\n\t\t\tdirectionalLight.position.set(0.0, 0.5, 0.5).normalize()\r\n\t\t\tthis.scene.add(directionalLight)\r\n\t\t\tvar pointLight1 = new this.$THREE.Mesh(new this.$THREE.SphereBufferGeometry(4, 8, 8), new this.$THREE.MeshBasicMaterial({ color: 0x888888 }))\r\n\t\t\tpointLight1.add(new this.$THREE.PointLight(0x888888, 7.0, 300))\r\n\t\t\tthis.scene.add(pointLight1)\r\n\t\t\tpointLight1.position.x = 0\r\n\t\t\tpointLight1.position.y = - 50\r\n\t\t\tpointLight1.position.z = 350\r\n\t\t\tvar pointLight2 = new this.$THREE.Mesh(new this.$THREE.SphereBufferGeometry(4, 8, 8), new this.$THREE.MeshBasicMaterial({ color: 0x888800 }))\r\n\t\t\tpointLight2.add(new this.$THREE.PointLight(0x888800, 1.0, 500))\r\n\t\t\tthis.scene.add(pointLight2)\r\n\t\t\tpointLight2.position.x = - 100\r\n\t\t\tpointLight2.position.y = 20\r\n\t\t\tpointLight2.position.z = - 260\r\n\t\t\tthis.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n\t\t\tthis.renderer.setPixelRatio(window.devicePixelRatio)\r\n\t\t\tthis.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n\t\t\tthis.container.appendChild(this.renderer.domElement)\r\n\t\t\tthis.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n\t\t\t//\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n\t\t\tthis.container.appendChild(this.stats.dom)\r\n\t\t\tvar controls = new OrbitControls(this.camera, this.container)\r\n\t\t\tcontrols.minDistance = 500\r\n\t\t\tcontrols.maxDistance = 3000\r\n\t\t\twindow.addEventListener('resize', this.onWindowResize, false)\r\n\t\t\tthis.initMaterial()\r\n        },\r\n        initMaterial() {\r\n\t\t\tvar loader = new this.$THREE.TextureLoader()\r\n\t\t\tvar imgTexture = loader.load('static/models/fbx/white.jpg')\r\n\t\t\tvar thicknessTexture = loader.load('static/models/fbx/bunny_thickness.jpg')\r\n\t\t\timgTexture.wrapS = imgTexture.wrapT = this.$THREE.RepeatWrapping\r\n\t\t\tvar shader = SubsurfaceScatteringShader\r\n\t\t\tvar uniforms = this.$THREE.UniformsUtils.clone(shader.uniforms)\r\n\t\t\tuniforms[ 'map' ].value = imgTexture\r\n\t\t\tuniforms[ 'diffuse' ].value = new this.$THREE.Vector3(1.0, 0.2, 0.2)\r\n\t\t\tuniforms[ 'shininess' ].value = 500\r\n\t\t\tuniforms[ 'thicknessMap' ].value = thicknessTexture\r\n\t\t\tuniforms[ 'thicknessColor' ].value = new this.$THREE.Vector3(0.5, 0.3, 0.0)\r\n\t\t\tuniforms[ 'thicknessDistortion' ].value = 0.1\r\n\t\t\tuniforms[ 'thicknessAmbient' ].value = 0.4\r\n\t\t\tuniforms[ 'thicknessAttenuation' ].value = 0.8\r\n\t\t\tuniforms[ 'thicknessPower' ].value = 2.0\r\n\t\t\tuniforms[ 'thicknessScale' ].value = 16.0\r\n\t\t\tvar material = new this.$THREE.ShaderMaterial({\r\n\t\t\t\tuniforms: uniforms,\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\t\tlights: true\r\n\t\t\t})\r\n\t\t\tmaterial.extensions.derivatives = true\r\n\t\t\t// LOADER\r\n\t\t\tvar loaderFBX = new FBXLoader()\r\n\t\t\tloaderFBX.load('static/models/fbx/stanford-bunny.fbx', (object) => {\r\n\t\t\t\tthis.model = object.children[ 0 ]\r\n\t\t\t\tthis.model.position.set(0, 0, 10)\r\n\t\t\t\tthis.model.scale.setScalar(1)\r\n\t\t\t\tthis.model.material = material\r\n\t\t\t\tthis.scene.add(this.model)\r\n\t\t\t})\r\n\t\t\tthis.initGUI(uniforms)\r\n        },\r\n        initGUI(uniforms) {\r\n\t\t\tthis.gui = new GUI()\r\n\t\t\tvar ThicknessControls = function () {\r\n\t\t\t\tthis.distortion = uniforms[ 'thicknessDistortion' ].value\r\n\t\t\t\tthis.ambient = uniforms[ 'thicknessAmbient' ].value\r\n\t\t\t\tthis.attenuation = uniforms[ 'thicknessAttenuation' ].value\r\n\t\t\t\tthis.power = uniforms[ 'thicknessPower' ].value\r\n\t\t\t\tthis.scale = uniforms[ 'thicknessScale' ].value\r\n\t\t\t}\r\n\t\t\tvar thicknessControls = new ThicknessControls()\r\n\t\t\tvar thicknessFolder = this.gui.addFolder('Thickness Control')\r\n\t\t\tthicknessFolder.add(thicknessControls, 'distortion').min(0.01).max(1).step(0.01).onChange(() => {\r\n\t\t\t\tuniforms[ 'thicknessDistortion' ].value = thicknessControls.distortion\r\n\t\t\t})\r\n\t\t\tthicknessFolder.add(thicknessControls, 'ambient').min(0.01).max(5.0).step(0.05).onChange(() => {\r\n\t\t\t\tuniforms[ 'thicknessAmbient' ].value = thicknessControls.ambient\r\n\t\t\t})\r\n\t\t\tthicknessFolder.add(thicknessControls, 'attenuation').min(0.01).max(5.0).step(0.05).onChange(() => {\r\n\t\t\t\tuniforms[ 'thicknessAttenuation' ].value = thicknessControls.attenuation\r\n\t\t\t})\r\n\t\t\tthicknessFolder.add(thicknessControls, 'power').min(0.01).max(16.0).step(0.1).onChange(() => {\r\n\t\t\t\tuniforms[ 'thicknessPower' ].value = thicknessControls.power\r\n\t\t\t})\r\n\t\t\tthicknessFolder.add(thicknessControls, 'scale').min(0.01).max(50.0).step(0.1).onChange(() => {\r\n\t\t\t\tuniforms[ 'thicknessScale' ].value = thicknessControls.scale\r\n\t\t\t})\r\n\t\t\tthicknessFolder.open()\r\n        },\r\n        onWindowResize() {\r\n\t\t\tthis.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n\t\t\trequestAnimationFrame(this.animate)\r\n\t\t\tthis.render()\r\n\t\t\tthis.stats.update()\r\n        },\r\n        render() {\r\n\t\t\tif (this.model) this.model.rotation.y = performance.now() / 5000\r\n\t\t\tthis.renderer.render(this.scene, this.camera)\r\n\t\t}\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsSubsurfaceScattering-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsSubsurfaceScattering.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsSubsurfaceScattering-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" \"),_c('br'),_vm._v(\"Fast subsurface scattering in Blinn-Phong shading demo\"),_c('br'),_vm._v(\"\\n        [Thanks for the art support from \"),_c('a',{attrs:{\"href\":\"https://github.com/shaochun\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Shaochun Lin\")]),_vm._v(\"]\\n    \")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-63623c2c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsSubsurfaceScattering.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-63623c2c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsSubsurfaceScattering.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsSubsurfaceScattering.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsSubsurfaceScattering.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-63623c2c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsSubsurfaceScattering.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-63623c2c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsSubsurfaceScattering.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}