{"version":3,"sources":["webpack:///src/views/camera/webglCameraLogarithmicdepthbuffer.vue","webpack:///./src/views/camera/webglCameraLogarithmicdepthbuffer.vue?4d8e","webpack:///./src/views/camera/webglCameraLogarithmicdepthbuffer.vue"],"names":["webglCameraLogarithmicdepthbuffer","data","NEAR","FAR","SCREEN_WIDTH","SCREEN_HEIGHT","screensplit","screensplit_right","mouse","zoompos","minzoomspeed","zoomspeed","container","border","stats","objects","labeldata","size","scale","label","mounted","this","$webglInnerWidth","window","innerHeight","init","methods","document","getElementById","that","$THREE","FontLoader","load","font","scene","initScene","normal","initView","logzbuf","animate","$Stats","dom","style","left","appendChild","addEventListener","onBorderPointerDown","onMouseMove","onWindowResize","onMouseWheel","name","logDepthBuf","framecontainer","camera","PerspectiveCamera","add","renderer","WebGLRenderer","antialias","logarithmicDepthBuffer","setPixelRatio","devicePixelRatio","setSize","domElement","position","id","Scene","AmbientLight","light","DirectionalLight","set","materialargs","color","specular","shininess","emissive","geometry","SphereBufferGeometry","i","length","labelgeo","TextBufferGeometry","height","computeBoundingSphere","translate","boundingSphere","radius","Color","setHSL","Math","random","material","MeshPhongMaterial","group","Group","z","textmesh","Mesh","y","dotmesh","multiplyScalar","updateRendererSizes","aspect","updateProjectionMatrix","setViewOffset","width","requestAnimationFrame","render","minzoom","maxzoom","damping","abs","zoom","MathUtils","clamp","pow","E","log","x","sin","PI","cos","lookAt","copy","quaternion","update","onBorderPointerMove","onBorderPointerUp","ev","max","min","clientX","removeEventListener","clientY","amount","deltaY","dir","camera_webglCameraLogarithmicdepthbuffer","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/189.78e8194fd534865152c8.js","sourcesContent":["<template>\r\n    <div class=\"webglCameraLogarithmicdepthbuffer-container\">\r\n        <div id=\"container\">\r\n\t\t\t<div id=\"container_normal\"><h2 class=\"renderer_label\">normal z-buffer</h2></div>\r\n\t\t\t<div id=\"container_logzbuf\"><h2 class=\"renderer_label\">logarithmic z-buffer</h2></div>\r\n\t\t\t<div id=\"renderer_border\"></div>\r\n\t\t</div>\r\n\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - cameras - logarithmic depth buffer<br/>\r\n\t\t\tmousewheel to dolly out\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 1 micrometer to 100 billion light years in one scene, with 1 unit: 1 meter?  preposterous!  and yet...\r\n            NEAR: 1e-6,\r\n            FAR: 1e27,\r\n\t\t\tSCREEN_WIDTH: null,\r\n\t\t\tSCREEN_HEIGHT: null,\r\n            screensplit: .25,\r\n            screensplit_right: 0,\r\n\t\t\tmouse: [.5, .5],\r\n            zoompos: -100,\r\n            minzoomspeed: .015,\r\n\t\t\tzoomspeed: null,\r\n            container: null,\r\n            border: null,\r\n            stats: null,\r\n\t\t\tobjects: {},\r\n\t\t\t// Generate a number of text labels, from 1µm in size up to 100,000,000 light years\r\n\t\t\t// Try to use some descriptive real-world examples of objects at each scale\r\n\t\t\tlabeldata: [\r\n\t\t\t\t{ size: .01, scale: 0.0001, label: \"microscopic (1µm)\" }, // FIXME - triangulating text fails at this size, so we scale instead\r\n\t\t\t\t{ size: .01, scale: 0.1, label: \"minuscule (1mm)\" },\r\n\t\t\t\t{ size: .01, scale: 1.0, label: \"tiny (1cm)\" },\r\n\t\t\t\t{ size: 1, scale: 1.0, label: \"child-sized (1m)\" },\r\n\t\t\t\t{ size: 10, scale: 1.0, label: \"tree-sized (10m)\" },\r\n\t\t\t\t{ size: 100, scale: 1.0, label: \"building-sized (100m)\" },\r\n\t\t\t\t{ size: 1000, scale: 1.0, label: \"medium (1km)\" },\r\n\t\t\t\t{ size: 10000, scale: 1.0, label: \"city-sized (10km)\" },\r\n\t\t\t\t{ size: 3400000, scale: 1.0, label: \"moon-sized (3,400 Km)\" },\r\n\t\t\t\t{ size: 12000000, scale: 1.0, label: \"planet-sized (12,000 km)\" },\r\n\t\t\t\t{ size: 1400000000, scale: 1.0, label: \"sun-sized (1,400,000 km)\" },\r\n\t\t\t\t{ size: 7.47e12, scale: 1.0, label: \"solar system-sized (50Au)\" },\r\n\t\t\t\t{ size: 9.4605284e15, scale: 1.0, label: \"gargantuan (1 light year)\" },\r\n\t\t\t\t{ size: 3.08567758e16, scale: 1.0, label: \"ludicrous (1 parsec)\" },\r\n\t\t\t\t{ size: 1e19, scale: 1.0, label: \"mind boggling (1000 light years)\" }\r\n\t\t\t],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.SCREEN_WIDTH = this.$webglInnerWidth\r\n        this.SCREEN_HEIGHT = window.innerHeight\r\n        this.zoomspeed = this.minzoomspeed\r\n        this.init()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.getElementById('container')\r\n            var loader = new this.$THREE.FontLoader()\r\n            var that = this\r\n            loader.load('static/fonts/helvetiker_regular.typeface.json', (font) => {\r\n                var scene = that.initScene(font)\r\n                // Initialize two copies of the same scene, one with normal z-buffer and one with logarithmic z-buffer\r\n                that.objects.normal = that.initView(scene, 'normal', false)\r\n                that.objects.logzbuf = that.initView(scene, 'logzbuf', true)\r\n                that.animate()\r\n            })\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            // Resize border allows the user to easily compare effects of logarithmic depth buffer over the whole scene\r\n            this.border = document.getElementById('renderer_border')\r\n            this.border.addEventListener('pointerdown', this.onBorderPointerDown)\r\n            window.addEventListener('mousemove', this.onMouseMove, false)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            window.addEventListener('wheel', this.onMouseWheel, false)\r\n        },\r\n        initView(scene, name, logDepthBuf) {\r\n            var framecontainer = document.getElementById('container_' + name)\r\n            var camera = new this.$THREE.PerspectiveCamera(50, this.screensplit * this.SCREEN_WIDTH / this.SCREEN_HEIGHT, this.NEAR, this.FAR)\r\n            scene.add(camera)\r\n            var renderer = new this.$THREE.WebGLRenderer({ antialias: true, logarithmicDepthBuffer: logDepthBuf })\r\n            renderer.setPixelRatio(window.devicePixelRatio)\r\n            renderer.setSize(this.SCREEN_WIDTH / 2, this.SCREEN_HEIGHT)\r\n            renderer.domElement.style.position = \"relative\"\r\n            renderer.domElement.id = 'renderer_' + name\r\n            framecontainer.appendChild(renderer.domElement)\r\n            return { container: framecontainer, renderer: renderer, scene: scene, camera: camera }\r\n        },\r\n        initScene(font) {\r\n            var scene = new this.$THREE.Scene()\r\n            scene.add(new this.$THREE.AmbientLight(0x222222))\r\n            var light = new this.$THREE.DirectionalLight(0xffffff, 1)\r\n            light.position.set(100, 100, 100)\r\n            scene.add(light)\r\n            var materialargs = {\r\n                color: 0xffffff,\r\n                specular: 0x050505,\r\n                shininess: 50,\r\n                emissive: 0x000000\r\n            }\r\n            var geometry = new this.$THREE.SphereBufferGeometry(0.5, 24, 12)\r\n            for (var i = 0; i < this.labeldata.length; i ++) {\r\n                var scale = this.labeldata[i].scale || 1\r\n                var labelgeo = new this.$THREE.TextBufferGeometry(this.labeldata[i].label, {\r\n                    font: font,\r\n                    size: this.labeldata[i].size,\r\n                    height: this.labeldata[i].size / 2\r\n                })\r\n                labelgeo.computeBoundingSphere()\r\n                // center text\r\n                labelgeo.translate(- labelgeo.boundingSphere.radius, 0, 0)\r\n                materialargs.color = new this.$THREE.Color().setHSL(Math.random(), 0.5, 0.5)\r\n                var material = new this.$THREE.MeshPhongMaterial(materialargs)\r\n                var group = new this.$THREE.Group()\r\n                group.position.z = - this.labeldata[i].size * scale\r\n                scene.add(group)\r\n                var textmesh = new this.$THREE.Mesh(labelgeo, material)\r\n                textmesh.scale.set(scale, scale, scale)\r\n                textmesh.position.z = - this.labeldata[i].size * scale\r\n                textmesh.position.y = this.labeldata[i].size / 4 * scale\r\n                group.add(textmesh)\r\n                var dotmesh = new this.$THREE.Mesh(geometry, material)\r\n                dotmesh.position.y = - this.labeldata[i].size / 4 * scale\r\n                dotmesh.scale.multiplyScalar(this.labeldata[i].size * scale)\r\n                group.add(dotmesh)\r\n            }\r\n            return scene\r\n        },\r\n        updateRendererSizes() {\r\n            // Recalculate size for both renderers when screen size or split location changes\r\n            this.SCREEN_WIDTH = this.$webglInnerWidth\r\n            this.SCREEN_HEIGHT = window.innerHeight\r\n            this.screensplit_right = 1 - this.screensplit\r\n            this.objects.normal.renderer.setSize(this.screensplit * this.SCREEN_WIDTH, this.SCREEN_HEIGHT)\r\n            this.objects.normal.camera.aspect = this.screensplit * this.SCREEN_WIDTH / this.SCREEN_HEIGHT\r\n            this.objects.normal.camera.updateProjectionMatrix()\r\n            this.objects.normal.camera.setViewOffset(this.SCREEN_WIDTH, this.SCREEN_HEIGHT, 0, 0, this.SCREEN_WIDTH * this.screensplit, this.SCREEN_HEIGHT)\r\n            this.objects.normal.container.style.width = (this.screensplit * 100) + '%'\r\n            this.objects.logzbuf.renderer.setSize(this.screensplit_right * this.SCREEN_WIDTH, this.SCREEN_HEIGHT)\r\n            this.objects.logzbuf.camera.aspect = this.screensplit_right * this.SCREEN_WIDTH / this.SCREEN_HEIGHT\r\n            this.objects.logzbuf.camera.updateProjectionMatrix()\r\n            this.objects.logzbuf.camera.setViewOffset(this.SCREEN_WIDTH, this.SCREEN_HEIGHT, this.SCREEN_WIDTH * this.screensplit, 0, this.SCREEN_WIDTH * this.screensplit_right, this.SCREEN_HEIGHT)\r\n            this.objects.logzbuf.container.style.width = (this.screensplit_right * 100) + '%'\r\n            this.border.style.left = (this.screensplit * 100) + \"%\"\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n        },\r\n        render() {\r\n            // Put some limits on zooming\r\n            var minzoom = this.labeldata[0].size * this.labeldata[0].scale * 1\r\n            var maxzoom = this.labeldata[this.labeldata.length - 1].size * this.labeldata[this.labeldata.length - 1].scale * 100\r\n            var damping = (Math.abs(this.zoomspeed) > this.minzoomspeed ? .95 : 1.0)\r\n            // Zoom out faster the further out you go\r\n            var zoom = this.$THREE.MathUtils.clamp(Math.pow(Math.E, this.zoompos), minzoom, maxzoom)\r\n            this.zoompos = Math.log(zoom)\r\n            // Slow down quickly at the zoom limits\r\n            if ((zoom == minzoom && this.zoomspeed < 0) || (zoom == maxzoom && this.zoomspeed > 0)) {\r\n                damping = .85\r\n            }\r\n            this.zoompos += this.zoomspeed\r\n            this.zoomspeed *= damping\r\n            this.objects.normal.camera.position.x = Math.sin(.5 * Math.PI * (this.mouse[0] - .5)) * zoom\r\n            this.objects.normal.camera.position.y = Math.sin(.25 * Math.PI * (this.mouse[1] - .5)) * zoom\r\n            this.objects.normal.camera.position.z = Math.cos(.5 * Math.PI * (this.mouse[0] - .5)) * zoom\r\n            this.objects.normal.camera.lookAt(this.objects.normal.scene.position)\r\n            // Clone camera settings across both scenes\r\n            this.objects.logzbuf.camera.position.copy(this.objects.normal.camera.position)\r\n            this.objects.logzbuf.camera.quaternion.copy(this.objects.normal.camera.quaternion)\r\n            // Update renderer sizes if the split has changed\r\n            if (this.screensplit_right != 1 - this.screensplit) {\r\n                this.updateRendererSizes()\r\n            }\r\n            this.objects.normal.renderer.render(this.objects.normal.scene, this.objects.normal.camera)\r\n            this.objects.logzbuf.renderer.render(this.objects.logzbuf.scene, this.objects.logzbuf.camera)\r\n            this.stats.update()\r\n        },\r\n        onWindowResize() {\r\n            this.updateRendererSizes()\r\n        },\r\n        onBorderPointerDown() {\r\n            // activate draggable window resizing bar\r\n            window.addEventListener(\"pointermove\", this.onBorderPointerMove)\r\n            window.addEventListener(\"pointerup\", this.onBorderPointerUp)\r\n        },\r\n        onBorderPointerMove(ev) {\r\n            this.screensplit = Math.max(0, Math.min(1, (ev.clientX - 281) / this.$webglInnerWidth))\r\n        },\r\n        onBorderPointerUp() {\r\n            window.removeEventListener(\"pointermove\", this.onBorderPointerMove)\r\n            window.removeEventListener(\"pointerup\", this.onBorderPointerUp)\r\n        },\r\n        onMouseMove(ev) {\r\n            this.mouse[0] = (ev.clientX - 281) / this.$webglInnerWidth\r\n            this.mouse[1] = ev.clientY / window.innerHeight\r\n        },\r\n        onMouseWheel(ev) {\r\n            var amount = ev.deltaY\r\n            if (amount === 0) return\r\n            var dir = amount / Math.abs(amount)\r\n            this.zoomspeed = dir / 10\r\n            // Slow down default zoom speed after user starts zooming, to give them more control\r\n            this.minzoomspeed = 0.001\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglCameraLogarithmicdepthbuffer-this {\r\n    position: relative;\r\n    width: 100%;\r\n    touch-action: none;\r\n}\r\n.renderer_label {\r\n    position: absolute;\r\n    bottom: 1em;\r\n    width: 100%;\r\n    color: white;\r\n    z-index: 10;\r\n    display: block;\r\n    text-align: center;\r\n}\r\n\r\n#container {\r\n    display: flex;\r\n}\r\n\r\n#container_normal {\r\n    width: 50%;\r\n    display: inline-block;\r\n    position: relative;\r\n}\r\n\r\n#container_logzbuf {\r\n    width: 50%;\r\n    display: inline-block;\r\n    position: relative;\r\n}\r\n\r\n#renderer_border {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 68% !important;\r\n    bottom: 0;\r\n    width: 2px;\r\n    z-index: 10;\r\n    opacity: .8;\r\n    background: #ccc;\r\n    border: 1px inset #ccc;\r\n    cursor: col-resize;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/camera/webglCameraLogarithmicdepthbuffer.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglCameraLogarithmicdepthbuffer-container\"},[_c('div',{attrs:{\"id\":\"container\"}},[_c('div',{attrs:{\"id\":\"container_normal\"}},[_c('h2',{staticClass:\"renderer_label\"},[_vm._v(\"normal z-buffer\")])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container_logzbuf\"}},[_c('h2',{staticClass:\"renderer_label\"},[_vm._v(\"logarithmic z-buffer\")])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"renderer_border\"}})]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - cameras - logarithmic depth buffer\"),_c('br'),_vm._v(\"\\n\\t\\t\\tmousewheel to dolly out\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6048e269\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/camera/webglCameraLogarithmicdepthbuffer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6048e269\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglCameraLogarithmicdepthbuffer.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglCameraLogarithmicdepthbuffer.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglCameraLogarithmicdepthbuffer.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6048e269\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglCameraLogarithmicdepthbuffer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6048e269\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/camera/webglCameraLogarithmicdepthbuffer.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}