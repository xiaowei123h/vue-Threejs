{"version":3,"sources":["webpack:///./src/components/jsm/objects/Water2.js","webpack:///src/views/water/webglWater.vue","webpack:///./src/views/water/webglWater.vue?f832","webpack:///./src/views/water/webglWater.vue"],"names":["__webpack_require__","d","__webpack_exports__","Water","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","__WEBPACK_IMPORTED_MODULE_1__objects_Reflector_js__","__WEBPACK_IMPORTED_MODULE_2__objects_Refractor_js__","geometry","options","Mesh","call","this","type","scope","color","undefined","Color","textureWidth","textureHeight","clipBias","flowDirection","Vector2","flowSpeed","reflectivity","scale","shader","WaterShader","encoding","LinearEncoding","textureLoader","TextureLoader","flowMap","normalMap0","load","normalMap1","cycle","halfCycle","textureMatrix","Matrix4","clock","Clock","Reflector","Refractor","reflector","refractor","matrixAutoUpdate","material","ShaderMaterial","uniforms","UniformsUtils","merge","UniformsLib","vertexShader","fragmentShader","transparent","fog","defines","USE_FLOWMAP","value","wrapS","wrapT","RepeatWrapping","getRenderTarget","texture","x","y","z","w","onBeforeRender","renderer","scene","camera","delta","config","set","multiply","projectionMatrix","matrixWorldInverse","matrixWorld","updateTextureMatrix","getDelta","visible","copy","console","error","prototype","Object","create","constructor","tReflectionMap","tRefractionMap","tNormalMap0","tNormalMap1","Vector4","join","webglWater","data","water","torusKnot","params","flowX","flowY","gui","mounted","init","animate","beforeDestroy","destroy","methods","_this","$THREE","Scene","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","lookAt","torusKnotGeometry","TorusKnotBufferGeometry","torusKnotMaterial","MeshNormalMaterial","add","groundGeometry","PlaneBufferGeometry","groundMaterial","MeshStandardMaterial","roughness","metalness","ground","rotation","Math","PI","map","anisotropy","repeat","needsUpdate","waterGeometry","Water2","cubeTextureLoader","CubeTextureLoader","setPath","cubeTexture","background","ambientLight","AmbientLight","directionalLight","DirectionalLight","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","document","getElementsByClassName","appendChild","domElement","dat_gui_module","addColor","onChange","step","normalize","open","controls","OrbitControls","minDistance","maxDistance","addEventListener","onResize","$onWindowResize","requestAnimationFrame","render","water_webglWater","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/19.a3803fddc81983d56951.js","sourcesContent":["import {\r\n\tClock,\r\n\tColor,\r\n\tLinearEncoding,\r\n\tMatrix4,\r\n\tMesh,\r\n\tRepeatWrapping,\r\n\tShaderMaterial,\r\n\tTextureLoader,\r\n\tUniformsLib,\r\n\tUniformsUtils,\r\n\tVector2,\r\n\tVector4\r\n} from \"@/components/build/three.module.js\";\r\nimport { Reflector } from \"../objects/Reflector.js\";\r\nimport { Refractor } from \"../objects/Refractor.js\";\r\n\r\n/**\r\n * References:\r\n *\thttp://www.valvesoftware.com/publications/2010/siggraph2010_vlachos_waterflow.pdf\r\n * \thttp://graphicsrunner.blogspot.de/2010/08/water-using-flow-maps.html\r\n *\r\n */\r\n\r\nvar Water = function ( geometry, options ) {\r\n\r\n\tMesh.call( this, geometry );\r\n\r\n\tthis.type = 'Water';\r\n\r\n\tvar scope = this;\r\n\r\n\toptions = options || {};\r\n\r\n\tvar color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0xFFFFFF );\r\n\tvar textureWidth = options.textureWidth || 512;\r\n\tvar textureHeight = options.textureHeight || 512;\r\n\tvar clipBias = options.clipBias || 0;\r\n\tvar flowDirection = options.flowDirection || new Vector2( 1, 0 );\r\n\tvar flowSpeed = options.flowSpeed || 0.03;\r\n\tvar reflectivity = options.reflectivity || 0.02;\r\n\tvar scale = options.scale || 1;\r\n\tvar shader = options.shader || Water.WaterShader;\r\n\tvar encoding = options.encoding !== undefined ? options.encoding : LinearEncoding;\r\n\r\n\tvar textureLoader = new TextureLoader();\r\n\r\n\tvar flowMap = options.flowMap || undefined;\r\n\tvar normalMap0 = options.normalMap0 || textureLoader.load( 'textures/water/Water_1_M_Normal.jpg' );\r\n\tvar normalMap1 = options.normalMap1 || textureLoader.load( 'textures/water/Water_2_M_Normal.jpg' );\r\n\r\n\tvar cycle = 0.15; // a cycle of a flow map phase\r\n\tvar halfCycle = cycle * 0.5;\r\n\tvar textureMatrix = new Matrix4();\r\n\tvar clock = new Clock();\r\n\r\n\t// internal components\r\n\r\n\tif ( Reflector === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.Water: Required component Reflector not found.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tif ( Refractor === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.Water: Required component Refractor not found.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar reflector = new Reflector( geometry, {\r\n\t\ttextureWidth: textureWidth,\r\n\t\ttextureHeight: textureHeight,\r\n\t\tclipBias: clipBias,\r\n\t\tencoding: encoding\r\n\t} );\r\n\r\n\tvar refractor = new Refractor( geometry, {\r\n\t\ttextureWidth: textureWidth,\r\n\t\ttextureHeight: textureHeight,\r\n\t\tclipBias: clipBias,\r\n\t\tencoding: encoding\r\n\t} );\r\n\r\n\treflector.matrixAutoUpdate = false;\r\n\trefractor.matrixAutoUpdate = false;\r\n\r\n\t// material\r\n\r\n\tthis.material = new ShaderMaterial( {\r\n\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\tUniformsLib[ 'fog' ],\r\n\t\t\tshader.uniforms\r\n\t\t] ),\r\n\t\tvertexShader: shader.vertexShader,\r\n\t\tfragmentShader: shader.fragmentShader,\r\n\t\ttransparent: true,\r\n\t\tfog: true\r\n\t} );\r\n\r\n\tif ( flowMap !== undefined ) {\r\n\r\n\t\tthis.material.defines.USE_FLOWMAP = '';\r\n\t\tthis.material.uniforms[ \"tFlowMap\" ] = {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: flowMap\r\n\t\t};\r\n\r\n\t} else {\r\n\r\n\t\tthis.material.uniforms[ \"flowDirection\" ] = {\r\n\t\t\ttype: 'v2',\r\n\t\t\tvalue: flowDirection\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// maps\r\n\r\n\tnormalMap0.wrapS = normalMap0.wrapT = RepeatWrapping;\r\n\tnormalMap1.wrapS = normalMap1.wrapT = RepeatWrapping;\r\n\r\n\tthis.material.uniforms[ \"tReflectionMap\" ].value = reflector.getRenderTarget().texture;\r\n\tthis.material.uniforms[ \"tRefractionMap\" ].value = refractor.getRenderTarget().texture;\r\n\tthis.material.uniforms[ \"tNormalMap0\" ].value = normalMap0;\r\n\tthis.material.uniforms[ \"tNormalMap1\" ].value = normalMap1;\r\n\r\n\t// water\r\n\r\n\tthis.material.uniforms[ \"color\" ].value = color;\r\n\tthis.material.uniforms[ \"reflectivity\" ].value = reflectivity;\r\n\tthis.material.uniforms[ \"textureMatrix\" ].value = textureMatrix;\r\n\r\n\t// inital values\r\n\r\n\tthis.material.uniforms[ \"config\" ].value.x = 0; // flowMapOffset0\r\n\tthis.material.uniforms[ \"config\" ].value.y = halfCycle; // flowMapOffset1\r\n\tthis.material.uniforms[ \"config\" ].value.z = halfCycle; // halfCycle\r\n\tthis.material.uniforms[ \"config\" ].value.w = scale; // scale\r\n\r\n\t// functions\r\n\r\n\tfunction updateTextureMatrix( camera ) {\r\n\r\n\t\ttextureMatrix.set(\r\n\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t);\r\n\r\n\t\ttextureMatrix.multiply( camera.projectionMatrix );\r\n\t\ttextureMatrix.multiply( camera.matrixWorldInverse );\r\n\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t}\r\n\r\n\tfunction updateFlow() {\r\n\r\n\t\tvar delta = clock.getDelta();\r\n\t\tvar config = scope.material.uniforms[ \"config\" ];\r\n\r\n\t\tconfig.value.x += flowSpeed * delta; // flowMapOffset0\r\n\t\tconfig.value.y = config.value.x + halfCycle; // flowMapOffset1\r\n\r\n\t\t// Important: The distance between offsets should be always the value of \"halfCycle\".\r\n\t\t// Moreover, both offsets should be in the range of [ 0, cycle ].\r\n\t\t// This approach ensures a smooth water flow and avoids \"reset\" effects.\r\n\r\n\t\tif ( config.value.x >= cycle ) {\r\n\r\n\t\t\tconfig.value.x = 0;\r\n\t\t\tconfig.value.y = halfCycle;\r\n\r\n\t\t} else if ( config.value.y >= cycle ) {\r\n\r\n\t\t\tconfig.value.y = config.value.y - cycle;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\tupdateTextureMatrix( camera );\r\n\t\tupdateFlow();\r\n\r\n\t\tscope.visible = false;\r\n\r\n\t\treflector.matrixWorld.copy( scope.matrixWorld );\r\n\t\trefractor.matrixWorld.copy( scope.matrixWorld );\r\n\r\n\t\treflector.onBeforeRender( renderer, scene, camera );\r\n\t\trefractor.onBeforeRender( renderer, scene, camera );\r\n\r\n\t\tscope.visible = true;\r\n\r\n\t};\r\n\r\n};\r\n\r\nWater.prototype = Object.create( Mesh.prototype );\r\nWater.prototype.constructor = Water;\r\n\r\nWater.WaterShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'color': {\r\n\t\t\ttype: 'c',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'reflectivity': {\r\n\t\t\ttype: 'f',\r\n\t\t\tvalue: 0\r\n\t\t},\r\n\r\n\t\t'tReflectionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tRefractionMap': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap0': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tNormalMap1': {\r\n\t\t\ttype: 't',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\ttype: 'm4',\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'config': {\r\n\t\t\ttype: 'v4',\r\n\t\t\tvalue: new Vector4()\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t'#include <common>',\r\n\t\t'#include <fog_pars_vertex>',\r\n\t\t'#include <logdepthbuf_pars_vertex>',\r\n\r\n\t\t'uniform mat4 textureMatrix;',\r\n\r\n\t\t'varying vec4 vCoord;',\r\n\t\t'varying vec2 vUv;',\r\n\t\t'varying vec3 vToEye;',\r\n\r\n\t\t'void main() {',\r\n\r\n\t\t'\tvUv = uv;',\r\n\t\t'\tvCoord = textureMatrix * vec4( position, 1.0 );',\r\n\r\n\t\t'\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\r\n\t\t'\tvToEye = cameraPosition - worldPosition.xyz;',\r\n\r\n\t\t'\tvec4 mvPosition =  viewMatrix * worldPosition;', // used in fog_vertex\r\n\t\t'\tgl_Position = projectionMatrix * mvPosition;',\r\n\r\n\t\t'\t#include <logdepthbuf_vertex>',\r\n\t\t'\t#include <fog_vertex>',\r\n\r\n\t\t'}'\r\n\r\n\t].join( '\\n' ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t'#include <common>',\r\n\t\t'#include <fog_pars_fragment>',\r\n\t\t'#include <logdepthbuf_pars_fragment>',\r\n\r\n\t\t'uniform sampler2D tReflectionMap;',\r\n\t\t'uniform sampler2D tRefractionMap;',\r\n\t\t'uniform sampler2D tNormalMap0;',\r\n\t\t'uniform sampler2D tNormalMap1;',\r\n\r\n\t\t'#ifdef USE_FLOWMAP',\r\n\t\t'\tuniform sampler2D tFlowMap;',\r\n\t\t'#else',\r\n\t\t'\tuniform vec2 flowDirection;',\r\n\t\t'#endif',\r\n\r\n\t\t'uniform vec3 color;',\r\n\t\t'uniform float reflectivity;',\r\n\t\t'uniform vec4 config;',\r\n\r\n\t\t'varying vec4 vCoord;',\r\n\t\t'varying vec2 vUv;',\r\n\t\t'varying vec3 vToEye;',\r\n\r\n\t\t'void main() {',\r\n\r\n\t\t'\t#include <logdepthbuf_fragment>',\r\n\r\n\t\t'\tfloat flowMapOffset0 = config.x;',\r\n\t\t'\tfloat flowMapOffset1 = config.y;',\r\n\t\t'\tfloat halfCycle = config.z;',\r\n\t\t'\tfloat scale = config.w;',\r\n\r\n\t\t'\tvec3 toEye = normalize( vToEye );',\r\n\r\n\t\t// determine flow direction\r\n\t\t'\tvec2 flow;',\r\n\t\t'\t#ifdef USE_FLOWMAP',\r\n\t\t'\t\tflow = texture2D( tFlowMap, vUv ).rg * 2.0 - 1.0;',\r\n\t\t'\t#else',\r\n\t\t'\t\tflow = flowDirection;',\r\n\t\t'\t#endif',\r\n\t\t'\tflow.x *= - 1.0;',\r\n\r\n\t\t// sample normal maps (distort uvs with flowdata)\r\n\t\t'\tvec4 normalColor0 = texture2D( tNormalMap0, ( vUv * scale ) + flow * flowMapOffset0 );',\r\n\t\t'\tvec4 normalColor1 = texture2D( tNormalMap1, ( vUv * scale ) + flow * flowMapOffset1 );',\r\n\r\n\t\t// linear interpolate to get the final normal color\r\n\t\t'\tfloat flowLerp = abs( halfCycle - flowMapOffset0 ) / halfCycle;',\r\n\t\t'\tvec4 normalColor = mix( normalColor0, normalColor1, flowLerp );',\r\n\r\n\t\t// calculate normal vector\r\n\t\t'\tvec3 normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );',\r\n\r\n\t\t// calculate the fresnel term to blend reflection and refraction maps\r\n\t\t'\tfloat theta = max( dot( toEye, normal ), 0.0 );',\r\n\t\t'\tfloat reflectance = reflectivity + ( 1.0 - reflectivity ) * pow( ( 1.0 - theta ), 5.0 );',\r\n\r\n\t\t// calculate final uv coords\r\n\t\t'\tvec3 coord = vCoord.xyz / vCoord.w;',\r\n\t\t'\tvec2 uv = coord.xy + coord.z * normal.xz * 0.05;',\r\n\r\n\t\t'\tvec4 reflectColor = texture2D( tReflectionMap, vec2( 1.0 - uv.x, uv.y ) );',\r\n\t\t'\tvec4 refractColor = texture2D( tRefractionMap, uv );',\r\n\r\n\t\t// multiply water color with the mix of both textures\r\n\t\t'\tgl_FragColor = vec4( color, 1.0 ) * mix( refractColor, reflectColor, reflectance );',\r\n\r\n\t\t'\t#include <tonemapping_fragment>',\r\n\t\t'\t#include <encodings_fragment>',\r\n\t\t'\t#include <fog_fragment>',\r\n\r\n\t\t'}'\r\n\r\n\t].join( '\\n' )\r\n};\r\n\r\nexport { Water };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/objects/Water2.js","<template>\r\n    <div class=\"webglWater-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener noreferrer\">three.js</a> - water\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { Water } from '@/components/jsm/objects/Water2.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            scene: null,\r\n            camera: null,\r\n            clock: null,\r\n            renderer: null,\r\n            water: null,\r\n\t\t\ttorusKnot: null,\r\n\t\t\tparams: {\r\n\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\tscale: 4,\r\n\t\t\t\tflowX: 1,\r\n\t\t\t\tflowY: 1\r\n            },\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            // scene\r\n            this.scene = new this.$THREE.Scene()\r\n            // camera\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 0.1, 200)\r\n            this.camera.position.set(- 15, 7, 15)\r\n            this.camera.lookAt(this.scene.position)\r\n            // clock\r\n            this.clock = new this.$THREE.Clock()\r\n            // mesh\r\n            var torusKnotGeometry = new this.$THREE.TorusKnotBufferGeometry(3, 1, 256, 32)\r\n            var torusKnotMaterial = new this.$THREE.MeshNormalMaterial()\r\n            this.torusKnot = new this.$THREE.Mesh(torusKnotGeometry, torusKnotMaterial)\r\n            this.torusKnot.position.y = 4\r\n            this.torusKnot.scale.set(0.5, 0.5, 0.5)\r\n            this.scene.add(this.torusKnot)\r\n            // ground\r\n            var groundGeometry = new this.$THREE.PlaneBufferGeometry(20, 20)\r\n            var groundMaterial = new this.$THREE.MeshStandardMaterial({ roughness: 0.8, metalness: 0.4 })\r\n            var ground = new this.$THREE.Mesh(groundGeometry, groundMaterial)\r\n            ground.rotation.x = Math.PI * - 0.5\r\n            this.scene.add(ground)\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            textureLoader.load('static/textures/hardwood2_diffuse.jpg', (map) => {\r\n                map.wrapS = this.$THREE.RepeatWrapping\r\n                map.wrapT = this.$THREE.RepeatWrapping\r\n                map.anisotropy = 16\r\n                map.repeat.set(4, 4)\r\n                groundMaterial.map = map\r\n                groundMaterial.needsUpdate = true\r\n            })\r\n            // water\r\n            var waterGeometry = new this.$THREE.PlaneBufferGeometry(20, 20)\r\n            this.water = new Water(waterGeometry, {\r\n                color: this.params.color,\r\n                scale: this.params.scale,\r\n                flowDirection: new this.$THREE.Vector2(this.params.flowX, this.params.flowY),\r\n                textureWidth: 1024,\r\n                textureHeight: 1024\r\n            })\r\n            this.water.position.y = 1\r\n            this.water.rotation.x = Math.PI * - 0.5\r\n            this.scene.add(this.water)\r\n            // skybox\r\n            var cubeTextureLoader = new this.$THREE.CubeTextureLoader()\r\n            cubeTextureLoader.setPath('static/textures/cube/Park2/')\r\n            var cubeTexture = cubeTextureLoader.load([\r\n                \"posx.jpg\", \"negx.jpg\",\r\n                \"posy.jpg\", \"negy.jpg\",\r\n                \"posz.jpg\", \"negz.jpg\"\r\n            ])\r\n            this.scene.background = cubeTexture\r\n            // light\r\n            var ambientLight = new this.$THREE.AmbientLight(0xcccccc, 0.4)\r\n            this.scene.add(ambientLight)\r\n            var directionalLight = new this.$THREE.DirectionalLight(0xffffff, 0.6)\r\n            directionalLight.position.set(- 1, 1, 1)\r\n            this.scene.add(directionalLight)\r\n            // renderer\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            document.getElementsByClassName('webglWater-container')[0].appendChild(this.renderer.domElement)\r\n            // dat.gui\r\n            this.gui = new GUI()\r\n            this.gui.addColor(this.params, 'color').onChange((value) => {\r\n                this.water.material.uniforms[ 'color' ].value.set(value)\r\n            })\r\n            this.gui.add(this.params, 'scale', 1, 10).onChange((value) => {\r\n                this.water.material.uniforms[ 'config' ].value.w = value\r\n            })\r\n            this.gui.add(this.params, 'flowX', - 1, 1).step(0.01).onChange((value) => {\r\n                this.water.material.uniforms[ 'flowDirection' ].value.x = value\r\n                this.water.material.uniforms[ 'flowDirection' ].value.normalize()\r\n            })\r\n            this.gui.add(this.params, 'flowY', - 1, 1).step(0.01).onChange((value) => {\r\n                this.water.material.uniforms[ 'flowDirection' ].value.y = value\r\n                this.water.material.uniforms[ 'flowDirection' ].value.normalize()\r\n            })\r\n            this.gui.open()\r\n            //\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 5\r\n            controls.maxDistance = 50\r\n            //\r\n            window.addEventListener('resize', this.onResize, false)\r\n        },\r\n        onResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n        },\r\n        render() {\r\n            var delta = this.clock.getDelta()\r\n            this.torusKnot.rotation.x += delta\r\n            this.torusKnot.rotation.y += delta * 0.5\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglWater-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/water/webglWater.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglWater-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"three.js\")]),_vm._v(\" - water\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4de4ddd8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/water/webglWater.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4de4ddd8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglWater.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglWater.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglWater.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4de4ddd8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglWater.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4de4ddd8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/water/webglWater.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}