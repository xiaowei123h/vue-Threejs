{"version":3,"sources":["webpack:///./src/components/jsm/postprocessing/MaskPass.js","webpack:///./src/components/jsm/postprocessing/EffectComposer.js","webpack:///./src/components/jsm/postprocessing/Pass.js","webpack:///./src/components/jsm/shaders/ConvolutionShader.js","webpack:///./src/components/jsm/postprocessing/BloomPass.js","webpack:///src/views/materials/webglMaterialsVideo.vue","webpack:///./src/views/materials/webglMaterialsVideo.vue?4d0e","webpack:///./src/views/materials/webglMaterialsVideo.vue","webpack:///./src/components/jsm/postprocessing/RenderPass.js","webpack:///./src/components/jsm/postprocessing/ShaderPass.js","webpack:///./src/components/jsm/shaders/CopyShader.js"],"names":["MaskPass","scene","camera","Pass","call","this","clear","needsSwap","inverse","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","writeValue","clearValue","context","getContext","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass","__webpack_require__","d","__webpack_exports__","EffectComposer_EffectComposer","EffectComposer","renderTarget","undefined","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","size","getSize","Vector2","_pixelRatio","getPixelRatio","_width","width","_height","height","WebGLRenderTarget","texture","name","renderTarget1","renderTarget2","clone","renderToScreen","passes","CopyShader","console","error","ShaderPass","copyPass","clock","Clock","swapBuffers","tmp","addPass","pass","push","setSize","insertPass","index","splice","isLastEnabledPass","passIndex","i","length","enabled","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","NOTEQUAL","reset","dispose","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","geometry","FullScreenQuad","OrthographicCamera","PlaneBufferGeometry","material","_mesh","Mesh","defineProperty","get","set","value","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","ConvolutionShader","defines","KERNEL_SIZE_FLOAT","KERNEL_SIZE_INT","uniforms","tDiffuse","uImageIncrement","cKernel","vertexShader","join","fragmentShader","buildKernel","sigma","gauss","x","Math","exp","values","sum","halfWidth","kernelSize","ceil","Array","BloomPass","strength","resolution","pars","renderTargetX","renderTargetY","copyShader","copyUniforms","UniformsUtils","materialCopy","ShaderMaterial","blending","AdditiveBlending","transparent","convolutionShader","convolutionUniforms","blurX","materialConvolution","toFixed","fsQuad","blurY","webglMaterialsVideo","data","container","video","mesh","composer","mouseX","mouseY","windowHalfX","windowHalfY","cube_count","meshes","materials","xgrid","ygrid","startButton","h","counter","mounted","_this","$webglInnerWidth","window","innerHeight","document","getElementById","addEventListener","init","animate","methods","_this2","remove","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","position","z","Scene","j","ox","oy","light","DirectionalLight","normalize","add","WebGLRenderer","devicePixelRatio","domElement","play","currentTime","VideoTexture","ux","uy","xsize","ysize","map","BoxBufferGeometry","change_uvs","MeshLambertMaterial","hue","saturation","setHSL","y","scale","dx","random","dy","autoClear","onDocumentMouseMove","renderModel","RenderPass","effectBloom","BloomPass_BloomPass","effectCopy","onWindowResize","innerWidth","$onWindowResize","unitx","unity","offsetx","offsety","uvs","attributes","uv","array","event","clientX","clientY","requestAnimationFrame","time","Date","now","lookAt","rotation","materials_webglMaterialsVideo","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","_v","href","target","rel","staticStyle","display","loop","crossOrigin","playsinline","src","type","Component","normalizeComponent","ssrContext","__WEBPACK_IMPORTED_MODULE_0__postprocessing_Pass_js__","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","getClearColor","getHex","getClearAlpha","setClearColor","autoClearColor","autoClearDepth","autoClearStencil","__WEBPACK_IMPORTED_MODULE_1__postprocessing_Pass_js__","shader","textureID","opacity"],"mappings":"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","file":"static/js/2.bf20eb1c93c7411d1725.js","sourcesContent":["import { Pass } from \"../postprocessing/Pass.js\";\r\n\r\nvar MaskPass = function ( scene, camera ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.scene = scene;\r\n\tthis.camera = camera;\r\n\r\n\tthis.clear = true;\r\n\tthis.needsSwap = false;\r\n\r\n\tthis.inverse = false;\r\n\r\n};\r\n\r\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: MaskPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tvar context = renderer.getContext();\r\n\t\tvar state = renderer.state;\r\n\r\n\t\t// don't update color or depth\r\n\r\n\t\tstate.buffers.color.setMask( false );\r\n\t\tstate.buffers.depth.setMask( false );\r\n\r\n\t\t// lock buffers\r\n\r\n\t\tstate.buffers.color.setLocked( true );\r\n\t\tstate.buffers.depth.setLocked( true );\r\n\r\n\t\t// set up stencil\r\n\r\n\t\tvar writeValue, clearValue;\r\n\r\n\t\tif ( this.inverse ) {\r\n\r\n\t\t\twriteValue = 0;\r\n\t\t\tclearValue = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\twriteValue = 1;\r\n\t\t\tclearValue = 0;\r\n\r\n\t\t}\r\n\r\n\t\tstate.buffers.stencil.setTest( true );\r\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\r\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\r\n\t\tstate.buffers.stencil.setClear( clearValue );\r\n\t\tstate.buffers.stencil.setLocked( true );\r\n\r\n\t\t// draw into the stencil buffer\r\n\r\n\t\trenderer.setRenderTarget( readBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\t// unlock color and depth buffer for subsequent rendering\r\n\r\n\t\tstate.buffers.color.setLocked( false );\r\n\t\tstate.buffers.depth.setLocked( false );\r\n\r\n\t\t// only render where stencil is set to 1\r\n\r\n\t\tstate.buffers.stencil.setLocked( false );\r\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\r\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\r\n\t\tstate.buffers.stencil.setLocked( true );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\nvar ClearMaskPass = function () {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.needsSwap = false;\r\n\r\n};\r\n\r\nClearMaskPass.prototype = Object.create( Pass.prototype );\r\n\r\nObject.assign( ClearMaskPass.prototype, {\r\n\r\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\trenderer.state.buffers.stencil.setLocked( false );\r\n\t\trenderer.state.buffers.stencil.setTest( false );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { MaskPass, ClearMaskPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/MaskPass.js","import {\r\n\tClock,\r\n\tLinearFilter,\r\n\tMesh,\r\n\tOrthographicCamera,\r\n\tPlaneBufferGeometry,\r\n\tRGBAFormat,\r\n\tVector2,\r\n\tWebGLRenderTarget\r\n} from \"@/components/build/three.module.js\";\r\nimport { CopyShader } from \"../shaders/CopyShader.js\";\r\nimport { ShaderPass } from \"../postprocessing/ShaderPass.js\";\r\nimport { MaskPass } from \"../postprocessing/MaskPass.js\";\r\nimport { ClearMaskPass } from \"../postprocessing/MaskPass.js\";\r\n\r\nvar EffectComposer = function ( renderer, renderTarget ) {\r\n\r\n\tthis.renderer = renderer;\r\n\r\n\tif ( renderTarget === undefined ) {\r\n\r\n\t\tvar parameters = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tformat: RGBAFormat\r\n\t\t};\r\n\r\n\t\tvar size = renderer.getSize( new Vector2() );\r\n\t\tthis._pixelRatio = renderer.getPixelRatio();\r\n\t\tthis._width = size.width;\r\n\t\tthis._height = size.height;\r\n\r\n\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\r\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\r\n\r\n\t} else {\r\n\r\n\t\tthis._pixelRatio = 1;\r\n\t\tthis._width = renderTarget.width;\r\n\t\tthis._height = renderTarget.height;\r\n\r\n\t}\r\n\r\n\tthis.renderTarget1 = renderTarget;\r\n\tthis.renderTarget2 = renderTarget.clone();\r\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\r\n\r\n\tthis.writeBuffer = this.renderTarget1;\r\n\tthis.readBuffer = this.renderTarget2;\r\n\r\n\tthis.renderToScreen = true;\r\n\r\n\tthis.passes = [];\r\n\r\n\t// dependencies\r\n\r\n\tif ( CopyShader === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\r\n\r\n\t}\r\n\r\n\tif ( ShaderPass === undefined ) {\r\n\r\n\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\r\n\r\n\t}\r\n\r\n\tthis.copyPass = new ShaderPass( CopyShader );\r\n\r\n\tthis.clock = new Clock();\r\n\r\n};\r\n\r\nObject.assign( EffectComposer.prototype, {\r\n\r\n\tswapBuffers: function () {\r\n\r\n\t\tvar tmp = this.readBuffer;\r\n\t\tthis.readBuffer = this.writeBuffer;\r\n\t\tthis.writeBuffer = tmp;\r\n\r\n\t},\r\n\r\n\taddPass: function ( pass ) {\r\n\r\n\t\tthis.passes.push( pass );\r\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t},\r\n\r\n\tinsertPass: function ( pass, index ) {\r\n\r\n\t\tthis.passes.splice( index, 0, pass );\r\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t},\r\n\r\n\tisLastEnabledPass: function ( passIndex ) {\r\n\r\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tif ( this.passes[ i ].enabled ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\trender: function ( deltaTime ) {\r\n\r\n\t\t// deltaTime value is in seconds\r\n\r\n\t\tif ( deltaTime === undefined ) {\r\n\r\n\t\t\tdeltaTime = this.clock.getDelta();\r\n\r\n\t\t}\r\n\r\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\r\n\r\n\t\tvar maskActive = false;\r\n\r\n\t\tvar pass, i, il = this.passes.length;\r\n\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\t\tpass = this.passes[ i ];\r\n\r\n\t\t\tif ( pass.enabled === false ) continue;\r\n\r\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\r\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\r\n\r\n\t\t\tif ( pass.needsSwap ) {\r\n\r\n\t\t\t\tif ( maskActive ) {\r\n\r\n\t\t\t\t\tvar context = this.renderer.getContext();\r\n\t\t\t\t\tvar stencil = this.renderer.state.buffers.stencil;\r\n\r\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\r\n\r\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\r\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.swapBuffers();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( MaskPass !== undefined ) {\r\n\r\n\t\t\t\tif ( pass instanceof MaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = true;\r\n\r\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\r\n\r\n\t\t\t\t\tmaskActive = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t},\r\n\r\n\treset: function ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\tvar size = this.renderer.getSize( new Vector2() );\r\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\r\n\t\t\tthis._width = size.width;\r\n\t\t\tthis._height = size.height;\r\n\r\n\t\t\trenderTarget = this.renderTarget1.clone();\r\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tthis.renderTarget1.dispose();\r\n\t\tthis.renderTarget2.dispose();\r\n\t\tthis.renderTarget1 = renderTarget;\r\n\t\tthis.renderTarget2 = renderTarget.clone();\r\n\r\n\t\tthis.writeBuffer = this.renderTarget1;\r\n\t\tthis.readBuffer = this.renderTarget2;\r\n\r\n\t},\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis._width = width;\r\n\t\tthis._height = height;\r\n\r\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\r\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\r\n\r\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\r\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\r\n\r\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tsetPixelRatio: function ( pixelRatio ) {\r\n\r\n\t\tthis._pixelRatio = pixelRatio;\r\n\r\n\t\tthis.setSize( this._width, this._height );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n\r\nvar Pass = function () {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\tthis.renderToScreen = false;\r\n\r\n};\r\n\r\nObject.assign( Pass.prototype, {\r\n\r\n\tsetSize: function ( /* width, height */ ) {},\r\n\r\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\nPass.FullScreenQuad = ( function () {\r\n\r\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\r\n\r\n\tvar FullScreenQuad = function ( material ) {\r\n\r\n\t\tthis._mesh = new Mesh( geometry, material );\r\n\r\n\t};\r\n\r\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this._mesh.material;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis._mesh.material = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( FullScreenQuad.prototype, {\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis._mesh.geometry.dispose();\r\n\r\n\t\t},\r\n\r\n\t\trender: function ( renderer ) {\r\n\r\n\t\t\trenderer.render( this._mesh, camera );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn FullScreenQuad;\r\n\r\n} )();\r\n\r\nexport { EffectComposer, Pass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/EffectComposer.js","import {\r\n\tOrthographicCamera,\r\n\tPlaneBufferGeometry,\r\n\tMesh\r\n} from \"@/components/build/three.module.js\";\r\n\r\nfunction Pass() {\r\n\r\n\t// if set to true, the pass is processed by the composer\r\n\tthis.enabled = true;\r\n\r\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\r\n\tthis.needsSwap = true;\r\n\r\n\t// if set to true, the pass clears its buffer before rendering\r\n\tthis.clear = false;\r\n\r\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\r\n\tthis.renderToScreen = false;\r\n\r\n}\r\n\r\nObject.assign( Pass.prototype, {\r\n\r\n\tsetSize: function ( /* width, height */ ) {},\r\n\r\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\r\n\r\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\n\r\n// Important: It's actually a hack to put FullScreenQuad into the Pass namespace. This is only\r\n// done to make examples/js code work. Normally, FullScreenQuad should be exported\r\n// from this module like Pass.\r\n\r\nPass.FullScreenQuad = ( function () {\r\n\r\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\r\n\r\n\tvar FullScreenQuad = function ( material ) {\r\n\r\n\t\tthis._mesh = new Mesh( geometry, material );\r\n\r\n\t};\r\n\r\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this._mesh.material;\r\n\r\n\t\t},\r\n\r\n\t\tset: function ( value ) {\r\n\r\n\t\t\tthis._mesh.material = value;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tObject.assign( FullScreenQuad.prototype, {\r\n\r\n\t\tdispose: function () {\r\n\r\n\t\t\tthis._mesh.geometry.dispose();\r\n\r\n\t\t},\r\n\r\n\t\trender: function ( renderer ) {\r\n\r\n\t\t\trenderer.render( this._mesh, camera );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\treturn FullScreenQuad;\r\n\r\n} )();\r\n\r\nexport { Pass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/Pass.js","import {\r\n\tVector2\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Convolution shader\r\n * ported from o3d sample to WebGL / GLSL\r\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\r\n */\r\n\r\nvar ConvolutionShader = {\r\n\r\n\tdefines: {\r\n\r\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\r\n\t\t\"KERNEL_SIZE_INT\": \"25\"\r\n\r\n\t},\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"uImageIncrement\": { value: new Vector2( 0.001953125, 0.0 ) },\r\n\t\t\"cKernel\": { value: [] }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"uniform vec2 uImageIncrement;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform vec2 uImageIncrement;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec2 imageCoord = vUv;\",\r\n\t\t\"\tvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\r\n\r\n\t\t\"\tfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\r\n\r\n\t\t\"\t\tsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\r\n\t\t\"\t\timageCoord += uImageIncrement;\",\r\n\r\n\t\t\"\t}\",\r\n\r\n\t\t\"\tgl_FragColor = sum;\",\r\n\r\n\t\t\"}\"\r\n\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tbuildKernel: function ( sigma ) {\r\n\r\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\r\n\r\n\t\tfunction gauss( x, sigma ) {\r\n\r\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\r\n\r\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\r\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\r\n\r\n\t\tvalues = new Array( kernelSize );\r\n\t\tsum = 0.0;\r\n\t\tfor ( i = 0; i < kernelSize; ++ i ) {\r\n\r\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\r\n\t\t\tsum += values[ i ];\r\n\r\n\t\t}\r\n\r\n\t\t// normalize the kernel\r\n\r\n\t\tfor ( i = 0; i < kernelSize; ++ i ) values[ i ] /= sum;\r\n\r\n\t\treturn values;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { ConvolutionShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/ConvolutionShader.js","import {\r\n\tAdditiveBlending,\r\n\tLinearFilter,\r\n\tRGBAFormat,\r\n\tShaderMaterial,\r\n\tUniformsUtils,\r\n\tVector2,\r\n\tWebGLRenderTarget\r\n} from \"@/components/build/three.module.js\";\r\nimport { Pass } from \"../postprocessing/Pass.js\";\r\nimport { CopyShader } from \"../shaders/CopyShader.js\";\r\nimport { ConvolutionShader } from \"../shaders/ConvolutionShader.js\";\r\n\r\nvar BloomPass = function ( strength, kernelSize, sigma, resolution ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tstrength = ( strength !== undefined ) ? strength : 1;\r\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\r\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\r\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\r\n\r\n\t// render targets\r\n\r\n\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\r\n\r\n\tthis.renderTargetX = new WebGLRenderTarget( resolution, resolution, pars );\r\n\tthis.renderTargetX.texture.name = \"BloomPass.x\";\r\n\tthis.renderTargetY = new WebGLRenderTarget( resolution, resolution, pars );\r\n\tthis.renderTargetY.texture.name = \"BloomPass.y\";\r\n\r\n\t// copy material\r\n\r\n\tif ( CopyShader === undefined )\r\n\t\tconsole.error( \"BloomPass relies on CopyShader\" );\r\n\r\n\tvar copyShader = CopyShader;\r\n\r\n\tthis.copyUniforms = UniformsUtils.clone( copyShader.uniforms );\r\n\r\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\r\n\r\n\tthis.materialCopy = new ShaderMaterial( {\r\n\r\n\t\tuniforms: this.copyUniforms,\r\n\t\tvertexShader: copyShader.vertexShader,\r\n\t\tfragmentShader: copyShader.fragmentShader,\r\n\t\tblending: AdditiveBlending,\r\n\t\ttransparent: true\r\n\r\n\t} );\r\n\r\n\t// convolution material\r\n\r\n\tif ( ConvolutionShader === undefined )\r\n\t\tconsole.error( \"BloomPass relies on ConvolutionShader\" );\r\n\r\n\tvar convolutionShader = ConvolutionShader;\r\n\r\n\tthis.convolutionUniforms = UniformsUtils.clone( convolutionShader.uniforms );\r\n\r\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = BloomPass.blurX;\r\n\tthis.convolutionUniforms[ \"cKernel\" ].value = ConvolutionShader.buildKernel( sigma );\r\n\r\n\tthis.materialConvolution = new ShaderMaterial( {\r\n\r\n\t\tuniforms: this.convolutionUniforms,\r\n\t\tvertexShader: convolutionShader.vertexShader,\r\n\t\tfragmentShader: convolutionShader.fragmentShader,\r\n\t\tdefines: {\r\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\r\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tthis.needsSwap = false;\r\n\r\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\r\n\r\n};\r\n\r\nBloomPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: BloomPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\r\n\r\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( false );\r\n\r\n\t\t// Render quad with blured scene into texture (convolution pass 1)\r\n\r\n\t\tthis.fsQuad.material = this.materialConvolution;\r\n\r\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer.texture;\r\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = BloomPass.blurX;\r\n\r\n\t\trenderer.setRenderTarget( this.renderTargetX );\r\n\t\trenderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\r\n\t\t// Render quad with blured scene into texture (convolution pass 2)\r\n\r\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX.texture;\r\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = BloomPass.blurY;\r\n\r\n\t\trenderer.setRenderTarget( this.renderTargetY );\r\n\t\trenderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t// Render original scene with superimposed blur to texture\r\n\r\n\t\tthis.fsQuad.material = this.materialCopy;\r\n\r\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY.texture;\r\n\r\n\t\tif ( maskActive ) renderer.state.buffers.stencil.setTest( true );\r\n\r\n\t\trenderer.setRenderTarget( readBuffer );\r\n\t\tif ( this.clear ) renderer.clear();\r\n\t\tthis.fsQuad.render( renderer );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nBloomPass.blurX = new Vector2( 0.001953125, 0.0 );\r\nBloomPass.blurY = new Vector2( 0.0, 0.001953125 );\r\n\r\nexport { BloomPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/BloomPass.js","<template>\r\n    <div class=\"webglMaterialsVideo-container\">\r\n        <div id=\"overlay\">\r\n\t\t\t<button id=\"startButton\">Play</button>\r\n\t\t</div>\r\n\t\t<div id=\"container\"></div>\r\n\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl video demo<br/>\r\n\t\t\tplaying <a href=\"http://durian.blender.org/\" target=\"_blank\" rel=\"noopener\">sintel</a> trailer\r\n\t\t</div>\r\n\r\n\t\t<video id=\"video\" loop crossOrigin=\"anonymous\" playsinline style=\"display:none\">\r\n\t\t\t<source src=\"static/textures/sintel.ogv\" type='video/ogg; codecs=\"theora, vorbis\"'>\r\n\t\t\t<source src=\"static/textures/sintel.mp4\" type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'>\r\n\t\t</video>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from '@/components/jsm/postprocessing/ShaderPass.js'\r\nimport { BloomPass } from '@/components/jsm/postprocessing/BloomPass.js'\r\nimport { CopyShader } from '@/components/jsm/shaders/CopyShader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            video: null,\r\n            texture: null,\r\n            material: null,\r\n            mesh: null,\r\n\t\t\tcomposer: null,\r\n\t\t\tmouseX: 0,\r\n\t\t\tmouseY: 0,\r\n\t\t\twindowHalfX: null,\r\n\t\t\twindowHalfY: null,\r\n\t\t\tcube_count: null,\r\n\t\t\tmeshes: [],\r\n            materials: [],\r\n            xgrid: 20,\r\n            ygrid: 10,\r\n            startButton: null,\r\n            h: null,\r\n            counter: 1,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.windowHalfX = this.$webglInnerWidth / 2\r\n        this.windowHalfY = window.innerHeight / 2\r\n        this.startButton = document.getElementById('startButton')\r\n        this.startButton.addEventListener('click', () => {\r\n            this.init()\r\n            this.animate()\r\n        }, false)\r\n    },\r\n    methods: {\r\n        init() {\r\n            var overlay = document.getElementById('overlay')\r\n            overlay.remove()\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsVideo-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 10000)\r\n            this.camera.position.z = 500\r\n            this.scene = new this.$THREE.Scene()\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(0.5, 1, 1).normalize()\r\n            this.scene.add(light)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.video = document.getElementById('video')\r\n            this.video.play()\r\n            this.video.addEventListener('play', () => {\r\n                this.currentTime = 3\r\n            }, false)\r\n            this.texture = new this.$THREE.VideoTexture(this.video)\r\n            //\r\n            var i, j, ox, oy, geometry\r\n            var ux = 1 / this.xgrid\r\n            var uy = 1 / this.ygrid\r\n            var xsize = 480 / this.xgrid\r\n            var ysize = 204 / this.ygrid\r\n            var parameters = { color: 0xffffff, map: this.texture }\r\n            this.cube_count = 0\r\n            for (i = 0; i < this.xgrid; i ++) {\r\n                for (j = 0; j < this.ygrid; j ++) {\r\n                    ox = i\r\n                    oy = j\r\n                    geometry = new this.$THREE.BoxBufferGeometry(xsize, ysize, xsize)\r\n                    this.change_uvs(geometry, ux, uy, ox, oy)\r\n                    this.materials[ this.cube_count ] = new this.$THREE.MeshLambertMaterial(parameters)\r\n                    this.material = this.materials[ this.cube_count ]\r\n                    this.material.hue = i / this.xgrid\r\n                    this.material.saturation = 1 - j / this.ygrid\r\n                    this.material.color.setHSL(this.material.hue, this.material.saturation, 0.5)\r\n                    this.mesh = new this.$THREE.Mesh(geometry, this.material)\r\n                    this.mesh.position.x = (i - this.xgrid / 2) * xsize\r\n                    this.mesh.position.y = (j - this.ygrid / 2) * ysize\r\n                    this.mesh.position.z = 0\r\n                    this.mesh.scale.x = this.mesh.scale.y = this.mesh.scale.z = 1\r\n                    this.scene.add(this.mesh)\r\n                    this.mesh.dx = 0.001 * (0.5 - Math.random())\r\n                    this.mesh.dy = 0.001 * (0.5 - Math.random())\r\n                    this.meshes[ this.cube_count ] = this.mesh\r\n                    this.cube_count += 1\r\n                }\r\n            }\r\n            this.renderer.autoClear = false\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false)\r\n            // postprocessing\r\n            var renderModel = new RenderPass(this.scene, this.camera)\r\n            var effectBloom = new BloomPass(1.3)\r\n            var effectCopy = new ShaderPass(CopyShader)\r\n            this.composer = new EffectComposer(this.renderer)\r\n            this.composer.addPass(renderModel)\r\n            this.composer.addPass(effectBloom)\r\n            this.composer.addPass(effectCopy)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.windowHalfX = (window.innerWidth - 281) / 2\r\n            this.windowHalfY = window.innerHeight / 2\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.composer.setSize(window.innerWidth - 281, window.innerHeight)\r\n        },\r\n        change_uvs(geometry, unitx, unity, offsetx, offsety) {\r\n            var uvs = geometry.attributes.uv.array\r\n            for (var i = 0; i < uvs.length; i += 2) {\r\n                uvs[ i ] = (uvs[ i ] + offsetx) * unitx\r\n                uvs[ i + 1 ] = (uvs[ i + 1 ] + offsety) * unity\r\n            }\r\n        },\r\n        onDocumentMouseMove(event) {\r\n            this.mouseX = (event.clientX - this.windowHalfX)\r\n            this.mouseY = (event.clientY - this.windowHalfY) * 0.3\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n        },\r\n        render() {\r\n            var time = Date.now() * 0.00005\r\n            this.camera.position.x += (this.mouseX - this.camera.position.x) * 0.05\r\n            this.camera.position.y += (- this.mouseY - this.camera.position.y) * 0.05\r\n            this.camera.lookAt(this.scene.position)\r\n            for (var i = 0; i < this.cube_count; i ++) {\r\n                this.material = this.materials[ i ]\r\n                this.h = (360 * (this.material.hue + time) % 360) / 360\r\n                this.material.color.setHSL(this.h, this.material.saturation, 0.5)\r\n            }\r\n            if (this.counter % 1000 > 200) {\r\n                for (var i = 0; i < this.cube_count; i ++) {\r\n                    this.mesh = this.meshes[ i ]\r\n                    this.mesh.rotation.x += 10 * this.mesh.dx\r\n                    this.mesh.rotation.y += 10 * this.mesh.dy\r\n                    this.mesh.position.x -= 150 * this.mesh.dx\r\n                    this.mesh.position.y += 150 * this.mesh.dy\r\n                    this.mesh.position.z += 300 * this.mesh.dx\r\n                }\r\n            }\r\n            if (this.counter % 1000 === 0) {\r\n                for (var i = 0; i < this.cube_count; i ++) {\r\n                    this.mesh = this.meshes[ i ]\r\n                    this.mesh.dx *= - 1\r\n                    this.mesh.dy *= - 1\r\n                }\r\n            }\r\n            this.counter ++\r\n            this.renderer.clear()\r\n            this.composer.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsVideo-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsVideo.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsVideo-container\"},[_c('div',{attrs:{\"id\":\"overlay\"}},[_c('button',{attrs:{\"id\":\"startButton\"}},[_vm._v(\"Play\")])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl video demo\"),_c('br'),_vm._v(\"\\n\\t\\t\\tplaying \"),_c('a',{attrs:{\"href\":\"http://durian.blender.org/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"sintel\")]),_vm._v(\" trailer\\n\\t\\t\")]),_vm._v(\" \"),_c('video',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"video\",\"loop\":\"\",\"crossOrigin\":\"anonymous\",\"playsinline\":\"\"}},[_c('source',{attrs:{\"src\":\"static/textures/sintel.ogv\",\"type\":\"video/ogg; codecs=\\\"theora, vorbis\\\"\"}}),_vm._v(\" \"),_c('source',{attrs:{\"src\":\"static/textures/sintel.mp4\",\"type\":\"video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"\"}})])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-05a4ab4f\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsVideo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-05a4ab4f\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsVideo.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsVideo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsVideo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-05a4ab4f\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsVideo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-05a4ab4f\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsVideo.vue\n// module id = null\n// module chunks = ","import { Pass } from \"../postprocessing/Pass.js\";\r\n\r\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.scene = scene;\r\n\tthis.camera = camera;\r\n\r\n\tthis.overrideMaterial = overrideMaterial;\r\n\r\n\tthis.clearColor = clearColor;\r\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\r\n\r\n\tthis.clear = true;\r\n\tthis.clearDepth = false;\r\n\tthis.needsSwap = false;\r\n\r\n};\r\n\r\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: RenderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tvar oldAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\r\n\r\n\t\tif ( this.overrideMaterial !== undefined ) {\r\n\r\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\r\n\r\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\toldClearColor = renderer.getClearColor().getHex();\r\n\t\t\toldClearAlpha = renderer.getClearAlpha();\r\n\r\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearDepth ) {\r\n\r\n\t\t\trenderer.clearDepth();\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\r\n\r\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\trenderer.render( this.scene, this.camera );\r\n\r\n\t\tif ( this.clearColor ) {\r\n\r\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.overrideMaterial !== undefined ) {\r\n\r\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\r\n\r\n\t\t}\r\n\r\n\t\trenderer.autoClear = oldAutoClear;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { RenderPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/RenderPass.js","import {\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\nimport { Pass } from \"../postprocessing/Pass.js\";\r\n\r\nvar ShaderPass = function ( shader, textureID ) {\r\n\r\n\tPass.call( this );\r\n\r\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\r\n\r\n\tif ( shader instanceof ShaderMaterial ) {\r\n\r\n\t\tthis.uniforms = shader.uniforms;\r\n\r\n\t\tthis.material = shader;\r\n\r\n\t} else if ( shader ) {\r\n\r\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\r\n\t\t\tdefines: Object.assign( {}, shader.defines ),\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\r\n\r\n};\r\n\r\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\r\n\r\n\tconstructor: ShaderPass,\r\n\r\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\r\n\r\n\t\tif ( this.uniforms[ this.textureID ] ) {\r\n\r\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\r\n\r\n\t\t}\r\n\r\n\t\tthis.fsQuad.material = this.material;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { ShaderPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/ShaderPass.js","/**\r\n * Full-screen textured quad shader\r\n */\r\n\r\nvar CopyShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"opacity\": { value: 1.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform float opacity;\",\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 texel = texture2D( tDiffuse, vUv );\",\r\n\t\t\"\tgl_FragColor = opacity * texel;\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { CopyShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/CopyShader.js"],"sourceRoot":""}