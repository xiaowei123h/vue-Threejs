{"version":3,"sources":["webpack:///./src/components/jsm/modifiers/SubdivisionModifier.js","webpack:///src/views/modifier/webglModifierSubdivision.vue","webpack:///./src/views/modifier/webglModifierSubdivision.vue?a07f","webpack:///./src/views/modifier/webglModifierSubdivision.vue"],"names":["SubdivisionModifier","subdivisions","this","undefined","prototype","modify","geometry","isBufferGeometry","Geometry","fromBufferGeometry","clone","mergeVertices","repeats","smooth","computeFaceNormals","computeVertexNormals","BufferGeometry","fromGeometry","ABC","getEdge","a","b","map","Math","min","max","processEdge","vertices","face","metaVertices","edge","vertexIndexA","vertexIndexB","key","newEdge","faces","push","edges","newFace","newFaces","c","materialIndex","Face3","midpoint","abs","newUv","newUvs","oldVertices","oldFaces","oldUvs","newVertices","n","i","il","k","sourceEdges","newEdgeVertices","newSourceVertices","tmp","Vector3","newUVs","other","currentEdge","edgeVertexWeight","adjacentVertexWeight","connectedFaces","beta","sourceVertexWeight","connectingVertexWeight","connectingEdge","connectingEdges","oldVertex","newSourceVertex","hasUvs","faceVertexUvs","length","j","generateLookups","Array","addVectors","multiplyScalar","set","add","concat","edge1","edge2","edge3","uv","x0","x1","x2","sl","x3","Vector2","x4","x5","x","y","webglModifierSubdivision","data","camera","scene","renderer","stats","smoothMesh","wireframe","smoothMaterial","wireframeMaterial","faceIndices","params","gui","mounted","$THREE","MeshPhongMaterial","color","flatShading","vertexColors","MeshBasicMaterial","opacity","transparent","init","beforeDestroy","destroy","methods","_this","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","z","Scene","background","Color","light","PointLight","BufferGeometryLoader","load","bufferGeometry","material","mesh","Mesh","dat_gui_module","step","onChange","subdivide","animate","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","$Stats","dom","style","left","controls","OrbitControls","minDistance","maxDistance","addEventListener","onWindowResize","smoothGeometry","vertexIndex","hue","setHSL","dispose","updateUI","originalGeometry","getElementById","textContent","$onWindowResize","requestAnimationFrame","render","update","modifier_webglModifierSubdivision","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/203.2bdef2902ae70fb1da55.js","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFace3,\r\n\tGeometry,\r\n\tVector2,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n *\tSubdivision Geometry Modifier\r\n *\t\tusing Loop Subdivision Scheme\r\n *\r\n *\tReferences:\r\n *\t\thttp://graphics.stanford.edu/~mdfisher/subdivision.html\r\n *\t\thttp://www.holmes3d.net/graphics/subdivision/\r\n *\t\thttp://www.cs.rutgers.edu/~decarlo/readings/subdiv-sg00c.pdf\r\n *\r\n *\tKnown Issues:\r\n *\t\t- currently doesn't handle \"Sharp Edges\"\r\n */\r\n\r\nvar SubdivisionModifier = function ( subdivisions ) {\r\n\r\n\tthis.subdivisions = ( subdivisions === undefined ) ? 1 : subdivisions;\r\n\r\n};\r\n\r\n// Applies the \"modify\" pattern\r\nSubdivisionModifier.prototype.modify = function ( geometry ) {\r\n\r\n\tvar isBufferGeometry = geometry.isBufferGeometry;\r\n\r\n\tif ( isBufferGeometry ) {\r\n\r\n\t\tgeometry = new Geometry().fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry.mergeVertices( 6 );\r\n\r\n\tvar repeats = this.subdivisions;\r\n\r\n\twhile ( repeats -- > 0 ) {\r\n\r\n\t\tthis.smooth( geometry );\r\n\r\n\t}\r\n\r\n\tgeometry.computeFaceNormals();\r\n\tgeometry.computeVertexNormals();\r\n\r\n\tif ( isBufferGeometry ) {\r\n\r\n\t\treturn new BufferGeometry().fromGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n( function () {\r\n\r\n\t// Some constants\r\n\tvar ABC = [ 'a', 'b', 'c' ];\r\n\r\n\r\n\tfunction getEdge( a, b, map ) {\r\n\r\n\t\tvar vertexIndexA = Math.min( a, b );\r\n\t\tvar vertexIndexB = Math.max( a, b );\r\n\r\n\t\tvar key = vertexIndexA + \"_\" + vertexIndexB;\r\n\r\n\t\treturn map[ key ];\r\n\r\n\t}\r\n\r\n\r\n\tfunction processEdge( a, b, vertices, map, face, metaVertices ) {\r\n\r\n\t\tvar vertexIndexA = Math.min( a, b );\r\n\t\tvar vertexIndexB = Math.max( a, b );\r\n\r\n\t\tvar key = vertexIndexA + \"_\" + vertexIndexB;\r\n\r\n\t\tvar edge;\r\n\r\n\t\tif ( key in map ) {\r\n\r\n\t\t\tedge = map[ key ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertexA = vertices[ vertexIndexA ];\r\n\t\t\tvar vertexB = vertices[ vertexIndexB ];\r\n\r\n\t\t\tedge = {\r\n\r\n\t\t\t\ta: vertexA, // pointer reference\r\n\t\t\t\tb: vertexB,\r\n\t\t\t\tnewEdge: null,\r\n\t\t\t\t// aIndex: a, // numbered reference\r\n\t\t\t\t// bIndex: b,\r\n\t\t\t\tfaces: [] // pointers to face\r\n\r\n\t\t\t};\r\n\r\n\t\t\tmap[ key ] = edge;\r\n\r\n\t\t}\r\n\r\n\t\tedge.faces.push( face );\r\n\r\n\t\tmetaVertices[ a ].edges.push( edge );\r\n\t\tmetaVertices[ b ].edges.push( edge );\r\n\r\n\r\n\t}\r\n\r\n\tfunction generateLookups( vertices, faces, metaVertices, edges ) {\r\n\r\n\t\tvar i, il, face;\r\n\r\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tmetaVertices[ i ] = { edges: [] };\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = faces[ i ];\r\n\r\n\t\t\tprocessEdge( face.a, face.b, vertices, edges, face, metaVertices );\r\n\t\t\tprocessEdge( face.b, face.c, vertices, edges, face, metaVertices );\r\n\t\t\tprocessEdge( face.c, face.a, vertices, edges, face, metaVertices );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction newFace( newFaces, a, b, c, materialIndex ) {\r\n\r\n\t\tnewFaces.push( new Face3( a, b, c, undefined, undefined, materialIndex ) );\r\n\r\n\t}\r\n\r\n\tfunction midpoint( a, b ) {\r\n\r\n\t\treturn ( Math.abs( b - a ) / 2 ) + Math.min( a, b );\r\n\r\n\t}\r\n\r\n\tfunction newUv( newUvs, a, b, c ) {\r\n\r\n\t\tnewUvs.push( [ a.clone(), b.clone(), c.clone() ] );\r\n\r\n\t}\r\n\r\n\t/////////////////////////////\r\n\r\n\t// Performs one iteration of Subdivision\r\n\tSubdivisionModifier.prototype.smooth = function ( geometry ) {\r\n\r\n\t\tvar tmp = new Vector3();\r\n\r\n\t\tvar oldVertices, oldFaces, oldUvs;\r\n\t\tvar newVertices, newFaces, newUVs = [];\r\n\r\n\t\tvar n, i, il, j, k;\r\n\t\tvar metaVertices, sourceEdges;\r\n\r\n\t\t// new stuff.\r\n\t\tvar sourceEdges, newEdgeVertices, newSourceVertices;\r\n\r\n\t\toldVertices = geometry.vertices; // { x, y, z}\r\n\t\toldFaces = geometry.faces; // { a: oldVertex1, b: oldVertex2, c: oldVertex3 }\r\n\t\toldUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasUvs = oldUvs[ 0 ] !== undefined && oldUvs[ 0 ].length > 0;\r\n\r\n\t\tif ( hasUvs ) {\r\n\r\n\t\t\tfor ( var j = 0; j < oldUvs.length; j ++ ) {\r\n\r\n\t\t\t\tnewUVs.push( [] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/******************************************************\r\n\t\t *\r\n\t\t * Step 0: Preprocess Geometry to Generate edges Lookup\r\n\t\t *\r\n\t\t *******************************************************/\r\n\r\n\t\tmetaVertices = new Array( oldVertices.length );\r\n\t\tsourceEdges = {}; // Edge => { oldVertex1, oldVertex2, faces[]  }\r\n\r\n\t\tgenerateLookups( oldVertices, oldFaces, metaVertices, sourceEdges );\r\n\r\n\r\n\t\t/******************************************************\r\n\t\t *\r\n\t\t *\tStep 1.\r\n\t\t *\tFor each edge, create a new Edge Vertex,\r\n\t\t *\tthen position it.\r\n\t\t *\r\n\t\t *******************************************************/\r\n\r\n\t\tnewEdgeVertices = [];\r\n\t\tvar other, currentEdge, newEdge, face;\r\n\t\tvar edgeVertexWeight, adjacentVertexWeight, connectedFaces;\r\n\r\n\t\tfor ( i in sourceEdges ) {\r\n\r\n\t\t\tcurrentEdge = sourceEdges[ i ];\r\n\t\t\tnewEdge = new Vector3();\r\n\r\n\t\t\tedgeVertexWeight = 3 / 8;\r\n\t\t\tadjacentVertexWeight = 1 / 8;\r\n\r\n\t\t\tconnectedFaces = currentEdge.faces.length;\r\n\r\n\t\t\t// check how many linked faces. 2 should be correct.\r\n\t\t\tif ( connectedFaces != 2 ) {\r\n\r\n\t\t\t\t// if length is not 2, handle condition\r\n\t\t\t\tedgeVertexWeight = 0.5;\r\n\t\t\t\tadjacentVertexWeight = 0;\r\n\r\n\t\t\t\tif ( connectedFaces != 1 ) {\r\n\r\n\t\t\t\t\t// console.warn( 'Subdivision Modifier: Number of connected faces != 2, is: ', connectedFaces, currentEdge );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewEdge.addVectors( currentEdge.a, currentEdge.b ).multiplyScalar( edgeVertexWeight );\r\n\r\n\t\t\ttmp.set( 0, 0, 0 );\r\n\r\n\t\t\tfor ( j = 0; j < connectedFaces; j ++ ) {\r\n\r\n\t\t\t\tface = currentEdge.faces[ j ];\r\n\r\n\t\t\t\tfor ( k = 0; k < 3; k ++ ) {\r\n\r\n\t\t\t\t\tother = oldVertices[ face[ ABC[ k ] ] ];\r\n\t\t\t\t\tif ( other !== currentEdge.a && other !== currentEdge.b ) break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.add( other );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttmp.multiplyScalar( adjacentVertexWeight );\r\n\t\t\tnewEdge.add( tmp );\r\n\r\n\t\t\tcurrentEdge.newEdge = newEdgeVertices.length;\r\n\t\t\tnewEdgeVertices.push( newEdge );\r\n\r\n\t\t\t// console.log(currentEdge, newEdge);\r\n\r\n\t\t}\r\n\r\n\t\t/******************************************************\r\n\t\t *\r\n\t\t *\tStep 2.\r\n\t\t *\tReposition each source vertices.\r\n\t\t *\r\n\t\t *******************************************************/\r\n\r\n\t\tvar beta, sourceVertexWeight, connectingVertexWeight;\r\n\t\tvar connectingEdge, connectingEdges, oldVertex, newSourceVertex;\r\n\t\tnewSourceVertices = [];\r\n\r\n\t\tfor ( i = 0, il = oldVertices.length; i < il; i ++ ) {\r\n\r\n\t\t\toldVertex = oldVertices[ i ];\r\n\r\n\t\t\t// find all connecting edges (using lookupTable)\r\n\t\t\tconnectingEdges = metaVertices[ i ].edges;\r\n\t\t\tn = connectingEdges.length;\r\n\r\n\t\t\tif ( n == 3 ) {\r\n\r\n\t\t\t\tbeta = 3 / 16;\r\n\r\n\t\t\t} else if ( n > 3 ) {\r\n\r\n\t\t\t\tbeta = 3 / ( 8 * n ); // Warren's modified formula\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Loop's original beta formula\r\n\t\t\t// beta = 1 / n * ( 5/8 - Math.pow( 3/8 + 1/4 * Math.cos( 2 * Math. PI / n ), 2) );\r\n\r\n\t\t\tsourceVertexWeight = 1 - n * beta;\r\n\t\t\tconnectingVertexWeight = beta;\r\n\r\n\t\t\tif ( n <= 2 ) {\r\n\r\n\t\t\t\t// crease and boundary rules\r\n\t\t\t\t// console.warn('crease and boundary rules');\r\n\r\n\t\t\t\tif ( n == 2 ) {\r\n\r\n\t\t\t\t\t// console.warn( '2 connecting edges', connectingEdges );\r\n\t\t\t\t\tsourceVertexWeight = 3 / 4;\r\n\t\t\t\t\tconnectingVertexWeight = 1 / 8;\r\n\r\n\t\t\t\t\t// sourceVertexWeight = 1;\r\n\t\t\t\t\t// connectingVertexWeight = 0;\r\n\r\n\t\t\t\t} else if ( n == 1 ) {\r\n\r\n\t\t\t\t\t// console.warn( 'only 1 connecting edge' );\r\n\r\n\t\t\t\t} else if ( n == 0 ) {\r\n\r\n\t\t\t\t\t// console.warn( '0 connecting edges' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewSourceVertex = oldVertex.clone().multiplyScalar( sourceVertexWeight );\r\n\r\n\t\t\ttmp.set( 0, 0, 0 );\r\n\r\n\t\t\tfor ( j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\tconnectingEdge = connectingEdges[ j ];\r\n\t\t\t\tother = connectingEdge.a !== oldVertex ? connectingEdge.a : connectingEdge.b;\r\n\t\t\t\ttmp.add( other );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttmp.multiplyScalar( connectingVertexWeight );\r\n\t\t\tnewSourceVertex.add( tmp );\r\n\r\n\t\t\tnewSourceVertices.push( newSourceVertex );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t/******************************************************\r\n\t\t *\r\n\t\t *\tStep 3.\r\n\t\t *\tGenerate Faces between source vertices\r\n\t\t *\tand edge vertices.\r\n\t\t *\r\n\t\t *******************************************************/\r\n\r\n\t\tnewVertices = newSourceVertices.concat( newEdgeVertices );\r\n\t\tvar sl = newSourceVertices.length, edge1, edge2, edge3;\r\n\t\tnewFaces = [];\r\n\r\n\t\tvar uv, x0, x1, x2;\r\n\t\tvar x3 = new Vector2();\r\n\t\tvar x4 = new Vector2();\r\n\t\tvar x5 = new Vector2();\r\n\r\n\t\tfor ( i = 0, il = oldFaces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = oldFaces[ i ];\r\n\r\n\t\t\t// find the 3 new edges vertex of each old face\r\n\r\n\t\t\tedge1 = getEdge( face.a, face.b, sourceEdges ).newEdge + sl;\r\n\t\t\tedge2 = getEdge( face.b, face.c, sourceEdges ).newEdge + sl;\r\n\t\t\tedge3 = getEdge( face.c, face.a, sourceEdges ).newEdge + sl;\r\n\r\n\t\t\t// create 4 faces.\r\n\r\n\t\t\tnewFace( newFaces, edge1, edge2, edge3, face.materialIndex );\r\n\t\t\tnewFace( newFaces, face.a, edge1, edge3, face.materialIndex );\r\n\t\t\tnewFace( newFaces, face.b, edge2, edge1, face.materialIndex );\r\n\t\t\tnewFace( newFaces, face.c, edge3, edge2, face.materialIndex );\r\n\r\n\t\t\t// create 4 new uv's\r\n\r\n\t\t\tif ( hasUvs ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < oldUvs.length; j ++ ) {\r\n\r\n\t\t\t\t\tuv = oldUvs[ j ][ i ];\r\n\r\n\t\t\t\t\tx0 = uv[ 0 ];\r\n\t\t\t\t\tx1 = uv[ 1 ];\r\n\t\t\t\t\tx2 = uv[ 2 ];\r\n\r\n\t\t\t\t\tx3.set( midpoint( x0.x, x1.x ), midpoint( x0.y, x1.y ) );\r\n\t\t\t\t\tx4.set( midpoint( x1.x, x2.x ), midpoint( x1.y, x2.y ) );\r\n\t\t\t\t\tx5.set( midpoint( x0.x, x2.x ), midpoint( x0.y, x2.y ) );\r\n\r\n\t\t\t\t\tnewUv( newUVs[ j ], x3, x4, x5 );\r\n\t\t\t\t\tnewUv( newUVs[ j ], x0, x3, x5 );\r\n\r\n\t\t\t\t\tnewUv( newUVs[ j ], x1, x4, x3 );\r\n\t\t\t\t\tnewUv( newUVs[ j ], x2, x5, x4 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Overwrite old arrays\r\n\t\tgeometry.vertices = newVertices;\r\n\t\tgeometry.faces = newFaces;\r\n\t\tif ( hasUvs ) geometry.faceVertexUvs = newUVs;\r\n\r\n\t\t// console.log('done');\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nexport { SubdivisionModifier };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/modifiers/SubdivisionModifier.js","<template>\r\n    <div class=\"webglModifierSubdivision-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - subdivision modifier<br/ >\r\n\t\t\tOriginal Geometry: <span id=\"original-vertex-count\"></span> vertices and <span id=\"original-face-count\"></span> faces<br/ >\r\n\t\t\tSmooth Geometry: <span id=\"smooth-vertex-count\"></span> vertices and <span id=\"smooth-face-count\"></span> faces<br/ >\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { SubdivisionModifier } from '@/components/jsm/modifiers/SubdivisionModifier.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            stats: null,\r\n            smoothMesh: null,\r\n            wireframe: null,\r\n\t\t\tsmoothMaterial: null,\r\n\t\t\twireframeMaterial: null,\r\n\t\t\tfaceIndices: [ 'a', 'b', 'c' ],\r\n\t\t\tparams: {\r\n\t\t\t\tsubdivisions: 2\r\n            },\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.smoothMaterial = new this.$THREE.MeshPhongMaterial({ color: 0xffffff, flatShading: true, vertexColors: true })\r\n        this.wireframeMaterial = new this.$THREE.MeshBasicMaterial({ color: 0x000000, wireframe: true, opacity: 0.15, transparent: true })\r\n        this.init()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(70, this.$webglInnerWidth / window.innerHeight, 1, 500)\r\n            this.camera.position.z = 100\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xf0f0f0)\r\n            var light = new this.$THREE.PointLight(0xffffff, 1.5)\r\n            light.position.set(1000, 1000, 2000)\r\n            this.scene.add(light)\r\n            var loader = new this.$THREE.BufferGeometryLoader()\r\n            loader.load('static/models/json/WaltHeadLo_buffergeometry.json', (bufferGeometry) => {\r\n                // converting to legacy this.$THREE.Geometry because SubdivisionModifier only returns this.$THREE.Geometry\r\n                var geometry = new this.$THREE.Geometry().fromBufferGeometry(bufferGeometry)\r\n                geometry.mergeVertices()\r\n                var material = new this.$THREE.MeshBasicMaterial({ color: 0xcccccc, wireframe: true })\r\n                var mesh = new this.$THREE.Mesh(bufferGeometry, material)\r\n                this.scene.add(mesh)\r\n                this.gui = new GUI()\r\n                this.gui.add(this.params, 'subdivisions', 0, 3).step(1).onChange((subdivisions) => {\r\n                    this.subdivide(geometry, subdivisions)\r\n                })\r\n                //\r\n                this.subdivide(geometry, this.params.subdivisions)\r\n                this.animate()\r\n            });\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglModifierSubdivision-container')[0].appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglModifierSubdivision-container')[0].appendChild(this.stats.dom)\r\n            //\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 50\r\n            controls.maxDistance = 400\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            //\r\n            this.smoothMesh = new this.$THREE.Mesh(undefined, this.smoothMaterial)\r\n            this.wireframe = new this.$THREE.Mesh(undefined, this.wireframeMaterial)\r\n            this.scene.add(this.smoothMesh, this.wireframe)\r\n        },\r\n        subdivide(geometry, subdivisions) {\r\n            var modifier = new SubdivisionModifier(subdivisions)\r\n            var smoothGeometry = modifier.modify(geometry)\r\n            // colorify faces\r\n            for (var i = 0; i < smoothGeometry.faces.length; i ++) {\r\n                var face = smoothGeometry.faces[ i ]\r\n                for (var j = 0; j < 3; j ++) {\r\n                    var vertexIndex = face[ this.faceIndices[ j ] ]\r\n                    var vertex = smoothGeometry.vertices[ vertexIndex ]\r\n                    var hue = (vertex.y / 200) + 0.5\r\n                    var color = new this.$THREE.Color().setHSL(hue, 1, 0.5)\r\n                    face.vertexColors[ j ] = color\r\n                }\r\n            }\r\n            // convert to this.$THREE.BufferGeometry\r\n            if (this.smoothMesh.geometry) this.smoothMesh.geometry.dispose()\r\n            this.smoothMesh.geometry = new this.$THREE.BufferGeometry().fromGeometry(smoothGeometry)\r\n            this.wireframe.geometry = this.smoothMesh.geometry\r\n            //\r\n            this.updateUI(geometry, smoothGeometry)\r\n        },\r\n        updateUI(originalGeometry, smoothGeometry) {\r\n            document.getElementById('original-vertex-count').textContent = originalGeometry.vertices.length\r\n            document.getElementById('original-face-count').textContent = originalGeometry.faces.length\r\n            document.getElementById('smooth-vertex-count').textContent = smoothGeometry.vertices.length\r\n            document.getElementById('smooth-face-count').textContent = smoothGeometry.faces.length\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglModifierSubdivision-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    background-color: #f0f0f0;\r\n    color: #444;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/modifier/webglModifierSubdivision.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglModifierSubdivision-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - subdivision modifier\"),_vm._v(\"/ >\\n\\t\\t\\tOriginal Geometry: \"),_c('span',{attrs:{\"id\":\"original-vertex-count\"}}),_vm._v(\" vertices and \"),_c('span',{attrs:{\"id\":\"original-face-count\"}}),_vm._v(\" faces\"),_vm._v(\"/ >\\n\\t\\t\\tSmooth Geometry: \"),_c('span',{attrs:{\"id\":\"smooth-vertex-count\"}}),_vm._v(\" vertices and \"),_c('span',{attrs:{\"id\":\"smooth-face-count\"}}),_vm._v(\" faces\"),_vm._v(\"/ >\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0de29144\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/modifier/webglModifierSubdivision.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0de29144\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglModifierSubdivision.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglModifierSubdivision.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglModifierSubdivision.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0de29144\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglModifierSubdivision.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0de29144\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/modifier/webglModifierSubdivision.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}