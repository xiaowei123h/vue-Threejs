{"version":3,"sources":["webpack:///./src/components/jsm/postprocessing/LUTPass.js","webpack:///./src/components/jsm/loaders/LUTCubeLoader.js","webpack:///src/views/postprocessing/webglPostprocessing3dlut.vue","webpack:///./src/views/postprocessing/webglPostprocessing3dlut.vue?a4e6","webpack:///./src/views/postprocessing/webglPostprocessing3dlut.vue"],"names":["LUTShader","defines","USE_3DTEXTURE","uniforms","lut3d","value","lut","lutSize","tDiffuse","intensity","vertexShader","fragmentShader","LUTPass","options","arguments","length","undefined","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","ShaderPass","v","material","is3dTextureDefine","isDataTexture3D","needsUpdate","image","width","LUTCubeLoader","_Loader","LUTCubeLoader__classCallCheck","LUTCubeLoader__possibleConstructorReturn","apply","LUTCubeLoader__inherits","Loader","LUTCubeLoader__createClass","key","url","onLoad","onProgress","onError","_this2","loader","FileLoader","manager","setPath","path","setResponseType","load","text","parse","e","console","error","itemError","str","replace","trim","title","size","domainMin","Vector3","domainMax","lines","split","data","currIndex","i","l","line","substring","sizeToken","parseFloat","Uint8Array","x","y","z","r","g","b","Error","texture","DataTexture","height","format","RGBFormat","type","UnsignedByteType","magFilter","LinearFilter","wrapS","ClampToEdgeWrapping","wrapT","generateMipmaps","texture3D","DataTexture3D","depth","wrapR","webglPostprocessing3dlut","params","enabled","use2dLut","lutMap","Bourbon 64.CUBE","Chemical 168.CUBE","Clayton 33.CUBE","Cubicle 99.CUBE","Remy 24.CUBE","gui","camera","scene","renderer","composer","lutPass","mounted","init","render","beforeDestroy","destroy","methods","container","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","RGBELoader","setDataType","envMap","pmremGenerator","fromEquirectangular","background","environment","dispose","GLTFLoader","gltf","add","keys","forEach","name","LUTCubeLoader_LUTCubeLoader","result","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","toneMapping","ACESFilmicToneMapping","toneMappingExposure","domElement","target","WebGLRenderTarget","minFilter","RGBAFormat","encoding","sRGBEncoding","EffectComposer","addPass","RenderPass","GammaCorrectionShader","PMREMGenerator","compileEquirectangularShader","controls","OrbitControls","minDistance","maxDistance","update","dat_gui_module","min","max","capabilities","isWebGL2","use2DLut","addEventListener","onWindowResize","$onWindowResize","innerWidth","requestAnimationFrame","Boolean","postprocessing_webglPostprocessing3dlut","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/208.ad971eeb7ff1edb07c6b.js","sourcesContent":["import { ShaderPass } from './ShaderPass.js';\r\n\r\nconst LUTShader = {\r\n\r\n\tdefines: {\r\n\t\tUSE_3DTEXTURE: 1,\r\n\t},\r\n\r\n\tuniforms: {\r\n\t\tlut3d: { value: null },\r\n\r\n\t\tlut: { value: null },\r\n\t\tlutSize: { value: 0 },\r\n\r\n\t\ttDiffuse: { value: null },\r\n\t\tintensity: { value: 1.0 },\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = uv;\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t}\r\n\r\n\t`,\r\n\r\n\r\n\tfragmentShader: /* glsl */`\r\n\t\tprecision highp sampler3D;\r\n\r\n\t\t#if USE_3DTEXTURE\r\n\t\tuniform sampler3D lut3d;\r\n\t\t#else\r\n\t\tuniform sampler2D lut;\r\n\t\tuniform float lutSize;\r\n\r\n\t\tvec3 lutLookup( sampler2D tex, float size, vec3 rgb ) {\r\n\r\n\t\t\t// clamp the sample in by half a pixel to avoid interpolation\r\n\t\t\t// artifacts between slices laid out next to each other.\r\n\t\t\tfloat halfPixelWidth = 0.5 / size;\r\n\t\t\trgb.rg = clamp( rgb.rg, halfPixelWidth, 1.0 - halfPixelWidth );\r\n\r\n\t\t\t// green offset into a LUT layer\r\n\t\t\tfloat gOffset = rgb.g / size;\r\n\t\t\tvec2 uv1 = vec2( rgb.r, gOffset );\r\n\t\t\tvec2 uv2 = vec2( rgb.r, gOffset );\r\n\r\n\t\t\t// adjust b slice offset\r\n\t\t\tfloat bNormalized = size * rgb.b;\r\n\t\t\tfloat bSlice = min( floor( size * rgb.b ), size - 1.0 );\r\n\t\t\tfloat bMix = ( bNormalized - bSlice ) / size;\r\n\r\n\t\t\t// get the first lut slice and then the one to interpolate to\r\n\t\t\tfloat b1 = bSlice / size;\r\n\t\t\tfloat b2 = ( bSlice + 1.0 ) / size;\r\n\r\n\t\t\tuv1.y += b1;\r\n\t\t\tuv2.y += b2;\r\n\r\n\t\t\tvec3 sample1 = texture2D( tex, uv1 ).rgb;\r\n\t\t\tvec3 sample2 = texture2D( tex, uv2 ).rgb;\r\n\r\n\t\t\treturn mix( sample1, sample2, bMix );\r\n\r\n\t\t}\r\n\t\t#endif\r\n\r\n\t\tvarying vec2 vUv;\r\n\t\tuniform float intensity;\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tvoid main() {\r\n\r\n\t\t\tvec4 val = texture2D( tDiffuse, vUv );\r\n\t\t\tvec4 lutVal;\r\n\t\t\t#if USE_3DTEXTURE\r\n\t\t\tlutVal = vec4( texture( lut3d, val.rgb ).rgb, val.a );\r\n\t\t\t#else\r\n\t\t\tlutVal = vec4( lutLookup( lut, lutSize, val.rgb ), val.a );\r\n\t\t\t#endif\r\n\t\t\tgl_FragColor = mix( val, lutVal, intensity );\r\n\r\n\t\t}\r\n\r\n\t`,\r\n\r\n};\r\n\r\nclass LUTPass extends ShaderPass {\r\n\r\n\tset lut( v ) {\r\n\r\n\t\tconst material = this.material;\r\n\t\tif ( v !== this.lut ) {\r\n\r\n\t\t\tmaterial.uniforms.lut3d.value = null;\r\n\t\t\tmaterial.uniforms.lut.value = null;\r\n\r\n\t\t\tif ( v ) {\r\n\r\n\t\t\t\tconst is3dTextureDefine = v.isDataTexture3D ? 1 : 0;\r\n\t\t\t\tif ( is3dTextureDefine !== material.defines.USE_3DTEXTURE ) {\r\n\r\n\t\t\t\t\tmaterial.defines.USE_3DTEXTURE = is3dTextureDefine;\r\n\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( v.isDataTexture3D ) {\r\n\r\n\t\t\t\t\tmaterial.uniforms.lut3d.value = v;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial.uniforms.lut.value = v;\r\n\t\t\t\t\tmaterial.uniforms.lutSize.value = v.image.width;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget lut() {\r\n\r\n\t\treturn this.material.uniforms.lut.value || this.material.uniforms.lut3d.value;\r\n\r\n\t}\r\n\r\n\tset intensity( v ) {\r\n\r\n\t\tthis.material.uniforms.intensity.value = v;\r\n\r\n\t}\r\n\r\n\tget intensity() {\r\n\r\n\t\treturn this.material.uniforms.intensity.value;\r\n\r\n\t}\r\n\r\n\tconstructor( options = {} ) {\r\n\r\n\t\tsuper( LUTShader );\r\n\t\tthis.lut = options.lut || null;\r\n\t\tthis.intensity = 'intensity' in options ? options.intensity : 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { LUTPass };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/postprocessing/LUTPass.js","// https://wwwimages2.adobe.com/content/dam/acom/en/products/speedgrade/cc/pdfs/cube-lut-specification-1.0.pdf\r\n\r\nimport {\r\n\tLoader,\r\n\tFileLoader,\r\n\tVector3,\r\n\tDataTexture,\r\n\tDataTexture3D,\r\n\tRGBFormat,\r\n\tUnsignedByteType,\r\n\tClampToEdgeWrapping,\r\n\tLinearFilter,\r\n} from '@/components/build/three.module.js';\r\n\r\nexport class LUTCubeLoader extends Loader {\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'text' );\r\n\t\tloader.load( url, text => {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( this.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( str ) {\r\n\r\n\t\t// Remove empty lines and comments\r\n\t\tstr = str\r\n\t\t\t.replace( /^#.*?(\\n|\\r)/gm, '' )\r\n\t\t\t.replace( /^\\s*?(\\n|\\r)/gm, '' )\r\n\t\t\t.trim();\r\n\r\n\t\tlet title = null;\r\n\t\tlet size = null;\r\n\t\tconst domainMin = new Vector3( 0, 0, 0 );\r\n\t\tconst domainMax = new Vector3( 1, 1, 1 );\r\n\r\n\t\tconst lines = str.split( /[\\n\\r]+/g );\r\n\t\tlet data = null;\r\n\r\n\t\tlet currIndex = 0;\r\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst line = lines[ i ].trim();\r\n\t\t\tconst split = line.split( /\\s/g );\r\n\r\n\t\t\tswitch ( split[ 0 ] ) {\r\n\r\n\t\t\t\tcase 'TITLE':\r\n\t\t\t\t\ttitle = line.substring( 7, line.length - 1 );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LUT_3D_SIZE':\r\n\t\t\t\t\t// TODO: A .CUBE LUT file specifies floating point values and could be represented with\r\n\t\t\t\t\t// more precision than can be captured with Uint8Array.\r\n\t\t\t\t\tconst sizeToken = split[ 1 ];\r\n\t\t\t\t\tsize = parseFloat( sizeToken );\r\n\t\t\t\t\tdata = new Uint8Array( size * size * size * 3 );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DOMAIN_MIN':\r\n\t\t\t\t\tdomainMin.x = parseFloat( split[ 1 ] );\r\n\t\t\t\t\tdomainMin.y = parseFloat( split[ 2 ] );\r\n\t\t\t\t\tdomainMin.z = parseFloat( split[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DOMAIN_MAX':\r\n\t\t\t\t\tdomainMax.x = parseFloat( split[ 1 ] );\r\n\t\t\t\t\tdomainMax.y = parseFloat( split[ 2 ] );\r\n\t\t\t\t\tdomainMax.z = parseFloat( split[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconst r = parseFloat( split[ 0 ] );\r\n\t\t\t\t\tconst g = parseFloat( split[ 1 ] );\r\n\t\t\t\t\tconst b = parseFloat( split[ 2 ] );\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tr > 1.0 || r < 0.0 ||\r\n\t\t\t\t\t\tg > 1.0 || g < 0.0 ||\r\n\t\t\t\t\t\tb > 1.0 || b < 0.0\r\n\t\t\t\t\t) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'LUTCubeLoader : Non normalized values not supported.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata[ currIndex + 0 ] = r * 255;\r\n\t\t\t\t\tdata[ currIndex + 1 ] = g * 255;\r\n\t\t\t\t\tdata[ currIndex + 2 ] = b * 255;\r\n\t\t\t\t\tcurrIndex += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst texture = new DataTexture();\r\n\t\ttexture.image.data = data;\r\n\t\ttexture.image.width = size;\r\n\t\ttexture.image.height = size * size;\r\n\t\ttexture.format = RGBFormat;\r\n\t\ttexture.type = UnsignedByteType;\r\n\t\ttexture.magFilter = LinearFilter;\r\n\t\ttexture.wrapS = ClampToEdgeWrapping;\r\n\t\ttexture.wrapT = ClampToEdgeWrapping;\r\n\t\ttexture.generateMipmaps = false;\r\n\r\n\t\tconst texture3D = new DataTexture3D();\r\n\t\ttexture3D.image.data = data;\r\n\t\ttexture3D.image.width = size;\r\n\t\ttexture3D.image.height = size;\r\n\t\ttexture3D.image.depth = size;\r\n\t\ttexture3D.format = RGBFormat;\r\n\t\ttexture3D.type = UnsignedByteType;\r\n\t\ttexture3D.magFilter = LinearFilter;\r\n\t\ttexture3D.wrapS = ClampToEdgeWrapping;\r\n\t\ttexture3D.wrapT = ClampToEdgeWrapping;\r\n\t\ttexture3D.wrapR = ClampToEdgeWrapping;\r\n\t\ttexture3D.generateMipmaps = false;\r\n\r\n\t\treturn {\r\n\t\t\ttitle,\r\n\t\t\tsize,\r\n\t\t\tdomainMin,\r\n\t\t\tdomainMax,\r\n\t\t\ttexture,\r\n\t\t\ttexture3D,\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/LUTCubeLoader.js","<template>\r\n    <div class=\"webglPostprocessing3dlut-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - 3D LUTs<br />\r\n\t\t\tBattle Damaged Sci-fi Helmet by\r\n\t\t\t<a href=\"https://sketchfab.com/theblueturtle_\" target=\"_blank\" rel=\"noopener\">theblueturtle_</a><br />\r\n\t\t\t<a href=\"https://hdrihaven.com/hdri/?h=royal_esplanade\" target=\"_blank\" rel=\"noopener\">Royal Esplanade</a> by <a href=\"https://hdrihaven.com/\" target=\"_blank\" rel=\"noopener\">HDRI Haven</a><br />\r\n\t\t\tLUTs from <a href=\"https://www.rocketstock.com/free-after-effects-templates/35-free-luts-for-color-grading-videos/\">RocketStock</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { GLTFLoader } from '@/components/jsm/loaders/GLTFLoader.js'\r\nimport { RGBELoader } from '@/components/jsm/loaders/RGBELoader.js'\r\nimport { EffectComposer } from '@/components/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from '@/components/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from '@/components/jsm/postprocessing/ShaderPass.js'\r\nimport { LUTPass } from '@/components/jsm/postprocessing/LUTPass.js'\r\nimport { LUTCubeLoader } from '@/components/jsm/loaders/LUTCubeLoader.js'\r\nimport { GammaCorrectionShader } from '@/components/jsm/shaders/GammaCorrectionShader.js'\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            params: {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tlut: 'Bourbon 64.CUBE',\r\n\t\t\t\tintensity: 1,\r\n\t\t\t\tuse2dLut: false,\r\n\t\t\t},\r\n\t\t\tlutMap: {\r\n\t\t\t\t'Bourbon 64.CUBE': null,\r\n\t\t\t\t'Chemical 168.CUBE': null,\r\n\t\t\t\t'Clayton 33.CUBE': null,\r\n\t\t\t\t'Cubicle 99.CUBE': null,\r\n\t\t\t\t'Remy 24.CUBE': null,\r\n\t\t\t},\r\n\t\t\tgui: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            composer: null,\r\n            lutPass: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.render()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('webglPostprocessing3dlut-container')[0].appendChild(container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 0.25, 20)\r\n            this.camera.position.set(- 1.8, 0.6, 2.7)\r\n            this.scene = new this.$THREE.Scene()\r\n            new RGBELoader()\r\n                .setDataType(this.$THREE.UnsignedByteType)\r\n                .setPath('static/textures/equirectangular/')\r\n                .load('royal_esplanade_1k.hdr', (texture) => {\r\n                    var envMap = pmremGenerator.fromEquirectangular(texture).texture\r\n                    this.scene.background = envMap\r\n                    this.scene.environment = envMap\r\n                    texture.dispose()\r\n                    pmremGenerator.dispose()\r\n                    // model\r\n                    var loader = new GLTFLoader().setPath('static/models/gltf/DamagedHelmet/glTF/')\r\n                    loader.load('DamagedHelmet.gltf', (gltf) => {\r\n                        this.scene.add(gltf.scene)\r\n                    })\r\n                })\r\n            Object.keys(this.lutMap).forEach(name => {\r\n                new LUTCubeLoader()\r\n                    .load('static/luts/' + name, (result) => {\r\n                        this.lutMap[ name ] = result\r\n                    })\r\n            })\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.toneMapping = this.$THREE.ACESFilmicToneMapping\r\n            this.renderer.toneMappingExposure = 1\r\n            container.appendChild(this.renderer.domElement)\r\n            var target = new this.$THREE.WebGLRenderTarget({\r\n                minFilter: this.$THREE.LinearFilter,\r\n                magFilter: this.$THREE.LinearFilter,\r\n                format: this.$THREE.RGBAFormat,\r\n                encoding: this.$THREE.sRGBEncoding\r\n            })\r\n            this.composer = new EffectComposer(this.renderer, target)\r\n            this.composer.setPixelRatio(window.devicePixelRatio)\r\n            this.composer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.composer.addPass(new RenderPass(this.scene, this.camera))\r\n            this.composer.addPass(new ShaderPass(GammaCorrectionShader))\r\n            this.lutPass = new LUTPass()\r\n            this.composer.addPass(this.lutPass)\r\n            var pmremGenerator = new this.$THREE.PMREMGenerator(this.renderer)\r\n            pmremGenerator.compileEquirectangularShader()\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 2\r\n            controls.maxDistance = 10\r\n            controls.target.set(0, 0, - 0.2)\r\n            controls.update()\r\n            this.gui = new GUI()\r\n            this.gui.width = 350\r\n            this.gui.add(this.params, 'enabled')\r\n            this.gui.add(this.params, 'lut', Object.keys(this.lutMap))\r\n            this.gui.add(this.params, 'intensity').min(0).max(1)\r\n            if (this.renderer.capabilities.isWebGL2) {\r\n                this.gui.add(this.params, 'use2dLut')\r\n            } else {\r\n                this.params.use2DLut = true\r\n            }\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.composer.setSize(window.innerWidth - 281, window.innerHeight)\r\n            this.render()\r\n        },\r\n        render() {\r\n            requestAnimationFrame(this.render)\r\n            this.lutPass.enabled = this.params.enabled && Boolean(this.lutMap[ this.params.lut ])\r\n            this.lutPass.intensity = this.params.intensity\r\n            if (this.lutMap[ this.params.lut ]) {\r\n                var lut = this.lutMap[ this.params.lut ]\r\n                this.lutPass.lut = this.params.use2DLut ? lut.texture : lut.texture3D\r\n            }\r\n            this.composer.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglPostprocessing3dlut-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/postprocessing/webglPostprocessing3dlut.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglPostprocessing3dlut-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - 3D LUTs\"),_c('br'),_vm._v(\"\\n\\t\\t\\tBattle Damaged Sci-fi Helmet by\\n\\t\\t\\t\"),_c('a',{attrs:{\"href\":\"https://sketchfab.com/theblueturtle_\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"theblueturtle_\")]),_c('br'),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"https://hdrihaven.com/hdri/?h=royal_esplanade\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Royal Esplanade\")]),_vm._v(\" by \"),_c('a',{attrs:{\"href\":\"https://hdrihaven.com/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"HDRI Haven\")]),_c('br'),_vm._v(\"\\n\\t\\t\\tLUTs from \"),_c('a',{attrs:{\"href\":\"https://www.rocketstock.com/free-after-effects-templates/35-free-luts-for-color-grading-videos/\"}},[_vm._v(\"RocketStock\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-55e27c03\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/postprocessing/webglPostprocessing3dlut.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-55e27c03\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglPostprocessing3dlut.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessing3dlut.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglPostprocessing3dlut.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-55e27c03\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglPostprocessing3dlut.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-55e27c03\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/postprocessing/webglPostprocessing3dlut.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}