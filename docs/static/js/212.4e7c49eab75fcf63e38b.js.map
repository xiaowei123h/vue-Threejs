{"version":3,"sources":["webpack:///src/views/misc/miscControlsTransform.vue","webpack:///./src/views/misc/miscControlsTransform.vue?7208","webpack:///./src/views/misc/miscControlsTransform.vue"],"names":["miscControlsTransform","data","cameraPersp","cameraOrtho","currentCamera","scene","renderer","control","orbit","mounted","this","init","render","methods","_this","$THREE","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","aspect","PerspectiveCamera","OrthographicCamera","position","set","lookAt","Scene","add","GridHelper","light","DirectionalLight","texture","TextureLoader","load","anisotropy","capabilities","getMaxAnisotropy","geometry","BoxBufferGeometry","material","MeshLambertMaterial","map","transparent","OrbitControls","update","addEventListener","TransformControls","event","enabled","value","mesh","Mesh","attach","onWindowResize","keyCode","setSpace","space","setTranslationSnap","setRotationSnap","MathUtils","degToRad","setScaleSnap","setMode","clone","isPerspectiveCamera","copy","object","camera","target","x","y","z","randomFoV","Math","random","randomZoom","fov","bottom","top","zoom","size","max","showX","showY","showZ","innerWidth","updateProjectionMatrix","left","right","misc_miscControlsTransform","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/212.4e7c49eab75fcf63e38b.js","sourcesContent":["<template>\r\n    <div class=\"miscControlsTransform-container\">\r\n        <div id=\"info\">\r\n\t\t\t\"W\" translate | \"E\" rotate | \"R\" scale | \"+/-\" adjust size<br />\r\n\t\t\t\"Q\" toggle world/local space |  \"Shift\" snap to grid<br />\r\n\t\t\t\"X\" toggle X | \"Y\" toggle Y | \"Z\" toggle Z | \"Spacebar\" toggle enabled<br />\r\n\t\t\t\"C\" toggle camera | \"V\" random zoom\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { TransformControls } from '@/components/jsm/controls/TransformControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            cameraPersp: null,\r\n            cameraOrtho: null,\r\n            currentCamera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            control: null,\r\n            orbit: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.render()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('miscControlsTransform-container')[0].appendChild(this.renderer.domElement)\r\n            var aspect = this.$webglInnerWidth / window.innerHeight\r\n            this.cameraPersp = new this.$THREE.PerspectiveCamera(50, aspect, 0.01, 30000)\r\n            this.cameraOrtho = new this.$THREE.OrthographicCamera(- 600 * aspect, 600 * aspect, 600, - 600, 0.01, 30000)\r\n            this.currentCamera = this.cameraPersp\r\n            this.currentCamera.position.set(1000, 500, 1000)\r\n            this.currentCamera.lookAt(0, 200, 0)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.add(new this.$THREE.GridHelper(1000, 10, 0x888888, 0x444444))\r\n            var light = new this.$THREE.DirectionalLight(0xffffff, 2)\r\n            light.position.set(1, 1, 1)\r\n            this.scene.add(light)\r\n            var texture = new this.$THREE.TextureLoader().load('static/textures/crate.gif', this.render)\r\n            texture.anisotropy = this.renderer.capabilities.getMaxAnisotropy()\r\n            var geometry = new this.$THREE.BoxBufferGeometry(200, 200, 200)\r\n            var material = new this.$THREE.MeshLambertMaterial({ map: texture, transparent: true })\r\n            this.orbit = new OrbitControls(this.currentCamera, this.renderer.domElement)\r\n            this.orbit.update()\r\n            this.orbit.addEventListener('change', this.render)\r\n            this.control = new TransformControls(this.currentCamera, this.renderer.domElement)\r\n            this.control.addEventListener('change', this.render)\r\n            this.control.addEventListener('dragging-changed', (event) => {\r\n                this.orbit.enabled = ! event.value\r\n            })\r\n            var mesh = new this.$THREE.Mesh(geometry, material)\r\n            this.scene.add(mesh)\r\n            this.control.attach(mesh)\r\n            this.scene.add(this.control)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            window.addEventListener('keydown', (event) => {\r\n                switch (event.keyCode) {\r\n                    case 81: // Q\r\n                        this.control.setSpace(this.control.space === \"local\" ? \"world\" : \"local\")\r\n                        break\r\n                    case 16: // Shift\r\n                        this.control.setTranslationSnap(100)\r\n                        this.control.setRotationSnap(this.$THREE.MathUtils.degToRad(15))\r\n                        this.control.setScaleSnap(0.25)\r\n                        break\r\n                    case 87: // W\r\n                        this.control.setMode(\"translate\")\r\n                        break\r\n                    case 69: // E\r\n                        this.control.setMode(\"rotate\")\r\n                        break\r\n                    case 82: // R\r\n                        this.control.setMode(\"scale\")\r\n                        break\r\n                    case 67: // C\r\n                        var position = this.currentCamera.position.clone()\r\n                        this.currentCamera = this.currentCamera.isPerspectiveCamera ? this.cameraOrtho : this.cameraPersp\r\n                        this.currentCamera.position.copy(position)\r\n                        this.orbit.object = this.currentCamera\r\n                        this.control.camera = this.currentCamera\r\n                        this.currentCamera.lookAt(this.orbit.target.x, this.orbit.target.y, this.orbit.target.z)\r\n                        this.onWindowResize()\r\n                        break\r\n                    case 86: // V\r\n                        var randomFoV = Math.random() + 0.1\r\n                        var randomZoom = Math.random() + 0.1\r\n                        this.cameraPersp.fov = randomFoV * 160\r\n                        this.cameraOrtho.bottom = - randomFoV * 500\r\n                        this.cameraOrtho.top = randomFoV * 500\r\n                        this.cameraPersp.zoom = randomZoom * 5\r\n                        this.cameraOrtho.zoom = randomZoom * 5\r\n                        this.onWindowResize()\r\n                        break\r\n                    case 187:\r\n                    case 107: // +, =, num+\r\n                        this.control.setSize(this.control.size + 0.1)\r\n                        break\r\n                    case 189:\r\n                    case 109: // -, _, num-\r\n                        this.control.setSize(Math.max(this.control.size - 0.1, 0.1))\r\n                        break\r\n                    case 88: // X\r\n                        this.control.showX = ! this.control.showX\r\n                        break\r\n                    case 89: // Y\r\n                        this.control.showY = ! this.control.showY\r\n                        break\r\n                    case 90: // Z\r\n                        this.control.showZ = ! this.control.showZ\r\n                        break\r\n                    case 32: // Spacebar\r\n                        this.control.enabled = ! this.control.enabled\r\n                        break\r\n                }\r\n            })\r\n            window.addEventListener('keyup', (event) => {\r\n                switch (event.keyCode) {\r\n                    case 16: // Shift\r\n                        this.control.setTranslationSnap(null)\r\n                        this.control.setRotationSnap(null)\r\n                        this.control.setScaleSnap(null)\r\n                        break\r\n                }\r\n            })\r\n        },\r\n        onWindowResize() {\r\n            var aspect = (window.innerWidth - 281) / window.innerHeight\r\n            this.cameraPersp.aspect = aspect\r\n            this.cameraPersp.updateProjectionMatrix()\r\n            this.cameraOrtho.left = this.cameraOrtho.bottom * aspect\r\n            this.cameraOrtho.right = this.cameraOrtho.top * aspect\r\n            this.cameraOrtho.updateProjectionMatrix()\r\n            this.renderer.setSize((window.innerWidth - 281), window.innerHeight)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.currentCamera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.miscControlsTransform-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/misc/miscControlsTransform.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"miscControlsTransform-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_vm._v(\"\\n\\t\\t\\t\\\"W\\\" translate | \\\"E\\\" rotate | \\\"R\\\" scale | \\\"+/-\\\" adjust size\"),_c('br'),_vm._v(\"\\n\\t\\t\\t\\\"Q\\\" toggle world/local space |  \\\"Shift\\\" snap to grid\"),_c('br'),_vm._v(\"\\n\\t\\t\\t\\\"X\\\" toggle X | \\\"Y\\\" toggle Y | \\\"Z\\\" toggle Z | \\\"Spacebar\\\" toggle enabled\"),_c('br'),_vm._v(\"\\n\\t\\t\\t\\\"C\\\" toggle camera | \\\"V\\\" random zoom\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-16d93416\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/misc/miscControlsTransform.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-16d93416\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./miscControlsTransform.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./miscControlsTransform.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./miscControlsTransform.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-16d93416\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./miscControlsTransform.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-16d93416\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/misc/miscControlsTransform.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}