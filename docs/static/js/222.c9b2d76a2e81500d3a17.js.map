{"version":3,"sources":["webpack:///./src/components/jsm/textures/FlakesTexture.js","webpack:///src/views/materials/webglMaterialsPhysicalClearcoat.vue","webpack:///./src/views/materials/webglMaterialsPhysicalClearcoat.vue?194a","webpack:///./src/views/materials/webglMaterialsPhysicalClearcoat.vue"],"names":["FlakesTexture","width","arguments","length","undefined","height","_classCallCheck","this","canvas","document","createElement","context","getContext","fillStyle","fillRect","i","x","Math","random","y","r","nx","ny","nz","l","sqrt","beginPath","arc","PI","fill","webglMaterialsPhysicalClearcoat","data","container","stats","camera","scene","renderer","particleLight","group","mounted","init","animate","methods","_this","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","z","Scene","Group","add","HDRCubeTextureLoader","setDataType","UnsignedByteType","setPath","load","hdrCubeMap","hdrCubeRenderTarget","pmremGenerator","fromCubemap","dispose","geometry","SphereBufferGeometry","textureLoader","TextureLoader","diffuse","encoding","sRGBEncoding","wrapS","RepeatWrapping","wrapT","repeat","normalMap","normalMap2","normalMap3","CanvasTexture","anisotropy","normalMap4","clearcoatNormaMap","material","MeshPhysicalMaterial","clearcoat","clearcoatRoughness","metalness","roughness","color","normalScale","Vector2","mesh","Mesh","map","clearcoatNormalMap","clearcoatNormalScale","background","texture","environment","MeshBasicMaterial","PointLight","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","PMREMGenerator","compileEquirectangularShader","$Stats","dom","style","left","OrbitControls","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","render","update","timer","Date","now","sin","cos","children","rotation","materials_webglMaterialsPhysicalClearcoat","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/222.c9b2d76a2e81500d3a17.js","sourcesContent":["class FlakesTexture {\r\n\r\n\tconstructor( width = 512, height = 512 ) {\r\n\r\n\t\tconst canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tconst context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'rgb(127,127,255)';\r\n\t\tcontext.fillRect( 0, 0, width, height );\r\n\r\n\t\tfor ( let i = 0; i < 4000; i ++ ) {\r\n\r\n\t\t\tconst x = Math.random() * width;\r\n\t\t\tconst y = Math.random() * height;\r\n\t\t\tconst r = Math.random() * 3 + 3;\r\n\r\n\t\t\tlet nx = Math.random() * 2 - 1;\r\n\t\t\tlet ny = Math.random() * 2 - 1;\r\n\t\t\tlet nz = 1.5;\r\n\r\n\t\t\tconst l = Math.sqrt( nx * nx + ny * ny + nz * nz );\r\n\r\n\t\t\tnx /= l; ny /= l; nz /= l;\r\n\r\n\t\t\tcontext.fillStyle = 'rgb(' + ( nx * 127 + 127 ) + ',' + ( ny * 127 + 127 ) + ',' + ( nz * 255 ) + ')';\r\n\t\t\tcontext.beginPath();\r\n\t\t\tcontext.arc( x, y, r, 0, Math.PI * 2 );\r\n\t\t\tcontext.fill();\r\n\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { FlakesTexture };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/textures/FlakesTexture.js","<template>\r\n    <div class=\"webglMaterialsPhysicalClearcoat-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - materials - clearcoat\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { HDRCubeTextureLoader } from '@/components/jsm/loaders/HDRCubeTextureLoader.js'\r\nimport { FlakesTexture } from '@/components/jsm/textures/FlakesTexture.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tparticleLight: null,\r\n\t\t\tgroup: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsPhysicalClearcoat-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(27, this.$webglInnerWidth / window.innerHeight, 1, 10000)\r\n            this.camera.position.z = 1000\r\n            this.scene = new this.$THREE.Scene()\r\n            this.group = new this.$THREE.Group()\r\n            this.scene.add(this.group)\r\n            new HDRCubeTextureLoader()\r\n                .setDataType(this.$THREE.UnsignedByteType)\r\n                .setPath('static/textures/cube/pisaHDR/')\r\n                .load([ 'px.hdr', 'nx.hdr', 'py.hdr', 'ny.hdr', 'pz.hdr', 'nz.hdr' ],\r\n                    (hdrCubeMap) => {\r\n                        var hdrCubeRenderTarget = pmremGenerator.fromCubemap(hdrCubeMap)\r\n                        hdrCubeMap.dispose()\r\n                        pmremGenerator.dispose()\r\n                        var geometry = new this.$THREE.SphereBufferGeometry(80, 64, 32)\r\n                        var textureLoader = new this.$THREE.TextureLoader()\r\n                        var diffuse = textureLoader.load(\"static/textures/carbon/Carbon.png\")\r\n                        diffuse.encoding = this.$THREE.sRGBEncoding\r\n                        diffuse.wrapS = this.$THREE.RepeatWrapping\r\n                        diffuse.wrapT = this.$THREE.RepeatWrapping\r\n                        diffuse.repeat.x = 10\r\n                        diffuse.repeat.y = 10\r\n                        var normalMap = textureLoader.load(\"static/textures/carbon/Carbon_Normal.png\")\r\n                        normalMap.wrapS = this.$THREE.RepeatWrapping\r\n                        normalMap.wrapT = this.$THREE.RepeatWrapping\r\n                        var normalMap2 = textureLoader.load(\"static/textures/water/Water_1_M_Normal.jpg\")\r\n                        var normalMap3 = new this.$THREE.CanvasTexture(new FlakesTexture())\r\n                        normalMap3.wrapS = this.$THREE.RepeatWrapping\r\n                        normalMap3.wrapT = this.$THREE.RepeatWrapping\r\n                        normalMap3.repeat.x = 10\r\n                        normalMap3.repeat.y = 6\r\n                        normalMap3.anisotropy = 16\r\n                        var normalMap4 = textureLoader.load(\"static/textures/golfball.jpg\")\r\n                        var clearcoatNormaMap = textureLoader.load(\"static/textures/pbr/Scratched_gold/Scratched_gold_01_1K_Normal.png\")\r\n                        // car paint\r\n                        var material = new this.$THREE.MeshPhysicalMaterial({\r\n                            clearcoat: 1.0,\r\n                            clearcoatRoughness: 0.1,\r\n                            metalness: 0.9,\r\n                            roughness: 0.5,\r\n                            color: 0x0000ff,\r\n                            normalMap: normalMap3,\r\n                            normalScale: new this.$THREE.Vector2(0.15, 0.15)\r\n                        })\r\n                        var mesh = new this.$THREE.Mesh(geometry, material)\r\n                        mesh.position.x = - 100\r\n                        mesh.position.y = 100\r\n                        this.group.add(mesh)\r\n                        // fibers\r\n                        material = new this.$THREE.MeshPhysicalMaterial({\r\n                            roughness: 0.5,\r\n                            clearcoat: 1.0,\r\n                            clearcoatRoughness: 0.1,\r\n                            map: diffuse,\r\n                            normalMap: normalMap\r\n                        })\r\n                        mesh = new this.$THREE.Mesh(geometry, material)\r\n                        mesh.position.x = 100\r\n                        mesh.position.y = 100\r\n                        this.group.add(mesh)\r\n                        // golf\r\n                        material = new this.$THREE.MeshPhysicalMaterial({\r\n                            metalness: 0.0,\r\n                            roughness: 0.1,\r\n                            clearcoat: 1.0,\r\n                            normalMap: normalMap4,\r\n                            clearcoatNormalMap: clearcoatNormaMap,\r\n                            // y scale is negated to compensate for normal map handedness.\r\n                            clearcoatNormalScale: new this.$THREE.Vector2(2.0, - 2.0)\r\n                        })\r\n                        mesh = new this.$THREE.Mesh(geometry, material)\r\n                        mesh.position.x = - 100\r\n                        mesh.position.y = - 100\r\n                        this.group.add(mesh)\r\n                        // clearcoat + normalmap\r\n                        material = new this.$THREE.MeshPhysicalMaterial({\r\n                            clearcoat: 1.0,\r\n                            metalness: 1.0,\r\n                            color: 0xff0000,\r\n                            normalMap: normalMap2,\r\n                            normalScale: new this.$THREE.Vector2(0.15, 0.15),\r\n                            clearcoatNormalMap: clearcoatNormaMap,\r\n                            // y scale is negated to compensate for normal map handedness.\r\n                            clearcoatNormalScale: new this.$THREE.Vector2(2.0, - 2.0)\r\n                        })\r\n                        mesh = new this.$THREE.Mesh(geometry, material)\r\n                        mesh.position.x = 100\r\n                        mesh.position.y = - 100\r\n                        this.group.add(mesh)\r\n                        //\r\n                        this.scene.background = hdrCubeRenderTarget.texture\r\n                        this.scene.environment = hdrCubeRenderTarget.texture\r\n                    }\r\n            )\r\n            // LIGHTS\r\n            this.particleLight = new this.$THREE.Mesh(\r\n                new this.$THREE.SphereBufferGeometry(4, 8, 8),\r\n                new this.$THREE.MeshBasicMaterial({ color: 0xffffff })\r\n            )\r\n            this.scene.add(this.particleLight)\r\n            this.particleLight.add(new this.$THREE.PointLight(0xffffff, 1))\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            //\r\n            this.renderer.toneMapping = this.$THREE.ACESFilmicToneMapping\r\n            this.renderer.toneMappingExposure = 1.25\r\n            //\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            //\r\n            var pmremGenerator = new this.$THREE.PMREMGenerator(this.renderer)\r\n            pmremGenerator.compileEquirectangularShader()\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            // EVENTS\r\n            new OrbitControls(this.camera, this.renderer.domElement)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            var timer = Date.now() * 0.00025\r\n            this.particleLight.position.x = Math.sin(timer * 7) * 300\r\n            this.particleLight.position.y = Math.cos(timer * 5) * 400\r\n            this.particleLight.position.z = Math.cos(timer * 3) * 300\r\n            for (var i = 0; i < this.group.children.length; i ++) {\r\n                var child = this.group.children[ i ]\r\n                child.rotation.y += 0.005\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsPhysicalClearcoat-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsPhysicalClearcoat.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsPhysicalClearcoat-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - materials - clearcoat\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0e2e1f5e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsPhysicalClearcoat.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0e2e1f5e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsPhysicalClearcoat.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsPhysicalClearcoat.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsPhysicalClearcoat.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0e2e1f5e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsPhysicalClearcoat.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0e2e1f5e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsPhysicalClearcoat.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}