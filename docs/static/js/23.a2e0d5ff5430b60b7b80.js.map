{"version":3,"sources":["webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack:///src/views/demo.vue","webpack:///./src/views/demo.vue?3cde","webpack:///./src/views/demo.vue"],"names":["OrbitControls","object","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","twoPI","undefined","console","warn","document","error","this","enabled","target","three_module","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","tabIndex","prototype","Object","create","constructor","MapControls","call","demo","data","vertexShader","shaderMaterials","cube","camera","scene","renderer","controls","mounted","init","methods","initShaderMaterialsData","createScene","createMesh","createLight","createCamera","createRender","createControls","render","$THREE","Scene","cubeGeometry","BoxGeometry","material","createMaterial","Mesh","fragmentShader","uniforms","time","value","alpha","resolution","Vector2","getElementById","ShaderMaterial","transparent","ambientLight","AmbientLight","spotLight","SpotLight","castShadow","k","PerspectiveCamera","Vector3","WebGLRenderer","antialias","setSize","shadowMap","PCFSoftShadowMap","setClearColor","Color","appendChild","updateFun","rotation","z","forEach","e","requestAnimationFrame","views_demo","_h","$createElement","_self","_c","attrs","id","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/23.a2e0d5ff5430b60b7b80.js","sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from \"../../../build/three.module.js\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\tvar twoPI = 2 * Math.PI;\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\n\t\t\tvar min = scope.minAzimuthAngle;\n\t\t\tvar max = scope.maxAzimuthAngle;\n\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\tif ( min < max ) {\n\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyOut( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseDown( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseMove( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tonMouseUp( event );\n\t\t\t\tbreak;\n\n\t\t\t// TODO touch\n\n\t\t}\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\t// Prevent the browser from scrolling.\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tvar mouseAction;\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tmouseAction = - 1;\n\n\t\t}\n\n\t\tswitch ( mouseAction ) {\n\n\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase MOUSE.PAN:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault(); // prevent scrolling\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// make sure element can receive keys.\n\n\tif ( scope.domElement.tabIndex === - 1 ) {\n\n\t\tscope.domElement.tabIndex = 0;\n\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/three/examples/jsm/controls/OrbitControls.js\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"container\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      vertexShader: '',\r\n      shaderMaterials: {},\r\n      cube: null,\r\n      camera: null,\r\n      scene: null,\r\n      renderer: null,\r\n      controls: null\r\n    }\r\n  },\r\n  mounted () {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    init () {\r\n      this.initShaderMaterialsData() // 初始化着色器材质\r\n      this.createScene() // 创建场景\r\n      this.createMesh() // 创建网格模型\r\n      this.createLight() // 创建光源\r\n      this.createCamera() // 创建相机\r\n      this.createRender() // 创建渲染器\r\n      this.createControls() // 创建控件对象\r\n      this.render() // 渲染\r\n    },\r\n    initShaderMaterialsData () {\r\n      this.vertexShader = `    \r\n        uniform float time;\r\n        varying vec2 vUv;\r\n        void main()\r\n        {\r\n            vec3 posChanged = position;\r\n            posChanged.x = posChanged.x*(abs(sin(time*1.0)));\r\n            posChanged.y = posChanged.y*(abs(cos(time*1.0)));\r\n            posChanged.z = posChanged.z*(abs(sin(time*1.0)));\r\n            //gl_Position = projectionMatrix * modelViewMatrix * vec4(position*(abs(sin(time)/2.0)+0.5),1.0);\r\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(posChanged,1.0);\r\n        }`\r\n      this.shaderMaterials['fragment-shader-1'] = `precision highp float;\r\n        uniform float time;\r\n        uniform float alpha;\r\n        uniform vec2 resolution;\r\n        varying vec2 vUv;\r\n\r\n        void main2(void)\r\n        {\r\n            vec2 position = vUv;\r\n            float red = 1.0;\r\n            float green = 0.25 + sin(time) * 0.25;\r\n            float blue = 0.0;\r\n            vec3 rgb = vec3(red, green, blue);\r\n            vec4 color = vec4(rgb, alpha);\r\n            gl_FragColor = color;\r\n        }\r\n\r\n        #define PI 3.14159\r\n        #define TWO_PI (PI*2.0)\r\n        #define N 68.5\r\n\r\n        void main(void)\r\n        {\r\n            vec2 center = (gl_FragCoord.xy);\r\n            center.x=-10.12*sin(time/200.0);\r\n            center.y=-10.12*cos(time/200.0);\r\n\r\n            vec2 v = (gl_FragCoord.xy - resolution/20.0) / min(resolution.y,resolution.x) * 15.0;\r\n            v.x=v.x-10.0;\r\n            v.y=v.y-200.0;\r\n            float col = 0.0;\r\n\r\n            for(float i = 0.0; i < N; i++)\r\n            {\r\n            float a = i * (TWO_PI/N) * 61.95;\r\n            col += cos(TWO_PI*(v.y * cos(a) + v.x * sin(a) + sin(time*0.004)*100.0 ));\r\n            }\r\n            col /= 5.0;\r\n            gl_FragColor = vec4(col*1.0, -col*1.0,-col*4.0, 1.0);\r\n        }`\r\n      this.shaderMaterials['fragment-shader-2'] = `\r\n        uniform float time;\r\n        uniform vec2 resolution;\r\n        #define CGFloat float\r\n        #define M_PI 3.14159265359\r\n\r\n        vec3 hsvtorgb(float h, float s, float v)\r\n        {\r\n            float c = v * s;\r\n            h = mod((h * 6.0), 6.0);\r\n            float x = c * (1.0 - abs(mod(h, 2.0) - 1.0));\r\n            vec3 color;\r\n\r\n            if (0.0 <= h && h < 1.0)\r\n            {\r\n            color = vec3(c, x, 0.0);\r\n            }\r\n            else if (1.0 <= h && h < 2.0)\r\n            {\r\n            color = vec3(x, c, 0.0);\r\n            }\r\n            else if (2.0 <= h && h < 3.0)\r\n            {\r\n            color = vec3(0.0, c, x);\r\n            }\r\n            else if (3.0 <= h && h < 4.0)\r\n            {\r\n            color = vec3(0.0, x, c);\r\n            }\r\n            else if (4.0 <= h && h < 5.0)\r\n            {\r\n            color = vec3(x, 0.0, c);\r\n            }\r\n            else if (5.0 <= h && h < 6.0)\r\n            {\r\n            color = vec3(c, 0.0, x);\r\n            }\r\n            else\r\n            {\r\n            color = vec3(0.0);\r\n            }\r\n\r\n            color += v - c;\r\n\r\n            return color;\r\n        }\r\n\r\n        void main(void)\r\n        {\r\n\r\n            vec2 position = (gl_FragCoord.xy - 0.5 * resolution) / resolution.y;\r\n            float x = position.x;\r\n            float y = position.y;\r\n\r\n            CGFloat a = atan(x, y);\r\n\r\n            CGFloat d = sqrt(x*x+y*y);\r\n            CGFloat d0 = 0.5*(sin(d-time)+1.5)*d;\r\n            CGFloat d1 = 5.0;\r\n\r\n            CGFloat u = mod(a*d1+sin(d*10.0+time), M_PI*2.0)/M_PI*0.5 - 0.5;\r\n            CGFloat v = mod(pow(d0*4.0, 0.75),1.0) - 0.5;\r\n\r\n            CGFloat dd = sqrt(u*u+v*v);\r\n\r\n            CGFloat aa = atan(u, v);\r\n\r\n            CGFloat uu = mod(aa*3.0+3.0*cos(dd*30.0-time), M_PI*2.0)/M_PI*0.5 - 0.5;\r\n\r\n            CGFloat d2 = sqrt(uu*uu+v*v)*1.5;\r\n\r\n            gl_FragColor = vec4( hsvtorgb(dd+time*0.5/d1, sin(dd*time), d2), 1.0 );\r\n        }`\r\n      this.shaderMaterials['fragment-shader-3'] = `uniform vec2 resolution;\r\n        uniform float time;\r\n        vec2 rand(vec2 pos)\r\n        {\r\n            return fract( 0.00005 * (pow(pos+2.0, pos.yx + 1.0) * 22222.0));\r\n        }\r\n        vec2 rand2(vec2 pos)\r\n        {\r\n            return rand(rand(pos));\r\n        }\r\n\r\n        float softnoise(vec2 pos, float scale)\r\n        {\r\n            vec2 smplpos = pos * scale;\r\n            float c0 = rand2((floor(smplpos) + vec2(0.0, 0.0)) / scale).x;\r\n            float c1 = rand2((floor(smplpos) + vec2(1.0, 0.0)) / scale).x;\r\n            float c2 = rand2((floor(smplpos) + vec2(0.0, 1.0)) / scale).x;\r\n            float c3 = rand2((floor(smplpos) + vec2(1.0, 1.0)) / scale).x;\r\n\r\n            vec2 a = fract(smplpos);\r\n            return mix(\r\n            mix(c0, c1, smoothstep(0.0, 1.0, a.x)),\r\n            mix(c2, c3, smoothstep(0.0, 1.0, a.x)),\r\n            smoothstep(0.0, 1.0, a.y));\r\n        }\r\n\r\n        void main(void)\r\n        {\r\n            vec2 pos = gl_FragCoord.xy / resolution.y;\r\n            pos.x += time * 0.1;\r\n            float color = 0.0;\r\n            float s = 1.0;\r\n            for(int i = 0; i < 8; i++)\r\n            {\r\n            color += softnoise(pos+vec2(i)*0.02, s * 4.0) / s / 2.0;\r\n            s *= 2.0;\r\n            }\r\n            gl_FragColor = vec4(color);\r\n        }`\r\n      this.shaderMaterials['fragment-shader-4'] = `uniform float time;\r\n        uniform vec2 resolution;\r\n        vec2 rand(vec2 pos)\r\n        {\r\n            return fract((pow(pos+2.0,pos.yx+2.0)*555555.0));\r\n        }\r\n\r\n        vec2 rand2(vec2 pos)\r\n        {\r\n            return rand(rand(pos));\r\n        }\r\n\r\n        float softnoise(vec2 pos, float scale) {\r\n            vec2 smplpos = pos * scale;\r\n            float c0 = rand2((floor(smplpos) + vec2(0.0, 0.0)) / scale).x;\r\n            float c1 = rand2((floor(smplpos) + vec2(1.0, 0.0)) / scale).x;\r\n            float c2 = rand2((floor(smplpos) + vec2(0.0, 1.0)) / scale).x;\r\n            float c3 = rand2((floor(smplpos) + vec2(1.0, 1.0)) / scale).x;\r\n\r\n            vec2 a = fract(smplpos);\r\n            return mix(mix(c0, c1, smoothstep(0.0, 1.0, a.x)),\r\n            mix(c2, c3, smoothstep(0.0, 1.0, a.x)),\r\n            smoothstep(0.0, 1.0, a.x));\r\n        }\r\n\r\n        void main( void ) {\r\n            vec2 pos = gl_FragCoord.xy / resolution.y - time * 0.4;\r\n\r\n            float color = 0.0;\r\n            float s = 1.0;\r\n            for (int i = 0; i < 6; ++i) {\r\n            color += softnoise(pos + vec2(0.01 * float(i)), s * 4.0) / s / 2.0;\r\n            s *= 2.0;\r\n            }\r\n            gl_FragColor = vec4(color,mix(color,cos(color),sin(color)),color,1);\r\n        }`\r\n      this.shaderMaterials['fragment-shader-5'] = `uniform float time;\r\n        uniform vec2 resolution;\r\n        void main( void ) {\r\n\r\n            vec3 color = vec3(1.0, 0., 0.);\r\n            vec2 pos = (( 1.4 * gl_FragCoord.xy - resolution.xy) / resolution.xx)*1.5;\r\n            float r=sqrt(pos.x*pos.x+pos.y*pos.y)/15.0;\r\n            float size1=2.0*cos(time/60.0);\r\n            float size2=2.5*sin(time/12.1);\r\n\r\n            float rot1=13.00; //82.0+16.0*sin(time/4.0);\r\n            float rot2=-50.00; //82.0+16.0*sin(time/8.0);\r\n            float t=sin(time);\r\n            float a = (60.0)*sin(rot1*atan(pos.x-size1*pos.y/r,pos.y+size1*pos.x/r)+time);\r\n            a += 200.0*acos(pos.x*2.0+cos(time/2.0))+asin(pos.y*5.0+sin(time/2.0));\r\n            a=a*(r/50.0);\r\n            a=200.0*sin(a*5.0)*(r/30.0);\r\n            if(a>5.0) a=a/200.0;\r\n            if(a<0.5) a=a*22.5;\r\n            gl_FragColor = vec4( cos(a/20.0),a*cos(a/200.0),sin(a/8.0), 1.0 );\r\n        }`\r\n      this.shaderMaterials['fragment-shader-6'] = `uniform float time;\r\n        uniform vec2 resolution;\r\n        void main( void )\r\n        {\r\n\r\n            vec2 uPos = ( gl_FragCoord.xy / resolution.xy );//normalize wrt y axis\r\n            //suPos -= vec2((resolution.x/resolution.y)/2.0, 0.0);//shift origin to center\r\n\r\n            uPos.x -= 1.0;\r\n            uPos.y -= 0.5;\r\n\r\n            vec3 color = vec3(0.0);\r\n            float vertColor = 2.0;\r\n            for( float i = 0.0; i < 15.0; ++i )\r\n            {\r\n            float t = time * (0.9);\r\n            uPos.y += sin( uPos.x*i + t+i/2.0 ) * 0.1;\r\n            float fTemp = abs(1.0 / uPos.y / 100.0);\r\n            vertColor += fTemp;\r\n            color += vec3( fTemp*(10.0-i)/10.0, fTemp*i/10.0, pow(fTemp,1.5)*1.5 );\r\n            }\r\n            vec4 color_final = vec4(color, 1.0);\r\n            gl_FragColor = color_final;\r\n        }`\r\n    },\r\n    // 创建场景\r\n    createScene () {\r\n      this.scene = new this.$THREE.Scene()\r\n    },\r\n    // 创建网格模型\r\n    createMesh () {\r\n      const cubeGeometry = new this.$THREE.BoxGeometry(20, 20, 20) // 创建方块几何对象\r\n\r\n      const meshMaterial1 = this.createMaterial('fragment-shader-1')\r\n      const meshMaterial2 = this.createMaterial('fragment-shader-2')\r\n      const meshMaterial3 = this.createMaterial('fragment-shader-3')\r\n      const meshMaterial4 = this.createMaterial('fragment-shader-4')\r\n      const meshMaterial5 = this.createMaterial('fragment-shader-5')\r\n      const meshMaterial6 = this.createMaterial('fragment-shader-6')\r\n\r\n      const material = [\r\n        meshMaterial1,\r\n        meshMaterial2,\r\n        meshMaterial3,\r\n        meshMaterial4,\r\n        meshMaterial5,\r\n        meshMaterial6\r\n      ]\r\n\r\n      this.cube = new this.$THREE.Mesh(cubeGeometry, material)\r\n\r\n      // 方块添加到场景\r\n      this.scene.add(this.cube)\r\n    },\r\n    // 创建着色器材质\r\n    createMaterial (fragmentShader) {\r\n      // 通过uniforms属性传递的变量可以在着色器程序中使用\r\n      const uniforms = {\r\n        time: {\r\n          type: 'f',\r\n          value: 0.2\r\n        },\r\n        scale: {\r\n          type: 'f',\r\n          value: 0.2\r\n        },\r\n        alpha: {\r\n          type: 'f',\r\n          value: 0.6\r\n        },\r\n        resolution: {\r\n          type: 'v2',\r\n          value: new this.$THREE.Vector2()\r\n        }\r\n      }\r\n\r\n      const element = document.getElementById('container')\r\n      uniforms.resolution.value.x = element.clientWidth\r\n      uniforms.resolution.value.y = element.clientHeight\r\n\r\n      const meshMaterial = new this.$THREE.ShaderMaterial({\r\n        uniforms: uniforms,\r\n        vertexShader: this.vertexShader,\r\n        fragmentShader: this.shaderMaterials[fragmentShader],\r\n        transparent: true\r\n      })\r\n\r\n      return meshMaterial\r\n    },\r\n\r\n    // 创建光源\r\n    createLight () {\r\n      // 环境光\r\n      const ambientLight = new this.$THREE.AmbientLight(0xffffff, 0.1) // 创建环境光\r\n      this.scene.add(ambientLight) // 将环境光添加到场景\r\n\r\n      const spotLight = new this.$THREE.SpotLight(0xffffff) // 创建聚光灯\r\n      spotLight.position.set(-40, 60, -10)\r\n      spotLight.castShadow = true\r\n      this.scene.add(spotLight)\r\n    },\r\n    // 创建相机\r\n    createCamera () {\r\n      const element = document.getElementById('container')\r\n      const width = element.clientWidth // 窗口宽度\r\n      const height = element.clientHeight // 窗口高度\r\n      const k = width / height // 窗口宽高比\r\n      // PerspectiveCamera( fov, aspect, near, far )\r\n      this.camera = new this.$THREE.PerspectiveCamera(35, k, 0.1, 1000)\r\n      this.camera.position.set(-80, 60, 40) // 设置相机位置\r\n\r\n      this.camera.lookAt(new this.$THREE.Vector3(10, 0, 0)) // 设置相机方向\r\n      this.scene.add(this.camera)\r\n    },\r\n    // 创建渲染器\r\n    createRender () {\r\n      const element = document.getElementById('container')\r\n      this.renderer = new this.$THREE.WebGLRenderer({ antialias: true, alpha: true })\r\n      this.renderer.setSize(element.clientWidth, element.clientHeight) // 设置渲染区域尺寸\r\n      this.renderer.shadowMap.enabled = true // 显示阴影\r\n      this.renderer.shadowMap.type = this.$THREE.PCFSoftShadowMap\r\n      this.renderer.setClearColor(new this.$THREE.Color(0x000000, 1.0)) // 设置背景颜色\r\n      element.appendChild(this.renderer.domElement)\r\n    },\r\n\r\n    // 更新属性\r\n    updateFun () {\r\n      this.cube.rotation.y += 0.01\r\n      this.cube.rotation.x += 0.01\r\n      this.cube.rotation.z += 0.01\r\n      this.cube.material.forEach(function (e) {\r\n        e.uniforms.time.value += 0.01\r\n      })\r\n    },\r\n    render () {\r\n      this.updateFun()\r\n      this.renderer.render(this.scene, this.camera)\r\n      requestAnimationFrame(this.render)\r\n    },\r\n    // 创建控件对象\r\n    createControls () {\r\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n#container {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/demo.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"container\"}})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1e9886b5\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/demo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1e9886b5\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./demo.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./demo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./demo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1e9886b5\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./demo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/demo.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}