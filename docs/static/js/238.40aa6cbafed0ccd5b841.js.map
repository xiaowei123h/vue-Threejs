{"version":3,"sources":["webpack:///src/views/shaders/webglShadersVector.vue","webpack:///./src/views/shaders/webglShadersVector.vue?5ab0","webpack:///./src/views/shaders/webglShadersVector.vue"],"names":["webglShadersVector","data","fs","vs","stats","camera","scene","renderer","controls","group","loader","mounted","_this","this","$THREE","FontLoader","load","font","init","animate","methods","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","background","Color","Group","add","textMaterial","MeshBasicMaterial","color","side","DoubleSide","wireframe","textShapes","generateShapes","geometry","ShapeBufferGeometry","text","Mesh","x","pts","pts2","subshape","convexhullShape","solidShape","vA","Vector2","vB","that","processShape","path","wind","beziers","invert","push","getPoint","i","length","curve","LineCurve","v2","QuadraticBezierCurve","subVectors","v1","v0","y","flip","process","convexhullShapeGroup","solidShapeGroup","s","curves","concat","Shape","holes","bezierGeometry","BufferGeometry","vertices","uvs","p","setAttribute","Float32BufferAttribute","newMaterial","ShaderMaterial","uniforms","value","vertexShader","fragmentShader","rotation","Math","PI","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","OrbitControls","target","update","$Stats","dom","style","left","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","render","shaders_webglShadersVector","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/238.40aa6cbafed0ccd5b841.js","sourcesContent":["<template>\r\n    <div class=\"webglShadersVector-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - Resolution-Independent Vector Fonts. <a href=\"https://github.com/mrdoob/three.js/issues/4746\">info</a>.\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            fs: null,\r\n            vs: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            controls: null,\r\n\t\t\tgroup: null,\r\n\t\t\tloader: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fs = `\r\n            varying vec2 vUv;\r\n\t\t\tvarying float flip;\r\n\t\t\tuniform vec3 color;\r\n\t\t\tfloat inCurve(vec2 uv) {\r\n\t\t\t\treturn uv.x * uv.x - uv.y;\r\n\t\t\t}\r\n\t\t\tfloat delta = 0.1;\r\n\t\t\tvoid main() {\r\n\t\t\t\tfloat x = inCurve(vUv);\r\n\t\t\t\tif (x * flip > 0.) discard;\r\n\t\t\t\tgl_FragColor = vec4(color, 1.);\r\n            }`\r\n        this.vs = `\r\n            varying vec2 vUv;\r\n\t\t\tattribute float invert;\r\n\t\t\tvarying float flip;\r\n\t\t\tvoid main() {\r\n\t\t\t\tvUv = uv;\r\n\t\t\t\tflip = invert;\r\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\r\n            }`\r\n        this.loader = new this.$THREE.FontLoader();\r\n        this.loader.load('static/fonts/helvetiker_regular.typeface.json', (font) => {\r\n            this.init(font);\r\n            this.animate();\r\n        })\r\n    },\r\n    methods: {\r\n        init(font) {\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 1, 10000);\r\n            this.camera.position.set(50, 100, 500);\r\n            this.scene = new this.$THREE.Scene();\r\n            this.scene.background = new this.$THREE.Color(0xf0f0f0);\r\n            var theText = '&'; // i % & j b 8\r\n            this.group = new this.$THREE.Group();\r\n            this.scene.add(this.group);\r\n            var textMaterial = new this.$THREE.MeshBasicMaterial({\r\n                color: new this.$THREE.Color(0, 0, 1),\r\n                side: this.$THREE.DoubleSide,\r\n                wireframe: true\r\n            });\r\n            var textShapes = font.generateShapes(theText, 180);\r\n            var geometry = new this.$THREE.ShapeBufferGeometry(textShapes);\r\n            var text = new this.$THREE.Mesh(geometry, textMaterial);\r\n            text.position.x = - 200;\r\n            this.group.add(text);\r\n            //\r\n            var vA = new this.$THREE.Vector2();\r\n            var vB = new this.$THREE.Vector2();\r\n            var that = this\r\n            function processShape(path) {\r\n                var pts = []; // bigger area (convex hull)\r\n                var pts2 = []; // smaller area (full solid shapes)\r\n                var beziers = []; // quad bezier points\r\n                var invert = [];\r\n                var z;\r\n                var wind;\r\n                pts.push(path[ 0 ].getPoint(0, new that.$THREE.Vector2()));\r\n                pts2.push(path[ 0 ].getPoint(0, new that.$THREE.Vector2()));\r\n                for (var i = 0; i < path.length; i ++) {\r\n                    var curve = path[ i ];\r\n                    if (curve instanceof that.$THREE.LineCurve) {\r\n                        pts.push(curve.v2);\r\n                        pts2.push(curve.v2);\r\n                    } else if (curve instanceof that.$THREE.QuadraticBezierCurve) {\r\n                        vA = vA.subVectors(curve.v1, curve.v0);\r\n                        vB = vB.subVectors(curve.v2, curve.v1);\r\n                        z = vA.x * vB.y - vA.y * vB.x; // z component of cross Production\r\n                        wind = z < 0; // clockwise/anticlock wind\r\n                        if (wind) {\r\n                            pts.push(curve.v1);\r\n                            pts.push(curve.v2);\r\n                            pts2.push(curve.v2);\r\n                        } else {\r\n                            pts.push(curve.v2);\r\n                            pts2.push(curve.v1);\r\n                            pts2.push(curve.v2);\r\n                        }\r\n                        var flip = wind ? 1 : - 1;\r\n                        // if (reverse) flip *= -1;\r\n                        invert.push(flip, flip, flip);\r\n                        beziers.push(curve.v0, curve.v1, curve.v2);\r\n                    }\r\n                }\r\n                return {\r\n                    pts: pts,\r\n                    pts2: pts2,\r\n                    beziers: beziers,\r\n                    invert: invert\r\n                };\r\n            }\r\n            var pts, pts2;\r\n            var subshape;\r\n            var convexhullShape;\r\n            var solidShape;\r\n            var convexhullShapeGroup = [];\r\n            var solidShapeGroup = [];\r\n            var beziers = [], invert = [];\r\n            var process;\r\n            var hole;\r\n            for (var s = 0; s < textShapes.length; s ++) {\r\n                subshape = textShapes[ s ];\r\n                process = processShape(subshape.curves);\r\n                pts = process.pts;\r\n                pts2 = process.pts2;\r\n                beziers = beziers.concat(process.beziers);\r\n                invert = invert.concat(process.invert);\r\n                convexhullShape = new this.$THREE.Shape(pts);\r\n                solidShape = new this.$THREE.Shape(pts2);\r\n                convexhullShapeGroup.push(convexhullShape);\r\n                solidShapeGroup.push(solidShape);\r\n                for (var i = 0; i < subshape.holes.length; i ++) {\r\n                    hole = subshape.holes[ i ];\r\n                    process = processShape(hole.curves);\r\n                    pts = process.pts;\r\n                    pts2 = process.pts2;\r\n                    beziers = beziers.concat(process.beziers);\r\n                    invert = invert.concat(process.invert);\r\n                    convexhullShape.holes.push(new this.$THREE.Shape(pts));\r\n                    solidShape.holes.push(new this.$THREE.Shape(pts2));\r\n                }\r\n            } // end of subshape\r\n            var bezierGeometry = new this.$THREE.BufferGeometry();\r\n            var vertices = [];\r\n            var uvs = [];\r\n            for (var i = 0; i < beziers.length; i ++) {\r\n                var p = beziers[ i ];\r\n                vertices.push(p.x, p.y, 0);\r\n            }\r\n            for (var i = 0; i < beziers.length; i += 3) {\r\n                uvs.push(0, 0, 0.5, 0, 1, 1);\r\n            }\r\n            bezierGeometry.setAttribute('position', new this.$THREE.Float32BufferAttribute(vertices, 3));\r\n            bezierGeometry.setAttribute('uv', new this.$THREE.Float32BufferAttribute(uvs, 2));\r\n            bezierGeometry.setAttribute('invert', new this.$THREE.Float32BufferAttribute(invert, 1));\r\n            geometry = new this.$THREE.ShapeBufferGeometry(convexhullShapeGroup);\r\n            text = new this.$THREE.Mesh(geometry, textMaterial);\r\n            text.position.x = 200;\r\n            this.group.add(text);\r\n            geometry = new this.$THREE.ShapeBufferGeometry(solidShapeGroup);\r\n            text = new this.$THREE.Mesh(geometry, new this.$THREE.MeshBasicMaterial({ color: new this.$THREE.Color(1, 0, 0), side: this.$THREE.DoubleSide, wireframe: true }));\r\n            text.position.x = 200;\r\n            this.group.add(text);\r\n            //\r\n            var newMaterial = new this.$THREE.ShaderMaterial({\r\n                uniforms: {\r\n                    color: { value: new this.$THREE.Color(0.45 * 0xffffff) }\r\n                },\r\n                vertexShader: this.vs,\r\n                fragmentShader: this.fs,\r\n                side: this.$THREE.DoubleSide\r\n            });\r\n            text = new this.$THREE.Mesh(bezierGeometry, newMaterial);\r\n            text.rotation.y = Math.PI * 2;\r\n            this.group.add(text);\r\n            //\r\n            geometry = new this.$THREE.ShapeBufferGeometry(solidShapeGroup);\r\n            text = new this.$THREE.Mesh(geometry, new this.$THREE.MeshBasicMaterial({ color: 0.45 * 0xffffff, side: this.$THREE.DoubleSide }));\r\n            text.rotation.y = Math.PI * 2;\r\n            this.group.add(text);\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true });\r\n            this.renderer.setPixelRatio(window.devicePixelRatio);\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight);\r\n            document.getElementsByClassName('webglShadersVector-container')[0].appendChild(this.renderer.domElement);\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n            this.controls.target.set(50, 100, 0);\r\n            this.controls.update();\r\n            this.stats = new this.$Stats();\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglShadersVector-container')[0].appendChild(this.stats.dom);\r\n            window.addEventListener('resize', this.onWindowResize, false);\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate);\r\n            this.render();\r\n            this.stats.update();\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglShadersVector-contianer {\r\n    width: 100%;\r\n}\r\n#info {\r\n    background-color: #f0f0f0;\r\n    color: #444;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/shaders/webglShadersVector.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglShadersVector-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - Resolution-Independent Vector Fonts. \"),_c('a',{attrs:{\"href\":\"https://github.com/mrdoob/three.js/issues/4746\"}},[_vm._v(\"info\")]),_vm._v(\".\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-45db3e57\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/shaders/webglShadersVector.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-45db3e57\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglShadersVector.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadersVector.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadersVector.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-45db3e57\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglShadersVector.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-45db3e57\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/shaders/webglShadersVector.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}