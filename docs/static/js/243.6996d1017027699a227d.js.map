{"version":3,"sources":["webpack:///./src/components/jsm/loaders/AMFLoader.js","webpack:///src/views/loader/webglLoaderAmf.vue","webpack:///./src/views/loader/webglLoaderAmf.vue?edc1","webpack:///./src/views/loader/webglLoaderAmf.vue"],"names":["AMFLoader","manager","Loader","call","this","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","loadMaterials","node","matName","matId","attributes","id","textContent","color","r","g","b","a","loadedMaterial","i","childNodes","length","matChildEl","nodeName","undefined","type","value","loadColor","MeshPhongMaterial","flatShading","Color","name","transparent","opacity","material","matColor","loadMeshVolume","volume","triangles","materialid","currVolumeNode","firstElementChild","materialId","nodeValue","v1","getElementsByTagName","v2","v3","push","nextElementSibling","loadMeshVertices","vertArray","normalArray","currVerticesNode","vNode","x","y","z","nx","ny","nz","vertices","normals","loadObject","objId","loadedObject","meshes","currColor","currObjNode","currMeshNode","mesh","volumes","loadedVertices","concat","obj","j","xmlData","view","DataView","String","fromCharCode","getUint8","zip","file","log","JSZip","ReferenceError","files","toLowerCase","substr","asArrayBuffer","fileText","LoaderUtils","decodeText","DOMParser","parseFromString","documentElement","loadDocument","amfName","amfAuthor","amfScale","scale","unit","scaleUnits","millimeter","inch","feet","meter","micron","loadDocumentScale","amfMaterials","amfObjects","child","sceneObject","Group","defaultMaterial","userData","author","part","newObject","objDefaultMaterial","Float32BufferAttribute","clone","newGeometry","BufferGeometry","setIndex","setAttribute","add","Mesh","webglLoaderAmf","camera","scene","renderer","mounted","init","methods","_this","$THREE","Scene","background","AmbientLight","PerspectiveCamera","$webglInnerWidth","window","innerHeight","up","set","position","PointLight","grid","GridHelper","rotateOnAxis","Vector3","Math","PI","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","AMFLoader_AMFLoader","amfobject","render","controls","OrbitControls","addEventListener","target","update","onWindowResize","$onWindowResize","loader_webglLoaderAmf","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/243.6996d1017027699a227d.js","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tColor,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMesh,\r\n\tMeshPhongMaterial\r\n} from \"@/components/build/three.module.js\";\r\nimport { JSZip } from \"../libs/jszip.module.min.js\";\r\n\r\n/**\r\n * Description: Early release of an AMF Loader following the pattern of the\r\n * example loaders in the three.js project.\r\n *\r\n * More information about the AMF format: http://amf.wikispaces.com\r\n *\r\n * Usage:\r\n *\tvar loader = new AMFLoader();\r\n *\tloader.load('/path/to/project.amf', function(objecttree) {\r\n *\t\tscene.add(objecttree);\r\n *\t});\r\n *\r\n * Materials now supported, material colors supported\r\n * Zip support, requires jszip\r\n * No constellation support (yet)!\r\n *\r\n */\r\n\r\nvar AMFLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n};\r\n\r\nAMFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: AMFLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( data ) {\r\n\r\n\t\tfunction loadDocument( data ) {\r\n\r\n\t\t\tvar view = new DataView( data );\r\n\t\t\tvar magic = String.fromCharCode( view.getUint8( 0 ), view.getUint8( 1 ) );\r\n\r\n\t\t\tif ( magic === 'PK' ) {\r\n\r\n\t\t\t\tvar zip = null;\r\n\t\t\t\tvar file = null;\r\n\r\n\t\t\t\tconsole.log( 'THREE.AMFLoader: Loading Zip' );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tzip = new JSZip( data ); // eslint-disable-line no-undef\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tif ( e instanceof ReferenceError ) {\r\n\r\n\t\t\t\t\t\tconsole.log( 'THREE.AMFLoader: jszip missing and file is compressed.' );\r\n\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( file in zip.files ) {\r\n\r\n\t\t\t\t\tif ( file.toLowerCase().substr( - 4 ) === '.amf' ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log( 'THREE.AMFLoader: Trying to load file asset: ' + file );\r\n\t\t\t\tview = new DataView( zip.file( file ).asArrayBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar fileText = LoaderUtils.decodeText( view );\r\n\t\t\tvar xmlData = new DOMParser().parseFromString( fileText, 'application/xml' );\r\n\r\n\t\t\tif ( xmlData.documentElement.nodeName.toLowerCase() !== 'amf' ) {\r\n\r\n\t\t\t\tconsole.log( 'THREE.AMFLoader: Error loading AMF - no AMF document found.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn xmlData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadDocumentScale( node ) {\r\n\r\n\t\t\tvar scale = 1.0;\r\n\t\t\tvar unit = 'millimeter';\r\n\r\n\t\t\tif ( node.documentElement.attributes.unit !== undefined ) {\r\n\r\n\t\t\t\tunit = node.documentElement.attributes.unit.value.toLowerCase();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar scaleUnits = {\r\n\t\t\t\tmillimeter: 1.0,\r\n\t\t\t\tinch: 25.4,\r\n\t\t\t\tfeet: 304.8,\r\n\t\t\t\tmeter: 1000.0,\r\n\t\t\t\tmicron: 0.001\r\n\t\t\t};\r\n\r\n\t\t\tif ( scaleUnits[ unit ] !== undefined ) {\r\n\r\n\t\t\t\tscale = scaleUnits[ unit ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log( 'THREE.AMFLoader: Unit scale: ' + scale );\r\n\t\t\treturn scale;\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadMaterials( node ) {\r\n\r\n\t\t\tvar matName = 'AMF Material';\r\n\t\t\tvar matId = node.attributes.id.textContent;\r\n\t\t\tvar color = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\r\n\r\n\t\t\tvar loadedMaterial = null;\r\n\r\n\t\t\tfor ( var i = 0; i < node.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar matChildEl = node.childNodes[ i ];\r\n\r\n\t\t\t\tif ( matChildEl.nodeName === 'metadata' && matChildEl.attributes.type !== undefined ) {\r\n\r\n\t\t\t\t\tif ( matChildEl.attributes.type.value === 'name' ) {\r\n\r\n\t\t\t\t\t\tmatName = matChildEl.textContent;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( matChildEl.nodeName === 'color' ) {\r\n\r\n\t\t\t\t\tcolor = loadColor( matChildEl );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tloadedMaterial = new MeshPhongMaterial( {\r\n\t\t\t\tflatShading: true,\r\n\t\t\t\tcolor: new Color( color.r, color.g, color.b ),\r\n\t\t\t\tname: matName\r\n\t\t\t} );\r\n\r\n\t\t\tif ( color.a !== 1.0 ) {\r\n\r\n\t\t\t\tloadedMaterial.transparent = true;\r\n\t\t\t\tloadedMaterial.opacity = color.a;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { id: matId, material: loadedMaterial };\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadColor( node ) {\r\n\r\n\t\t\tvar color = { r: 1.0, g: 1.0, b: 1.0, a: 1.0 };\r\n\r\n\t\t\tfor ( var i = 0; i < node.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar matColor = node.childNodes[ i ];\r\n\r\n\t\t\t\tif ( matColor.nodeName === 'r' ) {\r\n\r\n\t\t\t\t\tcolor.r = matColor.textContent;\r\n\r\n\t\t\t\t} else if ( matColor.nodeName === 'g' ) {\r\n\r\n\t\t\t\t\tcolor.g = matColor.textContent;\r\n\r\n\t\t\t\t} else if ( matColor.nodeName === 'b' ) {\r\n\r\n\t\t\t\t\tcolor.b = matColor.textContent;\r\n\r\n\t\t\t\t} else if ( matColor.nodeName === 'a' ) {\r\n\r\n\t\t\t\t\tcolor.a = matColor.textContent;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn color;\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadMeshVolume( node ) {\r\n\r\n\t\t\tvar volume = { name: '', triangles: [], materialid: null };\r\n\r\n\t\t\tvar currVolumeNode = node.firstElementChild;\r\n\r\n\t\t\tif ( node.attributes.materialid !== undefined ) {\r\n\r\n\t\t\t\tvolume.materialId = node.attributes.materialid.nodeValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhile ( currVolumeNode ) {\r\n\r\n\t\t\t\tif ( currVolumeNode.nodeName === 'metadata' ) {\r\n\r\n\t\t\t\t\tif ( currVolumeNode.attributes.type !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( currVolumeNode.attributes.type.value === 'name' ) {\r\n\r\n\t\t\t\t\t\t\tvolume.name = currVolumeNode.textContent;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( currVolumeNode.nodeName === 'triangle' ) {\r\n\r\n\t\t\t\t\tvar v1 = currVolumeNode.getElementsByTagName( 'v1' )[ 0 ].textContent;\r\n\t\t\t\t\tvar v2 = currVolumeNode.getElementsByTagName( 'v2' )[ 0 ].textContent;\r\n\t\t\t\t\tvar v3 = currVolumeNode.getElementsByTagName( 'v3' )[ 0 ].textContent;\r\n\r\n\t\t\t\t\tvolume.triangles.push( v1, v2, v3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrVolumeNode = currVolumeNode.nextElementSibling;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn volume;\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadMeshVertices( node ) {\r\n\r\n\t\t\tvar vertArray = [];\r\n\t\t\tvar normalArray = [];\r\n\t\t\tvar currVerticesNode = node.firstElementChild;\r\n\r\n\t\t\twhile ( currVerticesNode ) {\r\n\r\n\t\t\t\tif ( currVerticesNode.nodeName === 'vertex' ) {\r\n\r\n\t\t\t\t\tvar vNode = currVerticesNode.firstElementChild;\r\n\r\n\t\t\t\t\twhile ( vNode ) {\r\n\r\n\t\t\t\t\t\tif ( vNode.nodeName === 'coordinates' ) {\r\n\r\n\t\t\t\t\t\t\tvar x = vNode.getElementsByTagName( 'x' )[ 0 ].textContent;\r\n\t\t\t\t\t\t\tvar y = vNode.getElementsByTagName( 'y' )[ 0 ].textContent;\r\n\t\t\t\t\t\t\tvar z = vNode.getElementsByTagName( 'z' )[ 0 ].textContent;\r\n\r\n\t\t\t\t\t\t\tvertArray.push( x, y, z );\r\n\r\n\t\t\t\t\t\t} else if ( vNode.nodeName === 'normal' ) {\r\n\r\n\t\t\t\t\t\t\tvar nx = vNode.getElementsByTagName( 'nx' )[ 0 ].textContent;\r\n\t\t\t\t\t\t\tvar ny = vNode.getElementsByTagName( 'ny' )[ 0 ].textContent;\r\n\t\t\t\t\t\t\tvar nz = vNode.getElementsByTagName( 'nz' )[ 0 ].textContent;\r\n\r\n\t\t\t\t\t\t\tnormalArray.push( nx, ny, nz );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvNode = vNode.nextElementSibling;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrVerticesNode = currVerticesNode.nextElementSibling;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { 'vertices': vertArray, 'normals': normalArray };\r\n\r\n\t\t}\r\n\r\n\t\tfunction loadObject( node ) {\r\n\r\n\t\t\tvar objId = node.attributes.id.textContent;\r\n\t\t\tvar loadedObject = { name: 'amfobject', meshes: [] };\r\n\t\t\tvar currColor = null;\r\n\t\t\tvar currObjNode = node.firstElementChild;\r\n\r\n\t\t\twhile ( currObjNode ) {\r\n\r\n\t\t\t\tif ( currObjNode.nodeName === 'metadata' ) {\r\n\r\n\t\t\t\t\tif ( currObjNode.attributes.type !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( currObjNode.attributes.type.value === 'name' ) {\r\n\r\n\t\t\t\t\t\t\tloadedObject.name = currObjNode.textContent;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( currObjNode.nodeName === 'color' ) {\r\n\r\n\t\t\t\t\tcurrColor = loadColor( currObjNode );\r\n\r\n\t\t\t\t} else if ( currObjNode.nodeName === 'mesh' ) {\r\n\r\n\t\t\t\t\tvar currMeshNode = currObjNode.firstElementChild;\r\n\t\t\t\t\tvar mesh = { vertices: [], normals: [], volumes: [], color: currColor };\r\n\r\n\t\t\t\t\twhile ( currMeshNode ) {\r\n\r\n\t\t\t\t\t\tif ( currMeshNode.nodeName === 'vertices' ) {\r\n\r\n\t\t\t\t\t\t\tvar loadedVertices = loadMeshVertices( currMeshNode );\r\n\r\n\t\t\t\t\t\t\tmesh.normals = mesh.normals.concat( loadedVertices.normals );\r\n\t\t\t\t\t\t\tmesh.vertices = mesh.vertices.concat( loadedVertices.vertices );\r\n\r\n\t\t\t\t\t\t} else if ( currMeshNode.nodeName === 'volume' ) {\r\n\r\n\t\t\t\t\t\t\tmesh.volumes.push( loadMeshVolume( currMeshNode ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrMeshNode = currMeshNode.nextElementSibling;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tloadedObject.meshes.push( mesh );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrObjNode = currObjNode.nextElementSibling;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { 'id': objId, 'obj': loadedObject };\r\n\r\n\t\t}\r\n\r\n\t\tvar xmlData = loadDocument( data );\r\n\t\tvar amfName = '';\r\n\t\tvar amfAuthor = '';\r\n\t\tvar amfScale = loadDocumentScale( xmlData );\r\n\t\tvar amfMaterials = {};\r\n\t\tvar amfObjects = {};\r\n\t\tvar childNodes = xmlData.documentElement.childNodes;\r\n\r\n\t\tvar i, j;\r\n\r\n\t\tfor ( i = 0; i < childNodes.length; i ++ ) {\r\n\r\n\t\t\tvar child = childNodes[ i ];\r\n\r\n\t\t\tif ( child.nodeName === 'metadata' ) {\r\n\r\n\t\t\t\tif ( child.attributes.type !== undefined ) {\r\n\r\n\t\t\t\t\tif ( child.attributes.type.value === 'name' ) {\r\n\r\n\t\t\t\t\t\tamfName = child.textContent;\r\n\r\n\t\t\t\t\t} else if ( child.attributes.type.value === 'author' ) {\r\n\r\n\t\t\t\t\t\tamfAuthor = child.textContent;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( child.nodeName === 'material' ) {\r\n\r\n\t\t\t\tvar loadedMaterial = loadMaterials( child );\r\n\r\n\t\t\t\tamfMaterials[ loadedMaterial.id ] = loadedMaterial.material;\r\n\r\n\t\t\t} else if ( child.nodeName === 'object' ) {\r\n\r\n\t\t\t\tvar loadedObject = loadObject( child );\r\n\r\n\t\t\t\tamfObjects[ loadedObject.id ] = loadedObject.obj;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar sceneObject = new Group();\r\n\t\tvar defaultMaterial = new MeshPhongMaterial( { color: 0xaaaaff, flatShading: true } );\r\n\r\n\t\tsceneObject.name = amfName;\r\n\t\tsceneObject.userData.author = amfAuthor;\r\n\t\tsceneObject.userData.loader = 'AMF';\r\n\r\n\t\tfor ( var id in amfObjects ) {\r\n\r\n\t\t\tvar part = amfObjects[ id ];\r\n\t\t\tvar meshes = part.meshes;\r\n\t\t\tvar newObject = new Group();\r\n\t\t\tnewObject.name = part.name || '';\r\n\r\n\t\t\tfor ( i = 0; i < meshes.length; i ++ ) {\r\n\r\n\t\t\t\tvar objDefaultMaterial = defaultMaterial;\r\n\t\t\t\tvar mesh = meshes[ i ];\r\n\t\t\t\tvar vertices = new Float32BufferAttribute( mesh.vertices, 3 );\r\n\t\t\t\tvar normals = null;\r\n\r\n\t\t\t\tif ( mesh.normals.length ) {\r\n\r\n\t\t\t\t\tnormals = new Float32BufferAttribute( mesh.normals, 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( mesh.color ) {\r\n\r\n\t\t\t\t\tvar color = mesh.color;\r\n\r\n\t\t\t\t\tobjDefaultMaterial = defaultMaterial.clone();\r\n\t\t\t\t\tobjDefaultMaterial.color = new Color( color.r, color.g, color.b );\r\n\r\n\t\t\t\t\tif ( color.a !== 1.0 ) {\r\n\r\n\t\t\t\t\t\tobjDefaultMaterial.transparent = true;\r\n\t\t\t\t\t\tobjDefaultMaterial.opacity = color.a;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar volumes = mesh.volumes;\r\n\r\n\t\t\t\tfor ( j = 0; j < volumes.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar volume = volumes[ j ];\r\n\t\t\t\t\tvar newGeometry = new BufferGeometry();\r\n\t\t\t\t\tvar material = objDefaultMaterial;\r\n\r\n\t\t\t\t\tnewGeometry.setIndex( volume.triangles );\r\n\t\t\t\t\tnewGeometry.setAttribute( 'position', vertices.clone() );\r\n\r\n\t\t\t\t\tif ( normals ) {\r\n\r\n\t\t\t\t\t\tnewGeometry.setAttribute( 'normal', normals.clone() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( amfMaterials[ volume.materialId ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tmaterial = amfMaterials[ volume.materialId ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnewGeometry.scale( amfScale, amfScale, amfScale );\r\n\t\t\t\t\tnewObject.add( new Mesh( newGeometry, material.clone() ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsceneObject.add( newObject );\r\n\r\n\t\t}\r\n\r\n\t\treturn sceneObject;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { AMFLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/AMFLoader.js","<template>\r\n    <div class=\"webglLoaderAmf-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a>\r\n\t\t\t<a href=\"http://amf.wikispaces.com\" target=\"_blank\" rel=\"noopener\">AMF File format</a>\r\n\t\t\t<div>AMF loader test by <a href=\"https://github.com/tamarintech\" target=\"_blank\" rel=\"noopener\">tamarintech</a></div>\r\n\t\t\t<div>Rook manufacturing file from <a href=\"http://amf.wikispaces.com/AMF+test+files\" target=\"_blank\" rel=\"noopener\">AMF test files</a></div>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { AMFLoader } from '@/components/jsm/loaders/AMFLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x999999)\r\n            this.scene.add(new this.$THREE.AmbientLight(0x999999))\r\n            this.camera = new this.$THREE.PerspectiveCamera(35, this.$webglInnerWidth / window.innerHeight, 1, 500)\r\n            // Z is up for objects intended to be 3D printed.\r\n            this.camera.up.set(0, 0, 1)\r\n            this.camera.position.set(0, - 9, 6)\r\n            this.camera.add(new this.$THREE.PointLight(0xffffff, 0.8))\r\n            this.scene.add(this.camera)\r\n            var grid = new this.$THREE.GridHelper(50, 50, 0xffffff, 0x555555)\r\n            grid.rotateOnAxis(new this.$THREE.Vector3(1, 0, 0), 90 * (Math.PI / 180))\r\n            this.scene.add(grid)\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglLoaderAmf-container')[0].appendChild(this.renderer.domElement)\r\n            var loader = new AMFLoader()\r\n            loader.load('static/models/amf/rook.amf', (amfobject) => {\r\n                this.scene.add(amfobject)\r\n                this.render()\r\n            })\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.addEventListener('change', this.render)\r\n            controls.target.set(0, 1.2, 2)\r\n            controls.update()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoaderAmf-container {\r\n    width: 100%;\r\n    background-color: #999;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoaderAmf.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoaderAmf-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"http://amf.wikispaces.com\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"AMF File format\")]),_vm._v(\" \"),_c('div',[_vm._v(\"AMF loader test by \"),_c('a',{attrs:{\"href\":\"https://github.com/tamarintech\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"tamarintech\")])]),_vm._v(\" \"),_c('div',[_vm._v(\"Rook manufacturing file from \"),_c('a',{attrs:{\"href\":\"http://amf.wikispaces.com/AMF+test+files\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"AMF test files\")])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-00d66690\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoaderAmf.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-00d66690\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoaderAmf.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderAmf.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderAmf.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-00d66690\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoaderAmf.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-00d66690\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoaderAmf.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}