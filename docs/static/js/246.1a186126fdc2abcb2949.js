webpackJsonp([246],{QnEK:function(e,t){},t17d:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n("wIBv"),r=n("Y95o"),s=n("z8c2"),a=n("WGeS"),o={data:function(){return{container:null,camera:null,scene:null,renderer:null,hand1:null,hand2:null,controller1:null,controller2:null,controllerGrip1:null,controllerGrip2:null,controls:null,grabbing:!1,scaling:{active:!1,initialDistance:0,object:null,initialScale:1},spheres:[],SphereRadius:.05}},mounted:function(){this.init(),this.animate()},methods:{init:function(){this.container=document.createElement("div"),document.getElementsByClassName("webxrVrHandinputCubes-container")[0].appendChild(this.container),this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(4473924),this.camera=new this.$THREE.PerspectiveCamera(50,this.$webglInnerWidth/window.innerHeight,.1,10),this.camera.position.set(0,1.6,3),this.controls=new i.b(this.camera,this.container),this.controls.target.set(0,1.6,0),this.controls.update();var e=new this.$THREE.PlaneBufferGeometry(4,4),t=new this.$THREE.MeshStandardMaterial({color:2236962}),n=new this.$THREE.Mesh(e,t);n.rotation.x=-Math.PI/2,n.receiveShadow=!0,this.scene.add(n),this.scene.add(new this.$THREE.HemisphereLight(8421504,6316128));var o=new this.$THREE.DirectionalLight(16777215);o.position.set(0,6,0),o.castShadow=!0,o.shadow.camera.top=2,o.shadow.camera.bottom=-2,o.shadow.camera.right=2,o.shadow.camera.left=-2,o.shadow.mapSize.set(4096,4096),this.scene.add(o),this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.renderer.outputEncoding=this.$THREE.sRGBEncoding,this.renderer.shadowMap.enabled=!0,this.renderer.xr.enabled=!0,this.container.appendChild(this.renderer.domElement),document.getElementsByClassName("webxrVrHandinputCubes-container")[0].appendChild(r.a.createButton(this.renderer)),this.controller1=this.renderer.xr.getController(0),this.scene.add(this.controller1),this.controller2=this.renderer.xr.getController(1),this.scene.add(this.controller2);var h=new s.a,d=(new a.a).setPath("static/models/fbx/");this.controllerGrip1=this.renderer.xr.getControllerGrip(0),this.controllerGrip1.add(h.createControllerModel(this.controllerGrip1)),this.scene.add(this.controllerGrip1),this.hand1=this.renderer.xr.getHand(0),this.hand1.addEventListener("pinchstart",this.onPinchStartLeft),this.hand1.addEventListener("pinchend",function(){scaling.active=!1}),this.hand1.add(d.createHandModel(this.hand1)),this.scene.add(this.hand1),this.controllerGrip2=this.renderer.xr.getControllerGrip(1),this.controllerGrip2.add(h.createControllerModel(this.controllerGrip2)),this.scene.add(this.controllerGrip2),this.hand2=this.renderer.xr.getHand(1),this.hand2.addEventListener("pinchstart",this.onPinchStartRight),this.hand2.addEventListener("pinchend",this.onPinchEndRight),this.hand2.add(d.createHandModel(this.hand2)),this.scene.add(this.hand2);var l=(new this.$THREE.BufferGeometry).setFromPoints([new this.$THREE.Vector3(0,0,0),new this.$THREE.Vector3(0,0,-1)]),c=new this.$THREE.Line(l);c.name="line",c.scale.z=5,this.controller1.add(c.clone()),this.controller2.add(c.clone()),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},onPinchStartLeft:function(e){var t=e.target;if(this.grabbing){var n=t.joints[XRHand.INDEX_PHALANX_TIP],i=collideObject(n);if(i){var r=this.hand2.userData.selected;if(console.log("sphere1",i,"sphere2",r),i===r)return this.scaling.active=!0,this.scaling.object=i,this.scaling.initialScale=i.scale.x,void(this.scaling.initialDistance=n.position.distanceTo(this.hand2.joints[XRHand.INDEX_PHALANX_TIP].position))}}var s=new this.$THREE.BoxBufferGeometry(SphereRadius,SphereRadius,SphereRadius),a=new this.$THREE.MeshStandardMaterial({color:16777215*Math.random(),roughness:1,metalness:0}),o=new this.$THREE.Mesh(s,a);o.geometry.computeBoundingSphere();n=t.joints[XRHand.INDEX_PHALANX_TIP];o.position.copy(n.position),o.quaternion.copy(n.quaternion),spheres.push(o),this.scene.add(o)},collideObject:function(e){for(var t=0;t<spheres.length;t++){var n=spheres[t];if(e.getWorldPosition().distanceTo(n.getWorldPosition())<n.geometry.boundingSphere.radius*n.scale.x)return n}return null},onPinchStartRight:function(e){var t=e.target,n=t.joints[XRHand.INDEX_PHALANX_TIP],i=collideObject(n);i&&(this.grabbing=!0,n.attach(i),t.userData.selected=i,console.log("Selected",i))},onPinchEndRight:function(e){var t=e.target;if(void 0!==t.userData.selected){var n=t.userData.selected;n.material.emissive.b=0,this.scene.attach(n),t.userData.selected=void 0,this.grabbing=!1}this.scaling.active=!1},animate:function(){this.renderer.setAnimationLoop(this.render)},render:function(){if(this.scaling.active){var e=hand1.joints[XRHand.INDEX_PHALANX_TIP].position,t=hand2.joints[XRHand.INDEX_PHALANX_TIP].position,n=e.distanceTo(t),i=this.scaling.initialScale+n/this.scaling.initialDistance-1;this.scaling.object.scale.setScalar(i)}this.renderer.render(this.scene,this.camera)}}},h={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webxrVrHandinputCubes-container"},[t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" vr - handinput - cubes"),t("br"),this._v("\n\t\t\t(Oculus Browser with #webxr-hands flag enabled)\n\t\t")])])}]};var d=n("VU/8")(o,h,!1,function(e){n("QnEK")},"data-v-4148a91b",null);t.default=d.exports}});
//# sourceMappingURL=246.1a186126fdc2abcb2949.js.map