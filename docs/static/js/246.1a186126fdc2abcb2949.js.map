{"version":3,"sources":["webpack:///src/views/vr/webxrVrHandinputCubes.vue","webpack:///./src/views/vr/webxrVrHandinputCubes.vue?1b56","webpack:///./src/views/vr/webxrVrHandinputCubes.vue"],"names":["webxrVrHandinputCubes","data","container","camera","scene","renderer","hand1","hand2","controller1","controller2","controllerGrip1","controllerGrip2","controls","grabbing","scaling","active","initialDistance","object","initialScale","spheres","SphereRadius","mounted","this","init","animate","methods","document","createElement","getElementsByClassName","appendChild","$THREE","Scene","background","Color","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","OrbitControls","target","update","floorGeometry","PlaneBufferGeometry","floorMaterial","MeshStandardMaterial","color","floor","Mesh","rotation","x","Math","PI","receiveShadow","add","HemisphereLight","light","DirectionalLight","castShadow","shadow","top","bottom","right","left","mapSize","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","shadowMap","enabled","xr","domElement","VRButton","createButton","getController","controllerModelFactory","XRControllerModelFactory","handModelFactory","XRHandModelFactory","setPath","getControllerGrip","createControllerModel","getHand","addEventListener","onPinchStartLeft","createHandModel","onPinchStartRight","onPinchEndRight","geometry","BufferGeometry","setFromPoints","Vector3","line","Line","name","scale","z","clone","onWindowResize","$onWindowResize","event","controller","indexTip","joints","XRHand","INDEX_PHALANX_TIP","sphere","collideObject","sphere2","userData","selected","console","log","distanceTo","BoxBufferGeometry","material","random","roughness","metalness","spawn","computeBoundingSphere","copy","quaternion","push","i","length","getWorldPosition","boundingSphere","radius","attach","undefined","emissive","b","setAnimationLoop","render","indexTip1Pos","indexTip2Pos","distance","newScale","setScalar","vr_webxrVrHandinputCubes","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/246.1a186126fdc2abcb2949.js","sourcesContent":["<template>\r\n    <div class=\"webxrVrHandinputCubes-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> vr - handinput - cubes<br/>\r\n\t\t\t(Oculus Browser with #webxr-hands flag enabled)\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { VRButton } from '@/components/jsm/webxr/VRButton.js'\r\nimport { XRControllerModelFactory } from '@/components/jsm/webxr/XRControllerModelFactory.js'\r\nimport { XRHandModelFactory } from '@/components/jsm/webxr/XRHandModelFactory.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            hand1: null,\r\n            hand2: null,\r\n            controller1: null,\r\n            controller2: null,\r\n            controllerGrip1: null,\r\n            controllerGrip2: null,\r\n\t\t\tcontrols: null,\r\n\t\t\tgrabbing: false,\r\n\t\t\tscaling: {\r\n\t\t\t\tactive: false,\r\n\t\t\t\tinitialDistance: 0,\r\n\t\t\t\tobject: null,\r\n\t\t\t\tinitialScale: 1\r\n\t\t\t},\r\n            spheres: [],\r\n            SphereRadius: 0.05\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webxrVrHandinputCubes-container')[0].appendChild(this.container)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x444444)\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 0.1, 10)\r\n            this.camera.position.set(0, 1.6, 3)\r\n            this.controls = new OrbitControls(this.camera, this.container)\r\n            this.controls.target.set(0, 1.6, 0)\r\n            this.controls.update()\r\n            var floorGeometry = new this.$THREE.PlaneBufferGeometry(4, 4)\r\n            var floorMaterial = new this.$THREE.MeshStandardMaterial({ color: 0x222222 })\r\n            var floor = new this.$THREE.Mesh(floorGeometry, floorMaterial)\r\n            floor.rotation.x = - Math.PI / 2\r\n            floor.receiveShadow = true\r\n            this.scene.add(floor)\r\n            this.scene.add(new this.$THREE.HemisphereLight(0x808080, 0x606060))\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(0, 6, 0)\r\n            light.castShadow = true\r\n            light.shadow.camera.top = 2\r\n            light.shadow.camera.bottom = - 2\r\n            light.shadow.camera.right = 2\r\n            light.shadow.camera.left = - 2\r\n            light.shadow.mapSize.set(4096, 4096)\r\n            this.scene.add(light)\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.xr.enabled = true\r\n            this.container.appendChild(this.renderer.domElement)\r\n            document.getElementsByClassName('webxrVrHandinputCubes-container')[0].appendChild(VRButton.createButton(this.renderer))\r\n            // controllers\r\n            this.controller1 = this.renderer.xr.getController(0)\r\n            this.scene.add(this.controller1)\r\n            this.controller2 = this.renderer.xr.getController(1)\r\n            this.scene.add(this.controller2)\r\n            var controllerModelFactory = new XRControllerModelFactory()\r\n            var handModelFactory = new XRHandModelFactory().setPath(\"static/models/fbx/\")\r\n            // Hand 1\r\n            this.controllerGrip1 = this.renderer.xr.getControllerGrip(0)\r\n            this.controllerGrip1.add(controllerModelFactory.createControllerModel(this.controllerGrip1))\r\n            this.scene.add(this.controllerGrip1)\r\n            this.hand1 = this.renderer.xr.getHand(0)\r\n            this.hand1.addEventListener('pinchstart', this.onPinchStartLeft)\r\n            this.hand1.addEventListener('pinchend', () => {\r\n                scaling.active = false\r\n            })\r\n            this.hand1.add(handModelFactory.createHandModel(this.hand1))\r\n            this.scene.add(this.hand1)\r\n            // Hand 2\r\n            this.controllerGrip2 = this.renderer.xr.getControllerGrip(1)\r\n            this.controllerGrip2.add(controllerModelFactory.createControllerModel(this.controllerGrip2))\r\n            this.scene.add(this.controllerGrip2)\r\n            this.hand2 = this.renderer.xr.getHand(1)\r\n            this.hand2.addEventListener('pinchstart', this.onPinchStartRight)\r\n            this.hand2.addEventListener('pinchend', this.onPinchEndRight)\r\n            this.hand2.add(handModelFactory.createHandModel(this.hand2))\r\n            this.scene.add(this.hand2)\r\n            //\r\n            var geometry = new this.$THREE.BufferGeometry().setFromPoints([ new this.$THREE.Vector3(0, 0, 0), new this.$THREE.Vector3(0, 0, - 1) ])\r\n            var line = new this.$THREE.Line(geometry)\r\n            line.name = 'line'\r\n            line.scale.z = 5\r\n            this.controller1.add(line.clone())\r\n            this.controller2.add(line.clone())\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        onPinchStartLeft(event) {\r\n            var controller = event.target\r\n            if (this.grabbing) {\r\n                var indexTip = controller.joints[ XRHand.INDEX_PHALANX_TIP ]\r\n                var sphere = collideObject(indexTip)\r\n                if (sphere) {\r\n                    var sphere2 = this.hand2.userData.selected\r\n                    console.log(\"sphere1\", sphere, \"sphere2\", sphere2)\r\n                    if (sphere === sphere2) {\r\n                        this.scaling.active = true\r\n                        this.scaling.object = sphere\r\n                        this.scaling.initialScale = sphere.scale.x\r\n                        this.scaling.initialDistance = indexTip.position.distanceTo(this.hand2.joints[ XRHand.INDEX_PHALANX_TIP ].position)\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            var geometry = new this.$THREE.BoxBufferGeometry(SphereRadius, SphereRadius, SphereRadius)\r\n            var material = new this.$THREE.MeshStandardMaterial({\r\n                color: Math.random() * 0xffffff,\r\n                roughness: 1.0,\r\n                metalness: 0.0\r\n            })\r\n            var spawn = new this.$THREE.Mesh(geometry, material)\r\n            spawn.geometry.computeBoundingSphere()\r\n            var indexTip = controller.joints[ XRHand.INDEX_PHALANX_TIP ]\r\n            spawn.position.copy(indexTip.position)\r\n            spawn.quaternion.copy(indexTip.quaternion)\r\n            spheres.push(spawn)\r\n            this.scene.add(spawn)\r\n        },\r\n        collideObject(indexTip) {\r\n            for (var i = 0; i < spheres.length; i ++) {\r\n                var sphere = spheres[ i ]\r\n                var distance = indexTip.getWorldPosition().distanceTo(sphere.getWorldPosition())\r\n                if (distance < sphere.geometry.boundingSphere.radius * sphere.scale.x) {\r\n                    return sphere\r\n                }\r\n            }\r\n            return null\r\n        },\r\n        onPinchStartRight(event) {\r\n            var controller = event.target\r\n            var indexTip = controller.joints[ XRHand.INDEX_PHALANX_TIP ]\r\n            var object = collideObject(indexTip)\r\n            if (object) {\r\n                this.grabbing = true\r\n                indexTip.attach(object)\r\n                controller.userData.selected = object\r\n                console.log(\"Selected\", object)\r\n            }\r\n        },\r\n        onPinchEndRight(event) {\r\n            var controller = event.target\r\n            if (controller.userData.selected !== undefined) {\r\n                var object = controller.userData.selected\r\n                object.material.emissive.b = 0\r\n                this.scene.attach(object)\r\n                controller.userData.selected = undefined\r\n                this.grabbing = false\r\n            }\r\n            this.scaling.active = false\r\n        },\r\n        animate() {\r\n            this.renderer.setAnimationLoop(this.render)\r\n        },\r\n        render() {\r\n            if (this.scaling.active) {\r\n                var indexTip1Pos = hand1.joints[ XRHand.INDEX_PHALANX_TIP ].position\r\n                var indexTip2Pos = hand2.joints[ XRHand.INDEX_PHALANX_TIP ].position\r\n                var distance = indexTip1Pos.distanceTo(indexTip2Pos)\r\n                var newScale = this.scaling.initialScale + distance / this.scaling.initialDistance - 1\r\n                this.scaling.object.scale.setScalar(newScale)\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webxrVrHandinputCubes-container {\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/vr/webxrVrHandinputCubes.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webxrVrHandinputCubes-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" vr - handinput - cubes\"),_c('br'),_vm._v(\"\\n\\t\\t\\t(Oculus Browser with #webxr-hands flag enabled)\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4148a91b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/vr/webxrVrHandinputCubes.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4148a91b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webxrVrHandinputCubes.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webxrVrHandinputCubes.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webxrVrHandinputCubes.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4148a91b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webxrVrHandinputCubes.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4148a91b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/vr/webxrVrHandinputCubes.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}