{"version":3,"sources":["webpack:///./src/components/jsm/libs/zstddec.module.js","webpack:///./src/components/jsm/loaders/KTX2Loader.js","webpack:///src/views/loader/webglLoaderTextureKtx2.vue","webpack:///./src/views/loader/webglLoaderTextureKtx2.vue?7b5e","webpack:///./src/views/loader/webglLoaderTextureKtx2.vue"],"names":["init","instance","heap","importObject","env","emscripten_notify_memory_growth","index","Uint8Array","exports","memory","buffer","ZSTDDecoder","_classCallCheck","this","_createClass","key","value","fetch","wasm","then","response","arrayBuffer","WebAssembly","instantiate","result","array","uncompressedSize","arguments","length","undefined","compressedSize","byteLength","compressedPtr","malloc","set","Number","ZSTD_findDecompressedSize","uncompressedPtr","actualSize","ZSTD_decompress","dec","slice","free","DFDModel","ETC1S","UASTC","DFDChannel","RGB","RRR","GGG","AAA","RGBA","RRRG","KTX2Loader","manager","KTX2Loader__classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","basisModule","basisModulePending","transcoderConfig","CompressedTextureLoader","renderer","astcSupported","extensions","has","etc1Supported","etc2Supported","dxtSupported","bptcSupported","pvrtcSupported","scope","Promise","resolve","MSC_TRANSCODER","initTranscoders","url","onLoad","onProgress","onError","texture","CompressedTexture","bufferPending","reject","FileLoader","setPath","path","setResponseType","load","initModule","all","_ref","_slicedToArray","parse","_texture","copy","needsUpdate","catch","BasisLzEtc1sImageTranscoder","UastcImageTranscoder","TextureFormat","ktx","KTX2Container","transcoder","getTexFormat","UASTC4x4","initMipmaps","mipmaps","getWidth","getHeight","transcodedFormat","UnsignedByteType","encoding","getEncoding","premultiplyAlpha","getPremultiplyAlpha","minFilter","LinearFilter","LinearMipmapLinearFilter","magFilter","zstd","id","Error","headerByteLength","Uint32Array","BYTES_PER_ELEMENT","headerReader","KTX2BufferReader","header","vkFormat","nextUint32","typeSize","pixelWidth","pixelHeight","pixelDepth","arrayElementCount","faceCount","levelCount","supercompressionScheme","dfdByteOffset","dfdByteLength","kvdByteOffset","kvdByteLength","sgdByteOffset","nextUint64","sgdByteLength","levelByteLength","levelReader","levels","i","push","byteOffset","uncompressedByteLength","dfdReader","dfd","vendorId","skip","nextUint16","versionNumber","descriptorBlockSize","colorModel","nextUint8","colorPrimaries","transferFunction","flags","texelBlockDimension","x","y","z","w","bytesPlane0","numSamples","samples","channelID","kvd","sgd","sgdReader","endpointCount","selectorCount","endpointsByteLength","selectorsByteLength","tablesByteLength","extendedByteLength","imageDescs","endpointsData","selectorsData","tablesData","extendedData","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","endpointsByteOffset","offset","selectorsByteOffset","tablesByteOffset","extendedByteOffset","config","TranscodeTarget","ImageInfo","width","height","texFormat","hasAlpha","getAlpha","isVideo","pvrtcTranscodable","MathUtils","isPowerOfTwo","numEndpoints","numSelectors","endpoints","selectors","tables","decodePalettes","decodeTables","targetFormat","ASTC_4x4_RGBA","RGBA_ASTC_4x4_Format","BC7_M5_RGBA","RGBA_BPTC_Format","BC3_RGBA","BC1_RGB","RGBA_S3TC_DXT5_Format","RGB_S3TC_DXT1_Format","PVRTC1_4_RGBA","PVRTC1_4_RGB","RGBA_PVRTC_4BPPV1_Format","RGB_PVRTC_4BPPV1_Format","ETC2_RGBA","ETC1_RGB","RGBA_ETC2_EAC_Format","RGB_ETC2_Format","RGB_ETC1_Format","console","warn","RGBA32","RGBAFormat","isFormatSupported","imageDescIndex","level","levelWidth","Math","ceil","pow","levelHeight","numImagesInLevel","imageOffsetInLevel","imageInfo","levelUncompressedByteLength","imageIndex","rgbByteOffset","rgbByteLength","alphaByteOffset","alphaByteLength","encodedData","decode","transcodeImage","imageDesc","transcodedImage","levelData","get_typed_memory_view","delete","data","sRGBEncoding","LinearEncoding","littleEndian","dataView","DataView","getUint8","getUint16","getUint32","left","right","isSafeInteger","bytes","webglLoaderTextureKtx2","scene","camera","controls","geometry","material","mesh","formatStrings","mounted","_formatStrings","$webglInnerWidth","window","innerHeight","$THREE","WebGLRenderer","antialias","setSize","outputEncoding","document","getElementsByClassName","appendChild","domElement","Scene","background","Color","PerspectiveCamera","position","lookAt","add","OrbitControls","autoRotate","flipY","PlaneBufferGeometry","MeshBasicMaterial","color","side","DoubleSide","Mesh","_defineProperty","KTX2Loader_KTX2Loader","detectSupport","info","format","map","transparent","p","log","e","error","animate","addEventListener","$onWindowResize","methods","requestAnimationFrame","update","render","uv","attributes","count","setY","getY","loader_webglLoaderTextureKtx2","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/247.39e37d69f5befbe7db82.js","sourcesContent":["/**\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nlet init, instance, heap;\r\n\r\nconst importObject = {\r\n\r\n\tenv: {\r\n\r\n\t\temscripten_notify_memory_growth: function ( index ) {\r\n\r\n\t\t\theap = new Uint8Array( instance.exports.memory.buffer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * ZSTD (Zstandard) decoder.\r\n *\r\n * Compiled from https://github.com/facebook/zstd/tree/dev/contrib/single_file_libs, with the\r\n * following steps:\r\n *\r\n * ```\r\n * ./combine.sh -r ../../lib -o zstddeclib.c zstddeclib-in.c\r\n * emcc zstddeclib.c -Oz -s EXPORTED_FUNCTIONS=\"['_ZSTD_decompress', '_ZSTD_findDecompressedSize', '_ZSTD_isError', '_malloc', '_free']\" -s ALLOW_MEMORY_GROWTH=1 -s MALLOC=emmalloc -o zstddec.wasm\r\n * base64 zstddec.wasm > zstddec.txt\r\n * ```\r\n *\r\n * The base64 string written to `zstddec.txt` is embedded as the `wasm` variable at the bottom\r\n * of this file. The rest of this file is written by hand, in order to avoid an additional JS\r\n * wrapper generated by Emscripten.\r\n */\r\nexport class ZSTDDecoder {\r\n\r\n\tinit () {\r\n\r\n\t\tif ( ! init ) {\r\n\r\n\t\t\tinit = fetch( 'data:application/wasm;base64,' + wasm )\r\n\t\t\t\t.then( ( response ) => response.arrayBuffer() )\r\n\t\t\t\t.then( ( arrayBuffer ) => WebAssembly.instantiate( arrayBuffer, importObject ) )\r\n\t\t\t\t.then( ( result ) => {\r\n\r\n\t\t\t\t\tinstance = result.instance;\r\n\r\n\t\t\t\t\timportObject.env.emscripten_notify_memory_growth( 0 ); // initialize heap.\r\n\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\treturn init;\r\n\r\n\t}\r\n\r\n\tdecode ( array, uncompressedSize = 0 ) {\r\n\r\n\t\t// Write compressed data into WASM memory.\r\n\t\tconst compressedSize = array.byteLength;\r\n\t\tconst compressedPtr = instance.exports.malloc( compressedSize );\r\n\t\theap.set( array, compressedPtr );\r\n\r\n\t\t// Decompress into WASM memory.\r\n\t\tuncompressedSize = uncompressedSize || Number( instance.exports.ZSTD_findDecompressedSize( compressedPtr, compressedSize ) );\r\n\t\tconst uncompressedPtr = instance.exports.malloc( uncompressedSize );\r\n\t\tconst actualSize = instance.exports.ZSTD_decompress( uncompressedPtr, uncompressedSize, compressedPtr, compressedSize );\r\n\r\n\t\t// Read decompressed data and free WASM memory.\r\n\t\tconst dec = heap.slice( uncompressedPtr, uncompressedPtr + actualSize );\r\n\t\tinstance.exports.free( compressedPtr );\r\n\t\tinstance.exports.free( uncompressedPtr );\r\n\r\n\t\treturn dec;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * BSD License\r\n *\r\n * For Zstandard software\r\n *\r\n * Copyright (c) 2016-present, Yann Collet, Facebook, Inc. All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *    list of conditions and the following disclaimer.\r\n *\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n *  * Neither the name Facebook nor the names of its contributors may be used to\r\n *    endorse or promote products derived from this software without specific\r\n *    prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\r\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nconst wasm = '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IAMNACAEQQNxBEADQCACRQ0FIAAgAkF/aiICaiIDIAEgAmotAAA6AAAgA0EDcQ0ACwsgAkEDTQ0AA0AgACACQXxqIgJqIAEgAmooAgA2AgAgAkEDSw0ACwsgAkUNAgNAIAAgAkF/aiICaiABIAJqLQAAOgAAIAINAAsMAgsgAkEDTQ0AIAIhBANAIAMgASgCADYCACABQQRqIQEgA0EEaiEDIARBfGoiBEEDSw0ACyACQQNxIQILIAJFDQADQCADIAEtAAA6AAAgA0EBaiEDIAFBAWohASACQX9qIgINAAsLIAAL8wICAn8BfgJAIAJFDQAgACACaiIDQX9qIAE6AAAgACABOgAAIAJBA0kNACADQX5qIAE6AAAgACABOgABIANBfWogAToAACAAIAE6AAIgAkEHSQ0AIANBfGogAToAACAAIAE6AAMgAkEJSQ0AIABBACAAa0EDcSIEaiIDIAFB/wFxQYGChAhsIgE2AgAgAyACIARrQXxxIgRqIgJBfGogATYCACAEQQlJDQAgAyABNgIIIAMgATYCBCACQXhqIAE2AgAgAkF0aiABNgIAIARBGUkNACADIAE2AhggAyABNgIUIAMgATYCECADIAE2AgwgAkFwaiABNgIAIAJBbGogATYCACACQWhqIAE2AgAgAkFkaiABNgIAIAQgA0EEcUEYciIEayICQSBJDQAgAa0iBUIghiAFhCEFIAMgBGohAQNAIAEgBTcDGCABIAU3AxAgASAFNwMIIAEgBTcDACABQSBqIQEgAkFgaiICQR9LDQALCyAACy8BAn8gACgCBCAAKAIAQQJ0aiICLQACIQMgACACLwEAIAEgAi0AAxAIajYCACADCy8BAn8gACgCBCAAKAIAQQJ0aiICLQACIQMgACACLwEAIAEgAi0AAxAFajYCACADCx8AIAAgASACKAIEEAg2AgAgARAEGiAAIAJBCGo2AgQLCAAgAGdBH3MLugUBDX8jAEEQayIKJAACfyAEQQNNBEAgCkEANgIMIApBDGogAyAEEAsaIAAgASACIApBDGpBBBAVIgBBbCAAEAMbIAAgACAESxsMAQsgAEEAIAEoAgBBAXRBAmoQECENQVQgAygAACIGQQ9xIgBBCksNABogAiAAQQVqNgIAIAMgBGoiAkF8aiEMIAJBeWohDiACQXtqIRAgAEEGaiELQQQhBSAGQQR2IQRBICAAdCIAQQFyIQkgASgCACEPQQAhAiADIQYCQANAIAlBAkggAiAPS3JFBEAgAiEHAkAgCARAA0AgBEH//wNxQf//A0YEQCAHQRhqIQcgBiAQSQR/IAZBAmoiBigAACAFdgUgBUEQaiEFIARBEHYLIQQMAQsLA0AgBEEDcSIIQQNGBEAgBUECaiEFIARBAnYhBCAHQQNqIQcMAQsLIAcgCGoiByAPSw0EIAVBAmohBQNAIAIgB0kEQCANIAJBAXRqQQA7AQAgAkEBaiECDAELCyAGIA5LQQAgBiAFQQN1aiIHIAxLG0UEQCAHKAAAIAVBB3EiBXYhBAwCCyAEQQJ2IQQLIAYhBwsCfyALQX9qIAQgAEF/anEiBiAAQQF0QX9qIgggCWsiEUkNABogBCAIcSIEQQAgESAEIABIG2shBiALCyEIIA0gAkEBdGogBkF/aiIEOwEAIAlBASAGayAEIAZBAUgbayEJA0AgCSAASARAIABBAXUhACALQX9qIQsMAQsLAn8gByAOS0EAIAcgBSAIaiIFQQN1aiIGIAxLG0UEQCAFQQdxDAELIAUgDCIGIAdrQQN0awshBSACQQFqIQIgBEUhCCAGKAAAIAVBH3F2IQQMAQsLQWwgCUEBRyAFQSBKcg0BGiABIAJBf2o2AgAgBiAFQQdqQQN1aiADawwBC0FQCyEAIApBEGokACAACwkAQQFBBSAAGwsMACAAIAEoAAA2AAALqgMBCn8jAEHwAGsiCiQAIAJBAWohDiAAQQhqIQtBgIAEIAVBf2p0QRB1IQxBACECQQEhBkEBIAV0IglBf2oiDyEIA0AgAiAORkUEQAJAIAEgAkEBdCINai8BACIHQf//A0YEQCALIAhBA3RqIAI2AgQgCEF/aiEIQQEhBwwBCyAGQQAgDCAHQRB0QRB1ShshBgsgCiANaiAHOwEAIAJBAWohAgwBCwsgACAFNgIEIAAgBjYCACAJQQN2IAlBAXZqQQNqIQxBACEAQQAhBkEAIQIDQCAGIA5GBEADQAJAIAAgCUYNACAKIAsgAEEDdGoiASgCBCIGQQF0aiICIAIvAQAiAkEBajsBACABIAUgAhAUayIIOgADIAEgAiAIQf8BcXQgCWs7AQAgASAEIAZBAnQiAmooAgA6AAIgASACIANqKAIANgIEIABBAWohAAwBCwsFIAEgBkEBdGouAQAhDUEAIQcDQCAHIA1ORQRAIAsgAkEDdGogBjYCBANAIAIgDGogD3EiAiAISw0ACyAHQQFqIQcMAQsLIAZBAWohBgwBCwsgCkHwAGokAAsjAEIAIAEQCSAAhUKHla+vmLbem55/fkLj3MqV/M7y9YV/fAsQACAAQn43AwggACABNgIACyQBAX8gAARAIAEoAgQiAgRAIAEoAgggACACEQEADwsgABAmCwsfACAAIAEgAi8BABAINgIAIAEQBBogACACQQRqNgIEC0oBAX9BoCAoAgAiASAAaiIAQX9MBEBBiCBBMDYCAEF/DwsCQCAAPwBBEHRNDQAgABBmDQBBiCBBMDYCAEF/DwtBoCAgADYCACABC9cBAQh/Qbp/IQoCQCACKAIEIgggAigCACIJaiIOIAEgAGtLDQBBbCEKIAkgBCADKAIAIgtrSw0AIAAgCWoiBCACKAIIIgxrIQ0gACABQWBqIg8gCyAJQQAQKSADIAkgC2o2AgACQAJAIAwgBCAFa00EQCANIQUMAQsgDCAEIAZrSw0CIAcgDSAFayIAaiIBIAhqIAdNBEAgBCABIAgQDxoMAgsgBCABQQAgAGsQDyEBIAIgACAIaiIINgIEIAEgAGshBAsgBCAPIAUgCEEBECkLIA4hCgsgCgubAgEBfyMAQYABayINJAAgDSADNgJ8AkAgAkEDSwRAQX8hCQwBCwJAAkACQAJAIAJBAWsOAwADAgELIAZFBEBBuH8hCQwEC0FsIQkgBS0AACICIANLDQMgACAHIAJBAnQiAmooAgAgAiAIaigCABA7IAEgADYCAEEBIQkMAwsgASAJNgIAQQAhCQwCCyAKRQRAQWwhCQwCC0EAIQkgC0UgDEEZSHINAUEIIAR0QQhqIQBBACECA0AgAiAATw0CIAJBQGshAgwAAAsAC0FsIQkgDSANQfwAaiANQfgAaiAFIAYQFSICEAMNACANKAJ4IgMgBEsNACAAIA0gDSgCfCAHIAggAxAYIAEgADYCACACIQkLIA1BgAFqJAAgCQsLACAAIAEgAhALGgsQACAALwAAIAAtAAJBEHRyCy8AAn9BuH8gAUEISQ0AGkFyIAAoAAQiAEF3Sw0AGkG4fyAAQQhqIgAgACABSxsLCwkAIAAgATsAAAsDAAELigYBBX8gACAAKAIAIgVBfnE2AgBBACAAIAVBAXZqQYQgKAIAIgQgAEYbIQECQAJAIAAoAgQiAkUNACACKAIAIgNBAXENACACQQhqIgUgA0EBdkF4aiIDQQggA0EISxtnQR9zQQJ0QYAfaiIDKAIARgRAIAMgAigCDDYCAAsgAigCCCIDBEAgAyACKAIMNgIECyACKAIMIgMEQCADIAIoAgg2AgALIAIgAigCACAAKAIAQX5xajYCAEGEICEAAkACQCABRQ0AIAEgAjYCBCABKAIAIgNBAXENASADQQF2QXhqIgNBCCADQQhLG2dBH3NBAnRBgB9qIgMoAgAgAUEIakYEQCADIAEoAgw2AgALIAEoAggiAwRAIAMgASgCDDYCBAsgASgCDCIDBEAgAyABKAIINgIAQYQgKAIAIQQLIAIgAigCACABKAIAQX5xajYCACABIARGDQAgASABKAIAQQF2akEEaiEACyAAIAI2AgALIAIoAgBBAXZBeGoiAEEIIABBCEsbZ0Efc0ECdEGAH2oiASgCACEAIAEgBTYCACACIAA2AgwgAkEANgIIIABFDQEgACAFNgIADwsCQCABRQ0AIAEoAgAiAkEBcQ0AIAJBAXZBeGoiAkEIIAJBCEsbZ0Efc0ECdEGAH2oiAigCACABQQhqRgRAIAIgASgCDDYCAAsgASgCCCICBEAgAiABKAIMNgIECyABKAIMIgIEQCACIAEoAgg2AgBBhCAoAgAhBAsgACAAKAIAIAEoAgBBfnFqIgI2AgACQCABIARHBEAgASABKAIAQQF2aiAANgIEIAAoAgAhAgwBC0GEICAANgIACyACQQF2QXhqIgFBCCABQQhLG2dBH3NBAnRBgB9qIgIoAgAhASACIABBCGoiAjYCACAAIAE2AgwgAEEANgIIIAFFDQEgASACNgIADwsgBUEBdkF4aiIBQQggAUEISxtnQR9zQQJ0QYAfaiICKAIAIQEgAiAAQQhqIgI2AgAgACABNgIMIABBADYCCCABRQ0AIAEgAjYCAAsLDgAgAARAIABBeGoQJQsLgAIBA38CQCAAQQ9qQXhxQYQgKAIAKAIAQQF2ayICEB1Bf0YNAAJAQYQgKAIAIgAoAgAiAUEBcQ0AIAFBAXZBeGoiAUEIIAFBCEsbZ0Efc0ECdEGAH2oiASgCACAAQQhqRgRAIAEgACgCDDYCAAsgACgCCCIBBEAgASAAKAIMNgIECyAAKAIMIgFFDQAgASAAKAIINgIAC0EBIQEgACAAKAIAIAJBAXRqIgI2AgAgAkEBcQ0AIAJBAXZBeGoiAkEIIAJBCEsbZ0Efc0ECdEGAH2oiAygCACECIAMgAEEIaiIDNgIAIAAgAjYCDCAAQQA2AgggAkUNACACIAM2AgALIAELtwIBA38CQAJAIABBASAAGyICEDgiAA0AAkACQEGEICgCACIARQ0AIAAoAgAiA0EBcQ0AIAAgA0EBcjYCACADQQF2QXhqIgFBCCABQQhLG2dBH3NBAnRBgB9qIgEoAgAgAEEIakYEQCABIAAoAgw2AgALIAAoAggiAQRAIAEgACgCDDYCBAsgACgCDCIBBEAgASAAKAIINgIACyACECchAkEAIQFBhCAoAgAhACACDQEgACAAKAIAQX5xNgIAQQAPCyACQQ9qQXhxIgMQHSICQX9GDQIgAkEHakF4cSIAIAJHBEAgACACaxAdQX9GDQMLAkBBhCAoAgAiAUUEQEGAICAANgIADAELIAAgATYCBAtBhCAgADYCACAAIANBAXRBAXI2AgAMAQsgAEUNAQsgAEEIaiEBCyABC7kDAQJ/IAAgA2ohBQJAIANBB0wEQANAIAAgBU8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwAAAsACyAEQQFGBEACQCAAIAJrIgZBB00EQCAAIAItAAA6AAAgACACLQABOgABIAAgAi0AAjoAAiAAIAItAAM6AAMgAEEEaiACIAZBAnQiBkHAHmooAgBqIgIQFyACIAZB4B5qKAIAayECDAELIAAgAhAMCyACQQhqIQIgAEEIaiEACwJAAkACQAJAIAUgAU0EQCAAIANqIQEgBEEBRyAAIAJrQQ9Kcg0BA0AgACACEAwgAkEIaiECIABBCGoiACABSQ0ACwwFCyAAIAFLBEAgACEBDAQLIARBAUcgACACa0EPSnINASAAIQMgAiEEA0AgAyAEEAwgBEEIaiEEIANBCGoiAyABSQ0ACwwCCwNAIAAgAhAHIAJBEGohAiAAQRBqIgAgAUkNAAsMAwsgACEDIAIhBANAIAMgBBAHIARBEGohBCADQRBqIgMgAUkNAAsLIAIgASAAa2ohAgsDQCABIAVPDQEgASACLQAAOgAAIAFBAWohASACQQFqIQIMAAALAAsLQQECfyAAIAAoArjgASIDNgLE4AEgACgCvOABIQQgACABNgK84AEgACABIAJqNgK44AEgACABIAQgA2tqNgLA4AELpgEBAX8gACAAKALs4QEQFjYCyOABIABCADcD+OABIABCADcDuOABIABBwOABakIANwMAIABBqNAAaiIBQYyAgOAANgIAIABBADYCmOIBIABCADcDiOEBIABCAzcDgOEBIABBrNABakHgEikCADcCACAAQbTQAWpB6BIoAgA2AgAgACABNgIMIAAgAEGYIGo2AgggACAAQaAwajYCBCAAIABBEGo2AgALYQEBf0G4fyEDAkAgAUEDSQ0AIAIgABAhIgFBA3YiADYCCCACIAFBAXE2AgQgAiABQQF2QQNxIgM2AgACQCADQX9qIgFBAksNAAJAIAFBAWsOAgEAAgtBbA8LIAAhAwsgAwsMACAAIAEgAkEAEC4LiAQCA38CfiADEBYhBCAAQQBBKBAQIQAgBCACSwRAIAQPCyABRQRAQX8PCwJAAkAgA0EBRg0AIAEoAAAiBkGo6r5pRg0AQXYhAyAGQXBxQdDUtMIBRw0BQQghAyACQQhJDQEgAEEAQSgQECEAIAEoAAQhASAAQQE2AhQgACABrTcDAEEADwsgASACIAMQLyIDIAJLDQAgACADNgIYQXIhAyABIARqIgVBf2otAAAiAkEIcQ0AIAJBIHEiBkUEQEFwIQMgBS0AACIFQacBSw0BIAVBB3GtQgEgBUEDdkEKaq2GIgdCA4h+IAd8IQggBEEBaiEECyACQQZ2IQMgAkECdiEFAkAgAkEDcUF/aiICQQJLBEBBACECDAELAkACQAJAIAJBAWsOAgECAAsgASAEai0AACECIARBAWohBAwCCyABIARqLwAAIQIgBEECaiEEDAELIAEgBGooAAAhAiAEQQRqIQQLIAVBAXEhBQJ+AkACQAJAIANBf2oiA0ECTQRAIANBAWsOAgIDAQtCfyAGRQ0DGiABIARqMQAADAMLIAEgBGovAACtQoACfAwCCyABIARqKAAArQwBCyABIARqKQAACyEHIAAgBTYCICAAIAI2AhwgACAHNwMAQQAhAyAAQQA2AhQgACAHIAggBhsiBzcDCCAAIAdCgIAIIAdCgIAIVBs+AhALIAMLWwEBf0G4fyEDIAIQFiICIAFNBH8gACACakF/ai0AACIAQQNxQQJ0QaAeaigC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C0Egak8NAQsgByAHKQNoNwMQIAcgBykDYDcDCCAEIA0gB0EIaiAHQdwAaiAPIA4gESAQEB4hCwwBCyACIARqIQggBCAKEAcgAkERTwRAIARBEGohAgNAIAIgCkEQaiIKEAcgAkEQaiICIAhJDQALCyAIIAlrIQIgByATNgJcIAkgCCAOa0sEQCAJIAggEWtLBEBBbCELDAILIBAgAiAOayICaiIKIANqIBBNBEAgCCAKIAMQDxoMAgsgCCAKQQAgAmsQDyEIIAcgAiADaiIDNgJkIAggAmshCCAOIQILIAlBEE8EQCADIAhqIQMDQCAIIAIQByACQRBqIQIgCEEQaiIIIANJDQALDAELAkAgCUEHTQRAIAggAi0AADoAACAIIAItAAE6AAEgCCACLQACOgACIAggAi0AAzoAAyAIQQRqIAIgCUECdCIDQcAeaigCAGoiAhAXIAIgA0HgHmooAgBrIQIgBygCZCEDDAELIAggAhAMCyADQQlJDQAgAyAIaiEDIAhBCGoiCCACQQhqIgJrQQ9MBEADQCAIIAIQDCACQQhqIQIgCEEIaiIIIANJDQAMAgALAAsDQCAIIAIQByACQRBqIQIgCEEQaiIIIANJDQALCyAHQRhqEAQaIAsgDCALEAMiAhshDCAEIAQgC2ogAhshBCAFQX9qIgUNAAsgDBADDQFBbCEMIAdBGGoQBEECSQ0BQQAhCANAIAhBA0cEQCAAIAhBAnQiAmpBrNABaiACIAdqKAJENgIAIAhBAWohCAwBCwsgBygCXCEIC0G6fyEMIA8gCGsiACANIARrSw0AIAQEfyAEIAggABALIABqBUEACyABayEMCyAHQfAAaiQAIAwLkRcCFn8FfiMAQdABayIHJAAgByAAKALw4QEiCDYCvAEgASACaiESIAggACgCgOIBaiETAkACQCAFRQRAIAEhAwwBCyAAKALE4AEhESAAKALA4AEhFSAAKAK84AEhDyAAQQE2AozhAUEAIQgDQCAIQQNHBEAgByAIQQJ0IgJqIAAgAmpBrNABaigCADYCVCAIQQFqIQgMAQsLIAcgETYCZCAHIA82AmAgByABIA9rNgJoQWwhECAHQShqIAMgBBAGEAMNASAFQQQgBUEESBshFyAHQTxqIAdBKGogACgCABATIAdBxABqIAdBKGogACgCCBATIAdBzABqIAdB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IAdB0AFqJAAgEAslACAAQgA3AgAgAEEAOwEIIABBADoACyAAIAE2AgwgACACOgAKC7QFAQN/IwBBMGsiBCQAIABB/wFqIgVBfWohBgJAIAMvAQIEQCAEQRhqIAEgAhAGIgIQAw0BIARBEGogBEEYaiADEBwgBEEIaiAEQRhqIAMQHCAAIQMDQAJAIARBGGoQBCADIAZPckUEQCADIARBEGogBEEYahASOgAAIAMgBEEIaiAEQRhqEBI6AAEgBEEYahAERQ0BIANBAmohAwsgBUF+aiEFAn8DQEG6fyECIAMiASAFSw0FIAEgBEEQaiAEQRhqEBI6AAAgAUEBaiEDIARBGGoQBEEDRgRAQQIhAiAEQQhqDAILIAMgBUsNBSABIARBCGogBEEYahASOgABIAFBAmohA0EDIQIgBEEYahAEQQNHDQALIARBEGoLIQUgAyAFIARBGGoQEjoAACABIAJqIABrIQIMAwsgAyAEQRBqIARBGGoQEjoAAiADIARBCGogBEEYahASOgADIANBBGohAwwAAAsACyAEQRhqIAEgAhAGIgIQAw0AIARBEGogBEEYaiADEBwgBEEIaiAEQRhqIAMQHCAAIQMDQAJAIARBGGoQBCADIAZPckUEQCADIARBEGogBEEYahAROgAAIAMgBEEIaiAEQRhqEBE6AAEgBEEYahAERQ0BIANBAmohAwsgBUF+aiEFAn8DQEG6fyECIAMiASAFSw0EIAEgBEEQaiAEQRhqEBE6AAAgAUEBaiEDIARBGGoQBEEDRgRAQQIhAiAEQQhqDAILIAMgBUsNBCABIARBCGogBEEYahAROgABIAFBAmohA0EDIQIgBEEYahAEQQNHDQALIARBEGoLIQUgAyAFIARBGGoQEToAACABIAJqIABrIQIMAgsgAyAEQRBqIARBGGoQEToAAiADIARBCGogBEEYahAROgADIANBBGohAwwAAAsACyAEQTBqJAAgAgtpAQF/An8CQAJAIAJBB00NACABKAAAQbfIwuF+Rw0AIAAgASgABDYCmOIBQWIgAEEQaiABIAIQPiIDEAMNAhogAEKBgICAEDcDiOEBIAAgASADaiACIANrECoMAQsgACABIAIQKgtBAAsLrQMBBn8jAEGAAWsiAyQAQWIhCAJAIAJBCUkNACAAQZjQAGogAUEIaiIEIAJBeGogAEGY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wOABCwutAgIEfwF+IwBBQGoiBCQAAkACQCACQQhJDQAgASgAAEFwcUHQ1LTCAUcNACABIAIQIiEBIABCADcDCCAAQQA2AgQgACABNgIADAELIARBGGogASACEC0iAxADBEAgACADEBoMAQsgAwRAIABBuH8QGgwBCyACIAQoAjAiA2shAiABIANqIQMDQAJAIAAgAyACIARBCGoQLCIFEAMEfyAFBSACIAVBA2oiBU8NAUG4fwsQGgwCCyAGQQFqIQYgAiAFayECIAMgBWohAyAEKAIMRQ0ACyAEKAI4BEAgAkEDTQRAIABBuH8QGgwCCyADQQRqIQMLIAQoAighAiAEKQMYIQcgAEEANgIEIAAgAyABazYCACAAIAIgBmytIAcgB0J/URs3AwgLIARBQGskAAslAQF/IwBBEGsiAiQAIAIgACABEFEgAigCACEAIAJBEGokACAAC30BBH8jAEGQBGsiBCQAIARB/wE2AggCQCAEQRBqIARBCGogBEEMaiABIAIQFSIGEAMEQCAGIQUMAQtBVCEFIAQoAgwiB0EGSw0AIAMgBEEQaiAEKAIIIAcQQSIFEAMNACAAIAEgBmogAiAGayADEDwhBQsgBEGQBGokACAFC4cBAgJ/An5BABAWIQMCQANAIAEgA08EQAJAIAAoAABBcHFB0NS0wgFGBEAgACABECIiAhADRQ0BQn4PCyAAIAEQVSIEQn1WDQMgBCAFfCIFIARUIQJCfiEEIAINAyAAIAEQUiICEAMNAwsgASACayEBIAAgAmohAAwBCwtCfiAFIAEbIQQLIAQLPwIBfwF+IwBBMGsiAiQAAn5CfiACQQhqIAAgARAtDQAaQgAgAigCHEEBRg0AGiACKQMICyEDIAJBMGokACADC40BAQJ/IwBBMGsiASQAAkAgAEUNACAAKAKI4gENACABIABB/OEBaigCADYCKCABIAApAvThATcDICAAEDAgACgCqOIBIQIgASABKAIoNgIYIAEgASkDIDcDECACIAFBEGoQGyAAQQA2AqjiASABIAEoAig2AgggASABKQMgNwMAIAAgARAbCyABQTBqJAALKgECfyMAQRBrIgAkACAAQQA2AgggAEIANwMAIAAQWCEBIABBEGokACABC4cBAQN/IwBBEGsiAiQAAkAgACgCAEUgACgCBEVzDQAgAiAAKAIINgIIIAIgACkCADcDAAJ/IAIoAgAiAQRAIAIoAghBqOMJIAERBQAMAQtBqOMJECgLIgFFDQAgASAAKQIANwL04QEgAUH84QFqIAAoAgg2AgAgARBZIAEhAwsgAkEQaiQAIAMLywEBAn8jAEEgayIBJAAgAEGBgIDAADYCtOIBIABBADYCiOIBIABBADYC7OEBIABCADcDkOIBIABBADYCpOMJIABBADYC3OIBIABCADcCzOIBIABBADYCvOIBIABBADYCxOABIABCADcCnOIBIABBpOIBakIANwIAIABBrOIBakEANgIAIAFCADcCECABQgA3AhggASABKQMYNwMIIAEgASkDEDcDACABKAIIQQh2QQFxIQIgAEEANgLg4gEgACACNgKM4gEgAUEgaiQAC3YBA38jAEEwayIBJAAgAARAIAEgAEHE0AFqIgIoAgA2AiggASAAKQK80AE3AyAgACgCACEDIAEgAigCADYCGCABIAApArzQATcDECADIAFBEGoQGyABIAEoAig2AgggASABKQMgNwMAIAAgARAbCyABQTBqJAALzAEBAX8gACABKAK00AE2ApjiASAAIAEoAgQiAjYCwOABIAAgAjYCvOABIAAgAiABKAIIaiICNgK44AEgACACNgLE4AEgASgCuNABBEAgAEKBgICAEDcDiOEBIAAgAUGk0ABqNgIMIAAgAUGUIGo2AgggACABQZwwajYCBCAAIAFBDGo2AgAgAEGs0AFqIAFBqNABaigCADYCACAAQbDQAWogAUGs0AFqKAIANgIAIABBtNABaiABQbDQAWooAgA2AgAPCyAAQgA3A4jhAQs7ACACRQRAQbp/DwsgBEUEQEFsDwsgAiAEEGAEQCAAIAEgAiADIAQgBRBhDwsgACABIAIgAyAEIAUQZQtGAQF/IwBBEGsiBSQAIAVBCGogBBAOAn8gBS0ACQRAIAAgASACIAMgBBAyDAELIAAgASACIAMgBBA0CyEAIAVBEGokACAACzQAIAAgAyAEIAUQNiIFEAMEQCAFDwsgBSAESQR/IAEgAiADIAVqIAQgBWsgABA1BUG4fwsLRgEBfyMAQRBrIgUkACAFQQhqIAQQDgJ/IAUtAAkEQCAAIAEgAiADIAQQYgwBCyAAIAEgAiADIAQQNQshACAFQRBqJAAgAAtZAQF/QQ8hAiABIABJBEAgAUEE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';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/libs/zstddec.module.js","/**\r\n * References:\r\n * - KTX: http://github.khronos.org/KTX-Specification/\r\n * - DFD: https://www.khronos.org/registry/DataFormat/specs/1.3/dataformat.1.3.html#basicdescriptor\r\n *\r\n * To do:\r\n * - [ ] High-quality demo\r\n * - [ ] Documentation\r\n * - [ ] (Optional) Include BC5\r\n * - [ ] (Optional) Include EAC RG on mobile (WEBGL_compressed_texture_etc)\r\n * - [ ] (Optional) Include two-texture output mode (see: clearcoat + clearcoatRoughness)\r\n * - [ ] (Optional) Support Web Workers, after #18234\r\n */\r\n\r\nimport {\r\n\tCompressedTexture,\r\n\tCompressedTextureLoader,\r\n\tFileLoader,\r\n\tLinearEncoding,\r\n\tLinearFilter,\r\n\tLinearMipmapLinearFilter,\r\n\tMathUtils,\r\n\tRGBAFormat,\r\n\tRGBA_ASTC_4x4_Format,\r\n\tRGBA_BPTC_Format,\r\n\tRGBA_ETC2_EAC_Format,\r\n\tRGBA_PVRTC_4BPPV1_Format,\r\n\tRGBA_S3TC_DXT5_Format,\r\n\tRGB_ETC1_Format,\r\n\tRGB_ETC2_Format,\r\n\tRGB_PVRTC_4BPPV1_Format,\r\n\tRGB_S3TC_DXT1_Format,\r\n\tUnsignedByteType,\r\n\tsRGBEncoding,\r\n} from '@/components/build/three.module.js';\r\n\r\nimport { ZSTDDecoder } from '../libs/zstddec.module.js';\r\n\r\n// Data Format Descriptor (DFD) constants.\r\n\r\nconst DFDModel = {\r\n\tETC1S: 163,\r\n\tUASTC: 166,\r\n};\r\n\r\nconst DFDChannel = {\r\n\tETC1S: {\r\n\t\tRGB: 0,\r\n\t\tRRR: 3,\r\n\t\tGGG: 4,\r\n\t\tAAA: 15,\r\n\t},\r\n\tUASTC: {\r\n\t\tRGB: 0,\r\n\t\tRGBA: 3,\r\n\t\tRRR: 4,\r\n\t\tRRRG: 5\r\n\t},\r\n};\r\n\r\n//\r\n\r\nclass KTX2Loader extends CompressedTextureLoader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.basisModule = null;\r\n\t\tthis.basisModulePending = null;\r\n\r\n\t\tthis.transcoderConfig = {};\r\n\r\n\t}\r\n\r\n\tdetectSupport( renderer ) {\r\n\r\n\t\tthis.transcoderConfig = {\r\n\t\t\tastcSupported: renderer.extensions.has( 'WEBGL_compressed_texture_astc' ),\r\n\t\t\tetc1Supported: renderer.extensions.has( 'WEBGL_compressed_texture_etc1' ),\r\n\t\t\tetc2Supported: renderer.extensions.has( 'WEBGL_compressed_texture_etc' ),\r\n\t\t\tdxtSupported: renderer.extensions.has( 'WEBGL_compressed_texture_s3tc' ),\r\n\t\t\tbptcSupported: renderer.extensions.has( 'EXT_texture_compression_bptc' ),\r\n\t\t\tpvrtcSupported: renderer.extensions.has( 'WEBGL_compressed_texture_pvrtc' )\r\n\t\t\t\t|| renderer.extensions.has( 'WEBKIT_WEBGL_compressed_texture_pvrtc' )\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tinitModule() {\r\n\r\n\t\tif ( this.basisModulePending ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\t// The Emscripten wrapper returns a fake Promise, which can cause\r\n\t\t// infinite recursion when mixed with native Promises. Wrap the module\r\n\t\t// initialization to return a native Promise.\r\n\t\tscope.basisModulePending = new Promise( function ( resolve ) {\r\n\r\n\t\t\tMSC_TRANSCODER().then( function ( basisModule ) { // eslint-disable-line no-undef\r\n\r\n\t\t\t\tscope.basisModule = basisModule;\r\n\r\n\t\t\t\tbasisModule.initTranscoders();\r\n\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new CompressedTexture();\r\n\r\n\t\tvar bufferPending = new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tnew FileLoader( scope.manager )\r\n\t\t\t\t.setPath( scope.path )\r\n\t\t\t\t.setResponseType( 'arraybuffer' )\r\n\t\t\t\t.load( url, resolve, onProgress, reject );\r\n\r\n\t\t} );\r\n\r\n\t\t// parse() will call initModule() again, but starting the process early\r\n\t\t// should allow the WASM to load in parallel with the texture.\r\n\t\tthis.initModule();\r\n\r\n\t\tPromise.all( [ bufferPending, this.basisModulePending ] )\r\n\t\t\t.then( function ( [ buffer ] ) {\r\n\r\n\t\t\t\tscope.parse( buffer, function ( _texture ) {\r\n\r\n\t\t\t\t\ttexture.copy( _texture );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}, onError );\r\n\r\n\t\t\t} )\r\n\t\t\t.catch( onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tparse( buffer, onLoad, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\t// load() may have already called initModule(), but call it again here\r\n\t\t// in case the user called parse() directly. Method is idempotent.\r\n\t\tthis.initModule();\r\n\r\n\t\tthis.basisModulePending.then( function () {\r\n\r\n\t\t\tvar BasisLzEtc1sImageTranscoder = scope.basisModule.BasisLzEtc1sImageTranscoder;\r\n\t\t\tvar UastcImageTranscoder = scope.basisModule.UastcImageTranscoder;\r\n\t\t\tvar TextureFormat = scope.basisModule.TextureFormat;\r\n\r\n\t\t\tvar ktx = new KTX2Container( scope.basisModule, buffer );\r\n\r\n\t\t\t// TODO(donmccurdy): Should test if texture is transcodable before attempting\r\n\t\t\t// any transcoding. If supercompressionScheme is KTX_SS_BASIS_LZ and dfd\r\n\t\t\t// colorModel is ETC1S (163) or if dfd colorModel is UASTCF (166)\r\n\t\t\t// then texture must be transcoded.\r\n\t\t\tvar transcoder = ktx.getTexFormat() === TextureFormat.UASTC4x4\r\n\t\t\t\t? new UastcImageTranscoder()\r\n\t\t\t\t: new BasisLzEtc1sImageTranscoder();\r\n\r\n\t\t\tktx.initMipmaps( transcoder, scope.transcoderConfig )\r\n\t\t\t\t.then( function () {\r\n\r\n\t\t\t\t\tvar texture = new CompressedTexture(\r\n\t\t\t\t\t\tktx.mipmaps,\r\n\t\t\t\t\t\tktx.getWidth(),\r\n\t\t\t\t\t\tktx.getHeight(),\r\n\t\t\t\t\t\tktx.transcodedFormat,\r\n\t\t\t\t\t\tUnsignedByteType\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\ttexture.encoding = ktx.getEncoding();\r\n\t\t\t\t\ttexture.premultiplyAlpha = ktx.getPremultiplyAlpha();\r\n\t\t\t\t\ttexture.minFilter = ktx.mipmaps.length === 1 ? LinearFilter : LinearMipmapLinearFilter;\r\n\t\t\t\t\ttexture.magFilter = LinearFilter;\r\n\r\n\t\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( onError );\r\n\r\n\t\t} );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass KTX2Container {\r\n\r\n\tconstructor( basisModule, arrayBuffer ) {\r\n\r\n\t\tthis.basisModule = basisModule;\r\n\t\tthis.arrayBuffer = arrayBuffer;\r\n\r\n\t\tthis.zstd = new ZSTDDecoder();\r\n\t\tthis.zstd.init();\r\n\r\n\t\tthis.mipmaps = null;\r\n\t\tthis.transcodedFormat = null;\r\n\r\n\t\t// Confirm this is a KTX 2.0 file, based on the identifier in the first 12 bytes.\r\n\t\tvar idByteLength = 12;\r\n\t\tvar id = new Uint8Array( this.arrayBuffer, 0, idByteLength );\r\n\t\tif ( id[ 0 ] !== 0xAB || // '´'\r\n\t\t\t\tid[ 1 ] !== 0x4B || // 'K'\r\n\t\t\t\tid[ 2 ] !== 0x54 || // 'T'\r\n\t\t\t\tid[ 3 ] !== 0x58 || // 'X'\r\n\t\t\t\tid[ 4 ] !== 0x20 || // ' '\r\n\t\t\t\tid[ 5 ] !== 0x32 || // '2'\r\n\t\t\t\tid[ 6 ] !== 0x30 || // '0'\r\n\t\t\t\tid[ 7 ] !== 0xBB || // 'ª'\r\n\t\t\t\tid[ 8 ] !== 0x0D || // '\\r'\r\n\t\t\t\tid[ 9 ] !== 0x0A || // '\\n'\r\n\t\t\t\tid[ 10 ] !== 0x1A || // '\\x1A'\r\n\t\t\t\tid[ 11 ] !== 0x0A // '\\n'\r\n\t\t) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KTX2Loader: Missing KTX 2.0 identifier.' );\r\n\r\n\t\t}\r\n\r\n\t\t// TODO(donmccurdy): If we need to support BE, derive this from typeSize.\r\n\t\tvar littleEndian = true;\r\n\r\n\r\n\t\t///////////////////////////////////////////////////\r\n\t\t// Header.\r\n\t\t///////////////////////////////////////////////////\r\n\r\n\t\tvar headerByteLength = 17 * Uint32Array.BYTES_PER_ELEMENT;\r\n\t\tvar headerReader = new KTX2BufferReader( this.arrayBuffer, idByteLength, headerByteLength, littleEndian );\r\n\r\n\t\tthis.header = {\r\n\r\n\t\t\tvkFormat: headerReader.nextUint32(),\r\n\t\t\ttypeSize: headerReader.nextUint32(),\r\n\t\t\tpixelWidth: headerReader.nextUint32(),\r\n\t\t\tpixelHeight: headerReader.nextUint32(),\r\n\t\t\tpixelDepth: headerReader.nextUint32(),\r\n\t\t\tarrayElementCount: headerReader.nextUint32(),\r\n\t\t\tfaceCount: headerReader.nextUint32(),\r\n\t\t\tlevelCount: headerReader.nextUint32(),\r\n\r\n\t\t\tsupercompressionScheme: headerReader.nextUint32(),\r\n\r\n\t\t\tdfdByteOffset: headerReader.nextUint32(),\r\n\t\t\tdfdByteLength: headerReader.nextUint32(),\r\n\t\t\tkvdByteOffset: headerReader.nextUint32(),\r\n\t\t\tkvdByteLength: headerReader.nextUint32(),\r\n\t\t\tsgdByteOffset: headerReader.nextUint64(),\r\n\t\t\tsgdByteLength: headerReader.nextUint64(),\r\n\r\n\t\t};\r\n\r\n\t\tif ( this.header.pixelDepth > 0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KTX2Loader: Only 2D textures are currently supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.header.arrayElementCount > 1 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KTX2Loader: Array textures are not currently supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.header.faceCount > 1 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KTX2Loader: Cube textures are not currently supported.' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t///////////////////////////////////////////////////\r\n\t\t// Level index\r\n\t\t///////////////////////////////////////////////////\r\n\r\n\t\tvar levelByteLength = this.header.levelCount * 3 * 8;\r\n\t\tvar levelReader = new KTX2BufferReader( this.arrayBuffer, idByteLength + headerByteLength, levelByteLength, littleEndian );\r\n\r\n\t\tthis.levels = [];\r\n\r\n\t\tfor ( var i = 0; i < this.header.levelCount; i ++ ) {\r\n\r\n\t\t\tthis.levels.push( {\r\n\r\n\t\t\t\tbyteOffset: levelReader.nextUint64(),\r\n\t\t\t\tbyteLength: levelReader.nextUint64(),\r\n\t\t\t\tuncompressedByteLength: levelReader.nextUint64(),\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t///////////////////////////////////////////////////\r\n\t\t// Data Format Descriptor (DFD)\r\n\t\t///////////////////////////////////////////////////\r\n\r\n\t\tvar dfdReader = new KTX2BufferReader(\r\n\t\t\tthis.arrayBuffer,\r\n\t\t\tthis.header.dfdByteOffset,\r\n\t\t\tthis.header.dfdByteLength,\r\n\t\t\tlittleEndian\r\n\t\t);\r\n\r\n\t\tconst sampleStart = 6;\r\n\t\tconst sampleWords = 4;\r\n\r\n\t\tthis.dfd = {\r\n\r\n\t\t\tvendorId: dfdReader.skip( 4 /* totalSize */ ).nextUint16(),\r\n\t\t\tversionNumber: dfdReader.skip( 2 /* descriptorType */ ).nextUint16(),\r\n\t\t\tdescriptorBlockSize: dfdReader.nextUint16(),\r\n\t\t\tcolorModel: dfdReader.nextUint8(),\r\n\t\t\tcolorPrimaries: dfdReader.nextUint8(),\r\n\t\t\ttransferFunction: dfdReader.nextUint8(),\r\n\t\t\tflags: dfdReader.nextUint8(),\r\n\t\t\ttexelBlockDimension: {\r\n\t\t\t\tx: dfdReader.nextUint8() + 1,\r\n\t\t\t\ty: dfdReader.nextUint8() + 1,\r\n\t\t\t\tz: dfdReader.nextUint8() + 1,\r\n\t\t\t\tw: dfdReader.nextUint8() + 1,\r\n\t\t\t},\r\n\t\t\tbytesPlane0: dfdReader.nextUint8(),\r\n\t\t\tnumSamples: 0,\r\n\t\t\tsamples: [],\r\n\r\n\t\t};\r\n\r\n\t\tthis.dfd.numSamples = ( this.dfd.descriptorBlockSize / 4 - sampleStart ) / sampleWords;\r\n\r\n\t\tdfdReader.skip( 7 /* bytesPlane[1-7] */ );\r\n\r\n\t\tfor ( var i = 0; i < this.dfd.numSamples; i ++ ) {\r\n\r\n\t\t\tthis.dfd.samples[ i ] = {\r\n\r\n\t\t\t\tchannelID: dfdReader.skip( 3 /* bitOffset + bitLength */ ).nextUint8(),\r\n\t\t\t\t// ... remainder not implemented.\r\n\r\n\t\t\t};\r\n\r\n\t\t\tdfdReader.skip( 12 /* samplePosition[0-3], lower, upper */ );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.header.vkFormat !== 0x00 /* VK_FORMAT_UNDEFINED */ &&\r\n\t\t\t ! ( this.header.supercompressionScheme === 1 /* BasisLZ */ ||\r\n\t\t\t\tthis.dfd.colorModel === DFDModel.UASTC ) ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KTX2Loader: Only Basis Universal supercompression is currently supported.' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t///////////////////////////////////////////////////\r\n\t\t// Key/Value Data (KVD)\r\n\t\t///////////////////////////////////////////////////\r\n\r\n\t\t// Not implemented.\r\n\t\tthis.kvd = {};\r\n\r\n\r\n\t\t///////////////////////////////////////////////////\r\n\t\t// Supercompression Global Data (SGD)\r\n\t\t///////////////////////////////////////////////////\r\n\r\n\t\tthis.sgd = {};\r\n\r\n\t\tif ( this.header.sgdByteLength <= 0 ) return;\r\n\r\n\t\tvar sgdReader = new KTX2BufferReader(\r\n\t\t\tthis.arrayBuffer,\r\n\t\t\tthis.header.sgdByteOffset,\r\n\t\t\tthis.header.sgdByteLength,\r\n\t\t\tlittleEndian\r\n\t\t);\r\n\r\n\t\tthis.sgd.endpointCount = sgdReader.nextUint16();\r\n\t\tthis.sgd.selectorCount = sgdReader.nextUint16();\r\n\t\tthis.sgd.endpointsByteLength = sgdReader.nextUint32();\r\n\t\tthis.sgd.selectorsByteLength = sgdReader.nextUint32();\r\n\t\tthis.sgd.tablesByteLength = sgdReader.nextUint32();\r\n\t\tthis.sgd.extendedByteLength = sgdReader.nextUint32();\r\n\t\tthis.sgd.imageDescs = [];\r\n\t\tthis.sgd.endpointsData = null;\r\n\t\tthis.sgd.selectorsData = null;\r\n\t\tthis.sgd.tablesData = null;\r\n\t\tthis.sgd.extendedData = null;\r\n\r\n\t\tfor ( var i = 0; i < this.header.levelCount; i ++ ) {\r\n\r\n\t\t\tthis.sgd.imageDescs.push( {\r\n\r\n\t\t\t\timageFlags: sgdReader.nextUint32(),\r\n\t\t\t\trgbSliceByteOffset: sgdReader.nextUint32(),\r\n\t\t\t\trgbSliceByteLength: sgdReader.nextUint32(),\r\n\t\t\t\talphaSliceByteOffset: sgdReader.nextUint32(),\r\n\t\t\t\talphaSliceByteLength: sgdReader.nextUint32(),\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tvar endpointsByteOffset = this.header.sgdByteOffset + sgdReader.offset;\r\n\t\tvar selectorsByteOffset = endpointsByteOffset + this.sgd.endpointsByteLength;\r\n\t\tvar tablesByteOffset = selectorsByteOffset + this.sgd.selectorsByteLength;\r\n\t\tvar extendedByteOffset = tablesByteOffset + this.sgd.tablesByteLength;\r\n\r\n\t\tthis.sgd.endpointsData = new Uint8Array( this.arrayBuffer, endpointsByteOffset, this.sgd.endpointsByteLength );\r\n\t\tthis.sgd.selectorsData = new Uint8Array( this.arrayBuffer, selectorsByteOffset, this.sgd.selectorsByteLength );\r\n\t\tthis.sgd.tablesData = new Uint8Array( this.arrayBuffer, tablesByteOffset, this.sgd.tablesByteLength );\r\n\t\tthis.sgd.extendedData = new Uint8Array( this.arrayBuffer, extendedByteOffset, this.sgd.extendedByteLength );\r\n\r\n\t}\r\n\r\n\tasync initMipmaps( transcoder, config ) {\r\n\r\n\t\tawait this.zstd.init();\r\n\r\n\t\tvar TranscodeTarget = this.basisModule.TranscodeTarget;\r\n\t\tvar TextureFormat = this.basisModule.TextureFormat;\r\n\t\tvar ImageInfo = this.basisModule.ImageInfo;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar mipmaps = [];\r\n\t\tvar width = this.getWidth();\r\n\t\tvar height = this.getHeight();\r\n\t\tvar texFormat = this.getTexFormat();\r\n\t\tvar hasAlpha = this.getAlpha();\r\n\t\tvar isVideo = false;\r\n\r\n\t\t// PVRTC1 transcoders (from both ETC1S and UASTC) only support power of 2 dimensions.\r\n\t\tvar pvrtcTranscodable = MathUtils.isPowerOfTwo( width ) && MathUtils.isPowerOfTwo( height );\r\n\r\n\t\tif ( texFormat === TextureFormat.ETC1S ) {\r\n\r\n\t\t\tvar numEndpoints = this.sgd.endpointCount;\r\n\t\t\tvar numSelectors = this.sgd.selectorCount;\r\n\t\t\tvar endpoints = this.sgd.endpointsData;\r\n\t\t\tvar selectors = this.sgd.selectorsData;\r\n\t\t\tvar tables = this.sgd.tablesData;\r\n\r\n\t\t\ttranscoder.decodePalettes( numEndpoints, endpoints, numSelectors, selectors );\r\n\t\t\ttranscoder.decodeTables( tables );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar targetFormat;\r\n\r\n\t\tif ( config.astcSupported ) {\r\n\r\n\t\t\ttargetFormat = TranscodeTarget.ASTC_4x4_RGBA;\r\n\t\t\tthis.transcodedFormat = RGBA_ASTC_4x4_Format;\r\n\r\n\t\t} else if ( config.bptcSupported && texFormat === TextureFormat.UASTC4x4 ) {\r\n\r\n\t\t\ttargetFormat = TranscodeTarget.BC7_M5_RGBA;\r\n\t\t\tthis.transcodedFormat = RGBA_BPTC_Format;\r\n\r\n\t\t} else if ( config.dxtSupported ) {\r\n\r\n\t\t\ttargetFormat = hasAlpha ? TranscodeTarget.BC3_RGBA : TranscodeTarget.BC1_RGB;\r\n\t\t\tthis.transcodedFormat = hasAlpha ? RGBA_S3TC_DXT5_Format : RGB_S3TC_DXT1_Format;\r\n\r\n\t\t} else if ( config.pvrtcSupported && pvrtcTranscodable ) {\r\n\r\n\t\t\ttargetFormat = hasAlpha ? TranscodeTarget.PVRTC1_4_RGBA : TranscodeTarget.PVRTC1_4_RGB;\r\n\t\t\tthis.transcodedFormat = hasAlpha ? RGBA_PVRTC_4BPPV1_Format : RGB_PVRTC_4BPPV1_Format;\r\n\r\n\t\t} else if ( config.etc2Supported ) {\r\n\r\n\t\t\ttargetFormat = hasAlpha ? TranscodeTarget.ETC2_RGBA : TranscodeTarget.ETC1_RGB/* subset of ETC2 */;\r\n\t\t\tthis.transcodedFormat = hasAlpha ? RGBA_ETC2_EAC_Format : RGB_ETC2_Format;\r\n\r\n\t\t} else if ( config.etc1Supported ) {\r\n\r\n\t\t\ttargetFormat = TranscodeTarget.ETC1_RGB;\r\n\t\t\tthis.transcodedFormat = RGB_ETC1_Format;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.KTX2Loader: No suitable compressed texture format found. Decoding to RGBA32.' );\r\n\r\n\t\t\ttargetFormat = TranscodeTarget.RGBA32;\r\n\t\t\tthis.transcodedFormat = RGBAFormat;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! this.basisModule.isFormatSupported( targetFormat, texFormat ) ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.KTX2Loader: Selected texture format not supported by current transcoder build.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar imageDescIndex = 0;\r\n\r\n\t\tfor ( var level = 0; level < this.header.levelCount; level ++ ) {\r\n\r\n\t\t\tvar levelWidth = Math.ceil( width / Math.pow( 2, level ) );\r\n\t\t\tvar levelHeight = Math.ceil( height / Math.pow( 2, level ) );\r\n\r\n\t\t\tvar numImagesInLevel = 1; // TODO(donmccurdy): Support cubemaps, arrays and 3D.\r\n\t\t\tvar imageOffsetInLevel = 0;\r\n\t\t\tvar imageInfo = new ImageInfo( texFormat, levelWidth, levelHeight, level );\r\n\t\t\tvar levelByteLength = this.levels[ level ].byteLength;\r\n\t\t\tvar levelUncompressedByteLength = this.levels[ level ].uncompressedByteLength;\r\n\r\n\t\t\tfor ( var imageIndex = 0; imageIndex < numImagesInLevel; imageIndex ++ ) {\r\n\r\n\t\t\t\tvar result;\r\n\t\t\t\tvar encodedData;\r\n\r\n\t\t\t\tif ( texFormat === TextureFormat.UASTC4x4 ) {\r\n\r\n\t\t\t\t\t// UASTC\r\n\r\n\t\t\t\t\timageInfo.flags = 0;\r\n\t\t\t\t\timageInfo.rgbByteOffset = 0;\r\n\t\t\t\t\timageInfo.rgbByteLength = levelUncompressedByteLength;\r\n\t\t\t\t\timageInfo.alphaByteOffset = 0;\r\n\t\t\t\t\timageInfo.alphaByteLength = 0;\r\n\r\n\t\t\t\t\tencodedData = new Uint8Array( this.arrayBuffer, this.levels[ level ].byteOffset + imageOffsetInLevel, levelByteLength );\r\n\r\n\t\t\t\t\tif ( this.header.supercompressionScheme === 2 /* ZSTD */ ) {\r\n\r\n\t\t\t\t\t\tencodedData = this.zstd.decode( encodedData, levelUncompressedByteLength );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult = transcoder.transcodeImage( targetFormat, encodedData, imageInfo, 0, hasAlpha, isVideo );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ETC1S\r\n\r\n\t\t\t\t\tvar imageDesc = this.sgd.imageDescs[ imageDescIndex ++ ];\r\n\r\n\t\t\t\t\timageInfo.flags = imageDesc.imageFlags;\r\n\t\t\t\t\timageInfo.rgbByteOffset = 0;\r\n\t\t\t\t\timageInfo.rgbByteLength = imageDesc.rgbSliceByteLength;\r\n\t\t\t\t\timageInfo.alphaByteOffset = imageDesc.alphaSliceByteOffset > 0 ? imageDesc.rgbSliceByteLength : 0;\r\n\t\t\t\t\timageInfo.alphaByteLength = imageDesc.alphaSliceByteLength;\r\n\r\n\t\t\t\t\tencodedData = new Uint8Array( this.arrayBuffer, this.levels[ level ].byteOffset + imageDesc.rgbSliceByteOffset, imageDesc.rgbSliceByteLength + imageDesc.alphaSliceByteLength );\r\n\r\n\t\t\t\t\tresult = transcoder.transcodeImage( targetFormat, encodedData, imageInfo, 0, isVideo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( result.transcodedImage === undefined ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'THREE.KTX2Loader: Unable to transcode image.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Transcoded image is written in memory allocated by WASM. We could avoid copying\r\n\t\t\t\t// the image by waiting until the image is uploaded to the GPU, then calling\r\n\t\t\t\t// delete(). However, (1) we don't know if the user will later need to re-upload it\r\n\t\t\t\t// e.g. after calling texture.clone(), and (2) this code will eventually be in a\r\n\t\t\t\t// Web Worker, and transferring WASM's memory seems like a very bad idea.\r\n\t\t\t\tvar levelData = result.transcodedImage.get_typed_memory_view().slice();\r\n\t\t\t\tresult.transcodedImage.delete();\r\n\r\n\t\t\t\tmipmaps.push( { data: levelData, width: levelWidth, height: levelHeight } );\r\n\t\t\t\timageOffsetInLevel += levelByteLength;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tscope.mipmaps = mipmaps;\r\n\r\n\t}\r\n\r\n\tgetWidth() {\r\n\r\n\t\treturn this.header.pixelWidth;\r\n\r\n\t}\r\n\r\n\tgetHeight() {\r\n\r\n\t\treturn this.header.pixelHeight;\r\n\r\n\t}\r\n\r\n\tgetEncoding() {\r\n\r\n\t\treturn this.dfd.transferFunction === 2 /* KHR_DF_TRANSFER_SRGB */\r\n\t\t\t? sRGBEncoding\r\n\t\t\t: LinearEncoding;\r\n\r\n\t}\r\n\r\n\tgetTexFormat() {\r\n\r\n\t\tvar TextureFormat = this.basisModule.TextureFormat;\r\n\r\n\t\treturn this.dfd.colorModel === DFDModel.UASTC ? TextureFormat.UASTC4x4 : TextureFormat.ETC1S;\r\n\r\n\t}\r\n\r\n\tgetAlpha() {\r\n\r\n\t\tvar TextureFormat = this.basisModule.TextureFormat;\r\n\r\n\t\t// TODO(donmccurdy): Handle all channelIDs (i.e. the R & R+G cases),\r\n\t\t// choosing appropriate transcode target formats or providing queries\r\n\t\t// for applications so they know what to do with the content.\r\n\r\n\t\tif ( this.getTexFormat() === TextureFormat.UASTC4x4 ) {\r\n\r\n\t\t\t// UASTC\r\n\r\n\t\t\tif ( ( this.dfd.samples[ 0 ].channelID & 0xF ) === DFDChannel.UASTC.RGBA ) {\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// ETC1S\r\n\r\n\t\tif ( this.dfd.numSamples === 2 && ( this.dfd.samples[ 1 ].channelID & 0xF ) === DFDChannel.ETC1S.AAA ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetPremultiplyAlpha() {\r\n\r\n\t\treturn !! ( this.dfd.flags & 1 /* KHR_DF_FLAG_ALPHA_PREMULTIPLIED */ );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass KTX2BufferReader {\r\n\r\n\tconstructor( arrayBuffer, byteOffset, byteLength, littleEndian ) {\r\n\r\n\t\tthis.dataView = new DataView( arrayBuffer, byteOffset, byteLength );\r\n\t\tthis.littleEndian = littleEndian;\r\n\t\tthis.offset = 0;\r\n\r\n\t}\r\n\r\n\tnextUint8() {\r\n\r\n\t\tvar value = this.dataView.getUint8( this.offset, this.littleEndian );\r\n\r\n\t\tthis.offset += 1;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tnextUint16() {\r\n\r\n\t\tvar value = this.dataView.getUint16( this.offset, this.littleEndian );\r\n\r\n\t\tthis.offset += 2;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tnextUint32() {\r\n\r\n\t\tvar value = this.dataView.getUint32( this.offset, this.littleEndian );\r\n\r\n\t\tthis.offset += 4;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tnextUint64() {\r\n\r\n\t\t// https://stackoverflow.com/questions/53103695/\r\n\t\tvar left = this.dataView.getUint32( this.offset, this.littleEndian );\r\n\t\tvar right = this.dataView.getUint32( this.offset + 4, this.littleEndian );\r\n\t\tvar value = this.littleEndian ? left + ( 2 ** 32 * right ) : ( 2 ** 32 * left ) + right;\r\n\r\n\t\tif ( ! Number.isSafeInteger( value ) ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.KTX2Loader: ' + value + ' exceeds MAX_SAFE_INTEGER. Precision may be lost.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.offset += 8;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tskip( bytes ) {\r\n\r\n\t\tthis.offset += bytes;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { KTX2Loader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/KTX2Loader.js","<template>\r\n    <div class=\"webglLoaderTextureKtx2-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl - KTX2 texture loader<br />\r\n\t\t\t<a href=\"http://github.khronos.org/KTX-Specification/\" target=\"_blank\" rel=\"noopener\">KTX2</a> with\r\n\t\t\t<a href=\"https://github.com/binomialLLC/basis_universal\" target=\"_blank\">Basis Universal GPU Texture Codec</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { KTX2Loader } from '@/components/jsm/loaders/KTX2Loader.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            width: null,\r\n\t\t\theight: null,\r\n            renderer: null,\r\n            scene: null,\r\n            camera: null,\r\n            controls: null,\r\n            geometry: null,\r\n            material: null,\r\n            mesh: null,\r\n            formatStrings: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.width = this.$webglInnerWidth\r\n        this.height = window.innerHeight\r\n        this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n        this.renderer.setSize(this.width, this.height)\r\n        this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n        document.getElementsByClassName('webglLoaderTextureKtx2-container')[0].appendChild(this.renderer.domElement)\r\n        this.scene = new this.$THREE.Scene()\r\n        this.scene.background = new this.$THREE.Color(0x202020)\r\n        this.camera = new this.$THREE.PerspectiveCamera(60, this.width / this.height, 0.1, 100)\r\n        this.camera.position.set(2, 1.5, 1)\r\n        this.camera.lookAt(this.scene.position)\r\n        this.scene.add(this.camera)\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n        this.controls.autoRotate = true\r\n        // PlaneBufferGeometry UVs assume flipY=true, which compressed textures don't support.\r\n        this.geometry = this.flipY(new this.$THREE.PlaneBufferGeometry())\r\n        this.material = new this.$THREE.MeshBasicMaterial({\r\n            color: 0xFFFFFF,\r\n            side: this.$THREE.DoubleSide\r\n        })\r\n        this.mesh = new this.$THREE.Mesh(this.geometry, this.material)\r\n        this.scene.add(this.mesh)\r\n        this.formatStrings = {\r\n            [ this.$THREE.RGBAFormat ]: \"RGBA32\",\r\n            [ this.$THREE.RGBA_ASTC_4x4_Format ]: \"RGBA_ASTC_4x4\",\r\n            [ this.$THREE.RGB_S3TC_DXT1_Format ]: \"RGB_S3TC_DXT1\",\r\n            [ this.$THREE.RGBA_S3TC_DXT5_Format ]: \"RGBA_S3TC_DXT5\",\r\n            [ this.$THREE.RGB_PVRTC_4BPPV1_Format ]: \"RGB_PVRTC_4BPPV1\",\r\n            [ this.$THREE.RGBA_PVRTC_4BPPV1_Format ]: \"RGBA_PVRTC_4BPPV1\",\r\n            [ this.$THREE.RGB_ETC1_Format ]: \"RGB_ETC1\",\r\n            [ this.$THREE.RGB_ETC2_Format ]: \"RGB_ETC2\",\r\n            [ this.$THREE.RGBA_ETC2_EAC_Format ]: \"RGB_ETC2_EAC\",\r\n        }\r\n        // Samples: sample_etc1s.ktx2, sample_uastc.ktx2\r\n        new KTX2Loader()\r\n            .detectSupport(this.renderer)\r\n            .load('static/textures/compressed/sample_uastc.ktx2', (texture) => {\r\n                console.info(`transcoded to ${this.formatStrings[ texture.format ]}`)\r\n                this.material.map = texture\r\n                this.material.transparent = true\r\n                this.material.needsUpdate = true\r\n            }, (p) => console.log(`...${p}`), (e) => console.error(e))\r\n        this.animate()\r\n        window.addEventListener('resize', () => {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        }, false)\r\n    },\r\n    methods: {\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.controls.update()\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        flipY(geometry) {\r\n            var uv = geometry.attributes.uv\r\n            for (var i = 0; i < uv.count; i ++) {\r\n                uv.setY(i, 1 - uv.getY(i))\r\n            }\r\n            return geometry\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoaderTextureKtx2-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoaderTextureKtx2.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoaderTextureKtx2-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl - KTX2 texture loader\"),_c('br'),_vm._v(\" \"),_c('a',{attrs:{\"href\":\"http://github.khronos.org/KTX-Specification/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"KTX2\")]),_vm._v(\" with\\n\\t\\t\\t\"),_c('a',{attrs:{\"href\":\"https://github.com/binomialLLC/basis_universal\",\"target\":\"_blank\"}},[_vm._v(\"Basis Universal GPU Texture Codec\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-401babca\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoaderTextureKtx2.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-401babca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoaderTextureKtx2.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderTextureKtx2.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderTextureKtx2.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-401babca\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoaderTextureKtx2.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-401babca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoaderTextureKtx2.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}