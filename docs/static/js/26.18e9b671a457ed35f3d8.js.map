{"version":3,"sources":["webpack:///src/views/materials/webglMaterialsCubemapRefraction.vue","webpack:///./src/views/materials/webglMaterialsCubemapRefraction.vue?fe99","webpack:///./src/views/materials/webglMaterialsCubemapRefraction.vue","webpack:///./src/components/jsm/loaders/PLYLoader.js"],"names":["webglMaterialsCubemapRefraction","data","container","stats","camera","scene","renderer","pointLight","mouseX","mouseY","windowHalfX","windowHalfY","mounted","this","$webglInnerWidth","window","innerHeight","init","animate","methods","_this","document","createElement","getElementsByClassName","appendChild","$THREE","PerspectiveCamera","position","z","r","urls","textureCube","CubeTextureLoader","load","mapping","CubeRefractionMapping","Scene","background","ambient","AmbientLight","add","PointLight","sphere","SphereBufferGeometry","mesh","Mesh","MeshBasicMaterial","color","scale","set","cubeMaterial3","MeshPhongMaterial","envMap","refractionRatio","reflectivity","cubeMaterial2","cubeMaterial1","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","$Stats","dom","style","left","PLYLoader","geometry","createScene","addEventListener","onDocumentMouseMove","onWindowResize","innerWidth","$onWindowResize","m1","m2","m3","computeVertexNormals","x","y","event","clientX","clientY","requestAnimationFrame","render","update","timer","Date","now","lookAt","Math","cos","sin","materials_webglMaterialsCubemapRefraction","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","_v","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","d","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","manager","Loader","call","propertyNameMapping","prototype","Object","assign","create","constructor","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setPropertyNameMapping","parseHeader","headerText","headerLength","result","exec","Blob","size","currentElement","lineType","lineValues","propertValues","property","header","comments","elements","objInfo","lines","split","i","length","line","trim","shift","join","format","version","push","undefined","name","count","parseInt","properties","type","countType","itemType","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","parseASCII","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","body","currentElementCount","handleElement","postProcess","BufferGeometry","setIndex","setAttribute","Float32BufferAttribute","toNonIndexed","computeBoundingSphere","elementName","nx","ny","nz","s","t","red","green","blue","vertex_indices","vertex_index","texcoord","binaryRead","dataview","at","little_endian","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","binaryReadElement","read","ArrayBuffer","LoaderUtils","decodeText","Uint8Array","DataView","loc","parseBinary"],"mappings":"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","file":"static/js/26.18e9b671a457ed35f3d8.js","sourcesContent":["<template>\r\n    <div class=\"webglMaterialsCubemapRefraction-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\">Three.js</a> cube map refraction demo<br/>\r\n\t\t\tLucy model from\r\n            <a href=\"http://graphics.stanford.edu/data/3Dscanrep/\">Stanford 3d scanning repository</a><br/>\r\n\t\t\tTexture by <a href=\"http://www.humus.name/index.php?page=Textures\" target=\"_blank\" rel=\"noopener\">Humus</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { PLYLoader } from '@/components/jsm/loaders/PLYLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tpointLight: null,\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n\t\t\twindowHalfX: null,\r\n\t\t\twindowHalfY: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.windowHalfX = this.$webglInnerWidth / 2\r\n        this.windowHalfY = window.innerHeight / 2\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsCubemapRefraction-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 1, 100000)\r\n            this.camera.position.z = - 4000\r\n            //\r\n            var r = \"static/textures/cube/Park3Med/\"\r\n            var urls = [\r\n                r + \"px.jpg\", r + \"nx.jpg\",\r\n                r + \"py.jpg\", r + \"ny.jpg\",\r\n                r + \"pz.jpg\", r + \"nz.jpg\"\r\n            ]\r\n            var textureCube = new this.$THREE.CubeTextureLoader().load(urls)\r\n            textureCube.mapping = this.$THREE.CubeRefractionMapping\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = textureCube\r\n            // LIGHTS\r\n            var ambient = new this.$THREE.AmbientLight(0xffffff)\r\n            this.scene.add(ambient)\r\n            this.pointLight = new this.$THREE.PointLight(0xffffff, 2)\r\n            this.scene.add(this.pointLight)\r\n            // light representation\r\n            var sphere = new this.$THREE.SphereBufferGeometry(100, 16, 8)\r\n            var mesh = new this.$THREE.Mesh(sphere, new this.$THREE.MeshBasicMaterial({ color: 0xffffff }))\r\n            mesh.scale.set(0.05, 0.05, 0.05)\r\n            this.pointLight.add(mesh)\r\n            // material samples\r\n            var cubeMaterial3 = new this.$THREE.MeshPhongMaterial({ color: 0xccddff, envMap: textureCube, refractionRatio: 0.98, reflectivity: 0.9 })\r\n            var cubeMaterial2 = new this.$THREE.MeshPhongMaterial({ color: 0xccfffd, envMap: textureCube, refractionRatio: 0.985 })\r\n            var cubeMaterial1 = new this.$THREE.MeshPhongMaterial({ color: 0xffffff, envMap: textureCube, refractionRatio: 0.98 })\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            var loader = new PLYLoader()\r\n            loader.load('static/models/ply/binary/Lucy100k.ply', (geometry) => {\r\n                this.createScene(geometry, cubeMaterial1, cubeMaterial2, cubeMaterial3)\r\n            })\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.windowHalfX = (window.innerWidth - 281) / 2\r\n            this.windowHalfY = window.innerHeight / 2\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        createScene(geometry, m1, m2, m3) {\r\n            geometry.computeVertexNormals()\r\n            var s = 1.5\r\n            var mesh = new this.$THREE.Mesh(geometry, m1)\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = s\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, m2)\r\n            mesh.position.x = - 1500\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = s\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, m3)\r\n            mesh.position.x = 1500\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = s\r\n            this.scene.add(mesh)\r\n        },\r\n        onDocumentMouseMove(event) {\r\n            this.mouseX = (event.clientX - this.windowHalfX) * 4\r\n            this.mouseY = (event.clientY - this.windowHalfY) * 4\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            var timer = - 0.0002 * Date.now()\r\n            this.camera.position.x += (this.mouseX - this.camera.position.x) * .05\r\n            this.camera.position.y += (- this.mouseY - this.camera.position.y) * .05\r\n            this.camera.lookAt(this.scene.position)\r\n            this.pointLight.position.x = 1500 * Math.cos(timer)\r\n            this.pointLight.position.z = 1500 * Math.sin(timer)\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsCubemapRefraction-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsCubemapRefraction.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsCubemapRefraction-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\"}},[_vm._v(\"Three.js\")]),_vm._v(\" cube map refraction demo\"),_c('br'),_vm._v(\"\\n\\t\\t\\tLucy model from\\n            \"),_c('a',{attrs:{\"href\":\"http://graphics.stanford.edu/data/3Dscanrep/\"}},[_vm._v(\"Stanford 3d scanning repository\")]),_c('br'),_vm._v(\"\\n\\t\\t\\tTexture by \"),_c('a',{attrs:{\"href\":\"http://www.humus.name/index.php?page=Textures\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Humus\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a4234ee8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsCubemapRefraction.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a4234ee8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsCubemapRefraction.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsCubemapRefraction.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsCubemapRefraction.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a4234ee8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsCubemapRefraction.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a4234ee8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsCubemapRefraction.vue\n// module id = null\n// module chunks = ","import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tLoader,\r\n\tLoaderUtils\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\r\n * File Format or the Stanford Triangle Format).\r\n *\r\n * Limitations: ASCII decoding assumes file is UTF-8.\r\n *\r\n * Usage:\r\n *\tvar loader = new PLYLoader();\r\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\r\n *\r\n *\t\tscene.add( new THREE.Mesh( geometry ) );\r\n *\r\n *\t} );\r\n *\r\n * If the PLY file uses non standard property names, they can be mapped while\r\n * loading. For example, the following maps the properties\r\n * “diffuse_(red|green|blue)” in the file to standard color names.\r\n *\r\n * loader.setPropertyNameMapping( {\r\n *\tdiffuse_red: 'red',\r\n *\tdiffuse_green: 'green',\r\n *\tdiffuse_blue: 'blue'\r\n * } );\r\n *\r\n */\r\n\r\n\r\nvar PLYLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n\tthis.propertyNameMapping = {};\r\n\r\n};\r\n\r\nPLYLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: PLYLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetPropertyNameMapping: function ( mapping ) {\r\n\r\n\t\tthis.propertyNameMapping = mapping;\r\n\r\n\t},\r\n\r\n\tparse: function ( data ) {\r\n\r\n\t\tfunction parseHeader( data ) {\r\n\r\n\t\t\tvar patternHeader = /ply([\\s\\S]*)end_header\\r?\\n/;\r\n\t\t\tvar headerText = '';\r\n\t\t\tvar headerLength = 0;\r\n\t\t\tvar result = patternHeader.exec( data );\r\n\r\n\t\t\tif ( result !== null ) {\r\n\r\n\t\t\t\theaderText = result[ 1 ];\r\n\t\t\t\theaderLength = new Blob( [ result[ 0 ] ] ).size;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar header = {\r\n\t\t\t\tcomments: [],\r\n\t\t\t\telements: [],\r\n\t\t\t\theaderLength: headerLength,\r\n\t\t\t\tobjInfo: ''\r\n\t\t\t};\r\n\r\n\t\t\tvar lines = headerText.split( '\\n' );\r\n\t\t\tvar currentElement;\r\n\t\t\tvar lineType, lineValues;\r\n\r\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\r\n\r\n\t\t\t\tvar property = { type: propertValues[ 0 ] };\r\n\r\n\t\t\t\tif ( property.type === 'list' ) {\r\n\r\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\r\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\r\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( property.name in propertyNameMapping ) {\r\n\r\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn property;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\t\tvar line = lines[ i ];\r\n\t\t\t\tline = line.trim();\r\n\r\n\t\t\t\tif ( line === '' ) continue;\r\n\r\n\t\t\t\tlineValues = line.split( /\\s+/ );\r\n\t\t\t\tlineType = lineValues.shift();\r\n\t\t\t\tline = lineValues.join( ' ' );\r\n\r\n\t\t\t\tswitch ( lineType ) {\r\n\r\n\t\t\t\t\tcase 'format':\r\n\r\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\r\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'comment':\r\n\r\n\t\t\t\t\t\theader.comments.push( line );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'element':\r\n\r\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\r\n\r\n\t\t\t\t\t\t\theader.elements.push( currentElement );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentElement = {};\r\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\r\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\r\n\t\t\t\t\t\tcurrentElement.properties = [];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'property':\r\n\r\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'obj_info':\r\n\r\n\t\t\t\t\t\theader.objInfo = line;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentElement !== undefined ) {\r\n\r\n\t\t\t\theader.elements.push( currentElement );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn header;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCIINumber( n, type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\r\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\r\n\r\n\t\t\t\t\treturn parseInt( n );\r\n\r\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\r\n\r\n\t\t\t\t\treturn parseFloat( n );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCIIElement( properties, line ) {\r\n\r\n\t\t\tvar values = line.split( /\\s+/ );\r\n\r\n\t\t\tvar element = {};\r\n\r\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\r\n\r\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\r\n\r\n\t\t\t\t\tvar list = [];\r\n\t\t\t\t\tvar n = parseASCIINumber( values.shift(), properties[ i ].countType );\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = list;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn element;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCII( data, header ) {\r\n\r\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\r\n\r\n\t\t\tvar buffer = {\r\n\t\t\t\tindices: [],\r\n\t\t\t\tvertices: [],\r\n\t\t\t\tnormals: [],\r\n\t\t\t\tuvs: [],\r\n\t\t\t\tfaceVertexUvs: [],\r\n\t\t\t\tcolors: []\r\n\t\t\t};\r\n\r\n\t\t\tvar result;\r\n\r\n\t\t\tvar patternBody = /end_header\\s([\\s\\S]*)$/;\r\n\t\t\tvar body = '';\r\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\r\n\r\n\t\t\t\tbody = result[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar lines = body.split( '\\n' );\r\n\t\t\tvar currentElement = 0;\r\n\t\t\tvar currentElementCount = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\t\tvar line = lines[ i ];\r\n\t\t\t\tline = line.trim();\r\n\t\t\t\tif ( line === '' ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( currentElementCount >= header.elements[ currentElement ].count ) {\r\n\r\n\t\t\t\t\tcurrentElement ++;\r\n\t\t\t\t\tcurrentElementCount = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar element = parseASCIIElement( header.elements[ currentElement ].properties, line );\r\n\r\n\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\r\n\r\n\t\t\t\tcurrentElementCount ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn postProcess( buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction postProcess( buffer ) {\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\t// mandatory buffer data\r\n\r\n\t\t\tif ( buffer.indices.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setIndex( buffer.indices );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\r\n\r\n\t\t\t// optional buffer data\r\n\r\n\t\t\tif ( buffer.normals.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.uvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.colors.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometry = geometry.toNonIndexed();\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleElement( buffer, elementName, element ) {\r\n\r\n\t\t\tif ( elementName === 'vertex' ) {\r\n\r\n\t\t\t\tbuffer.vertices.push( element.x, element.y, element.z );\r\n\r\n\t\t\t\tif ( 'nx' in element && 'ny' in element && 'nz' in element ) {\r\n\r\n\t\t\t\t\tbuffer.normals.push( element.nx, element.ny, element.nz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 's' in element && 't' in element ) {\r\n\r\n\t\t\t\t\tbuffer.uvs.push( element.s, element.t );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 'red' in element && 'green' in element && 'blue' in element ) {\r\n\r\n\t\t\t\t\tbuffer.colors.push( element.red / 255.0, element.green / 255.0, element.blue / 255.0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( elementName === 'face' ) {\r\n\r\n\t\t\t\tvar vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\r\n\t\t\t\tvar texcoord = element.texcoord;\r\n\r\n\t\t\t\tif ( vertex_indices.length === 3 ) {\r\n\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\r\n\r\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\r\n\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\r\n\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction binaryRead( dataview, at, type, little_endian ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t// corespondences for non-specific length types here match rply:\r\n\t\t\t\tcase 'int8':\t\tcase 'char':\t return [ dataview.getInt8( at ), 1 ];\r\n\t\t\t\tcase 'uint8':\t\tcase 'uchar':\t return [ dataview.getUint8( at ), 1 ];\r\n\t\t\t\tcase 'int16':\t\tcase 'short':\t return [ dataview.getInt16( at, little_endian ), 2 ];\r\n\t\t\t\tcase 'uint16':\tcase 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\r\n\t\t\t\tcase 'int32':\t\tcase 'int':\t\t return [ dataview.getInt32( at, little_endian ), 4 ];\r\n\t\t\t\tcase 'uint32':\tcase 'uint':\t return [ dataview.getUint32( at, little_endian ), 4 ];\r\n\t\t\t\tcase 'float32': case 'float':\t return [ dataview.getFloat32( at, little_endian ), 4 ];\r\n\t\t\t\tcase 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction binaryReadElement( dataview, at, properties, little_endian ) {\r\n\r\n\t\t\tvar element = {};\r\n\t\t\tvar result, read = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < properties.length; i ++ ) {\r\n\r\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\r\n\r\n\t\t\t\t\tvar list = [];\r\n\r\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\r\n\t\t\t\t\tvar n = result[ 0 ];\r\n\t\t\t\t\tread += result[ 1 ];\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\r\n\t\t\t\t\t\tlist.push( result[ 0 ] );\r\n\t\t\t\t\t\tread += result[ 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = list;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].type, little_endian );\r\n\t\t\t\t\telement[ properties[ i ].name ] = result[ 0 ];\r\n\t\t\t\t\tread += result[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn [ element, read ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBinary( data, header ) {\r\n\r\n\t\t\tvar buffer = {\r\n\t\t\t\tindices: [],\r\n\t\t\t\tvertices: [],\r\n\t\t\t\tnormals: [],\r\n\t\t\t\tuvs: [],\r\n\t\t\t\tfaceVertexUvs: [],\r\n\t\t\t\tcolors: []\r\n\t\t\t};\r\n\r\n\t\t\tvar little_endian = ( header.format === 'binary_little_endian' );\r\n\t\t\tvar body = new DataView( data, header.headerLength );\r\n\t\t\tvar result, loc = 0;\r\n\r\n\t\t\tfor ( var currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\r\n\r\n\t\t\t\tfor ( var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\r\n\r\n\t\t\t\t\tresult = binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\r\n\t\t\t\t\tloc += result[ 1 ];\r\n\t\t\t\t\tvar element = result[ 0 ];\r\n\r\n\t\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn postProcess( buffer );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar geometry;\r\n\t\tvar scope = this;\r\n\r\n\t\tif ( data instanceof ArrayBuffer ) {\r\n\r\n\t\t\tvar text = LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\t\t\tvar header = parseHeader( text );\r\n\r\n\t\t\tgeometry = header.format === 'ascii' ? parseASCII( text, header ) : parseBinary( data, header );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { PLYLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/PLYLoader.js"],"sourceRoot":""}