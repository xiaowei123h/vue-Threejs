{"version":3,"sources":["webpack:///./src/components/jsm/renderers/Projector.js","webpack:///./src/components/jsm/renderers/SVGRenderer.js","webpack:///src/views/svg/svgSandbox.vue","webpack:///./src/views/svg/svgSandbox.vue?ae98","webpack:///./src/views/svg/svgSandbox.vue"],"names":["RenderableObject","this","id","object","z","renderOrder","RenderableFace","v1","RenderableVertex","v2","v3","normalModel","Vector3","vertexNormalsModel","vertexNormalsLength","color","Color","material","uvs","Vector2","position","positionWorld","positionScreen","Vector4","visible","prototype","copy","vertex","RenderableLine","vertexColors","RenderableSprite","x","y","rotation","scale","Projector","_object","_objectCount","_vertex","_vertexCount","_face","_faceCount","_line","_lineCount","_sprite","_spriteCount","_modelMatrix","_objectPool","_objectPoolLength","_vertexPool","_vertexPoolLength","_facePool","_facePoolLength","_linePool","_linePoolLength","_spritePool","_spritePoolLength","_renderData","objects","lights","elements","_vector3","_vector4","_clipBox","Box3","_boundingBox","_points3","Array","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelViewProjectionMatrix","_normalMatrix","Matrix3","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","camera","console","warn","project","unprojectVector","unproject","pickingRay","error","renderList","normals","colors","normalMatrix","projectVertex","applyMatrix4","invW","w","checkTriangleVisibility","intersectsBox","setFromPoints","checkBackfaceCulling","setObject","value","getNormalMatrix","matrixWorld","length","pushVertex","getNextVertexInPool","set","pushNormal","push","pushColor","r","g","b","pushUv","pushLine","a","clipLine","multiplyScalar","getNextLineInPool","Math","max","fromArray","pushTriangle","c","side","DoubleSide","getNextFaceInPool","subVectors","cross","applyMatrix3","normalize","i","normal","arguments","addObject","getNextObjectInPool","setFromMatrixPosition","pushPoint","sprite","getNextSpriteInPool","abs","projectionMatrix","face","line","painterSort","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","min","lerp","projectScene","scene","sortObjects","sortElements","autoUpdate","updateMatrixWorld","parent","matrixWorldInverse","multiplyMatrices","setFromProjectionMatrix","projectObject","Light","Mesh","Line","Points","frustumCulled","intersectsObject","Sprite","intersectsSprite","children","l","sort","o","ol","geometry","BufferGeometry","isMultiMaterial","isArray","attributes","groups","undefined","positions","array","morphTargets","morphAttributes","morphTargetsRelative","morphInfluences","morphTargetInfluences","t","tl","influence","target","getX","getY","getZ","uv","index","indices","group","materialIndex","start","count","Geometry","vertices","faces","faceVertexUvs","v","vl","targetVertex","f","fl","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","n","nl","vertexUvs","u","step","LineSegments","modelViewMatrix","__webpack_require__","d","__webpack_exports__","SVGRenderer_SVGObject","SVGRenderer_SVGRenderer","SVGObject","node","Object3D","call","Object","create","constructor","SVGRenderer","_elements","_lights","_svgWidth","_svgHeight","_svgWidthHalf","_svgHeightHalf","_v1","_v2","_v3","_svgNode","_currentPath","_currentStyle","_this","_projector","_svg","document","createElementNS","Box2","_elemBox","_color","_diffuseColor","_ambientLight","_directionalLights","_pointLights","_clearColor","_centroid","_normal","_normalViewMatrix","_svgPathPool","_pathCount","_quality","_precision","removeChildNodes","childNodes","removeChild","convert","toFixed","renderSprite","element","scaleX","scaleY","isPointsMaterial","size","path","style","isSpriteMaterial","getStyle","opacity","addPath","renderLine","isLineBasicMaterial","linewidth","linecap","isLineDashedMaterial","dashSize","gapSize","renderFace3","info","render","isMeshBasicMaterial","multiply","isMeshLambertMaterial","isMeshPhongMaterial","isMeshStandardMaterial","add","divideScalar","ll","light","lightColor","isDirectionalLight","lightPosition","amount","dot","intensity","isPointLight","distance","distanceTo","calculateLight","emissive","isMeshNormalMaterial","setRGB","addScalar","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","expand","pixels","idet","det","sqrt","flushPath","setAttribute","getPathNode","appendChild","domElement","autoClear","overdraw","setQuality","quality","setClearColor","setPixelRatio","setSize","width","height","getSize","setPrecision","precision","clear","backgroundColor","Camera","background","isColor","isAmbientLight","calculateLights","e","el","makeEmpty","traverseVisible","svgSandbox","data","renderer","stats","mounted","init","animate","methods","$moduleTHREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","Scene","BufferGeometryLoader","load","mesh","MeshLambertMaterial","boxGeometry","BoxBufferGeometry","MeshBasicMaterial","transparent","random","PlaneBufferGeometry","CylinderBufferGeometry","PI","v0","setHex","Float32BufferAttribute","log","SpriteMaterial","cloneNode","FileLoader","svg","doc","DOMParser","parseFromString","documentElement","ambient","AmbientLight","directional","DirectionalLight","getElementsByClassName","$Stats","dom","left","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","update","time","Date","now","sin","cos","lookAt","svg_svgSandbox","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/27.59fab159f37b8b3dd644.js","sourcesContent":["import {\r\n\tBackSide,\r\n\tBox3,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tDoubleSide,\r\n\tFrontSide,\r\n\tFrustum,\r\n\tGeometry,\r\n\tLight,\r\n\tLine,\r\n\tLineSegments,\r\n\tMatrix3,\r\n\tMatrix4,\r\n\tMesh,\r\n\tPoints,\r\n\tSprite,\r\n\tVector2,\r\n\tVector3,\r\n\tVector4\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar RenderableObject = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.object = null;\r\n\tthis.z = 0;\r\n\tthis.renderOrder = 0;\r\n\r\n};\r\n\r\n//\r\n\r\nvar RenderableFace = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.v1 = new RenderableVertex();\r\n\tthis.v2 = new RenderableVertex();\r\n\tthis.v3 = new RenderableVertex();\r\n\r\n\tthis.normalModel = new Vector3();\r\n\r\n\tthis.vertexNormalsModel = [ new Vector3(), new Vector3(), new Vector3() ];\r\n\tthis.vertexNormalsLength = 0;\r\n\r\n\tthis.color = new Color();\r\n\tthis.material = null;\r\n\tthis.uvs = [ new Vector2(), new Vector2(), new Vector2() ];\r\n\r\n\tthis.z = 0;\r\n\tthis.renderOrder = 0;\r\n\r\n};\r\n\r\n//\r\n\r\nvar RenderableVertex = function () {\r\n\r\n\tthis.position = new Vector3();\r\n\tthis.positionWorld = new Vector3();\r\n\tthis.positionScreen = new Vector4();\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nRenderableVertex.prototype.copy = function ( vertex ) {\r\n\r\n\tthis.positionWorld.copy( vertex.positionWorld );\r\n\tthis.positionScreen.copy( vertex.positionScreen );\r\n\r\n};\r\n\r\n//\r\n\r\nvar RenderableLine = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.v1 = new RenderableVertex();\r\n\tthis.v2 = new RenderableVertex();\r\n\r\n\tthis.vertexColors = [ new Color(), new Color() ];\r\n\tthis.material = null;\r\n\r\n\tthis.z = 0;\r\n\tthis.renderOrder = 0;\r\n\r\n};\r\n\r\n//\r\n\r\nvar RenderableSprite = function () {\r\n\r\n\tthis.id = 0;\r\n\r\n\tthis.object = null;\r\n\r\n\tthis.x = 0;\r\n\tthis.y = 0;\r\n\tthis.z = 0;\r\n\r\n\tthis.rotation = 0;\r\n\tthis.scale = new Vector2();\r\n\r\n\tthis.material = null;\r\n\tthis.renderOrder = 0;\r\n\r\n};\r\n\r\n//\r\n\r\nvar Projector = function () {\r\n\r\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\r\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\r\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\r\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\r\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\r\n\r\n\t\t_renderData = { objects: [], lights: [], elements: [] },\r\n\r\n\t\t_vector3 = new Vector3(),\r\n\t\t_vector4 = new Vector4(),\r\n\r\n\t\t_clipBox = new Box3( new Vector3( - 1, - 1, - 1 ), new Vector3( 1, 1, 1 ) ),\r\n\t\t_boundingBox = new Box3(),\r\n\t\t_points3 = new Array( 3 ),\r\n\r\n\t\t_viewMatrix = new Matrix4(),\r\n\t\t_viewProjectionMatrix = new Matrix4(),\r\n\r\n\t\t_modelMatrix,\r\n\t\t_modelViewProjectionMatrix = new Matrix4(),\r\n\r\n\t\t_normalMatrix = new Matrix3(),\r\n\r\n\t\t_frustum = new Frustum(),\r\n\r\n\t\t_clippedVertex1PositionScreen = new Vector4(),\r\n\t\t_clippedVertex2PositionScreen = new Vector4();\r\n\r\n\t//\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function () {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tvar RenderList = function () {\r\n\r\n\t\tvar normals = [];\r\n\t\tvar colors = [];\r\n\t\tvar uvs = [];\r\n\r\n\t\tvar object = null;\r\n\r\n\t\tvar normalMatrix = new Matrix3();\r\n\r\n\t\tfunction setObject( value ) {\r\n\r\n\t\t\tobject = value;\r\n\r\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\r\n\r\n\t\t\tnormals.length = 0;\r\n\t\t\tcolors.length = 0;\r\n\t\t\tuvs.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction projectVertex( vertex ) {\r\n\r\n\t\t\tvar position = vertex.position;\r\n\t\t\tvar positionWorld = vertex.positionWorld;\r\n\t\t\tvar positionScreen = vertex.positionScreen;\r\n\r\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\r\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\r\n\r\n\t\t\tvar invW = 1 / positionScreen.w;\r\n\r\n\t\t\tpositionScreen.x *= invW;\r\n\t\t\tpositionScreen.y *= invW;\r\n\t\t\tpositionScreen.z *= invW;\r\n\r\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\r\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\r\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushVertex( x, y, z ) {\r\n\r\n\t\t\t_vertex = getNextVertexInPool();\r\n\t\t\t_vertex.position.set( x, y, z );\r\n\r\n\t\t\tprojectVertex( _vertex );\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushNormal( x, y, z ) {\r\n\r\n\t\t\tnormals.push( x, y, z );\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushColor( r, g, b ) {\r\n\r\n\t\t\tcolors.push( r, g, b );\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushUv( x, y ) {\r\n\r\n\t\t\tuvs.push( x, y );\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\r\n\r\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\r\n\r\n\t\t\t_points3[ 0 ] = v1.positionScreen;\r\n\t\t\t_points3[ 1 ] = v2.positionScreen;\r\n\t\t\t_points3[ 2 ] = v3.positionScreen;\r\n\r\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\r\n\r\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\r\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\r\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\r\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushLine( a, b ) {\r\n\r\n\t\t\tvar v1 = _vertexPool[ a ];\r\n\t\t\tvar v2 = _vertexPool[ b ];\r\n\r\n\t\t\t// Clip\r\n\r\n\t\t\tv1.positionScreen.copy( v1.position ).applyMatrix4( _modelViewProjectionMatrix );\r\n\t\t\tv2.positionScreen.copy( v2.position ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\tif ( clipLine( v1.positionScreen, v2.positionScreen ) === true ) {\r\n\r\n\t\t\t\t// Perform the perspective divide\r\n\t\t\t\tv1.positionScreen.multiplyScalar( 1 / v1.positionScreen.w );\r\n\t\t\t\tv2.positionScreen.multiplyScalar( 1 / v2.positionScreen.w );\r\n\r\n\t\t\t\t_line = getNextLineInPool();\r\n\t\t\t\t_line.id = object.id;\r\n\t\t\t\t_line.v1.copy( v1 );\r\n\t\t\t\t_line.v2.copy( v2 );\r\n\t\t\t\t_line.z = Math.max( v1.positionScreen.z, v2.positionScreen.z );\r\n\t\t\t\t_line.renderOrder = object.renderOrder;\r\n\r\n\t\t\t\t_line.material = object.material;\r\n\r\n\t\t\t\tif ( object.material.vertexColors ) {\r\n\r\n\t\t\t\t\t_line.vertexColors[ 0 ].fromArray( colors, a * 3 );\r\n\t\t\t\t\t_line.vertexColors[ 1 ].fromArray( colors, b * 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderData.elements.push( _line );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushTriangle( a, b, c, material ) {\r\n\r\n\t\t\tvar v1 = _vertexPool[ a ];\r\n\t\t\tvar v2 = _vertexPool[ b ];\r\n\t\t\tvar v3 = _vertexPool[ c ];\r\n\r\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\r\n\r\n\t\t\tif ( material.side === DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\r\n\r\n\t\t\t\t_face = getNextFaceInPool();\r\n\r\n\t\t\t\t_face.id = object.id;\r\n\t\t\t\t_face.v1.copy( v1 );\r\n\t\t\t\t_face.v2.copy( v2 );\r\n\t\t\t\t_face.v3.copy( v3 );\r\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\r\n\t\t\t\t_face.renderOrder = object.renderOrder;\r\n\r\n\t\t\t\t// face normal\r\n\t\t\t\t_vector3.subVectors( v3.position, v2.position );\r\n\t\t\t\t_vector4.subVectors( v1.position, v2.position );\r\n\t\t\t\t_vector3.cross( _vector4 );\r\n\t\t\t\t_face.normalModel.copy( _vector3 );\r\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\r\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t\tvar uv = _face.uvs[ i ];\r\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_face.vertexNormalsLength = 3;\r\n\r\n\t\t\t\t_face.material = material;\r\n\r\n\t\t\t\tif ( material.vertexColors ) {\r\n\r\n\t\t\t\t\t_face.color.fromArray( colors, a * 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderData.elements.push( _face );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tsetObject: setObject,\r\n\t\t\tprojectVertex: projectVertex,\r\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\r\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\r\n\t\t\tpushVertex: pushVertex,\r\n\t\t\tpushNormal: pushNormal,\r\n\t\t\tpushColor: pushColor,\r\n\t\t\tpushUv: pushUv,\r\n\t\t\tpushLine: pushLine,\r\n\t\t\tpushTriangle: pushTriangle\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tvar renderList = new RenderList();\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof Light ) {\r\n\r\n\t\t\t_renderData.lights.push( object );\r\n\r\n\t\t} else if ( object instanceof Mesh || object instanceof Line || object instanceof Points ) {\r\n\r\n\t\t\tif ( object.material.visible === false ) return;\r\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\r\n\r\n\t\t\taddObject( object );\r\n\r\n\t\t} else if ( object instanceof Sprite ) {\r\n\r\n\t\t\tif ( object.material.visible === false ) return;\r\n\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\r\n\r\n\t\t\taddObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction addObject( object ) {\r\n\r\n\t\t_object = getNextObjectInPool();\r\n\t\t_object.id = object.id;\r\n\t\t_object.object = object;\r\n\r\n\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\r\n\t\t_object.z = _vector3.z;\r\n\t\t_object.renderOrder = object.renderOrder;\r\n\r\n\t\t_renderData.objects.push( _object );\r\n\r\n\t}\r\n\r\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\r\n\r\n\t\t_faceCount = 0;\r\n\t\t_lineCount = 0;\r\n\t\t_spriteCount = 0;\r\n\r\n\t\t_renderData.elements.length = 0;\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\t_viewMatrix.copy( camera.matrixWorldInverse );\r\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\r\n\r\n\t\t_frustum.setFromProjectionMatrix( _viewProjectionMatrix );\r\n\r\n\t\t//\r\n\r\n\t\t_objectCount = 0;\r\n\r\n\t\t_renderData.objects.length = 0;\r\n\t\t_renderData.lights.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\tif ( sortObjects === true ) {\r\n\r\n\t\t\t_renderData.objects.sort( painterSort );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar objects = _renderData.objects;\r\n\r\n\t\tfor ( var o = 0, ol = objects.length; o < ol; o ++ ) {\r\n\r\n\t\t\tvar object = objects[ o ].object;\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\trenderList.setObject( object );\r\n\r\n\t\t\t_modelMatrix = object.matrixWorld;\r\n\r\n\t\t\t_vertexCount = 0;\r\n\r\n\t\t\tif ( object instanceof Mesh ) {\r\n\r\n\t\t\t\tif ( geometry instanceof BufferGeometry ) {\r\n\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\r\n\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\r\n\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvar x = positions[ i ];\r\n\t\t\t\t\t\tvar y = positions[ i + 1 ];\r\n\t\t\t\t\t\tvar z = positions[ i + 2 ];\r\n\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphAttributes.position;\r\n\t\t\t\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\r\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\r\n\r\n\t\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t\t\t\tx += target.getX( i / 3 ) * influence;\r\n\t\t\t\t\t\t\t\t\ty += target.getY( i / 3 ) * influence;\r\n\t\t\t\t\t\t\t\t\tz += target.getZ( i / 3 ) * influence;\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tx += ( target.getX( i / 3 ) - positions[ i ] ) * influence;\r\n\t\t\t\t\t\t\t\t\ty += ( target.getY( i / 3 ) - positions[ i + 1 ] ) * influence;\r\n\t\t\t\t\t\t\t\t\tz += ( target.getZ( i / 3 ) - positions[ i + 2 ] ) * influence;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trenderList.pushVertex( x, y, z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attributes.color !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar colors = attributes.color.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t\t\tvar indices = geometry.index.array;\r\n\r\n\t\t\t\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\r\n\r\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\r\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\r\n\t\t\t\t\t\t\t\t\t : object.material;\r\n\r\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ], material );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var g = 0; g < groups.length; g ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ g ];\r\n\r\n\t\t\t\t\t\t\t\tmaterial = isMultiMaterial === true\r\n\t\t\t\t\t\t\t\t\t ? object.material[ group.materialIndex ]\r\n\t\t\t\t\t\t\t\t\t : object.material;\r\n\r\n\t\t\t\t\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2, material );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry instanceof Geometry ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\r\n\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tvar isMultiMaterial = Array.isArray( material );\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\t\t\tvar vertex = vertices[ v ];\r\n\r\n\t\t\t\t\t\t_vector3.copy( vertex );\r\n\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\r\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\r\n\r\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\r\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\r\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\tvar face = faces[ f ];\r\n\r\n\t\t\t\t\t\tmaterial = isMultiMaterial === true\r\n\t\t\t\t\t\t\t ? object.material[ face.materialIndex ]\r\n\t\t\t\t\t\t\t : object.material;\r\n\r\n\t\t\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\t\t\tvar side = material.side;\r\n\r\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\r\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\r\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\r\n\r\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\r\n\r\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\r\n\r\n\t\t\t\t\t\tif ( side !== DoubleSide ) {\r\n\r\n\t\t\t\t\t\t\tif ( side === FrontSide && visible === false ) continue;\r\n\t\t\t\t\t\t\tif ( side === BackSide && visible === true ) continue;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face = getNextFaceInPool();\r\n\r\n\t\t\t\t\t\t_face.id = object.id;\r\n\t\t\t\t\t\t_face.v1.copy( v1 );\r\n\t\t\t\t\t\t_face.v2.copy( v2 );\r\n\t\t\t\t\t\t_face.v3.copy( v3 );\r\n\r\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\r\n\r\n\t\t\t\t\t\tif ( visible === false && ( side === BackSide || side === DoubleSide ) ) {\r\n\r\n\t\t\t\t\t\t\t_face.normalModel.negate();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\r\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\r\n\r\n\t\t\t\t\t\t\tif ( visible === false && ( side === BackSide || side === DoubleSide ) ) {\r\n\r\n\t\t\t\t\t\t\t\tnormalModel.negate();\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\r\n\r\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\r\n\r\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_face.color = face.color;\r\n\t\t\t\t\t\t_face.material = material;\r\n\r\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\r\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\r\n\r\n\t\t\t\t\t\t_renderData.elements.push( _face );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof Line ) {\r\n\r\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\r\n\r\n\t\t\t\tif ( geometry instanceof BufferGeometry ) {\r\n\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\t\t\tif ( attributes.position !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( attributes.color !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tvar colors = attributes.color.array;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = colors.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushColor( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar step = object instanceof LineSegments ? 2 : 1;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry instanceof Geometry ) {\r\n\r\n\t\t\t\t\tvar vertices = object.geometry.vertices;\r\n\r\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\r\n\r\n\t\t\t\t\tv1 = getNextVertexInPool();\r\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\t\t\tvar step = object instanceof LineSegments ? 2 : 1;\r\n\r\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\t\t\tv1 = getNextVertexInPool();\r\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\r\n\r\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\r\n\r\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\r\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\r\n\r\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\r\n\r\n\t\t\t\t\t\t\t// Perform the perspective divide\r\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\r\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\r\n\r\n\t\t\t\t\t\t\t_line = getNextLineInPool();\r\n\r\n\t\t\t\t\t\t\t_line.id = object.id;\r\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\r\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\r\n\r\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\r\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\r\n\r\n\t\t\t\t\t\t\t_line.material = object.material;\r\n\r\n\t\t\t\t\t\t\tif ( object.material.vertexColors ) {\r\n\r\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\r\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof Points ) {\r\n\r\n\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\r\n\r\n\t\t\t\tif ( geometry instanceof Geometry ) {\r\n\r\n\t\t\t\t\tvar vertices = object.geometry.vertices;\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\t\t\t\tvar vertex = vertices[ v ];\r\n\r\n\t\t\t\t\t\t_vector4.set( vertex.x, vertex.y, vertex.z, 1 );\r\n\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\t\t\t\tpushPoint( _vector4, object, camera );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( geometry instanceof BufferGeometry ) {\r\n\r\n\t\t\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\t\t\tif ( attributes.position !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\t_vector4.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ], 1 );\r\n\t\t\t\t\t\t\t_vector4.applyMatrix4( _modelViewProjectionMatrix );\r\n\r\n\t\t\t\t\t\t\tpushPoint( _vector4, object, camera );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof Sprite ) {\r\n\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\r\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\r\n\r\n\t\t\t\tpushPoint( _vector4, object, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( sortElements === true ) {\r\n\r\n\t\t\t_renderData.elements.sort( painterSort );\r\n\r\n\t\t}\r\n\r\n\t\treturn _renderData;\r\n\r\n\t};\r\n\r\n\tfunction pushPoint( _vector4, object, camera ) {\r\n\r\n\t\tvar invW = 1 / _vector4.w;\r\n\r\n\t\t_vector4.z *= invW;\r\n\r\n\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\r\n\r\n\t\t\t_sprite = getNextSpriteInPool();\r\n\t\t\t_sprite.id = object.id;\r\n\t\t\t_sprite.x = _vector4.x * invW;\r\n\t\t\t_sprite.y = _vector4.y * invW;\r\n\t\t\t_sprite.z = _vector4.z;\r\n\t\t\t_sprite.renderOrder = object.renderOrder;\r\n\t\t\t_sprite.object = object;\r\n\r\n\t\t\t_sprite.rotation = object.rotation;\r\n\r\n\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\r\n\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\r\n\r\n\t\t\t_sprite.material = object.material;\r\n\r\n\t\t\t_renderData.elements.push( _sprite );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Pools\r\n\r\n\tfunction getNextObjectInPool() {\r\n\r\n\t\tif ( _objectCount === _objectPoolLength ) {\r\n\r\n\t\t\tvar object = new RenderableObject();\r\n\t\t\t_objectPool.push( object );\r\n\t\t\t_objectPoolLength ++;\r\n\t\t\t_objectCount ++;\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t\treturn _objectPool[ _objectCount ++ ];\r\n\r\n\t}\r\n\r\n\tfunction getNextVertexInPool() {\r\n\r\n\t\tif ( _vertexCount === _vertexPoolLength ) {\r\n\r\n\t\t\tvar vertex = new RenderableVertex();\r\n\t\t\t_vertexPool.push( vertex );\r\n\t\t\t_vertexPoolLength ++;\r\n\t\t\t_vertexCount ++;\r\n\t\t\treturn vertex;\r\n\r\n\t\t}\r\n\r\n\t\treturn _vertexPool[ _vertexCount ++ ];\r\n\r\n\t}\r\n\r\n\tfunction getNextFaceInPool() {\r\n\r\n\t\tif ( _faceCount === _facePoolLength ) {\r\n\r\n\t\t\tvar face = new RenderableFace();\r\n\t\t\t_facePool.push( face );\r\n\t\t\t_facePoolLength ++;\r\n\t\t\t_faceCount ++;\r\n\t\t\treturn face;\r\n\r\n\t\t}\r\n\r\n\t\treturn _facePool[ _faceCount ++ ];\r\n\r\n\r\n\t}\r\n\r\n\tfunction getNextLineInPool() {\r\n\r\n\t\tif ( _lineCount === _linePoolLength ) {\r\n\r\n\t\t\tvar line = new RenderableLine();\r\n\t\t\t_linePool.push( line );\r\n\t\t\t_linePoolLength ++;\r\n\t\t\t_lineCount ++;\r\n\t\t\treturn line;\r\n\r\n\t\t}\r\n\r\n\t\treturn _linePool[ _lineCount ++ ];\r\n\r\n\t}\r\n\r\n\tfunction getNextSpriteInPool() {\r\n\r\n\t\tif ( _spriteCount === _spritePoolLength ) {\r\n\r\n\t\t\tvar sprite = new RenderableSprite();\r\n\t\t\t_spritePool.push( sprite );\r\n\t\t\t_spritePoolLength ++;\r\n\t\t\t_spriteCount ++;\r\n\t\t\treturn sprite;\r\n\r\n\t\t}\r\n\r\n\t\treturn _spritePool[ _spriteCount ++ ];\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction painterSort( a, b ) {\r\n\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else if ( a.id !== b.id ) {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction clipLine( s1, s2 ) {\r\n\r\n\t\tvar alpha1 = 0, alpha2 = 1,\r\n\r\n\t\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\r\n\t\t\t// Z = -1 and Z = +1, respectively.\r\n\r\n\t\t\tbc1near = s1.z + s1.w,\r\n\t\t\tbc2near = s2.z + s2.w,\r\n\t\t\tbc1far = - s1.z + s1.w,\r\n\t\t\tbc2far = - s2.z + s2.w;\r\n\r\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\r\n\r\n\t\t\t// Both vertices lie entirely within all clip planes.\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\r\n\r\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// The line segment spans at least one clip plane.\r\n\r\n\t\t\tif ( bc1near < 0 ) {\r\n\r\n\t\t\t\t// v1 lies outside the near plane, v2 inside\r\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\r\n\r\n\t\t\t} else if ( bc2near < 0 ) {\r\n\r\n\t\t\t\t// v2 lies outside the near plane, v1 inside\r\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( bc1far < 0 ) {\r\n\r\n\t\t\t\t// v1 lies outside the far plane, v2 inside\r\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\r\n\r\n\t\t\t} else if ( bc2far < 0 ) {\r\n\r\n\t\t\t\t// v2 lies outside the far plane, v2 inside\r\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( alpha2 < alpha1 ) {\r\n\r\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\r\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\r\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\r\n\t\t\t\ts1.lerp( s2, alpha1 );\r\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { RenderableObject, RenderableFace, RenderableVertex, RenderableLine, RenderableSprite, Projector };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/renderers/Projector.js","import {\r\n\tBox2,\r\n\tCamera,\r\n\tColor,\r\n\tMatrix3,\r\n\tMatrix4,\r\n\tObject3D,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\nimport { Projector } from \"../renderers/Projector.js\";\r\nimport { RenderableFace } from \"../renderers/Projector.js\";\r\nimport { RenderableLine } from \"../renderers/Projector.js\";\r\nimport { RenderableSprite } from \"../renderers/Projector.js\";\r\n\r\nvar SVGObject = function ( node ) {\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.node = node;\r\n\r\n};\r\n\r\nSVGObject.prototype = Object.create( Object3D.prototype );\r\nSVGObject.prototype.constructor = SVGObject;\r\n\r\nvar SVGRenderer = function () {\r\n\r\n\tvar _this = this,\r\n\t\t_renderData, _elements, _lights,\r\n\t\t_projector = new Projector(),\r\n\t\t_svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' ),\r\n\t\t_svgWidth, _svgHeight, _svgWidthHalf, _svgHeightHalf,\r\n\r\n\t\t_v1, _v2, _v3,\r\n\r\n\t\t_clipBox = new Box2(),\r\n\t\t_elemBox = new Box2(),\r\n\r\n\t\t_color = new Color(),\r\n\t\t_diffuseColor = new Color(),\r\n\t\t_ambientLight = new Color(),\r\n\t\t_directionalLights = new Color(),\r\n\t\t_pointLights = new Color(),\r\n\t\t_clearColor = new Color(),\r\n\r\n\t\t_vector3 = new Vector3(), // Needed for PointLight\r\n\t\t_centroid = new Vector3(),\r\n\t\t_normal = new Vector3(),\r\n\t\t_normalViewMatrix = new Matrix3(),\r\n\r\n\t\t_viewMatrix = new Matrix4(),\r\n\t\t_viewProjectionMatrix = new Matrix4(),\r\n\r\n\t\t_svgPathPool = [],\r\n\t\t_svgNode, _pathCount = 0,\r\n\r\n\t\t_currentPath, _currentStyle,\r\n\r\n\t\t_quality = 1, _precision = null;\r\n\r\n\tthis.domElement = _svg;\r\n\r\n\tthis.autoClear = true;\r\n\tthis.sortObjects = true;\r\n\tthis.sortElements = true;\r\n\r\n\tthis.overdraw = 0.5;\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: {\r\n\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setQuality = function ( quality ) {\r\n\r\n\t\tswitch ( quality ) {\r\n\r\n\t\t\tcase \"high\": _quality = 1; break;\r\n\t\t\tcase \"low\": _quality = 0; break;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function () {};\r\n\r\n\tthis.setSize = function ( width, height ) {\r\n\r\n\t\t_svgWidth = width; _svgHeight = height;\r\n\t\t_svgWidthHalf = _svgWidth / 2; _svgHeightHalf = _svgHeight / 2;\r\n\r\n\t\t_svg.setAttribute( 'viewBox', ( - _svgWidthHalf ) + ' ' + ( - _svgHeightHalf ) + ' ' + _svgWidth + ' ' + _svgHeight );\r\n\t\t_svg.setAttribute( 'width', _svgWidth );\r\n\t\t_svg.setAttribute( 'height', _svgHeight );\r\n\r\n\t\t_clipBox.min.set( - _svgWidthHalf, - _svgHeightHalf );\r\n\t\t_clipBox.max.set( _svgWidthHalf, _svgHeightHalf );\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _svgWidth,\r\n\t\t\theight: _svgHeight\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setPrecision = function ( precision ) {\r\n\r\n\t\t_precision = precision;\r\n\r\n\t};\r\n\r\n\tfunction removeChildNodes() {\r\n\r\n\t\t_pathCount = 0;\r\n\r\n\t\twhile ( _svg.childNodes.length > 0 ) {\r\n\r\n\t\t\t_svg.removeChild( _svg.childNodes[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction convert( c ) {\r\n\r\n\t\treturn _precision !== null ? c.toFixed( _precision ) : c;\r\n\r\n\t}\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tremoveChildNodes();\r\n\t\t_svg.style.backgroundColor = _clearColor.getStyle();\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( camera instanceof Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.SVGRenderer.render: camera is not an instance of Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar background = scene.background;\r\n\r\n\t\tif ( background && background.isColor ) {\r\n\r\n\t\t\tremoveChildNodes();\r\n\t\t\t_svg.style.backgroundColor = background.getStyle();\r\n\r\n\t\t} else if ( this.autoClear === true ) {\r\n\r\n\t\t\tthis.clear();\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.render.vertices = 0;\r\n\t\t_this.info.render.faces = 0;\r\n\r\n\t\t_viewMatrix.copy( camera.matrixWorldInverse );\r\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\r\n\r\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\r\n\t\t_elements = _renderData.elements;\r\n\t\t_lights = _renderData.lights;\r\n\r\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\r\n\r\n\t\tcalculateLights( _lights );\r\n\r\n\t\t // reset accumulated path\r\n\r\n\t\t_currentPath = '';\r\n\t\t_currentStyle = '';\r\n\r\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\r\n\r\n\t\t\tvar element = _elements[ e ];\r\n\t\t\tvar material = element.material;\r\n\r\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\r\n\r\n\t\t\t_elemBox.makeEmpty();\r\n\r\n\t\t\tif ( element instanceof RenderableSprite ) {\r\n\r\n\t\t\t\t_v1 = element;\r\n\t\t\t\t_v1.x *= _svgWidthHalf; _v1.y *= - _svgHeightHalf;\r\n\r\n\t\t\t\trenderSprite( _v1, element, material );\r\n\r\n\t\t\t} else if ( element instanceof RenderableLine ) {\r\n\r\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\r\n\r\n\t\t\t\t_v1.positionScreen.x *= _svgWidthHalf; _v1.positionScreen.y *= - _svgHeightHalf;\r\n\t\t\t\t_v2.positionScreen.x *= _svgWidthHalf; _v2.positionScreen.y *= - _svgHeightHalf;\r\n\r\n\t\t\t\t_elemBox.setFromPoints( [ _v1.positionScreen, _v2.positionScreen ] );\r\n\r\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\r\n\r\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( element instanceof RenderableFace ) {\r\n\r\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\r\n\r\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\r\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\r\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\r\n\r\n\t\t\t\t_v1.positionScreen.x *= _svgWidthHalf; _v1.positionScreen.y *= - _svgHeightHalf;\r\n\t\t\t\t_v2.positionScreen.x *= _svgWidthHalf; _v2.positionScreen.y *= - _svgHeightHalf;\r\n\t\t\t\t_v3.positionScreen.x *= _svgWidthHalf; _v3.positionScreen.y *= - _svgHeightHalf;\r\n\r\n\t\t\t\tif ( this.overdraw > 0 ) {\r\n\r\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, this.overdraw );\r\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, this.overdraw );\r\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, this.overdraw );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_elemBox.setFromPoints( [\r\n\t\t\t\t\t_v1.positionScreen,\r\n\t\t\t\t\t_v2.positionScreen,\r\n\t\t\t\t\t_v3.positionScreen\r\n\t\t\t\t] );\r\n\r\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\r\n\r\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, element, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tflushPath(); // just to flush last svg:path\r\n\r\n\t\tscene.traverseVisible( function ( object ) {\r\n\r\n\t\t\t if ( object instanceof SVGObject ) {\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\r\n\r\n\t\t\t\tif ( _vector3.z < - 1 || _vector3.z > 1 ) return;\r\n\r\n\t\t\t\tvar x = _vector3.x * _svgWidthHalf;\r\n\t\t\t\tvar y = - _vector3.y * _svgHeightHalf;\r\n\r\n\t\t\t\tvar node = object.node;\r\n\t\t\t\tnode.setAttribute( 'transform', 'translate(' + x + ',' + y + ')' );\r\n\r\n\t\t\t\t_svg.appendChild( node );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction calculateLights( lights ) {\r\n\r\n\t\t_ambientLight.setRGB( 0, 0, 0 );\r\n\t\t_directionalLights.setRGB( 0, 0, 0 );\r\n\t\t_pointLights.setRGB( 0, 0, 0 );\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\t\t\tvar lightColor = light.color;\r\n\r\n\t\t\tif ( light.isAmbientLight ) {\r\n\r\n\t\t\t\t_ambientLight.r += lightColor.r;\r\n\t\t\t\t_ambientLight.g += lightColor.g;\r\n\t\t\t\t_ambientLight.b += lightColor.b;\r\n\r\n\t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\t_directionalLights.r += lightColor.r;\r\n\t\t\t\t_directionalLights.g += lightColor.g;\r\n\t\t\t\t_directionalLights.b += lightColor.b;\r\n\r\n\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\t_pointLights.r += lightColor.r;\r\n\t\t\t\t_pointLights.g += lightColor.g;\r\n\t\t\t\t_pointLights.b += lightColor.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction calculateLight( lights, position, normal, color ) {\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\t\t\tvar lightColor = light.color;\r\n\r\n\t\t\tif ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\r\n\r\n\t\t\t\tvar amount = normal.dot( lightPosition );\r\n\r\n\t\t\t\tif ( amount <= 0 ) continue;\r\n\r\n\t\t\t\tamount *= light.intensity;\r\n\r\n\t\t\t\tcolor.r += lightColor.r * amount;\r\n\t\t\t\tcolor.g += lightColor.g * amount;\r\n\t\t\t\tcolor.b += lightColor.b * amount;\r\n\r\n\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\r\n\r\n\t\t\t\tif ( amount <= 0 ) continue;\r\n\r\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\r\n\r\n\t\t\t\tif ( amount == 0 ) continue;\r\n\r\n\t\t\t\tamount *= light.intensity;\r\n\r\n\t\t\t\tcolor.r += lightColor.r * amount;\r\n\t\t\t\tcolor.g += lightColor.g * amount;\r\n\t\t\t\tcolor.b += lightColor.b * amount;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderSprite( v1, element, material ) {\r\n\r\n\t\tvar scaleX = element.scale.x * _svgWidthHalf;\r\n\t\tvar scaleY = element.scale.y * _svgHeightHalf;\r\n\r\n\t\tif ( material.isPointsMaterial ) {\r\n\r\n\t\t\tscaleX *= material.size;\r\n\t\t\tscaleY *= material.size;\r\n\r\n\t\t}\r\n\r\n\t\tvar path = 'M' + convert( v1.x - scaleX * 0.5 ) + ',' + convert( v1.y - scaleY * 0.5 ) + 'h' + convert( scaleX ) + 'v' + convert( scaleY ) + 'h' + convert( - scaleX ) + 'z';\r\n\t\tvar style = \"\";\r\n\r\n\t\tif ( material.isSpriteMaterial || material.isPointsMaterial ) {\r\n\r\n\t\t\tstyle = 'fill:' + material.color.getStyle() + ';fill-opacity:' + material.opacity;\r\n\r\n\t\t}\r\n\r\n\t\taddPath( style, path );\r\n\r\n\t}\r\n\r\n\tfunction renderLine( v1, v2, element, material ) {\r\n\r\n\t\tvar path = 'M' + convert( v1.positionScreen.x ) + ',' + convert( v1.positionScreen.y ) + 'L' + convert( v2.positionScreen.x ) + ',' + convert( v2.positionScreen.y );\r\n\r\n\t\tif ( material.isLineBasicMaterial ) {\r\n\r\n\t\t\tvar style = 'fill:none;stroke:' + material.color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.linewidth + ';stroke-linecap:' + material.linecap;\r\n\r\n\t\t\tif ( material.isLineDashedMaterial ) {\r\n\r\n\t\t\t\tstyle = style + ';stroke-dasharray:' + material.dashSize + \",\" + material.gapSize;\r\n\r\n\t\t\t}\r\n\r\n\t\t\taddPath( style, path );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderFace3( v1, v2, v3, element, material ) {\r\n\r\n\t\t_this.info.render.vertices += 3;\r\n\t\t_this.info.render.faces ++;\r\n\r\n\t\tvar path = 'M' + convert( v1.positionScreen.x ) + ',' + convert( v1.positionScreen.y ) + 'L' + convert( v2.positionScreen.x ) + ',' + convert( v2.positionScreen.y ) + 'L' + convert( v3.positionScreen.x ) + ',' + convert( v3.positionScreen.y ) + 'z';\r\n\t\tvar style = '';\r\n\r\n\t\tif ( material.isMeshBasicMaterial ) {\r\n\r\n\t\t\t_color.copy( material.color );\r\n\r\n\t\t\tif ( material.vertexColors ) {\r\n\r\n\t\t\t\t_color.multiply( element.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) {\r\n\r\n\t\t\t_diffuseColor.copy( material.color );\r\n\r\n\t\t\tif ( material.vertexColors ) {\r\n\r\n\t\t\t\t_diffuseColor.multiply( element.color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_color.copy( _ambientLight );\r\n\r\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\r\n\r\n\t\t\tcalculateLight( _lights, _centroid, element.normalModel, _color );\r\n\r\n\t\t\t_color.multiply( _diffuseColor ).add( material.emissive );\r\n\r\n\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix ).normalize();\r\n\r\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.wireframe ) {\r\n\r\n\t\t\tstyle = 'fill:none;stroke:' + _color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.wireframeLinewidth + ';stroke-linecap:' + material.wireframeLinecap + ';stroke-linejoin:' + material.wireframeLinejoin;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstyle = 'fill:' + _color.getStyle() + ';fill-opacity:' + material.opacity;\r\n\r\n\t\t}\r\n\r\n\t\taddPath( style, path );\r\n\r\n\t}\r\n\r\n\t// Hide anti-alias gaps\r\n\r\n\tfunction expand( v1, v2, pixels ) {\r\n\r\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\r\n\t\t\tdet = x * x + y * y, idet;\r\n\r\n\t\tif ( det === 0 ) return;\r\n\r\n\t\tidet = pixels / Math.sqrt( det );\r\n\r\n\t\tx *= idet; y *= idet;\r\n\r\n\t\tv2.x += x; v2.y += y;\r\n\t\tv1.x -= x; v1.y -= y;\r\n\r\n\t}\r\n\r\n\tfunction addPath( style, path ) {\r\n\r\n\t\tif ( _currentStyle === style ) {\r\n\r\n\t\t\t_currentPath += path;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tflushPath();\r\n\r\n\t\t\t_currentStyle = style;\r\n\t\t\t_currentPath = path;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction flushPath() {\r\n\r\n\t\tif ( _currentPath ) {\r\n\r\n\t\t\t_svgNode = getPathNode( _pathCount ++ );\r\n\t\t\t_svgNode.setAttribute( 'd', _currentPath );\r\n\t\t\t_svgNode.setAttribute( 'style', _currentStyle );\r\n\t\t\t_svg.appendChild( _svgNode );\r\n\r\n\t\t}\r\n\r\n\t\t_currentPath = '';\r\n\t\t_currentStyle = '';\r\n\r\n\t}\r\n\r\n\tfunction getPathNode( id ) {\r\n\r\n\t\tif ( _svgPathPool[ id ] == null ) {\r\n\r\n\t\t\t_svgPathPool[ id ] = document.createElementNS( 'http://www.w3.org/2000/svg', 'path' );\r\n\r\n\t\t\tif ( _quality == 0 ) {\r\n\r\n\t\t\t\t_svgPathPool[ id ].setAttribute( 'shape-rendering', 'crispEdges' ); //optimizeSpeed\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn _svgPathPool[ id ];\r\n\r\n\t\t}\r\n\r\n\t\treturn _svgPathPool[ id ];\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { SVGObject, SVGRenderer };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/renderers/SVGRenderer.js","<template>\r\n    <div class=\"svgSandbox-container\">\r\n        <div id=\"line-cont\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { SVGRenderer, SVGObject } from '@/components/jsm/renderers/SVGRenderer.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            stats: null,\r\n\t\t\tgroup: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$moduleTHREE.PerspectiveCamera( 75, this.$webglInnerWidth / window.innerHeight, 1, 10000 )\r\n            this.camera.position.z = 500\r\n            this.scene = new this.$moduleTHREE.Scene()\r\n            this.scene.background = new this.$moduleTHREE.Color(0xf0f0f0)\r\n            // QRCODE\r\n            var loader = new this.$moduleTHREE.BufferGeometryLoader()\r\n            loader.load('static/models/json/QRCode_buffergeometry.json', (geometry) => {\r\n                mesh = new this.$moduleTHREE.Mesh(geometry, new this.$moduleTHREE.MeshLambertMaterial({ vertexColors: true }))\r\n                mesh.scale.x = mesh.scale.y = mesh.scale.z = 2\r\n                this.scene.add(mesh)\r\n            })\r\n            // CUBES\r\n            var boxGeometry = new this.$moduleTHREE.BoxBufferGeometry(100, 100, 100)\r\n            var mesh = new this.$moduleTHREE.Mesh(boxGeometry, new this.$moduleTHREE.MeshBasicMaterial({ color: 0x0000ff, opacity: 0.5, transparent: true }))\r\n            mesh.position.x = 500\r\n            mesh.rotation.x = Math.random()\r\n            mesh.rotation.y = Math.random()\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = 2\r\n            this.scene.add(mesh)\r\n            mesh = new this.$moduleTHREE.Mesh(boxGeometry, new this.$moduleTHREE.MeshBasicMaterial({ color: Math.random() * 0xffffff }))\r\n            mesh.position.x = 500\r\n            mesh.position.y = 500\r\n            mesh.rotation.x = Math.random()\r\n            mesh.rotation.y = Math.random()\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = 2\r\n            this.scene.add(mesh)\r\n            // PLANE\r\n            mesh = new this.$moduleTHREE.Mesh(new this.$moduleTHREE.PlaneBufferGeometry(100, 100), new this.$moduleTHREE.MeshBasicMaterial({ color: Math.random() * 0xffffff, side: this.$moduleTHREE.DoubleSide }))\r\n            mesh.position.y = - 500\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = 2\r\n            this.scene.add(mesh)\r\n            // CYLINDER\r\n            mesh = new this.$moduleTHREE.Mesh(new this.$moduleTHREE.CylinderBufferGeometry(20, 100, 200, 10), new this.$moduleTHREE.MeshBasicMaterial({ color: Math.random() * 0xffffff }))\r\n            mesh.position.x = - 500\r\n            mesh.rotation.x = - Math.PI / 2\r\n            mesh.scale.x = mesh.scale.y = mesh.scale.z = 2\r\n            this.scene.add(mesh)\r\n            // POLYFIELD\r\n            var geometry = new this.$moduleTHREE.BufferGeometry()\r\n            var material = new this.$moduleTHREE.MeshBasicMaterial({ vertexColors: true, side: this.$moduleTHREE.DoubleSide })\r\n            var v = new this.$moduleTHREE.Vector3()\r\n            var v0 = new this.$moduleTHREE.Vector3()\r\n            var v1 = new this.$moduleTHREE.Vector3()\r\n            var v2 = new this.$moduleTHREE.Vector3()\r\n            var color = new this.$moduleTHREE.Color()\r\n            var vertices = []\r\n            var colors = []\r\n            for (var i = 0; i < 100; i ++) {\r\n                v.set(\r\n                    Math.random() * 1000 - 500,\r\n                    Math.random() * 1000 - 500,\r\n                    Math.random() * 1000 - 500\r\n                )\r\n                v0.set(\r\n                    Math.random() * 100 - 50,\r\n                    Math.random() * 100 - 50,\r\n                    Math.random() * 100 - 50\r\n                )\r\n                v1.set(\r\n                    Math.random() * 100 - 50,\r\n                    Math.random() * 100 - 50,\r\n                    Math.random() * 100 - 50\r\n                )\r\n                v2.set(\r\n                    Math.random() * 100 - 50,\r\n                    Math.random() * 100 - 50,\r\n                    Math.random() * 100 - 50\r\n                )\r\n                v0.add(v)\r\n                v1.add(v)\r\n                v2.add(v)\r\n                color.setHex(Math.random() * 0xffffff)\r\n                // create a single triangle\r\n                vertices.push(v0.x, v0.y, v0.z)\r\n                vertices.push(v1.x, v1.y, v1.z)\r\n                vertices.push(v2.x, v2.y, v2.z)\r\n                colors.push(color.r, color.g, color.b)\r\n                colors.push(color.r, color.g, color.b)\r\n                colors.push(color.r, color.g, color.b)\r\n            }\r\n            geometry.setAttribute('position', new this.$moduleTHREE.Float32BufferAttribute(vertices, 3))\r\n            geometry.setAttribute('color', new this.$moduleTHREE.Float32BufferAttribute(colors, 3))\r\n            this.group = new this.$moduleTHREE.Mesh(geometry, material)\r\n            this.group.scale.set(2, 2, 2)\r\n            console.log(this.group)\r\n            this.scene.add(this.group)\r\n            // SPRITES\r\n            for (var i = 0; i < 50; i ++) {\r\n                var material = new this.$moduleTHREE.SpriteMaterial({ color: Math.random() * 0xffffff })\r\n                var sprite = new this.$moduleTHREE.Sprite(material)\r\n                sprite.position.x = Math.random() * 1000 - 500\r\n                sprite.position.y = Math.random() * 1000 - 500\r\n                sprite.position.z = Math.random() * 1000 - 500\r\n                sprite.scale.set(64, 64, 1)\r\n                this.scene.add(sprite)\r\n            }\r\n            // // CUSTOM\r\n            var node = document.createElementNS('http://www.w3.org/2000/svg', 'circle')\r\n            node.setAttribute('stroke', 'black')\r\n            node.setAttribute('fill', 'red')\r\n            node.setAttribute('r', '40')\r\n            for (var i = 0; i < 50; i ++) {\r\n                var object = new SVGObject(node.cloneNode())\r\n                object.position.x = Math.random() * 1000 - 500\r\n                object.position.y = Math.random() * 1000 - 500\r\n                object.position.z = Math.random() * 1000 - 500\r\n                this.scene.add(object)\r\n            }\r\n            // CUSTOM FROM FILE\r\n            var fileLoader = new this.$moduleTHREE.FileLoader()\r\n            fileLoader.load('static/models/svg/hexagon.svg', (svg) => {\r\n                var node = document.createElementNS('http://www.w3.org/2000/svg', 'g')\r\n                var parser = new DOMParser()\r\n                var doc = parser.parseFromString(svg, 'image/svg+xml')\r\n                node.appendChild(doc.documentElement)\r\n                var object = new SVGObject(node)\r\n                object.position.x = 500\r\n                this.scene.add(object)\r\n            })\r\n            // LIGHTS\r\n            var ambient = new this.$moduleTHREE.AmbientLight(0x80ffff)\r\n            this.scene.add(ambient)\r\n            var directional = new this.$moduleTHREE.DirectionalLight(0xffff00)\r\n            directional.position.set(- 1, 0.5, 0)\r\n            this.scene.add(directional)\r\n            this.renderer = new SVGRenderer()\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.setQuality('low')\r\n            document.getElementsByClassName('svgSandbox-container')[0].appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('svgSandbox-container')[0].appendChild(this.stats.dom)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            var time = Date.now() * 0.0002\r\n            this.camera.position.x = Math.sin(time) * 500\r\n            this.camera.position.z = Math.cos(time) * 500\r\n            this.camera.lookAt(this.scene.position)\r\n            this.group.rotation.x += 0.01\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.svgSandbox-container {\r\n    width: 100%;\r\n}\r\n.svgSandbox-container svg {\r\n    display: block;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/svg/svgSandbox.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"svgSandbox-container\"},[_c('div',{attrs:{\"id\":\"line-cont\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-85b591de\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/svg/svgSandbox.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-85b591de\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./svgSandbox.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./svgSandbox.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./svgSandbox.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-85b591de\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./svgSandbox.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-85b591de\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/svg/svgSandbox.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}