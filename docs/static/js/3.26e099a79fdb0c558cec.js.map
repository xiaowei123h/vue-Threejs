{"version":3,"sources":["webpack:///./src/components/jsm/lines/LineSegmentsGeometry.js","webpack:///./src/components/jsm/lines/LineMaterial.js","webpack:///./src/components/jsm/lines/Wireframe.js","webpack:///./src/components/jsm/lines/WireframeGeometry2.js","webpack:///src/views/lines/webglLinesFatWireframe.vue","webpack:///./src/views/lines/webglLinesFatWireframe.vue?b293","webpack:///./src/views/lines/webglLinesFatWireframe.vue"],"names":["__webpack_require__","d","__webpack_exports__","LineSegmentsGeometry","vector","box","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","InstancedBufferGeometry","call","this","type","setIndex","setAttribute","Float32BufferAttribute","prototype","Object","assign","create","constructor","isLineSegmentsGeometry","applyMatrix4","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","position","fromEdgesGeometry","fromMesh","mesh","WireframeGeometry","fromLineSegments","isGeometry","vertices","isBufferGeometry","Box3","setFromBufferAttribute","union","Vector3","Sphere","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","console","error","toJSON","applyMatrix","warn","LineMaterial","UniformsLib","line","linewidth","value","resolution","Vector2","dashScale","dashSize","dashOffset","gapSize","opacity","ShaderLib","uniforms","UniformsUtils","merge","common","fog","vertexShader","fragmentShader","parameters","ShaderMaterial","clone","clipping","dashed","defineProperties","color","enumerable","get","diffuse","set","copy","setValues","isLineMaterial","Wireframe","material","Mesh","random","isWireframe","computeLineDistances","lineDistances","data","j","l","distanceTo","instanceDistanceBuffer","WireframeGeometry2","isWireframeGeometry2","webglLinesFatWireframe","wireframe","renderer","scene","camera","camera2","controls","wireframe1","matLine","matLineBasic","matLineDashed","stats","gui","insetWidth","insetHeight","mounted","init","animate","beforeDestroy","hide","methods","$THREE","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","Scene","PerspectiveCamera","OrbitControls","minDistance","maxDistance","geo","IcosahedronBufferGeometry","WireframeGeometry2_WireframeGeometry2","Wireframe_Wireframe","scale","add","LineBasicMaterial","LineDashedMaterial","LineSegments","visible","addEventListener","onWindowResize","$Stats","dom","style","left","initGui","$onWindowResize","aspect","updateProjectionMatrix","requestAnimationFrame","update","setViewport","render","clearDepth","setScissorTest","setScissor","quaternion","_this","dat_gui_module","param","line type","width (px)","dash scale","dash / gap","LineGeometry","gl.LINE","onChange","val","defines","USE_DASH","2 : 1","1 : 1","1 : 2","lines_webglLinesFatWireframe","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/3.26e099a79fdb0c558cec.js","sourcesContent":["import {\r\n\tBox3,\r\n\tFloat32BufferAttribute,\r\n\tInstancedBufferGeometry,\r\n\tInstancedInterleavedBuffer,\r\n\tInterleavedBufferAttribute,\r\n\tSphere,\r\n\tVector3,\r\n\tWireframeGeometry\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar LineSegmentsGeometry = function () {\r\n\r\n\tInstancedBufferGeometry.call( this );\r\n\r\n\tthis.type = 'LineSegmentsGeometry';\r\n\r\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\r\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\r\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\r\n\r\n\tthis.setIndex( index );\r\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\r\n\r\n\tconstructor: LineSegmentsGeometry,\r\n\r\n\tisLineSegmentsGeometry: true,\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tvar start = this.attributes.instanceStart;\r\n\t\tvar end = this.attributes.instanceEnd;\r\n\r\n\t\tif ( start !== undefined ) {\r\n\r\n\t\t\tstart.applyMatrix4( matrix );\r\n\r\n\t\t\tend.applyMatrix4( matrix );\r\n\r\n\t\t\tstart.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetPositions: function ( array ) {\r\n\r\n\t\tvar lineSegments;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\tlineSegments = array;\r\n\r\n\t\t} else if ( Array.isArray( array ) ) {\r\n\r\n\t\t\tlineSegments = new Float32Array( array );\r\n\r\n\t\t}\r\n\r\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\r\n\r\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\r\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\r\n\r\n\t\t//\r\n\r\n\t\tthis.computeBoundingBox();\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetColors: function ( array ) {\r\n\r\n\t\tvar colors;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\tcolors = array;\r\n\r\n\t\t} else if ( Array.isArray( array ) ) {\r\n\r\n\t\t\tcolors = new Float32Array( array );\r\n\r\n\t\t}\r\n\r\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\r\n\r\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\r\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromWireframeGeometry: function ( geometry ) {\r\n\r\n\t\tthis.setPositions( geometry.attributes.position.array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromEdgesGeometry: function ( geometry ) {\r\n\r\n\t\tthis.setPositions( geometry.attributes.position.array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromMesh: function ( mesh ) {\r\n\r\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\r\n\r\n\t\t// set colors, maybe\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromLineSegments: function ( lineSegments ) {\r\n\r\n\t\tvar geometry = lineSegments.geometry;\r\n\r\n\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\tthis.setPositions( geometry.vertices );\r\n\r\n\t\t} else if ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\r\n\r\n\t\t}\r\n\r\n\t\t// set colors, maybe\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar box = new Box3();\r\n\r\n\t\treturn function computeBoundingBox() {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar start = this.attributes.instanceStart;\r\n\t\t\tvar end = this.attributes.instanceEnd;\r\n\r\n\t\t\tif ( start !== undefined && end !== undefined ) {\r\n\r\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\r\n\r\n\t\t\t\tbox.setFromBufferAttribute( end );\r\n\r\n\t\t\t\tthis.boundingBox.union( box );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar start = this.attributes.instanceStart;\r\n\t\t\tvar end = this.attributes.instanceEnd;\r\n\r\n\t\t\tif ( start !== undefined && end !== undefined ) {\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( center );\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\t// todo\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\r\n\r\n\t\treturn this.applyMatrix4( matrix );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { LineSegmentsGeometry };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/LineSegmentsGeometry.js","import {\r\n\tShaderLib,\r\n\tShaderMaterial,\r\n\tUniformsLib,\r\n\tUniformsUtils,\r\n\tVector2\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  linewidth: <float>,\r\n *  dashed: <boolean>,\r\n *  dashScale: <float>,\r\n *  dashSize: <float>,\r\n *  dashOffset: <float>,\r\n *  gapSize: <float>,\r\n *  resolution: <Vector2>, // to be set by renderer\r\n * }\r\n */\r\n\r\nUniformsLib.line = {\r\n\r\n\tlinewidth: { value: 1 },\r\n\tresolution: { value: new Vector2( 1, 1 ) },\r\n\tdashScale: { value: 1 },\r\n\tdashSize: { value: 1 },\r\n\tdashOffset: { value: 0 },\r\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\r\n\topacity: { value: 1 }\r\n\r\n};\r\n\r\nShaderLib[ 'line' ] = {\r\n\r\n\tuniforms: UniformsUtils.merge( [\r\n\t\tUniformsLib.common,\r\n\t\tUniformsLib.fog,\r\n\t\tUniformsLib.line\r\n\t] ),\r\n\r\n\tvertexShader:\r\n\t\t`\r\n\t\t#include <common>\r\n\t\t#include <color_pars_vertex>\r\n\t\t#include <fog_pars_vertex>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\t\t#include <clipping_planes_pars_vertex>\r\n\r\n\t\tuniform float linewidth;\r\n\t\tuniform vec2 resolution;\r\n\r\n\t\tattribute vec3 instanceStart;\r\n\t\tattribute vec3 instanceEnd;\r\n\r\n\t\tattribute vec3 instanceColorStart;\r\n\t\tattribute vec3 instanceColorEnd;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\t#ifdef USE_DASH\r\n\r\n\t\t\tuniform float dashScale;\r\n\t\t\tattribute float instanceDistanceStart;\r\n\t\t\tattribute float instanceDistanceEnd;\r\n\t\t\tvarying float vLineDistance;\r\n\r\n\t\t#endif\r\n\r\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\r\n\r\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\r\n\r\n\t\t\t// conservative estimate of the near plane\r\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\r\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\r\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\r\n\r\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\r\n\r\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#ifdef USE_COLOR\r\n\r\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tfloat aspect = resolution.x / resolution.y;\r\n\r\n\t\t\tvUv = uv;\r\n\r\n\t\t\t// camera space\r\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\r\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\r\n\r\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\r\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\r\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\r\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\r\n\r\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\r\n\r\n\t\t\tif ( perspective ) {\r\n\r\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\r\n\r\n\t\t\t\t\ttrimSegment( start, end );\r\n\r\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\r\n\r\n\t\t\t\t\ttrimSegment( end, start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// clip space\r\n\t\t\tvec4 clipStart = projectionMatrix * start;\r\n\t\t\tvec4 clipEnd = projectionMatrix * end;\r\n\r\n\t\t\t// ndc space\r\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\r\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\r\n\r\n\t\t\t// direction\r\n\t\t\tvec2 dir = ndcEnd - ndcStart;\r\n\r\n\t\t\t// account for clip-space aspect ratio\r\n\t\t\tdir.x *= aspect;\r\n\t\t\tdir = normalize( dir );\r\n\r\n\t\t\t// perpendicular to dir\r\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\r\n\r\n\t\t\t// undo aspect ratio adjustment\r\n\t\t\tdir.x /= aspect;\r\n\t\t\toffset.x /= aspect;\r\n\r\n\t\t\t// sign flip\r\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\r\n\r\n\t\t\t// endcaps\r\n\t\t\tif ( position.y < 0.0 ) {\r\n\r\n\t\t\t\toffset += - dir;\r\n\r\n\t\t\t} else if ( position.y > 1.0 ) {\r\n\r\n\t\t\t\toffset += dir;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// adjust for linewidth\r\n\t\t\toffset *= linewidth;\r\n\r\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\r\n\t\t\toffset /= resolution.y;\r\n\r\n\t\t\t// select end\r\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\r\n\r\n\t\t\t// back to clip space\r\n\t\t\toffset *= clip.w;\r\n\r\n\t\t\tclip.xy += offset;\r\n\r\n\t\t\tgl_Position = clip;\r\n\r\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t#include <clipping_planes_vertex>\r\n\t\t\t#include <fog_vertex>\r\n\r\n\t\t}\r\n\t\t`,\r\n\r\n\tfragmentShader:\r\n\t\t`\r\n\t\tuniform vec3 diffuse;\r\n\t\tuniform float opacity;\r\n\r\n\t\t#ifdef USE_DASH\r\n\r\n\t\t\tuniform float dashSize;\r\n\t\t\tuniform float dashOffset;\r\n\t\t\tuniform float gapSize;\r\n\r\n\t\t#endif\r\n\r\n\t\tvarying float vLineDistance;\r\n\r\n\t\t#include <common>\r\n\t\t#include <color_pars_fragment>\r\n\t\t#include <fog_pars_fragment>\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\t\t#include <clipping_planes_pars_fragment>\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <clipping_planes_fragment>\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\r\n\r\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\r\n\r\n\t\t\t\tfloat a = vUv.x;\r\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\r\n\t\t\t\tfloat len2 = a * a + b * b;\r\n\r\n\t\t\t\tif ( len2 > 1.0 ) discard;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\t\t\t#include <color_fragment>\r\n\r\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <encodings_fragment>\r\n\t\t\t#include <fog_fragment>\r\n\t\t\t#include <premultiplied_alpha_fragment>\r\n\r\n\t\t}\r\n\t\t`\r\n};\r\n\r\nvar LineMaterial = function ( parameters ) {\r\n\r\n\tShaderMaterial.call( this, {\r\n\r\n\t\ttype: 'LineMaterial',\r\n\r\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\r\n\r\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\r\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\r\n\r\n\t\tclipping: true // required for clipping support\r\n\r\n\t} );\r\n\r\n\tthis.dashed = false;\r\n\r\n\tObject.defineProperties( this, {\r\n\r\n\t\tcolor: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.diffuse.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.diffuse.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tlinewidth: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.linewidth.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.linewidth.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdashScale: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.dashScale.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.dashScale.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdashSize: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.dashSize.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.dashSize.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdashOffset: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.dashOffset.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.dashOffset.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgapSize: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.gapSize.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.gapSize.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\topacity: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.opacity.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.opacity.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tresolution: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.resolution.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\nLineMaterial.prototype.constructor = LineMaterial;\r\n\r\nLineMaterial.prototype.isLineMaterial = true;\r\n\r\nexport { LineMaterial };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/LineMaterial.js","import {\r\n\tInstancedInterleavedBuffer,\r\n\tInterleavedBufferAttribute,\r\n\tMesh,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\r\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\r\n\r\nvar Wireframe = function ( geometry, material ) {\r\n\r\n\tMesh.call( this );\r\n\r\n\tthis.type = 'Wireframe';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new LineSegmentsGeometry();\r\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nWireframe.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\tconstructor: Wireframe,\r\n\r\n\tisWireframe: true,\r\n\r\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\r\n\r\n\t\tvar start = new Vector3();\r\n\t\tvar end = new Vector3();\r\n\r\n\t\treturn function computeLineDistances() {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\r\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\r\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\r\n\r\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\r\n\r\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\r\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\r\n\r\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\r\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\r\n\r\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\r\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}() )\r\n\r\n} );\r\n\r\nexport { Wireframe };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/Wireframe.js","import {\r\n\tWireframeGeometry\r\n} from \"@/components/build/three.module.js\";\r\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\r\n\r\nvar WireframeGeometry2 = function ( geometry ) {\r\n\r\n\tLineSegmentsGeometry.call( this );\r\n\r\n\tthis.type = 'WireframeGeometry2';\r\n\r\n\tthis.fromWireframeGeometry( new WireframeGeometry( geometry ) );\r\n\r\n\t// set colors, maybe\r\n\r\n};\r\n\r\nWireframeGeometry2.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\r\n\r\n\tconstructor: WireframeGeometry2,\r\n\r\n\tisWireframeGeometry2: true\r\n\r\n} );\r\n\r\nexport { WireframeGeometry2 };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/WireframeGeometry2.js","<template>\r\n    <div class=\"webglLinesFatWireframe-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\">three.js</a> - fat lines</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { LineMaterial } from '@/components/jsm/lines/LineMaterial.js'\r\nimport { Wireframe } from '@/components/jsm/lines/Wireframe.js'\r\nimport { WireframeGeometry2 } from '@/components/jsm/lines/WireframeGeometry2.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            wireframe: null,\r\n            renderer: null,\r\n            scene: null,\r\n            camera: null,\r\n            camera2: null,\r\n            controls: null,\r\n\t\t\twireframe1: null,\r\n            matLine: null,\r\n            matLineBasic: null,\r\n            matLineDashed: null,\r\n\t\t\tstats: null,\r\n\t\t\tgui: null,\r\n\t\t\t// viewport\r\n\t\t\tinsetWidth: null,\r\n\t\t\tinsetHeight: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setClearColor(0x000000, 0.0)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglLinesFatWireframe-container')[0].appendChild(this.renderer.domElement)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set(- 50, 0, 50)\r\n            this.camera2 = new this.$THREE.PerspectiveCamera(40, 1, 1, 1000)\r\n            this.camera2.position.copy(this.camera.position)\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.controls.minDistance = 10\r\n            this.controls.maxDistance = 500\r\n            // Wireframe (WireframeGeometry2, LineMaterial)\r\n            var geo = new this.$THREE.IcosahedronBufferGeometry(20, 1)\r\n            var geometry = new WireframeGeometry2(geo)\r\n            this.matLine = new LineMaterial({\r\n                color: 0x4080ff,\r\n                linewidth: 5, // in pixels\r\n                //resolution:  // to be set by renderer, eventually\r\n                dashed: false\r\n            })\r\n            this.wireframe = new Wireframe(geometry, this.matLine)\r\n            this.wireframe.computeLineDistances()\r\n            this.wireframe.scale.set(1, 1, 1)\r\n            this.scene.add(this.wireframe)\r\n            // Line (this.$THREE.WireframeGeometry, this.$THREE.LineBasicMaterial) - rendered with gl.LINE\r\n            geo = new this.$THREE.WireframeGeometry(geo)\r\n            this.matLineBasic = new this.$THREE.LineBasicMaterial({ color: 0x4080ff })\r\n            this.matLineDashed = new this.$THREE.LineDashedMaterial({ scale: 2, dashSize: 1, gapSize: 1 })\r\n            this.wireframe1 = new this.$THREE.LineSegments(geo, this.matLineBasic)\r\n            this.wireframe1.computeLineDistances()\r\n            this.wireframe1.visible = false\r\n            this.scene.add(this.wireframe1)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            this.onWindowResize()\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglLinesFatWireframe-container')[0].appendChild(this.stats.dom)\r\n            this.initGui()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.insetWidth = window.innerHeight / 4 // square\r\n            this.insetHeight = window.innerHeight / 4\r\n            this.camera2.aspect = this.insetWidth / this.insetHeight\r\n            this.camera2.updateProjectionMatrix()\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.stats.update()\r\n            // main scene\r\n            this.renderer.setClearColor(0x000000, 0)\r\n            this.renderer.setViewport(0, 0, this.$webglInnerWidth, window.innerHeight)\r\n            // this.renderer will set this eventually\r\n            this.matLine.resolution.set(this.$webglInnerWidth, window.innerHeight) // resolution of the viewport\r\n            this.renderer.render(this.scene, this.camera)\r\n            // inset scene\r\n            this.renderer.setClearColor(0x222222, 1)\r\n            this.renderer.clearDepth() // important!\r\n            this.renderer.setScissorTest(true)\r\n            this.renderer.setScissor(20, 20, this.insetWidth, this.insetHeight)\r\n            this.renderer.setViewport(20, 20, this.insetWidth, this.insetHeight)\r\n            this.camera2.position.copy(this.camera.position)\r\n            this.camera2.quaternion.copy(this.camera.quaternion)\r\n            // this.renderer will set this eventually\r\n            this.matLine.resolution.set(this.insetWidth, this.insetHeight) // resolution of the inset viewport\r\n            this.renderer.render(this.scene, this.camera2)\r\n            this.renderer.setScissorTest(false)\r\n        },\r\n        initGui() {\r\n            this.gui = new GUI()\r\n            var param = {\r\n                'line type': 0,\r\n                'width (px)': 5,\r\n                'dashed': false,\r\n                'dash scale': 1,\r\n                'dash / gap': 1\r\n            }\r\n            this.gui.add(param, 'line type', { 'LineGeometry': 0, 'gl.LINE': 1 }).onChange((val) => {\r\n                switch (val) {\r\n                    case '0':\r\n                        this.wireframe.visible = true\r\n                        this.wireframe1.visible = false\r\n                        break\r\n                    case '1':\r\n                        this.wireframe.visible = false\r\n                        this.wireframe1.visible = true\r\n                        break\r\n                }\r\n            })\r\n            this.gui.add(param, 'width (px)', 1, 10).onChange((val) => {\r\n                this.matLine.linewidth = val\r\n            })\r\n            this.gui.add(param, 'dashed').onChange((val) => {\r\n                this.matLine.dashed = val\r\n                // dashed is implemented as a defines -- not as a uniform. this could be changed.\r\n                // ... or this.$THREE.LineDashedMaterial could be implemented as a separate material\r\n                // temporary hack - renderer should do this eventually\r\n                if (val) this.matLine.defines.USE_DASH = \"\"; else delete this.matLine.defines.USE_DASH\r\n                this.matLine.needsUpdate = true\r\n                this.wireframe1.material = val ? this.matLineDashed : this.matLineBasic\r\n            })\r\n            this.gui.add(param, 'dash scale', 0.5, 1, 0.1).onChange((val) => {\r\n                this.matLine.dashScale = val\r\n                this.matLineDashed.scale = val\r\n            })\r\n            this.gui.add(param, 'dash / gap', { '2 : 1': 0, '1 : 1': 1, '1 : 2': 2 }).onChange((val) => {\r\n                switch (val) {\r\n                    case '0':\r\n                        this.matLine.dashSize = 2\r\n                        this.matLine.gapSize = 1\r\n                        this.matLineDashed.dashSize = 2\r\n                        this.matLineDashed.gapSize = 1\r\n                        break\r\n                    case '1':\r\n                        this.matLine.dashSize = 1\r\n                        this.matLine.gapSize = 1\r\n                        this.matLineDashed.dashSize = 1\r\n                        this.matLineDashed.gapSize = 1\r\n                        break\r\n                    case '2':\r\n                        this.matLine.dashSize = 1\r\n                        this.matLine.gapSize = 2\r\n                        this.matLineDashed.dashSize = 1\r\n                        this.matLineDashed.gapSize = 2\r\n                        break\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLinesFatWireframe-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/lines/webglLinesFatWireframe.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLinesFatWireframe-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\"}},[_vm._v(\"three.js\")]),_vm._v(\" - fat lines\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0ab00793\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/lines/webglLinesFatWireframe.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0ab00793\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLinesFatWireframe.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLinesFatWireframe.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLinesFatWireframe.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0ab00793\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLinesFatWireframe.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0ab00793\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/lines/webglLinesFatWireframe.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}