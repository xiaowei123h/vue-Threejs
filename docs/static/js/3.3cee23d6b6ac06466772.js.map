{"version":3,"sources":["webpack:///./src/components/jsm/shaders/VerticalBlurShader.js","webpack:///./src/components/jsm/shaders/HorizontalBlurShader.js","webpack:///src/views/shadow/webglShadowContact.vue","webpack:///./src/views/shadow/webglShadowContact.vue?825b","webpack:///./src/views/shadow/webglShadowContact.vue"],"names":["__webpack_require__","d","__webpack_exports__","VerticalBlurShader","uniforms","tDiffuse","value","v","vertexShader","join","fragmentShader","HorizontalBlurShader","h","webglShadowContact","data","camera","scene","renderer","stats","gui","meshes","PLANE_WIDTH","PLANE_HEIGHT","CAMERA_HEIGHT","state","shadow","blur","darkness","opacity","plane","color","showWireframe","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","cameraHelper","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","blurPlane","fillPlane","mounted","this","init","animate","beforeDestroy","destroy","methods","_this","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","background","Color","$Stats","dom","style","left","document","getElementsByClassName","appendChild","addEventListener","onWindowResize","geometries","BoxBufferGeometry","IcosahedronBufferGeometry","TorusKnotBufferGeometry","material","MeshNormalMaterial","i","l","length","angle","Math","PI","geometry","mesh","Mesh","y","x","cos","z","sin","add","push","Group","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","rotateX","planeMaterial","MeshBasicMaterial","map","transparent","scale","visible","fillPlaneMaterial","OrthographicCamera","rotation","CameraHelper","MeshDepthMaterial","userData","onBeforeCompile","shader","replace","depthTest","depthWrite","ShaderMaterial","dat_gui_module","shadowFolder","addFolder","open","planeFolder","onChange","addColor","remove","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","domElement","OrbitControls","$onWindowResize","blurShadow","amount","setRenderTarget","render","requestAnimationFrame","forEach","initialBackground","overrideMaterial","update","shadow_webglShadowContact","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/3.3cee23d6b6ac06466772.js","sourcesContent":["/**\r\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\r\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\r\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\r\n *\r\n * - 9 samples per pass\r\n * - standard deviation 2.7\r\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\r\n */\r\n\r\nvar VerticalBlurShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"v\": { value: 1.0 / 512.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform float v;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\r\n\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\r\n\r\n\t\t\"\tgl_FragColor = sum;\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { VerticalBlurShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/VerticalBlurShader.js","/**\r\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\r\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\r\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\r\n *\r\n * - 9 samples per pass\r\n * - standard deviation 2.7\r\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\r\n */\r\n\r\nvar HorizontalBlurShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t\"tDiffuse\": { value: null },\r\n\t\t\"h\": { value: 1.0 / 512.0 }\r\n\r\n\t},\r\n\r\n\tvertexShader: [\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvUv = uv;\",\r\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" ),\r\n\r\n\tfragmentShader: [\r\n\r\n\t\t\"uniform sampler2D tDiffuse;\",\r\n\t\t\"uniform float h;\",\r\n\r\n\t\t\"varying vec2 vUv;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\r\n\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\",\r\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\",\r\n\r\n\t\t\"\tgl_FragColor = sum;\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" )\r\n\r\n};\r\n\r\nexport { HorizontalBlurShader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/shaders/HorizontalBlurShader.js","<template>\r\n    <div class=\"webglShadowContact-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - contact shadows\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { HorizontalBlurShader } from '@/components/jsm/shaders/HorizontalBlurShader.js'\r\nimport { VerticalBlurShader } from '@/components/jsm/shaders/VerticalBlurShader.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            stats: null,\r\n            gui: null,\r\n\t\t\tmeshes: [],\r\n\t\t\tPLANE_WIDTH: 2.5,\r\n\t\t\tPLANE_HEIGHT: 2.5,\r\n\t\t\tCAMERA_HEIGHT: 0.3,\r\n\t\t\tstate: {\r\n\t\t\t\tshadow: {\r\n\t\t\t\t\tblur: 3.5,\r\n\t\t\t\t\tdarkness: 1,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t},\r\n\t\t\t\tplane: {\r\n\t\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t},\r\n\t\t\t\tshowWireframe: false,\r\n\t\t\t},\r\n            shadowGroup: null,\r\n            renderTarget: null,\r\n            renderTargetBlur: null,\r\n            shadowCamera: null,\r\n            cameraHelper: null,\r\n            depthMaterial: null,\r\n            horizontalBlurMaterial: null,\r\n            verticalBlurMaterial: null,\r\n            plane: null,\r\n            blurPlane: null,\r\n            fillPlane: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 0.1, 100)\r\n            this.camera.position.set(0.5, 1, 2)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xffffff)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglShadowContact-container')[0].appendChild(this.stats.dom)\r\n            window.addEventListener('resize', this.onWindowResize)\r\n            // add the example meshes\r\n            var geometries = [\r\n                new this.$THREE.BoxBufferGeometry(0.4, 0.4, 0.4),\r\n                new this.$THREE.IcosahedronBufferGeometry(0.3),\r\n                new this.$THREE.TorusKnotBufferGeometry(0.4, 0.05, 256, 24, 1, 3)\r\n            ]\r\n            var material = new this.$THREE.MeshNormalMaterial()\r\n            for (var i = 0, l = geometries.length; i < l; i ++) {\r\n                var angle = (i / l) * Math.PI * 2\r\n                var geometry = geometries[ i ]\r\n                var mesh = new this.$THREE.Mesh(geometry, material)\r\n                mesh.position.y = 0.1\r\n                mesh.position.x = Math.cos(angle) / 2.0\r\n                mesh.position.z = Math.sin(angle) / 2.0\r\n                this.scene.add(mesh)\r\n                this.meshes.push(mesh)\r\n            }\r\n            // the container, if you need to move the plane just move this\r\n            this.shadowGroup = new this.$THREE.Group()\r\n            this.shadowGroup.position.y = - 0.3\r\n            this.scene.add(this.shadowGroup)\r\n            // the render target that will show the shadows in the plane texture\r\n            this.renderTarget = new this.$THREE.WebGLRenderTarget(512, 512)\r\n            this.renderTarget.texture.generateMipmaps = false\r\n            // the render target that we will use to blur the first render target\r\n            this.renderTargetBlur = new this.$THREE.WebGLRenderTarget(512, 512)\r\n            this.renderTargetBlur.texture.generateMipmaps = false\r\n            // make a plane and make it face up\r\n            var planeGeometry = new this.$THREE.PlaneBufferGeometry(this.PLANE_WIDTH, this.PLANE_HEIGHT).rotateX(Math.PI / 2)\r\n            var planeMaterial = new this.$THREE.MeshBasicMaterial({\r\n                map: this.renderTarget.texture,\r\n                opacity: this.state.shadow.opacity,\r\n                transparent: true,\r\n            })\r\n            this.plane = new this.$THREE.Mesh(planeGeometry, planeMaterial)\r\n            this.shadowGroup.add(this.plane)\r\n            // the y from the texture is flipped!\r\n            this.plane.scale.y = - 1\r\n            // the plane onto which to blur the texture\r\n            this.blurPlane = new this.$THREE.Mesh(planeGeometry)\r\n            this.blurPlane.visible = false\r\n            this.shadowGroup.add(this.blurPlane)\r\n            // the plane with the color of the ground\r\n            var fillPlaneMaterial = new this.$THREE.MeshBasicMaterial({\r\n                color: this.state.plane.color,\r\n                opacity: this.state.plane.opacity,\r\n                transparent: true,\r\n            })\r\n            this.fillPlane = new this.$THREE.Mesh(planeGeometry, fillPlaneMaterial)\r\n            this.fillPlane.rotateX(Math.PI)\r\n            this.fillPlane.position.y -= 0.00001\r\n            this.shadowGroup.add(this.fillPlane)\r\n            // the this.camera to render the depth material from\r\n            this.shadowCamera = new this.$THREE.OrthographicCamera(- this.PLANE_WIDTH / 2, this.PLANE_WIDTH / 2, this.PLANE_HEIGHT / 2, - this.PLANE_HEIGHT / 2, 0, this.CAMERA_HEIGHT)\r\n            this.shadowCamera.rotation.x = Math.PI / 2 // get the this.camera to look up\r\n            this.shadowGroup.add(this.shadowCamera)\r\n            this.cameraHelper = new this.$THREE.CameraHelper(this.shadowCamera)\r\n            // like MeshDepthMaterial, but goes from black to transparent\r\n            this.depthMaterial = new this.$THREE.MeshDepthMaterial()\r\n            this.depthMaterial.userData.darkness = { value: this.state.shadow.darkness }\r\n            this.depthMaterial.onBeforeCompile = (shader) => {\r\n                shader.uniforms.darkness = this.depthMaterial.userData.darkness\r\n                shader.fragmentShader = /* glsl */`\r\n                    uniform float darkness;\r\n                    ${shader.fragmentShader.replace(\r\n                        'gl_FragColor = vec4(vec3(1.0 - fragCoordZ), opacity);',\r\n                        'gl_FragColor = vec4(vec3(0.0), (1.0 - fragCoordZ) * darkness);'\r\n                    )}\r\n                `\r\n            }\r\n            this.depthMaterial.depthTest = false\r\n            this.depthMaterial.depthWrite = false\r\n            this.horizontalBlurMaterial = new this.$THREE.ShaderMaterial(HorizontalBlurShader)\r\n            this.horizontalBlurMaterial.depthTest = false\r\n            this.verticalBlurMaterial = new this.$THREE.ShaderMaterial(VerticalBlurShader)\r\n            this.verticalBlurMaterial.depthTest = false\r\n            //\r\n            this.gui = new GUI()\r\n            var shadowFolder = this.gui.addFolder('shadow')\r\n            shadowFolder.open()\r\n            var planeFolder = this.gui.addFolder('plane')\r\n            planeFolder.open()\r\n            shadowFolder.add(this.state.shadow, 'blur', 0, 15, 0.1)\r\n            shadowFolder.add(this.state.shadow, 'darkness', 1, 5, 0.1).onChange(() => {\r\n                this.depthMaterial.userData.darkness.value = this.state.shadow.darkness\r\n            })\r\n            shadowFolder.add(this.state.shadow, 'opacity', 0, 1, 0.01).onChange(() => {\r\n                this.plane.material.opacity = this.state.shadow.opacity\r\n            })\r\n            planeFolder.addColor(this.state.plane, 'color').onChange(() => {\r\n                this.fillPlane.material.color = new this.$THREE.Color(this.state.plane.color)\r\n            })\r\n            planeFolder.add(this.state.plane, 'opacity', 0, 1, 0.01).onChange(() => {\r\n                this.fillPlane.material.opacity = this.state.plane.opacity\r\n            })\r\n            this.gui.add(this.state, 'showWireframe', true).onChange(() => {\r\n                if (this.state.showWireframe) {\r\n                    this.scene.add(this.cameraHelper)\r\n                } else {\r\n                    this.scene.remove(this.cameraHelper)\r\n                }\r\n            })\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglShadowContact-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            new OrbitControls(this.camera, this.renderer.domElement)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        blurShadow(amount) {\r\n            this.blurPlane.visible = true\r\n            // blur horizontally and draw in the this.renderTargetBlur\r\n            this.blurPlane.material = this.horizontalBlurMaterial\r\n            this.blurPlane.material.uniforms.tDiffuse.value = this.renderTarget.texture\r\n            this.horizontalBlurMaterial.uniforms.h.value = amount * 1 / 256\r\n            this.renderer.setRenderTarget(this.renderTargetBlur)\r\n            this.renderer.render(this.blurPlane, this.shadowCamera)\r\n            // blur vertically and draw in the main this.renderTarget\r\n            this.blurPlane.material = this.verticalBlurMaterial\r\n            this.blurPlane.material.uniforms.tDiffuse.value = this.renderTargetBlur.texture\r\n            this.verticalBlurMaterial.uniforms.v.value = amount * 1 / 256\r\n            this.renderer.setRenderTarget(this.renderTarget)\r\n            this.renderer.render(this.blurPlane, this.shadowCamera)\r\n            this.blurPlane.visible = false\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            //\r\n            this.meshes.forEach(mesh => {\r\n                mesh.rotation.x += 0.01\r\n                mesh.rotation.y += 0.02\r\n            })\r\n            //\r\n            // remove the background\r\n            var initialBackground = this.scene.background\r\n            this.scene.background = null\r\n            // force the this.depthMaterial to everything\r\n            this.cameraHelper.visible = false\r\n            this.scene.overrideMaterial = this.depthMaterial\r\n            // render to the render target to get the depths\r\n            this.renderer.setRenderTarget(this.renderTarget)\r\n            this.renderer.render(this.scene, this.shadowCamera)\r\n            // and reset the override material\r\n            this.scene.overrideMaterial = null\r\n            this.cameraHelper.visible = true\r\n            this.blurShadow(this.state.shadow.blur)\r\n            // a second pass to reduce the artifacts\r\n            // (0.4 is the minimum blur amout so that the artifacts are gone)\r\n            this.blurShadow(this.state.shadow.blur * 0.4)\r\n            // reset and render the normal this.scene\r\n            this.renderer.setRenderTarget(null)\r\n            this.scene.background = initialBackground\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.update()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglShadowContact-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    background-color: #fff;\r\n    color: #000;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/shadow/webglShadowContact.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglShadowContact-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - contact shadows\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-27dcc82d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/shadow/webglShadowContact.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-27dcc82d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglShadowContact.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadowContact.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadowContact.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-27dcc82d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglShadowContact.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-27dcc82d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/shadow/webglShadowContact.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}