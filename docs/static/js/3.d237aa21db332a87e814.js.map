{"version":3,"sources":["webpack:///./src/components/jsm/loaders/obj2/OBJLoader2Parser.js","webpack:///./src/components/jsm/loaders/obj2/shared/MeshReceiver.js","webpack:///./src/components/jsm/loaders/obj2/shared/MaterialHandler.js","webpack:///./src/components/jsm/loaders/OBJLoader2.js","webpack:///./src/components/jsm/loaders/obj2/bridge/MtlObjBridge.js","webpack:///./src/components/jsm/loaders/obj2/worker/main/WorkerExecutionSupport.js","webpack:///./src/components/jsm/loaders/obj2/utils/CodeSerializer.js","webpack:///./src/components/jsm/loaders/obj2/worker/parallel/WorkerRunner.js","webpack:///./src/components/jsm/loaders/OBJLoader2Parallel.js","webpack:///./src/utils/webglLoaderObj2Options.js","webpack:///src/views/loader/webglLoaderObj2Options.vue","webpack:///./src/views/loader/webglLoaderObj2Options.vue?3a3e","webpack:///./src/views/loader/webglLoaderObj2Options.vue"],"names":["__webpack_require__","d","__webpack_exports__","OBJLoader2Parser","this","logging","enabled","debug","scope","callbacks","onProgress","text","_onProgress","onAssetAvailable","payload","_onAssetAvailable","onError","errorMessage","_onError","onLoad","object3d","message","_onLoad","contentRef","legacyMode","materials","materialPerSmoothingGroup","useOAsMesh","useIndices","disregardNormals","vertices","colors","normals","uvs","rawMesh","objectName","groupName","activeMtlName","mtllibName","faceType","subGroups","subGroupInUse","smoothingGroup","splitMaterials","normalized","real","counts","doubleIndicesCount","faceCount","mtlCount","smoothingGroupCount","inputObjectCount","outputObjectCount","globalCounts","faces","lineByte","currentByte","totalBytes","prototype","constructor","_resetRawMesh","_pushSmoothingGroup","setMaterialPerSmoothingGroup","setUseOAsMesh","setUseIndices","setDisregardNormals","setMaterials","Object","assign","setCallbackOnAssetAvailable","undefined","Function","setCallbackOnProgress","setCallbackOnError","setCallbackOnLoad","console","log","error","setLogging","_configure","matKeys","keys","printedConfig","length","join","name","info","execute","arrayBuffer","time","arrayBufferView","Uint8Array","byteLength","code","buffer","Array","bufferPointer","slashesCount","word","_processLine","String","fromCharCode","_finalizeParsing","timeEnd","executeLegacy","char","reconstructString","content","start","stop","line","i","trim","bufferLength","lineDesignation","push","parseFloat","_checkFaceType","_buildFace","_processCompletedMesh","mtlName","_checkSubGroup","smoothingGroupInt","parseInt","isNaN","smoothCheck","index","materialName","indexMappingsCount","indexMappings","indices","faceIndexV","faceIndexU","faceIndexN","updateSubGroupInUse","faceIndexVi","indexPointerV","indexPointerC","faceIndexUi","indexPointerU","faceIndexNi","indexPointerN","mappingName","indicesPointer","_createRawMeshReport","_finalizeRawMesh","meshOutputGroupTemp","meshOutputGroup","absoluteVertexCount","absoluteIndexMappingsCount","absoluteIndexCount","absoluteColorCount","absoluteNormalCount","absoluteUvCount","result","haveMesh","_buildMesh","progressBytesPercent","toFixed","meshOutputGroups","vertexFA","Float32Array","indexUA","Uint32Array","colorFA","normalFA","uvFA","haveVertexColors","materialNames","createMultiMaterial","materialIndex","materialIndexMapping","selectedMaterialIndex","materialGroup","materialGroups","vertexFAOffset","indexUAOffset","colorFAOffset","normalFAOffset","uvFAOffset","materialGroupOffset","materialGroupLength","materialOrg","material","materialNameOrg","oodIndex","hasOwnProperty","materialCloneInstructions","materialProperties","vertexColors","flatShading","cmd","type","matCheck","count","set","materialIndexLine","createdReport","progress","numericalValue","params","meshName","multiMaterial","buffers","geometryType","parserFinalReport","MeshReceiver","LoadedMeshUserOverride","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","materialHandler","onMeshAlter","_setCallbacks","buildMeshes","meshPayload","bufferGeometry","BufferGeometry","setAttribute","BufferAttribute","setIndex","computeVertexNormals","skinIndex","Uint16Array","skinWeight","key","multiMaterials","getMaterial","addGroup","meshes","mesh","callbackOnMeshAlterResult","useOrgMesh","detail","isDisregardMesh","providesAlteredMeshes","computeBoundingSphere","Mesh","LineSegments","Points","progressMessage","meshNames","disregardMesh","alteredMesh","addMesh","MaterialHandler","onLoadMaterials","createDefaultMaterials","overrideExisting","defaultMaterial","MeshStandardMaterial","color","defaultVertexColorMaterial","defaultLineMaterial","LineBasicMaterial","defaultPointMaterial","PointsMaterial","size","runtimeMaterials","addMaterials","addPayloadMaterials","materialPayload","newMaterials","clone","serializedMaterials","loader","MaterialLoader","materialJson","parse","existingMaterial","add","getMaterials","getMaterialsJSON","materialsJSON","toJSON","clearMaterials","OBJLoader2_OBJLoader2","OBJLoader2","manager","Loader","call","parser","modelName","instanceNo","baseObject3d","Object3D","meshReceiver","OBJLOADER2_VERSION","create","setModelName","setBaseObject3d","setCallbackOnMeshAlter","setCallbackOnLoadMaterials","load","url","onFileLoadProgress","event","currentTarget","statusText","responseURL","urlFull","URL","window","location","href","filename","urlParts","split","path","slice","numericalValueRef","lengthComputable","loaded","total","output","fileLoader","FileLoader","setPath","resourcePath","setResponseType","ArrayBuffer","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","MtlObjBridge","__WEBPACK_IMPORTED_MODULE_0__jsm_loaders_MTLLoader_js__","link","processResult","assetLoader","addMaterialsFromMtlLoader","materialCreator","MTLLoader","MaterialCreator","preload","CodeBuilderInstructions","supportsStandardWorker","supportsJsmWorker","preferJsmWorker","startCode","codeFragments","importStatements","jsmWorkerUrl","defaultGeometryType","isSupportsStandardWorker","isSupportsJsmWorker","isPreferJsmWorker","setJsmWorkerUrl","addStartCode","addCodeFragment","addLibraryImport","libraryPath","getImportStatements","getCodeFragments","getStartCode","WorkerExecutionSupport","Worker","Blob","createObjectURL","_reset","WORKER_SUPPORT_VERSION","worker","native","jsmWorker","workerRunner","usesMeshDisassembler","terminateWorkerOnLoad","forceWorkerDataCopy","started","queuedMessage","terminate","_terminate","setForceWorkerDataCopy","setTerminateWorkerOnLoad","isWorkerLoaded","updateCallbacks","_verifyCallbacks","buildWorker","codeBuilderInstructions","jsmSuccess","_buildWorkerJsm","_buildWorkerStandard","_buildWorkerCheckPreconditions","_configureWorkerCommunication","e","TypeError","SyntaxError","concatenateCode","forEach","element","blob","requireJsmWorker","timeLabel","workerAvailable","haveJsmWorker","scopedReceiveWorkerMessage","_receiveWorkerMessage","onmessage","onerror","data","workerRunnerName","msg","executeParallel","transferables","_verifyWorkerIsAvailable","_postMessage","ready","warn","input","concat","postMessage","CodeSerializer","targetPrototype","targetPrototypeInstance","basePrototypeName","overrideFunctions","objectPart","constructorString","funcInstructions","funcTemp","fullObjectName","prototypeFunctions","objectProperties","objectFunctions","isExtended","isArray","CodeSerializationInstruction","setCode","toString","isRemoveCode","getCode","getName","getFullName","_typeof","objectString","fullName","removeCode","setRemoveCode","ObjectManipulator","applyProperties","objToAlter","forceCreation","property","funcName","values","substring","toLocaleUpperCase","DefaultWorkerPayloadHandler","handlePayload","callbackOnAssetAvailable","self","callbackOnProgress","objectManipulator","arraybuffer","executeFunctionName","getParseFunctionName","options","WorkerRunner","payloadHandler","addEventListener","processMessage","OBJLoader2Parallel","workerExecutionSupport","OBJLOADER2_PARALLEL_VERSION","DEFAULT_JSM_WORKER_PATH","setExecuteParallel","setJsmWorker","getWorkerExecutionSupport","buildWorkerCode","defaultWorkerPayloadHandler","dummy","WWOBJLoader2Example","elementToBindTo","THREE","renderer","canvas","aspectRatio","recalcAspectRatio","scene","cameraDefaults","posCamera","Vector3","posCameraTarget","near","far","fov","camera","cameraTarget","controls","doubleSide","useJsmWorker","loadCount","cube","pivot","initGL","WebGLRenderer","antialias","autoClear","setClearColor","Scene","PerspectiveCamera","resetCamera","TrackballControls","domElement","ambientLight","AmbientLight","directionalLight1","DirectionalLight","directionalLight2","position","helper","GridHelper","geometry","BoxBufferGeometry","MeshNormalMaterial","useParseMain","_reportProgress","objLoader2","mtlParseResult","local","finalize","useParseParallel","tester","objLoader2Parallel","useLoadMain","callbackOnLoad","useLoadParallel","scale","useLoadMainFallback","useLoadParallelMeshAlter","override","VertexNormalsHelper","document","getElementById","innerHTML","resizeDisplayGL","handleResize","setSize","offsetWidth","offsetHeight","updateCamera","copy","aspect","lookAt","updateProjectionMatrix","render","clear","update","rotation","x","y","alterShading","traversalFunction","needsUpdate","traverse","traverseScene","alterDouble","side","DoubleSide","FrontSide","executeLoading","loader_webglLoaderObj2Options","app","wwObjLoader2Control","menuDiv","gui","folderRenderingOptions","controlFlat","controlDouble","folderObjLoader2ParallelOptions","controlJsmWorker","folderExecution","handleExecuteLoading","beforeDestroy","destroy","mounted","_this","$THREE","that","blockEvent","stopPropagation","disableElement","elementHandle","parentElement","style","pointerEvents","opacity","dat_gui_module","autoPlace","width","appendChild","addFolder","onChange","id","open","resizeWindow","methods","requestAnimationFrame","views_loader_webglLoaderObj2Options","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","_v","target","rel","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/3.d237aa21db332a87e814.js","sourcesContent":["/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\n/**\r\n * Parse OBJ data either from ArrayBuffer or string\r\n */\r\nconst OBJLoader2Parser = function () {\r\n\r\n\tthis.logging = {\r\n\t\tenabled: false,\r\n\t\tdebug: false\r\n\t};\r\n\r\n\tconst scope = this;\r\n\tthis.callbacks = {\r\n\t\tonProgress: function ( text ) {\r\n\r\n\t\t\tscope._onProgress( text );\r\n\r\n\t\t},\r\n\t\tonAssetAvailable: function ( payload ) {\r\n\r\n\t\t\tscope._onAssetAvailable( payload );\r\n\r\n\t\t},\r\n\t\tonError: function ( errorMessage ) {\r\n\r\n\t\t\tscope._onError( errorMessage );\r\n\r\n\t\t},\r\n\t\tonLoad: function ( object3d, message ) {\r\n\r\n\t\t\tscope._onLoad( object3d, message );\r\n\r\n\t\t},\r\n\t};\r\n\tthis.contentRef = null;\r\n\tthis.legacyMode = false;\r\n\r\n\tthis.materials = {};\r\n\tthis.materialPerSmoothingGroup = false;\r\n\tthis.useOAsMesh = false;\r\n\tthis.useIndices = false;\r\n\tthis.disregardNormals = false;\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.normals = [];\r\n\tthis.uvs = [];\r\n\r\n\tthis.rawMesh = {\r\n\t\tobjectName: '',\r\n\t\tgroupName: '',\r\n\t\tactiveMtlName: '',\r\n\t\tmtllibName: '',\r\n\r\n\t\t// reset with new mesh\r\n\t\tfaceType: - 1,\r\n\t\tsubGroups: [],\r\n\t\tsubGroupInUse: null,\r\n\t\tsmoothingGroup: {\r\n\t\t\tsplitMaterials: false,\r\n\t\t\tnormalized: - 1,\r\n\t\t\treal: - 1\r\n\t\t},\r\n\t\tcounts: {\r\n\t\t\tdoubleIndicesCount: 0,\r\n\t\t\tfaceCount: 0,\r\n\t\t\tmtlCount: 0,\r\n\t\t\tsmoothingGroupCount: 0\r\n\t\t}\r\n\t};\r\n\r\n\tthis.inputObjectCount = 1;\r\n\tthis.outputObjectCount = 1;\r\n\tthis.globalCounts = {\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tdoubleIndicesCount: 0,\r\n\t\tlineByte: 0,\r\n\t\tcurrentByte: 0,\r\n\t\ttotalBytes: 0\r\n\t};\r\n\r\n};\r\n\r\nOBJLoader2Parser.prototype = {\r\n\r\n\tconstructor: OBJLoader2Parser,\r\n\r\n\t_resetRawMesh: function () {\r\n\r\n\t\t// faces are stored according combined index of group, material and smoothingGroup (0 or not)\r\n\t\tthis.rawMesh.subGroups = [];\r\n\t\tthis.rawMesh.subGroupInUse = null;\r\n\t\tthis.rawMesh.smoothingGroup.normalized = - 1;\r\n\t\tthis.rawMesh.smoothingGroup.real = - 1;\r\n\r\n\t\t// this default index is required as it is possible to define faces without 'g' or 'usemtl'\r\n\t\tthis._pushSmoothingGroup( 1 );\r\n\r\n\t\tthis.rawMesh.counts.doubleIndicesCount = 0;\r\n\t\tthis.rawMesh.counts.faceCount = 0;\r\n\t\tthis.rawMesh.counts.mtlCount = 0;\r\n\t\tthis.rawMesh.counts.smoothingGroupCount = 0;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Tells whether a material shall be created per smoothing group.\r\n\t *\r\n\t * @param {boolean} materialPerSmoothingGroup=false\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetMaterialPerSmoothingGroup: function ( materialPerSmoothingGroup ) {\r\n\r\n\t\tthis.materialPerSmoothingGroup = materialPerSmoothingGroup === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Usually 'o' is meta-information and does not result in creation of new meshes, but mesh creation on occurrence of \"o\" can be enforced.\r\n\t *\r\n\t * @param {boolean} useOAsMesh=false\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetUseOAsMesh: function ( useOAsMesh ) {\r\n\r\n\t\tthis.useOAsMesh = useOAsMesh === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Instructs loaders to create indexed {@link BufferGeometry}.\r\n\t *\r\n\t * @param {boolean} useIndices=false\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetUseIndices: function ( useIndices ) {\r\n\r\n\t\tthis.useIndices = useIndices === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Tells whether normals should be completely disregarded and regenerated.\r\n\t *\r\n\t * @param {boolean} disregardNormals=false\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetDisregardNormals: function ( disregardNormals ) {\r\n\r\n\t\tthis.disregardNormals = disregardNormals === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Clears materials object and sets the new ones.\r\n\t *\r\n\t * @param {Object} materials Object with named materials\r\n\t */\r\n\tsetMaterials: function ( materials ) {\r\n\r\n \t\tthis.materials = Object.assign( {}, materials );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Register a function that is called once an asset (mesh/material) becomes available.\r\n\t *\r\n\t * @param onAssetAvailable\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetCallbackOnAssetAvailable: function ( onAssetAvailable ) {\r\n\r\n\t\tif ( onAssetAvailable !== null && onAssetAvailable !== undefined && onAssetAvailable instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onAssetAvailable = onAssetAvailable;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Register a function that is used to report overall processing progress.\r\n\t *\r\n\t * @param {Function} onProgress\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetCallbackOnProgress: function ( onProgress ) {\r\n\r\n\t\tif ( onProgress !== null && onProgress !== undefined && onProgress instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onProgress = onProgress;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Register an error handler function that is called if errors occur. It can decide to just log or to throw an exception.\r\n\t *\r\n\t * @param {Function} onError\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetCallbackOnError: function ( onError ) {\r\n\r\n\t\tif ( onError !== null && onError !== undefined && onError instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onError = onError;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Register a function that is called when parsing was completed.\r\n\t *\r\n\t * @param {Function} onLoad\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetCallbackOnLoad: function ( onLoad ) {\r\n\r\n\t\tif ( onLoad !== null && onLoad !== undefined && onLoad instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onLoad = onLoad;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Announce parse progress feedback which is logged to the console.\r\n\t * @private\r\n\t *\r\n\t * @param {string} text Textual description of the event\r\n\t */\r\n\t_onProgress: function ( text ) {\r\n\r\n\t\tconst message = text ? text : '';\r\n\t\tif ( this.logging.enabled && this.logging.debug ) {\r\n\r\n\t\t\tconsole.log( message );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Announce error feedback which is logged as error message.\r\n\t * @private\r\n\t *\r\n\t * @param {String} errorMessage The event containing the error\r\n\t */\r\n\t_onError: function ( errorMessage ) {\r\n\r\n\t\tif ( this.logging.enabled && this.logging.debug ) {\r\n\r\n\t\t\tconsole.error( errorMessage );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_onAssetAvailable: function ( /*payload*/ ) {\r\n\r\n\t\tconst errorMessage = 'OBJLoader2Parser does not provide implementation for onAssetAvailable. Aborting...';\r\n\t\tthis.callbacks.onError( errorMessage );\r\n\t\tthrow errorMessage;\r\n\r\n\t},\r\n\r\n\t_onLoad: function ( object3d, message ) {\r\n\r\n\t\tconsole.log( \"You reached parser default onLoad callback: \" + message );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\r\n\t *\r\n\t * @param {boolean} enabled True or false.\r\n\t * @param {boolean} debug True or false.\r\n\t *\r\n\t * @return {OBJLoader2Parser}\r\n\t */\r\n\tsetLogging: function ( enabled, debug ) {\r\n\r\n\t\tthis.logging.enabled = enabled === true;\r\n\t\tthis.logging.debug = debug === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t_configure: function () {\r\n\r\n\t\tthis._pushSmoothingGroup( 1 );\r\n\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\tconst matKeys = Object.keys( this.materials );\r\n\t\t\tconst matNames = ( matKeys.length > 0 ) ? '\\n\\tmaterialNames:\\n\\t\\t- ' + matKeys.join( '\\n\\t\\t- ' ) : '\\n\\tmaterialNames: None';\r\n\t\t\tlet printedConfig = 'OBJLoader.Parser configuration:'\r\n\t\t\t\t+ matNames\r\n\t\t\t\t+ '\\n\\tmaterialPerSmoothingGroup: ' + this.materialPerSmoothingGroup\r\n\t\t\t\t+ '\\n\\tuseOAsMesh: ' + this.useOAsMesh\r\n\t\t\t\t+ '\\n\\tuseIndices: ' + this.useIndices\r\n\t\t\t\t+ '\\n\\tdisregardNormals: ' + this.disregardNormals;\r\n\t\t\tprintedConfig += '\\n\\tcallbacks.onProgress: ' + this.callbacks.onProgress.name;\r\n\t\t\tprintedConfig += '\\n\\tcallbacks.onAssetAvailable: ' + this.callbacks.onAssetAvailable.name;\r\n\t\t\tprintedConfig += '\\n\\tcallbacks.onError: ' + this.callbacks.onError.name;\r\n\t\t\tconsole.info( printedConfig );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Parse the provided arraybuffer\r\n\t *\r\n\t * @param {Uint8Array} arrayBuffer OBJ data as Uint8Array\r\n\t */\r\n\texecute: function ( arrayBuffer ) {\r\n\r\n\t\tif ( this.logging.enabled ) console.time( 'OBJLoader2Parser.execute' );\r\n\t\tthis._configure();\r\n\r\n\t\tconst arrayBufferView = new Uint8Array( arrayBuffer );\r\n\t\tthis.contentRef = arrayBufferView;\r\n\t\tconst length = arrayBufferView.byteLength;\r\n\t\tthis.globalCounts.totalBytes = length;\r\n\t\tconst buffer = new Array( 128 );\r\n\r\n\t\tlet bufferPointer = 0;\r\n\t\tlet slashesCount = 0;\r\n\t\tlet word = '';\r\n\t\tlet currentByte = 0;\r\n\t\tfor ( let code; currentByte < length; currentByte ++ ) {\r\n\r\n\t\t\tcode = arrayBufferView[ currentByte ];\r\n\t\t\tswitch ( code ) {\r\n\r\n\t\t\t\t// space\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\r\n\t\t\t\t\tword = '';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// slash\r\n\t\t\t\tcase 47:\r\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\r\n\t\t\t\t\tslashesCount ++;\r\n\t\t\t\t\tword = '';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// LF\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tthis._processLine( buffer, bufferPointer, slashesCount, word, currentByte );\r\n\t\t\t\t\tword = '';\r\n\t\t\t\t\tbufferPointer = 0;\r\n\t\t\t\t\tslashesCount = 0;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// CR\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tword += String.fromCharCode( code );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._processLine( buffer, bufferPointer, slashesCount, word, currentByte );\r\n\t\tthis._finalizeParsing();\r\n\t\tif ( this.logging.enabled ) console.timeEnd( 'OBJLoader2Parser.execute' );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Parse the provided text\r\n\t *\r\n\t * @param {string} text OBJ data as string\r\n\t */\r\n\texecuteLegacy: function ( text ) {\r\n\r\n\t\tif ( this.logging.enabled ) console.time( 'OBJLoader2Parser.executeLegacy' );\r\n\t\tthis._configure();\r\n\t\tthis.legacyMode = true;\r\n\t\tthis.contentRef = text;\r\n\t\tconst length = text.length;\r\n\t\tthis.globalCounts.totalBytes = length;\r\n\t\tconst buffer = new Array( 128 );\r\n\r\n\t\tlet bufferPointer = 0;\r\n\t\tlet slashesCount = 0;\r\n\t\tlet word = '';\r\n\t\tlet currentByte = 0;\r\n\t\tfor ( let char; currentByte < length; currentByte ++ ) {\r\n\r\n\t\t\tchar = text[ currentByte ];\r\n\t\t\tswitch ( char ) {\r\n\r\n\t\t\t\tcase ' ':\r\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\r\n\t\t\t\t\tword = '';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\r\n\t\t\t\t\tslashesCount ++;\r\n\t\t\t\t\tword = '';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '\\n':\r\n\t\t\t\t\tthis._processLine( buffer, bufferPointer, slashesCount, word, currentByte );\r\n\t\t\t\t\tword = '';\r\n\t\t\t\t\tbufferPointer = 0;\r\n\t\t\t\t\tslashesCount = 0;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '\\r':\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tword += char;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._processLine( buffer, bufferPointer, word, slashesCount );\r\n\t\tthis._finalizeParsing();\r\n\t\tif ( this.logging.enabled ) console.timeEnd( 'OBJLoader2Parser.executeLegacy' );\r\n\r\n\t},\r\n\r\n\t_processLine: function ( buffer, bufferPointer, slashesCount, word, currentByte ) {\r\n\r\n\t\tthis.globalCounts.lineByte = this.globalCounts.currentByte;\r\n\t\tthis.globalCounts.currentByte = currentByte;\r\n\t\tif ( bufferPointer < 1 ) return;\r\n\r\n\t\tif ( word.length > 0 ) buffer[ bufferPointer ++ ] = word;\r\n\r\n\t\tconst reconstructString = function ( content, legacyMode, start, stop ) {\r\n\r\n\t\t\tlet line = '';\r\n\t\t\tif ( stop > start ) {\r\n\r\n\t\t\t\tlet i;\r\n\t\t\t\tif ( legacyMode ) {\r\n\r\n\t\t\t\t\tfor ( i = start; i < stop; i ++ ) line += content[ i ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\r\n\t\t\t\t\tfor ( i = start; i < stop; i ++ ) line += String.fromCharCode( content[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tline = line.trim();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn line;\r\n\r\n\t\t};\r\n\r\n\t\tlet bufferLength, length, i;\r\n\t\tconst lineDesignation = buffer[ 0 ];\r\n\t\tswitch ( lineDesignation ) {\r\n\r\n\t\t\tcase 'v':\r\n\t\t\t\tthis.vertices.push( parseFloat( buffer[ 1 ] ) );\r\n\t\t\t\tthis.vertices.push( parseFloat( buffer[ 2 ] ) );\r\n\t\t\t\tthis.vertices.push( parseFloat( buffer[ 3 ] ) );\r\n\t\t\t\tif ( bufferPointer > 4 ) {\r\n\r\n\t\t\t\t\tthis.colors.push( parseFloat( buffer[ 4 ] ) );\r\n\t\t\t\t\tthis.colors.push( parseFloat( buffer[ 5 ] ) );\r\n\t\t\t\t\tthis.colors.push( parseFloat( buffer[ 6 ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'vt':\r\n\t\t\t\tthis.uvs.push( parseFloat( buffer[ 1 ] ) );\r\n\t\t\t\tthis.uvs.push( parseFloat( buffer[ 2 ] ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'vn':\r\n\t\t\t\tthis.normals.push( parseFloat( buffer[ 1 ] ) );\r\n\t\t\t\tthis.normals.push( parseFloat( buffer[ 2 ] ) );\r\n\t\t\t\tthis.normals.push( parseFloat( buffer[ 3 ] ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'f':\r\n\t\t\t\tbufferLength = bufferPointer - 1;\r\n\r\n\t\t\t\t// \"f vertex ...\"\r\n\t\t\t\tif ( slashesCount === 0 ) {\r\n\r\n\t\t\t\t\tthis._checkFaceType( 0 );\r\n\t\t\t\t\tfor ( i = 2, length = bufferLength; i < length; i ++ ) {\r\n\r\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 1 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// \"f vertex/uv ...\"\r\n\r\n\t\t\t\t} else if ( bufferLength === slashesCount * 2 ) {\r\n\r\n\t\t\t\t\tthis._checkFaceType( 1 );\r\n\t\t\t\t\tfor ( i = 3, length = bufferLength - 2; i < length; i += 2 ) {\r\n\r\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ], buffer[ 2 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i ], buffer[ i + 1 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 2 ], buffer[ i + 3 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// \"f vertex/uv/normal ...\"\r\n\r\n\t\t\t\t} else if ( bufferLength * 2 === slashesCount * 3 ) {\r\n\r\n\t\t\t\t\tthis._checkFaceType( 2 );\r\n\t\t\t\t\tfor ( i = 4, length = bufferLength - 3; i < length; i += 3 ) {\r\n\r\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ], buffer[ 2 ], buffer[ 3 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i ], buffer[ i + 1 ], buffer[ i + 2 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 3 ], buffer[ i + 4 ], buffer[ i + 5 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// \"f vertex//normal ...\"\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._checkFaceType( 3 );\r\n\t\t\t\t\tfor ( i = 3, length = bufferLength - 2; i < length; i += 2 ) {\r\n\r\n\t\t\t\t\t\tthis._buildFace( buffer[ 1 ], undefined, buffer[ 2 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i ], undefined, buffer[ i + 1 ] );\r\n\t\t\t\t\t\tthis._buildFace( buffer[ i + 2 ], undefined, buffer[ i + 3 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'l':\r\n\t\t\tcase 'p':\r\n\t\t\t\tbufferLength = bufferPointer - 1;\r\n\t\t\t\tif ( bufferLength === slashesCount * 2 ) {\r\n\r\n\t\t\t\t\tthis._checkFaceType( 4 );\r\n\t\t\t\t\tfor ( i = 1, length = bufferLength + 1; i < length; i += 2 ) this._buildFace( buffer[ i ], buffer[ i + 1 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._checkFaceType( ( lineDesignation === 'l' ) ? 5 : 6 );\r\n\t\t\t\t\tfor ( i = 1, length = bufferLength + 1; i < length; i ++ ) this._buildFace( buffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 's':\r\n\t\t\t\tthis._pushSmoothingGroup( buffer[ 1 ] );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'g':\r\n\t\t\t\t// 'g' leads to creation of mesh if valid data (faces declaration was done before), otherwise only groupName gets set\r\n\t\t\t\tthis._processCompletedMesh();\r\n\t\t\t\tthis.rawMesh.groupName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 2, this.globalCounts.currentByte );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'o':\r\n\t\t\t\t// 'o' is meta-information and usually does not result in creation of new meshes, but can be enforced with \"useOAsMesh\"\r\n\t\t\t\tif ( this.useOAsMesh ) this._processCompletedMesh();\r\n\t\t\t\tthis.rawMesh.objectName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 2, this.globalCounts.currentByte );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'mtllib':\r\n\t\t\t\tthis.rawMesh.mtllibName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 7, this.globalCounts.currentByte );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'usemtl':\r\n\t\t\t\tconst mtlName = reconstructString( this.contentRef, this.legacyMode, this.globalCounts.lineByte + 7, this.globalCounts.currentByte );\r\n\t\t\t\tif ( mtlName !== '' && this.rawMesh.activeMtlName !== mtlName ) {\r\n\r\n\t\t\t\t\tthis.rawMesh.activeMtlName = mtlName;\r\n\t\t\t\t\tthis.rawMesh.counts.mtlCount ++;\r\n\t\t\t\t\tthis._checkSubGroup();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_pushSmoothingGroup: function ( smoothingGroup ) {\r\n\r\n\t\tlet smoothingGroupInt = parseInt( smoothingGroup );\r\n\t\tif ( isNaN( smoothingGroupInt ) ) {\r\n\r\n\t\t\tsmoothingGroupInt = smoothingGroup === \"off\" ? 0 : 1;\r\n\r\n\t\t}\r\n\r\n\t\tconst smoothCheck = this.rawMesh.smoothingGroup.normalized;\r\n\t\tthis.rawMesh.smoothingGroup.normalized = this.rawMesh.smoothingGroup.splitMaterials ? smoothingGroupInt : ( smoothingGroupInt === 0 ) ? 0 : 1;\r\n\t\tthis.rawMesh.smoothingGroup.real = smoothingGroupInt;\r\n\r\n\t\tif ( smoothCheck !== smoothingGroupInt ) {\r\n\r\n\t\t\tthis.rawMesh.counts.smoothingGroupCount ++;\r\n\t\t\tthis._checkSubGroup();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Expanded faceTypes include all four face types, both line types and the point type\r\n\t * faceType = 0: \"f vertex ...\"\r\n\t * faceType = 1: \"f vertex/uv ...\"\r\n\t * faceType = 2: \"f vertex/uv/normal ...\"\r\n\t * faceType = 3: \"f vertex//normal ...\"\r\n\t * faceType = 4: \"l vertex/uv ...\" or \"l vertex ...\"\r\n\t * faceType = 5: \"l vertex ...\"\r\n\t * faceType = 6: \"p vertex ...\"\r\n\t */\r\n\t_checkFaceType: function ( faceType ) {\r\n\r\n\t\tif ( this.rawMesh.faceType !== faceType ) {\r\n\r\n\t\t\tthis._processCompletedMesh();\r\n\t\t\tthis.rawMesh.faceType = faceType;\r\n\t\t\tthis._checkSubGroup();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_checkSubGroup: function () {\r\n\r\n\t\tconst index = this.rawMesh.activeMtlName + '|' + this.rawMesh.smoothingGroup.normalized;\r\n\t\tthis.rawMesh.subGroupInUse = this.rawMesh.subGroups[ index ];\r\n\r\n\t\tif ( this.rawMesh.subGroupInUse === undefined || this.rawMesh.subGroupInUse === null ) {\r\n\r\n\t\t\tthis.rawMesh.subGroupInUse = {\r\n\t\t\t\tindex: index,\r\n\t\t\t\tobjectName: this.rawMesh.objectName,\r\n\t\t\t\tgroupName: this.rawMesh.groupName,\r\n\t\t\t\tmaterialName: this.rawMesh.activeMtlName,\r\n\t\t\t\tsmoothingGroup: this.rawMesh.smoothingGroup.normalized,\r\n\t\t\t\tvertices: [],\r\n\t\t\t\tindexMappingsCount: 0,\r\n\t\t\t\tindexMappings: [],\r\n\t\t\t\tindices: [],\r\n\t\t\t\tcolors: [],\r\n\t\t\t\tuvs: [],\r\n\t\t\t\tnormals: []\r\n\t\t\t};\r\n\t\t\tthis.rawMesh.subGroups[ index ] = this.rawMesh.subGroupInUse;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_buildFace: function ( faceIndexV, faceIndexU, faceIndexN ) {\r\n\r\n\t\tconst subGroupInUse = this.rawMesh.subGroupInUse;\r\n\t\tconst scope = this;\r\n\t\tconst updateSubGroupInUse = function () {\r\n\r\n\t\t\tconst faceIndexVi = parseInt( faceIndexV );\r\n\t\t\tlet indexPointerV = 3 * ( faceIndexVi > 0 ? faceIndexVi - 1 : faceIndexVi + scope.vertices.length / 3 );\r\n\t\t\tlet indexPointerC = scope.colors.length > 0 ? indexPointerV : null;\r\n\r\n\t\t\tconst vertices = subGroupInUse.vertices;\r\n\t\t\tvertices.push( scope.vertices[ indexPointerV ++ ] );\r\n\t\t\tvertices.push( scope.vertices[ indexPointerV ++ ] );\r\n\t\t\tvertices.push( scope.vertices[ indexPointerV ] );\r\n\r\n\t\t\tif ( indexPointerC !== null ) {\r\n\r\n\t\t\t\tconst colors = subGroupInUse.colors;\r\n\t\t\t\tcolors.push( scope.colors[ indexPointerC ++ ] );\r\n\t\t\t\tcolors.push( scope.colors[ indexPointerC ++ ] );\r\n\t\t\t\tcolors.push( scope.colors[ indexPointerC ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( faceIndexU ) {\r\n\r\n\t\t\t\tconst faceIndexUi = parseInt( faceIndexU );\r\n\t\t\t\tlet indexPointerU = 2 * ( faceIndexUi > 0 ? faceIndexUi - 1 : faceIndexUi + scope.uvs.length / 2 );\r\n\t\t\t\tconst uvs = subGroupInUse.uvs;\r\n\t\t\t\tuvs.push( scope.uvs[ indexPointerU ++ ] );\r\n\t\t\t\tuvs.push( scope.uvs[ indexPointerU ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( faceIndexN && ! scope.disregardNormals ) {\r\n\r\n\t\t\t\tconst faceIndexNi = parseInt( faceIndexN );\r\n\t\t\t\tlet indexPointerN = 3 * ( faceIndexNi > 0 ? faceIndexNi - 1 : faceIndexNi + scope.normals.length / 3 );\r\n\t\t\t\tconst normals = subGroupInUse.normals;\r\n\t\t\t\tnormals.push( scope.normals[ indexPointerN ++ ] );\r\n\t\t\t\tnormals.push( scope.normals[ indexPointerN ++ ] );\r\n\t\t\t\tnormals.push( scope.normals[ indexPointerN ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( this.useIndices ) {\r\n\r\n\t\t\tif ( this.disregardNormals ) faceIndexN = undefined;\r\n\t\t\tconst mappingName = faceIndexV + ( faceIndexU ? '_' + faceIndexU : '_n' ) + ( faceIndexN ? '_' + faceIndexN : '_n' );\r\n\t\t\tlet indicesPointer = subGroupInUse.indexMappings[ mappingName ];\r\n\t\t\tif ( indicesPointer === undefined || indicesPointer === null ) {\r\n\r\n\t\t\t\tindicesPointer = this.rawMesh.subGroupInUse.vertices.length / 3;\r\n\t\t\t\tupdateSubGroupInUse();\r\n\t\t\t\tsubGroupInUse.indexMappings[ mappingName ] = indicesPointer;\r\n\t\t\t\tsubGroupInUse.indexMappingsCount ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.rawMesh.counts.doubleIndicesCount ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsubGroupInUse.indices.push( indicesPointer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tupdateSubGroupInUse();\r\n\r\n\t\t}\r\n\r\n\t\tthis.rawMesh.counts.faceCount ++;\r\n\r\n\t},\r\n\r\n\t_createRawMeshReport: function ( inputObjectCount ) {\r\n\r\n\t\treturn 'Input Object number: ' + inputObjectCount +\r\n\t\t\t'\\n\\tObject name: ' + this.rawMesh.objectName +\r\n\t\t\t'\\n\\tGroup name: ' + this.rawMesh.groupName +\r\n\t\t\t'\\n\\tMtllib name: ' + this.rawMesh.mtllibName +\r\n\t\t\t'\\n\\tVertex count: ' + this.vertices.length / 3 +\r\n\t\t\t'\\n\\tNormal count: ' + this.normals.length / 3 +\r\n\t\t\t'\\n\\tUV count: ' + this.uvs.length / 2 +\r\n\t\t\t'\\n\\tSmoothingGroup count: ' + this.rawMesh.counts.smoothingGroupCount +\r\n\t\t\t'\\n\\tMaterial count: ' + this.rawMesh.counts.mtlCount +\r\n\t\t\t'\\n\\tReal MeshOutputGroup count: ' + this.rawMesh.subGroups.length;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Clear any empty subGroup and calculate absolute vertex, normal and uv counts\r\n\t */\r\n\t_finalizeRawMesh: function () {\r\n\r\n\t\tconst meshOutputGroupTemp = [];\r\n\t\tlet meshOutputGroup;\r\n\t\tlet absoluteVertexCount = 0;\r\n\t\tlet absoluteIndexMappingsCount = 0;\r\n\t\tlet absoluteIndexCount = 0;\r\n\t\tlet absoluteColorCount = 0;\r\n\t\tlet absoluteNormalCount = 0;\r\n\t\tlet absoluteUvCount = 0;\r\n\t\tlet indices;\r\n\t\tfor ( const name in this.rawMesh.subGroups ) {\r\n\r\n\t\t\tmeshOutputGroup = this.rawMesh.subGroups[ name ];\r\n\t\t\tif ( meshOutputGroup.vertices.length > 0 ) {\r\n\r\n\t\t\t\tindices = meshOutputGroup.indices;\r\n\t\t\t\tif ( indices.length > 0 && absoluteIndexMappingsCount > 0 ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < indices.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tindices[ i ] = indices[ i ] + absoluteIndexMappingsCount;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmeshOutputGroupTemp.push( meshOutputGroup );\r\n\t\t\t\tabsoluteVertexCount += meshOutputGroup.vertices.length;\r\n\t\t\t\tabsoluteIndexMappingsCount += meshOutputGroup.indexMappingsCount;\r\n\t\t\t\tabsoluteIndexCount += meshOutputGroup.indices.length;\r\n\t\t\t\tabsoluteColorCount += meshOutputGroup.colors.length;\r\n\t\t\t\tabsoluteUvCount += meshOutputGroup.uvs.length;\r\n\t\t\t\tabsoluteNormalCount += meshOutputGroup.normals.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// do not continue if no result\r\n\t\tlet result = null;\r\n\t\tif ( meshOutputGroupTemp.length > 0 ) {\r\n\r\n\t\t\tresult = {\r\n\t\t\t\tname: this.rawMesh.groupName !== '' ? this.rawMesh.groupName : this.rawMesh.objectName,\r\n\t\t\t\tsubGroups: meshOutputGroupTemp,\r\n\t\t\t\tabsoluteVertexCount: absoluteVertexCount,\r\n\t\t\t\tabsoluteIndexCount: absoluteIndexCount,\r\n\t\t\t\tabsoluteColorCount: absoluteColorCount,\r\n\t\t\t\tabsoluteNormalCount: absoluteNormalCount,\r\n\t\t\t\tabsoluteUvCount: absoluteUvCount,\r\n\t\t\t\tfaceCount: this.rawMesh.counts.faceCount,\r\n\t\t\t\tdoubleIndicesCount: this.rawMesh.counts.doubleIndicesCount\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t_processCompletedMesh: function () {\r\n\r\n\t\tconst result = this._finalizeRawMesh();\r\n\t\tconst haveMesh = result !== null;\r\n\t\tif ( haveMesh ) {\r\n\r\n\t\t\tif ( this.colors.length > 0 && this.colors.length !== this.vertices.length ) {\r\n\r\n\t\t\t\tthis.callbacks.onError( 'Vertex Colors were detected, but vertex count and color count do not match!' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.logging.enabled && this.logging.debug ) console.debug( this._createRawMeshReport( this.inputObjectCount ) );\r\n\t\t\tthis.inputObjectCount ++;\r\n\r\n\t\t\tthis._buildMesh( result );\r\n\t\t\tconst progressBytesPercent = this.globalCounts.currentByte / this.globalCounts.totalBytes;\r\n\t\t\tthis._onProgress( 'Completed [o: ' + this.rawMesh.objectName + ' g:' + this.rawMesh.groupName + '' +\r\n\t\t\t\t'] Total progress: ' + ( progressBytesPercent * 100 ).toFixed( 2 ) + '%' );\r\n\t\t\tthis._resetRawMesh();\r\n\r\n\t\t}\r\n\r\n\t\treturn haveMesh;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * SubGroups are transformed to too intermediate format that is forwarded to the MeshReceiver.\r\n\t * It is ensured that SubGroups only contain objects with vertices (no need to check).\r\n\t *\r\n\t * @param result\r\n\t */\r\n\t_buildMesh: function ( result ) {\r\n\r\n\t\tconst meshOutputGroups = result.subGroups;\r\n\r\n\t\tconst vertexFA = new Float32Array( result.absoluteVertexCount );\r\n\t\tthis.globalCounts.vertices += result.absoluteVertexCount / 3;\r\n\t\tthis.globalCounts.faces += result.faceCount;\r\n\t\tthis.globalCounts.doubleIndicesCount += result.doubleIndicesCount;\r\n\t\tconst indexUA = ( result.absoluteIndexCount > 0 ) ? new Uint32Array( result.absoluteIndexCount ) : null;\r\n\t\tconst colorFA = ( result.absoluteColorCount > 0 ) ? new Float32Array( result.absoluteColorCount ) : null;\r\n\t\tconst normalFA = ( result.absoluteNormalCount > 0 ) ? new Float32Array( result.absoluteNormalCount ) : null;\r\n\t\tconst uvFA = ( result.absoluteUvCount > 0 ) ? new Float32Array( result.absoluteUvCount ) : null;\r\n\t\tconst haveVertexColors = colorFA !== null;\r\n\r\n\t\tlet meshOutputGroup;\r\n\t\tconst materialNames = [];\r\n\r\n\t\tconst createMultiMaterial = ( meshOutputGroups.length > 1 );\r\n\t\tlet materialIndex = 0;\r\n\t\tconst materialIndexMapping = [];\r\n\t\tlet selectedMaterialIndex;\r\n\t\tlet materialGroup;\r\n\t\tconst materialGroups = [];\r\n\r\n\t\tlet vertexFAOffset = 0;\r\n\t\tlet indexUAOffset = 0;\r\n\t\tlet colorFAOffset = 0;\r\n\t\tlet normalFAOffset = 0;\r\n\t\tlet uvFAOffset = 0;\r\n\t\tlet materialGroupOffset = 0;\r\n\t\tlet materialGroupLength = 0;\r\n\r\n\t\tlet materialOrg, material, materialName, materialNameOrg;\r\n\t\t// only one specific face type\r\n\t\tfor ( const oodIndex in meshOutputGroups ) {\r\n\r\n\t\t\tif ( ! meshOutputGroups.hasOwnProperty( oodIndex ) ) continue;\r\n\t\t\tmeshOutputGroup = meshOutputGroups[ oodIndex ];\r\n\r\n\t\t\tmaterialNameOrg = meshOutputGroup.materialName;\r\n\t\t\tif ( this.rawMesh.faceType < 4 ) {\r\n\r\n\t\t\t\tmaterialName = materialNameOrg + ( haveVertexColors ? '_vertexColor' : '' ) + ( meshOutputGroup.smoothingGroup === 0 ? '_flat' : '' );\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialName = this.rawMesh.faceType === 6 ? 'defaultPointMaterial' : 'defaultLineMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialOrg = this.materials[ materialNameOrg ];\r\n\t\t\tmaterial = this.materials[ materialName ];\r\n\r\n\t\t\t// both original and derived names do not lead to an existing material => need to use a default material\r\n\t\t\tif ( ( materialOrg === undefined || materialOrg === null ) && ( material === undefined || material === null ) ) {\r\n\r\n\t\t\t\tmaterialName = haveVertexColors ? 'defaultVertexColorMaterial' : 'defaultMaterial';\r\n\t\t\t\tmaterial = this.materials[ materialName ];\r\n\t\t\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\t\t\tconsole.info( 'object_group \"' + meshOutputGroup.objectName + '_' +\r\n\t\t\t\t\t\tmeshOutputGroup.groupName + '\" was defined with unresolvable material \"' +\r\n\t\t\t\t\t\tmaterialNameOrg + '\"! Assigning \"' + materialName + '\".' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material === undefined || material === null ) {\r\n\r\n\t\t\t\tconst materialCloneInstructions = {\r\n\t\t\t\t\tmaterialNameOrg: materialNameOrg,\r\n\t\t\t\t\tmaterialName: materialName,\r\n\t\t\t\t\tmaterialProperties: {\r\n\t\t\t\t\t\tvertexColors: haveVertexColors ? 2 : 0,\r\n\t\t\t\t\t\tflatShading: meshOutputGroup.smoothingGroup === 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\tcmd: 'assetAvailable',\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tmaterials: {\r\n\t\t\t\t\t\tmaterialCloneInstructions: materialCloneInstructions\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tthis.callbacks.onAssetAvailable( payload );\r\n\r\n\t\t\t\t// only set materials if they don't exist, yet\r\n\t\t\t\tconst matCheck = this.materials[ materialName ];\r\n\t\t\t\tif ( matCheck === undefined || matCheck === null ) {\r\n\r\n\t\t\t\t\tthis.materials[ materialName ] = materialCloneInstructions;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( createMultiMaterial ) {\r\n\r\n\t\t\t\t// re-use material if already used before. Reduces materials array size and eliminates duplicates\r\n\t\t\t\tselectedMaterialIndex = materialIndexMapping[ materialName ];\r\n\t\t\t\tif ( ! selectedMaterialIndex ) {\r\n\r\n\t\t\t\t\tselectedMaterialIndex = materialIndex;\r\n\t\t\t\t\tmaterialIndexMapping[ materialName ] = materialIndex;\r\n\t\t\t\t\tmaterialNames.push( materialName );\r\n\t\t\t\t\tmaterialIndex ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterialGroupLength = this.useIndices ? meshOutputGroup.indices.length : meshOutputGroup.vertices.length / 3;\r\n\t\t\t\tmaterialGroup = {\r\n\t\t\t\t\tstart: materialGroupOffset,\r\n\t\t\t\t\tcount: materialGroupLength,\r\n\t\t\t\t\tindex: selectedMaterialIndex\r\n\t\t\t\t};\r\n\t\t\t\tmaterialGroups.push( materialGroup );\r\n\t\t\t\tmaterialGroupOffset += materialGroupLength;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialNames.push( materialName );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvertexFA.set( meshOutputGroup.vertices, vertexFAOffset );\r\n\t\t\tvertexFAOffset += meshOutputGroup.vertices.length;\r\n\r\n\t\t\tif ( indexUA ) {\r\n\r\n\t\t\t\tindexUA.set( meshOutputGroup.indices, indexUAOffset );\r\n\t\t\t\tindexUAOffset += meshOutputGroup.indices.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colorFA ) {\r\n\r\n\t\t\t\tcolorFA.set( meshOutputGroup.colors, colorFAOffset );\r\n\t\t\t\tcolorFAOffset += meshOutputGroup.colors.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( normalFA ) {\r\n\r\n\t\t\t\tnormalFA.set( meshOutputGroup.normals, normalFAOffset );\r\n\t\t\t\tnormalFAOffset += meshOutputGroup.normals.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvFA ) {\r\n\r\n\t\t\t\tuvFA.set( meshOutputGroup.uvs, uvFAOffset );\r\n\t\t\t\tuvFAOffset += meshOutputGroup.uvs.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.logging.enabled && this.logging.debug ) {\r\n\r\n\t\t\t\tlet materialIndexLine = '';\r\n\t\t\t\tif ( selectedMaterialIndex ) {\r\n\r\n\t\t\t\t\tmaterialIndexLine = '\\n\\t\\tmaterialIndex: ' + selectedMaterialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst createdReport = '\\tOutput Object no.: ' + this.outputObjectCount +\r\n\t\t\t\t\t'\\n\\t\\tgroupName: ' + meshOutputGroup.groupName +\r\n\t\t\t\t\t'\\n\\t\\tIndex: ' + meshOutputGroup.index +\r\n\t\t\t\t\t'\\n\\t\\tfaceType: ' + this.rawMesh.faceType +\r\n\t\t\t\t\t'\\n\\t\\tmaterialName: ' + meshOutputGroup.materialName +\r\n\t\t\t\t\t'\\n\\t\\tsmoothingGroup: ' + meshOutputGroup.smoothingGroup +\r\n\t\t\t\t\tmaterialIndexLine +\r\n\t\t\t\t\t'\\n\\t\\tobjectName: ' + meshOutputGroup.objectName +\r\n\t\t\t\t\t'\\n\\t\\t#vertices: ' + meshOutputGroup.vertices.length / 3 +\r\n\t\t\t\t\t'\\n\\t\\t#indices: ' + meshOutputGroup.indices.length +\r\n\t\t\t\t\t'\\n\\t\\t#colors: ' + meshOutputGroup.colors.length / 3 +\r\n\t\t\t\t\t'\\n\\t\\t#uvs: ' + meshOutputGroup.uvs.length / 2 +\r\n\t\t\t\t\t'\\n\\t\\t#normals: ' + meshOutputGroup.normals.length / 3;\r\n\t\t\t\tconsole.debug( createdReport );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.outputObjectCount ++;\r\n\t\tthis.callbacks.onAssetAvailable(\r\n\t\t\t{\r\n\t\t\t\tcmd: 'assetAvailable',\r\n\t\t\t\ttype: 'mesh',\r\n\t\t\t\tprogress: {\r\n\t\t\t\t\tnumericalValue: this.globalCounts.currentByte / this.globalCounts.totalBytes\r\n\t\t\t\t},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tmeshName: result.name\r\n\t\t\t\t},\r\n\t\t\t\tmaterials: {\r\n\t\t\t\t\tmultiMaterial: createMultiMaterial,\r\n\t\t\t\t\tmaterialNames: materialNames,\r\n\t\t\t\t\tmaterialGroups: materialGroups\r\n\t\t\t\t},\r\n\t\t\t\tbuffers: {\r\n\t\t\t\t\tvertices: vertexFA,\r\n\t\t\t\t\tindices: indexUA,\r\n\t\t\t\t\tcolors: colorFA,\r\n\t\t\t\t\tnormals: normalFA,\r\n\t\t\t\t\tuvs: uvFA\r\n\t\t\t\t},\r\n\t\t\t\t// 0: mesh, 1: line, 2: point\r\n\t\t\t\tgeometryType: this.rawMesh.faceType < 4 ? 0 : ( this.rawMesh.faceType === 6 ) ? 2 : 1\r\n\t\t\t},\r\n\t\t\t[ vertexFA.buffer ],\r\n\t\t\tindexUA !== null ? [ indexUA.buffer ] : null,\r\n\t\t\tcolorFA !== null ? [ colorFA.buffer ] : null,\r\n\t\t\tnormalFA !== null ? [ normalFA.buffer ] : null,\r\n\t\t\tuvFA !== null ? [ uvFA.buffer ] : null\r\n\t\t);\r\n\r\n\t},\r\n\r\n\t_finalizeParsing: function () {\r\n\r\n\t\tif ( this.logging.enabled ) console.info( 'Global output object count: ' + this.outputObjectCount );\r\n\t\tif ( this._processCompletedMesh() && this.logging.enabled ) {\r\n\r\n\t\t\tconst parserFinalReport = 'Overall counts: ' +\r\n\t\t\t\t'\\n\\tVertices: ' + this.globalCounts.vertices +\r\n\t\t\t\t'\\n\\tFaces: ' + this.globalCounts.faces +\r\n\t\t\t\t'\\n\\tMultiple definitions: ' + this.globalCounts.doubleIndicesCount;\r\n\t\t\tconsole.info( parserFinalReport );\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\nexport { OBJLoader2Parser };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/OBJLoader2Parser.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\nimport {\r\n\tBufferAttribute,\r\n\tBufferGeometry,\r\n\tLineSegments,\r\n\tMesh,\r\n\tPoints\r\n} from \"@/components/build/three.module.js\";\r\n\r\n\r\n/**\r\n *\r\n * @param {MaterialHandler} materialHandler\r\n * @constructor\r\n */\r\nconst MeshReceiver = function ( materialHandler ) {\r\n\r\n\tthis.logging = {\r\n\t\tenabled: false,\r\n\t\tdebug: false\r\n\t};\r\n\r\n\tthis.callbacks = {\r\n\t\tonProgress: null,\r\n\t\tonMeshAlter: null\r\n\t};\r\n\tthis.materialHandler = materialHandler;\r\n\r\n};\r\n\r\nMeshReceiver.prototype = {\r\n\r\n\tconstructor: MeshReceiver,\r\n\r\n\t/**\r\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\r\n\t *\r\n\t * @param {boolean} enabled True or false.\r\n\t * @param {boolean} debug True or false.\r\n\t */\r\n\tsetLogging:\tfunction ( enabled, debug ) {\r\n\r\n\t\tthis.logging.enabled = enabled === true;\r\n\t\tthis.logging.debug = debug === true;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Function} onProgress\r\n\t * @param {Function} onMeshAlter\r\n\t * @private\r\n\t */\r\n\t_setCallbacks: function ( onProgress, onMeshAlter ) {\r\n\r\n\t\tif ( onProgress !== null && onProgress !== undefined && onProgress instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onProgress = onProgress;\r\n\r\n\t\t}\r\n\r\n\t\tif ( onMeshAlter !== null && onMeshAlter !== undefined && onMeshAlter instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onMeshAlter = onMeshAlter;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Builds one or multiple meshes from the data described in the payload (buffers, params, material info).\r\n\t *\r\n\t * @param {Object} meshPayload Raw mesh description (buffers, params, materials) used to build one to many meshes.\r\n\t * @returns {Mesh[]} mesh Array of {@link Mesh}\r\n\t */\r\n\tbuildMeshes: function ( meshPayload ) {\r\n\r\n\t\tconst meshName = meshPayload.params.meshName;\r\n\t\tconst buffers = meshPayload.buffers;\r\n\r\n\t\tconst bufferGeometry = new BufferGeometry();\r\n\t\tif ( buffers.vertices !== undefined && buffers.vertices !== null ) {\r\n\r\n\t\t\tbufferGeometry.setAttribute( 'position', new BufferAttribute( new Float32Array( buffers.vertices ), 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.indices !== undefined && buffers.indices !== null ) {\r\n\r\n\t\t\tbufferGeometry.setIndex( new BufferAttribute( new Uint32Array( buffers.indices ), 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.colors !== undefined && buffers.colors !== null ) {\r\n\r\n\t\t\tbufferGeometry.setAttribute( 'color', new BufferAttribute( new Float32Array( buffers.colors ), 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.normals !== undefined && buffers.normals !== null ) {\r\n\r\n\t\t\tbufferGeometry.setAttribute( 'normal', new BufferAttribute( new Float32Array( buffers.normals ), 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbufferGeometry.computeVertexNormals();\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.uvs !== undefined && buffers.uvs !== null ) {\r\n\r\n\t\t\tbufferGeometry.setAttribute( 'uv', new BufferAttribute( new Float32Array( buffers.uvs ), 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.skinIndex !== undefined && buffers.skinIndex !== null ) {\r\n\r\n\t\t\tbufferGeometry.setAttribute( 'skinIndex', new BufferAttribute( new Uint16Array( buffers.skinIndex ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( buffers.skinWeight !== undefined && buffers.skinWeight !== null ) {\r\n\r\n\t\t\tbufferGeometry.setAttribute( 'skinWeight', new BufferAttribute( new Float32Array( buffers.skinWeight ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tlet material, materialName, key;\r\n\t\tconst materialNames = meshPayload.materials.materialNames;\r\n\t\tconst createMultiMaterial = meshPayload.materials.multiMaterial;\r\n\t\tconst multiMaterials = [];\r\n\r\n\t\tfor ( key in materialNames ) {\r\n\r\n\t\t\tmaterialName = materialNames[ key ];\r\n\t\t\tmaterial = this.materialHandler.getMaterial( materialName );\r\n\t\t\tif ( createMultiMaterial ) multiMaterials.push( material );\r\n\r\n\t\t}\r\n\r\n\t\tif ( createMultiMaterial ) {\r\n\r\n\t\t\tmaterial = multiMaterials;\r\n\t\t\tconst materialGroups = meshPayload.materials.materialGroups;\r\n\t\t\tlet materialGroup;\r\n\t\t\tfor ( key in materialGroups ) {\r\n\r\n\t\t\t\tmaterialGroup = materialGroups[ key ];\r\n\t\t\t\tbufferGeometry.addGroup( materialGroup.start, materialGroup.count, materialGroup.index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst meshes = [];\r\n\t\tlet mesh;\r\n\t\tlet callbackOnMeshAlterResult;\r\n\t\tlet useOrgMesh = true;\r\n\t\tconst geometryType = meshPayload.geometryType === null ? 0 : meshPayload.geometryType;\r\n\r\n\t\tif ( this.callbacks.onMeshAlter ) {\r\n\r\n\t\t\tcallbackOnMeshAlterResult = this.callbacks.onMeshAlter(\r\n\t\t\t\t{\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tmeshName: meshName,\r\n\t\t\t\t\t\tbufferGeometry: bufferGeometry,\r\n\t\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\t\tgeometryType: geometryType\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\t// here LoadedMeshUserOverride is required to be provided by the callback used to alter the results\r\n\t\tif ( callbackOnMeshAlterResult ) {\r\n\r\n\t\t\tif ( callbackOnMeshAlterResult.isDisregardMesh() ) {\r\n\r\n\t\t\t\tuseOrgMesh = false;\r\n\r\n\t\t\t} else if ( callbackOnMeshAlterResult.providesAlteredMeshes() ) {\r\n\r\n\t\t\t\tfor ( const i in callbackOnMeshAlterResult.meshes ) {\r\n\r\n\t\t\t\t\tmeshes.push( callbackOnMeshAlterResult.meshes[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tuseOrgMesh = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( useOrgMesh ) {\r\n\r\n\t\t\tif ( meshPayload.computeBoundingSphere ) bufferGeometry.computeBoundingSphere();\r\n\t\t\tif ( geometryType === 0 ) {\r\n\r\n\t\t\t\tmesh = new Mesh( bufferGeometry, material );\r\n\r\n\t\t\t} else if ( geometryType === 1 ) {\r\n\r\n\t\t\t\tmesh = new LineSegments( bufferGeometry, material );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmesh = new Points( bufferGeometry, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmesh.name = meshName;\r\n\t\t\tmeshes.push( mesh );\r\n\r\n\t\t}\r\n\r\n\t\tlet progressMessage = meshPayload.params.meshName;\r\n\t\tif ( meshes.length > 0 ) {\r\n\r\n\t\t\tconst meshNames = [];\r\n\t\t\tfor ( const i in meshes ) {\r\n\r\n\t\t\t\tmesh = meshes[ i ];\r\n\t\t\t\tmeshNames[ i ] = mesh.name;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprogressMessage += ': Adding mesh(es) (' + meshNames.length + ': ' + meshNames + ') from input mesh: ' + meshName;\r\n\t\t\tprogressMessage += ' (' + ( meshPayload.progress.numericalValue * 100 ).toFixed( 2 ) + '%)';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprogressMessage += ': Not adding mesh: ' + meshName;\r\n\t\t\tprogressMessage += ' (' + ( meshPayload.progress.numericalValue * 100 ).toFixed( 2 ) + '%)';\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.callbacks.onProgress ) {\r\n\r\n\t\t\tthis.callbacks.onProgress( 'progress', progressMessage, meshPayload.progress.numericalValue );\r\n\r\n\t\t}\r\n\r\n\t\treturn meshes;\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Object to return by callback onMeshAlter. Used to disregard a certain mesh or to return one to many meshes.\r\n * @class\r\n *\r\n * @param {boolean} disregardMesh=false Tell implementation to completely disregard this mesh\r\n * @param {boolean} disregardMesh=false Tell implementation that mesh(es) have been altered or added\r\n */\r\nconst LoadedMeshUserOverride = function ( disregardMesh, alteredMesh ) {\r\n\r\n\tthis.disregardMesh = disregardMesh === true;\r\n\tthis.alteredMesh = alteredMesh === true;\r\n\tthis.meshes = [];\r\n\r\n};\r\n\r\n\r\nLoadedMeshUserOverride.prototype = {\r\n\r\n\tconstructor: LoadedMeshUserOverride,\r\n\r\n\t/**\r\n\t * Add a mesh created within callback.\r\n\t *\r\n\t * @param {Mesh} mesh\r\n\t */\r\n\taddMesh: function ( mesh ) {\r\n\r\n\t\tthis.meshes.push( mesh );\r\n\t\tthis.alteredMesh = true;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Answers if mesh shall be disregarded completely.\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tisDisregardMesh: function () {\r\n\r\n\t\treturn this.disregardMesh;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Answers if new mesh(es) were created.\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tprovidesAlteredMeshes: function () {\r\n\r\n\t\treturn this.alteredMesh;\r\n\r\n\t}\r\n};\r\n\r\nexport {\r\n\tMeshReceiver,\r\n\tLoadedMeshUserOverride\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/shared/MeshReceiver.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\nimport {\r\n\tLineBasicMaterial,\r\n\tMaterialLoader,\r\n\tMeshStandardMaterial,\r\n\tPointsMaterial\r\n} from \"@/components/build/three.module.js\";\r\n\r\n\r\nconst MaterialHandler = function () {\r\n\r\n\tthis.logging = {\r\n\t\tenabled: false,\r\n\t\tdebug: false\r\n\t};\r\n\r\n\tthis.callbacks = {\r\n\t\tonLoadMaterials: null\r\n\t};\r\n\tthis.materials = {};\r\n\r\n};\r\n\r\nMaterialHandler.prototype = {\r\n\r\n\tconstructor: MaterialHandler,\r\n\r\n\t/**\r\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\r\n\t *\r\n\t * @param {boolean} enabled True or false.\r\n\t * @param {boolean} debug True or false.\r\n\t */\r\n\tsetLogging:\tfunction ( enabled, debug ) {\r\n\r\n\t\tthis.logging.enabled = enabled === true;\r\n\t\tthis.logging.debug = debug === true;\r\n\r\n\t},\r\n\r\n\t_setCallbacks: function ( onLoadMaterials ) {\r\n\r\n\t\tif ( onLoadMaterials !== undefined && onLoadMaterials !== null && onLoadMaterials instanceof Function ) {\r\n\r\n\t\t\tthis.callbacks.onLoadMaterials = onLoadMaterials;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Creates default materials and adds them to the materials object.\r\n\t *\r\n\t * @param overrideExisting boolean Override existing material\r\n\t */\r\n\tcreateDefaultMaterials: function ( overrideExisting ) {\r\n\r\n\t\tconst defaultMaterial = new MeshStandardMaterial( { color: 0xDCF1FF } );\r\n\t\tdefaultMaterial.name = 'defaultMaterial';\r\n\r\n\t\tconst defaultVertexColorMaterial = new MeshStandardMaterial( { color: 0xDCF1FF } );\r\n\t\tdefaultVertexColorMaterial.name = 'defaultVertexColorMaterial';\r\n\t\tdefaultVertexColorMaterial.vertexColors = true;\r\n\r\n\t\tconst defaultLineMaterial = new LineBasicMaterial();\r\n\t\tdefaultLineMaterial.name = 'defaultLineMaterial';\r\n\r\n\t\tconst defaultPointMaterial = new PointsMaterial( { size: 0.1 } );\r\n\t\tdefaultPointMaterial.name = 'defaultPointMaterial';\r\n\r\n\t\tconst runtimeMaterials = {};\r\n\t\truntimeMaterials[ defaultMaterial.name ] = defaultMaterial;\r\n\t\truntimeMaterials[ defaultVertexColorMaterial.name ] = defaultVertexColorMaterial;\r\n\t\truntimeMaterials[ defaultLineMaterial.name ] = defaultLineMaterial;\r\n\t\truntimeMaterials[ defaultPointMaterial.name ] = defaultPointMaterial;\r\n\r\n\t\tthis.addMaterials( runtimeMaterials, overrideExisting );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Updates the materials with contained material objects (sync) or from alteration instructions (async).\r\n\t *\r\n\t * @param {Object} materialPayload Material update instructions\r\n\t * @returns {Object} Map of {@link Material}\r\n\t */\r\n\taddPayloadMaterials: function ( materialPayload ) {\r\n\r\n\t\tlet material, materialName;\r\n\t\tconst materialCloneInstructions = materialPayload.materials.materialCloneInstructions;\r\n\t\tlet newMaterials = {};\r\n\r\n\t\tif ( materialCloneInstructions !== undefined && materialCloneInstructions !== null ) {\r\n\r\n\t\t\tlet materialNameOrg = materialCloneInstructions.materialNameOrg;\r\n\t\t\tmaterialNameOrg = ( materialNameOrg !== undefined && materialNameOrg !== null ) ? materialNameOrg : \"\";\r\n\t\t\tconst materialOrg = this.materials[ materialNameOrg ];\r\n\t\t\tif ( materialOrg ) {\r\n\r\n\t\t\t\tmaterial = materialOrg.clone();\r\n\r\n\t\t\t\tmaterialName = materialCloneInstructions.materialName;\r\n\t\t\t\tmaterial.name = materialName;\r\n\r\n\t\t\t\tObject.assign( material, materialCloneInstructions.materialProperties );\r\n\r\n\t\t\t\tthis.materials[ materialName ] = material;\r\n\t\t\t\tnewMaterials[ materialName ] = material;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\t\t\tconsole.info( 'Requested material \"' + materialNameOrg + '\" is not available!' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet materials = materialPayload.materials.serializedMaterials;\r\n\r\n\t\tif ( materials !== undefined && materials !== null && Object.keys( materials ).length > 0 ) {\r\n\r\n\t\t\tconst loader = new MaterialLoader();\r\n\t\t\tlet materialJson;\r\n\r\n\t\t\tfor ( materialName in materials ) {\r\n\r\n\t\t\t\tmaterialJson = materials[ materialName ];\r\n\r\n\t\t\t\tif ( materialJson !== undefined && materialJson !== null ) {\r\n\r\n\t\t\t\t\tmaterial = loader.parse( materialJson );\r\n\r\n\t\t\t\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\t\t\t\tconsole.info( 'De-serialized material with name \"' + materialName + '\" will be added.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.materials[ materialName ] = material;\r\n\t\t\t\t\tnewMaterials[ materialName ] = material;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterials = materialPayload.materials.runtimeMaterials;\r\n\t\tnewMaterials = this.addMaterials( materials, true, newMaterials );\r\n\r\n\t\treturn newMaterials;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set materials loaded by any supplier of an Array of {@link Material}.\r\n\t *\r\n\t * @param materials Object with named {@link Material}\r\n\t * @param overrideExisting boolean Override existing material\r\n\t * @param newMaterials [Object] with named {@link Material}\r\n\t */\r\n\taddMaterials: function ( materials, overrideExisting, newMaterials ) {\r\n\r\n\t\tif ( newMaterials === undefined || newMaterials === null ) {\r\n\r\n\t\t\tnewMaterials = {};\r\n\r\n\t\t}\r\n\r\n\t\tif ( materials !== undefined && materials !== null && Object.keys( materials ).length > 0 ) {\r\n\r\n\t\t\tlet material;\r\n\t\t\tlet existingMaterial;\r\n\t\t\tlet add;\r\n\r\n\t\t\tfor ( const materialName in materials ) {\r\n\r\n\t\t\t\tmaterial = materials[ materialName ];\r\n\t\t\t\tadd = overrideExisting === true;\r\n\r\n\t\t\t\tif ( ! add ) {\r\n\r\n\t\t\t\t\texistingMaterial = this.materials[ materialName ];\r\n\t\t\t\t\tadd = ( existingMaterial === null || existingMaterial === undefined );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( add ) {\r\n\r\n\t\t\t\t\tthis.materials[ materialName ] = material;\r\n\t\t\t\t\tnewMaterials[ materialName ] = material;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.logging.enabled && this.logging.debug ) {\r\n\r\n\t\t\t\t\tconsole.info( 'Material with name \"' + materialName + '\" was added.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.callbacks.onLoadMaterials ) {\r\n\r\n\t\t\tthis.callbacks.onLoadMaterials( newMaterials );\r\n\r\n\t\t}\r\n\r\n\t\treturn newMaterials;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the mapping object of material name and corresponding material.\r\n\t *\r\n\t * @returns {Object} Map of {@link Material}\r\n\t */\r\n\tgetMaterials: function () {\r\n\r\n\t\treturn this.materials;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t *\r\n\t * @param {String} materialName\r\n\t * @returns {Material}\r\n\t */\r\n\tgetMaterial: function ( materialName ) {\r\n\r\n\t\treturn this.materials[ materialName ];\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the mapping object of material name and corresponding jsonified material.\r\n\t *\r\n\t * @returns {Object} Map of Materials in JSON representation\r\n\t */\r\n\tgetMaterialsJSON: function () {\r\n\r\n\t\tconst materialsJSON = {};\r\n\t\tlet material;\r\n\r\n\t\tfor ( const materialName in this.materials ) {\r\n\r\n\t\t\tmaterial = this.materials[ materialName ];\r\n\t\t\tmaterialsJSON[ materialName ] = material.toJSON();\r\n\r\n\t\t}\r\n\r\n\t\treturn materialsJSON;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Removes all materials\r\n\t */\r\n\tclearMaterials: function () {\r\n\r\n\t\tthis.materials = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { MaterialHandler };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/shared/MaterialHandler.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\nimport {\r\n\tFileLoader,\r\n\tObject3D,\r\n\tLoader\r\n} from \"@/components/build/three.module.js\";\r\n\r\nimport { OBJLoader2Parser } from \"./obj2/OBJLoader2Parser.js\";\r\nimport { MeshReceiver } from \"./obj2/shared/MeshReceiver.js\";\r\nimport { MaterialHandler } from \"./obj2/shared/MaterialHandler.js\";\r\n\r\n/**\r\n * Creates a new OBJLoader2. Use it to load OBJ data from files or to parse OBJ data from arraybuffer or text.\r\n *\r\n * @param {LoadingManager} [manager] The loadingManager for the loader to use. Default is {@link LoadingManager}\r\n * @constructor\r\n */\r\nconst OBJLoader2 = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n\tthis.parser = new OBJLoader2Parser();\r\n\r\n\tthis.modelName = '';\r\n\tthis.instanceNo = 0;\r\n\tthis.baseObject3d = new Object3D();\r\n\r\n\tthis.materialHandler = new MaterialHandler();\r\n\tthis.meshReceiver = new MeshReceiver( this.materialHandler );\r\n\r\n\t// as OBJLoader2 is no longer derived from OBJLoader2Parser, we need to override the default onAssetAvailable callback\r\n\tconst scope = this;\r\n\tconst defaultOnAssetAvailable = function ( payload ) {\r\n\r\n\t\tscope._onAssetAvailable( payload );\r\n\r\n\t};\r\n\r\n\tthis.parser.setCallbackOnAssetAvailable( defaultOnAssetAvailable );\r\n\r\n};\r\n\r\nOBJLoader2.OBJLOADER2_VERSION = '3.2.0';\r\nconsole.info( 'Using OBJLoader2 version: ' + OBJLoader2.OBJLOADER2_VERSION );\r\n\r\n\r\nOBJLoader2.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: OBJLoader2,\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setLogging}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetLogging: function ( enabled, debug ) {\r\n\r\n\t\tthis.parser.setLogging( enabled, debug );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setMaterialPerSmoothingGroup}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetMaterialPerSmoothingGroup: function ( materialPerSmoothingGroup ) {\r\n\r\n\t\tthis.parser.setMaterialPerSmoothingGroup( materialPerSmoothingGroup );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setUseOAsMesh}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetUseOAsMesh: function ( useOAsMesh ) {\r\n\r\n\t\tthis.parser.setUseOAsMesh( useOAsMesh );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setUseIndices}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetUseIndices: function ( useIndices ) {\r\n\r\n\t\tthis.parser.setUseIndices( useIndices );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setDisregardNormals}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetDisregardNormals: function ( disregardNormals ) {\r\n\r\n\t\tthis.parser.setDisregardNormals( disregardNormals );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set the name of the model.\r\n\t *\r\n\t * @param {string} modelName\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetModelName: function ( modelName ) {\r\n\r\n\t\tthis.modelName = modelName ? modelName : this.modelName;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set the node where the loaded objects will be attached directly.\r\n\t *\r\n\t * @param {Object3D} baseObject3d Object already attached to scenegraph where new meshes will be attached to\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetBaseObject3d: function ( baseObject3d ) {\r\n\r\n\t\tthis.baseObject3d = ( baseObject3d === undefined || baseObject3d === null ) ? this.baseObject3d : baseObject3d;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Add materials as associated array.\r\n\t *\r\n\t * @param {Object} materials Object with named {@link Material}\r\n\t * @param overrideExisting boolean Override existing material\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\taddMaterials: function ( materials, overrideExisting ) {\r\n\r\n\t\tthis.materialHandler.addMaterials( materials, overrideExisting );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setCallbackOnAssetAvailable}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetCallbackOnAssetAvailable: function ( onAssetAvailable ) {\r\n\r\n\t\tthis.parser.setCallbackOnAssetAvailable( onAssetAvailable );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setCallbackOnProgress}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetCallbackOnProgress: function ( onProgress ) {\r\n\r\n\t\tthis.parser.setCallbackOnProgress( onProgress );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setCallbackOnError}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetCallbackOnError: function ( onError ) {\r\n\r\n\t\tthis.parser.setCallbackOnError( onError );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2Parser.setCallbackOnLoad}\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetCallbackOnLoad: function ( onLoad ) {\r\n\r\n\t\tthis.parser.setCallbackOnLoad( onLoad );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Register a function that is called once a single mesh is available and it could be altered by the supplied function.\r\n\t *\r\n\t * @param {Function} [onMeshAlter]\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetCallbackOnMeshAlter: function ( onMeshAlter ) {\r\n\r\n\t\tthis.meshReceiver._setCallbacks( this.parser.callbacks.onProgress, onMeshAlter );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Register a function that is called once all materials have been loaded and they could be altered by the supplied function.\r\n\t *\r\n\t * @param {Function} [onLoadMaterials]\r\n\t * @return {OBJLoader2}\r\n\t */\r\n\tsetCallbackOnLoadMaterials: function ( onLoadMaterials ) {\r\n\r\n\t\tthis.materialHandler._setCallbacks( onLoadMaterials );\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Use this convenient method to load a file at the given URL. By default the fileLoader uses an ArrayBuffer.\r\n\t *\r\n\t * @param {string}  url A string containing the path/URL of the file to be loaded.\r\n\t * @param {function} onLoad A function to be called after loading is successfully completed. The function receives loaded Object3D as an argument.\r\n\t * @param {function} [onFileLoadProgress] A function to be called while the loading is in progress. The argument will be the XMLHttpRequest instance, which contains total and Integer bytes.\r\n\t * @param {function} [onError] A function to be called if an error occurs during loading. The function receives the error as an argument.\r\n\t * @param {function} [onMeshAlter] Called after every single mesh is made available by the parser\r\n\t */\r\n\tload: function ( url, onLoad, onFileLoadProgress, onError, onMeshAlter ) {\r\n\r\n\t\tconst scope = this;\r\n\t\tif ( onLoad === null || onLoad === undefined || ! ( onLoad instanceof Function ) ) {\r\n\r\n\t\t\tconst errorMessage = 'onLoad is not a function! Aborting...';\r\n\t\t\tscope.parser.callbacks.onError( errorMessage );\r\n\t\t\tthrow errorMessage;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.parser.setCallbackOnLoad( onLoad );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError === null || onError === undefined || ! ( onError instanceof Function ) ) {\r\n\r\n\t\t\tonError = function ( event ) {\r\n\r\n\t\t\t\tlet errorMessage = event;\r\n\r\n\t\t\t\tif ( event.currentTarget && event.currentTarget.statusText !== null ) {\r\n\r\n\t\t\t\t\terrorMessage = 'Error occurred while downloading!\\nurl: ' + event.currentTarget.responseURL + '\\nstatus: ' + event.currentTarget.statusText;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.parser.callbacks.onError( errorMessage );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! url ) {\r\n\r\n\t\t\tonError( 'An invalid url was provided. Unable to continue!' );\r\n\r\n\t\t}\r\n\r\n\t\tconst urlFull = new URL( url, window.location.href ).href;\r\n\t\tlet filename = urlFull;\r\n\t\tconst urlParts = urlFull.split( '/' );\r\n\t\tif ( urlParts.length > 2 ) {\r\n\r\n\t\t\tfilename = urlParts[ urlParts.length - 1 ];\r\n\t\t\tthis.path = urlParts.slice( 0, urlParts.length - 1 ).join( '/' ) + '/';\r\n\r\n\t\t}\r\n\r\n\t\tif ( onFileLoadProgress === null || onFileLoadProgress === undefined || ! ( onFileLoadProgress instanceof Function ) ) {\r\n\r\n\t\t\tlet numericalValueRef = 0;\r\n\t\t\tlet numericalValue = 0;\r\n\t\t\tonFileLoadProgress = function ( event ) {\r\n\r\n\t\t\t\tif ( ! event.lengthComputable ) return;\r\n\r\n\t\t\t\tnumericalValue = event.loaded / event.total;\r\n\r\n\t\t\t\tif ( numericalValue > numericalValueRef ) {\r\n\r\n\t\t\t\t\tnumericalValueRef = numericalValue;\r\n\t\t\t\t\tconst output = 'Download of \"' + url + '\": ' + ( numericalValue * 100 ).toFixed( 2 ) + '%';\r\n\t\t\t\t\tscope.parser.callbacks.onProgress( 'progressLoad', output, numericalValue );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.setCallbackOnMeshAlter( onMeshAlter );\r\n\t\tconst fileLoaderOnLoad = function ( content ) {\r\n\r\n\t\t\tscope.parser.callbacks.onLoad( scope.parse( content ), \"OBJLoader2#load: Parsing completed\" );\r\n\r\n\t\t};\r\n\r\n\t\tconst fileLoader = new FileLoader( this.manager );\r\n\t\tfileLoader.setPath( this.path || this.resourcePath );\r\n\t\tfileLoader.setResponseType( 'arraybuffer' );\r\n\t\tfileLoader.load( filename, fileLoaderOnLoad, onFileLoadProgress, onError );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Parses OBJ data synchronously from arraybuffer or string and returns the {@link Object3D}.\r\n\t *\r\n\t * @param {arraybuffer|string} content OBJ data as Uint8Array or String\r\n\t * @return {Object3D}\r\n\t */\r\n\tparse: function ( content ) {\r\n\r\n\t\t// fast-fail in case of illegal data\r\n\t\tif ( content === null || content === undefined ) {\r\n\r\n\t\t\tthrow 'Provided content is not a valid ArrayBuffer or String. Unable to continue parsing';\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.parser.logging.enabled ) {\r\n\r\n\t\t\tconsole.time( 'OBJLoader parse: ' + this.modelName );\r\n\r\n\t\t}\r\n\r\n\t\t// Create default materials beforehand, but do not override previously set materials (e.g. during init)\r\n\t\tthis.materialHandler.createDefaultMaterials( false );\r\n\r\n\t\t// code works directly on the material references, parser clear its materials before updating\r\n\t\tthis.parser.setMaterials( this.materialHandler.getMaterials() );\r\n\r\n\t\tif ( content instanceof ArrayBuffer || content instanceof Uint8Array ) {\r\n\r\n\t\t\tif ( this.parser.logging.enabled ) console.info( 'Parsing arrayBuffer...' );\r\n\t\t\tthis.parser.execute( content );\r\n\r\n\t\t} else if ( typeof ( content ) === 'string' || content instanceof String ) {\r\n\r\n\t\t\tif ( this.parser.logging.enabled ) console.info( 'Parsing text...' );\r\n\t\t\tthis.parser.executeLegacy( content );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.parser.callbacks.onError( 'Provided content was neither of type String nor Uint8Array! Aborting...' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.parser.logging.enabled ) {\r\n\r\n\t\t\tconsole.timeEnd( 'OBJLoader parse: ' + this.modelName );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.baseObject3d;\r\n\r\n\t},\r\n\r\n\t_onAssetAvailable: function ( payload ) {\r\n\r\n\t\tif ( payload.cmd !== 'assetAvailable' ) return;\r\n\r\n\t\tif ( payload.type === 'mesh' ) {\r\n\r\n\t\t\tconst meshes = this.meshReceiver.buildMeshes( payload );\r\n\t\t\tfor ( const mesh of meshes ) {\r\n\r\n\t\t\t\tthis.baseObject3d.add( mesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( payload.type === 'material' ) {\r\n\r\n\t\t\tthis.materialHandler.addPayloadMaterials( payload );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { OBJLoader2 };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/OBJLoader2.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\nimport { MTLLoader } from \"../../../../jsm/loaders/MTLLoader.js\";\r\n\r\n\r\nconst MtlObjBridge = {\r\n\r\n\t/**\r\n\t *\r\n\t * @param processResult\r\n\t * @param assetLoader\r\n\t */\r\n\tlink: function ( processResult, assetLoader ) {\r\n\r\n\t\tif ( typeof assetLoader.addMaterials === 'function' ) {\r\n\r\n\t\t\tassetLoader.addMaterials( this.addMaterialsFromMtlLoader( processResult ), true );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the array instance of {@link MTLLoader.MaterialCreator}.\r\n\t *\r\n\t * @param Instance of {@link MTLLoader.MaterialCreator}\r\n\t */\r\n\taddMaterialsFromMtlLoader: function ( materialCreator ) {\r\n\r\n\t\tlet newMaterials = {};\r\n\r\n\t\tif ( materialCreator instanceof MTLLoader.MaterialCreator ) {\r\n\r\n\t\t\tmaterialCreator.preload();\r\n\t\t\tnewMaterials = materialCreator.materials;\r\n\r\n\t\t}\r\n\r\n\t\treturn newMaterials;\r\n\r\n\t}\r\n};\r\n\r\nexport { MtlObjBridge };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/bridge/MtlObjBridge.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\n/**\r\n * These instructions are used by {WorkerExecutionSupport} to build code for the web worker or to assign code\r\n *\r\n * @param {boolean} supportsStandardWorker\r\n * @param {boolean} supportsJsmWorker\r\n * @constructor\r\n */\r\nconst CodeBuilderInstructions = function ( supportsStandardWorker, supportsJsmWorker, preferJsmWorker ) {\r\n\r\n\tthis.supportsStandardWorker = supportsStandardWorker;\r\n\tthis.supportsJsmWorker = supportsJsmWorker;\r\n\tthis.preferJsmWorker = preferJsmWorker;\r\n\tthis.startCode = '';\r\n\tthis.codeFragments = [];\r\n\tthis.importStatements = [];\r\n\r\n\tthis.jsmWorkerUrl = null;\r\n\tthis.defaultGeometryType = 0;\r\n\r\n};\r\n\r\nCodeBuilderInstructions.prototype = {\r\n\r\n\tconstructor: CodeBuilderInstructions,\r\n\r\n\tisSupportsStandardWorker: function () {\r\n\r\n\t\treturn this.supportsStandardWorker;\r\n\r\n\t},\r\n\r\n\tisSupportsJsmWorker: function () {\r\n\r\n\t\treturn this.supportsJsmWorker;\r\n\r\n\t},\r\n\r\n\tisPreferJsmWorker: function () {\r\n\r\n\t\treturn this.preferJsmWorker;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set the full path to the module that contains the worker code.\r\n\t *\r\n\t * @param {String} jsmWorkerUrl\r\n\t */\r\n\tsetJsmWorkerUrl: function ( jsmWorkerUrl ) {\r\n\r\n\t\tif ( jsmWorkerUrl !== undefined && jsmWorkerUrl !== null ) {\r\n\r\n\t\t\tthis.jsmWorkerUrl = jsmWorkerUrl;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Add code that is contained in addition to fragments and libraries\r\n\t * @param {String} startCode\r\n\t */\r\n\taddStartCode: function ( startCode ) {\r\n\r\n\t\tthis.startCode = startCode;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Add code fragment that is included in the provided order\r\n\t * @param {String} code\r\n\t */\r\n\taddCodeFragment: function ( code ) {\r\n\r\n\t\tthis.codeFragments.push( code );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Add full path to a library that is contained at the start of the worker via \"importScripts\"\r\n\t * @param {String} libraryPath\r\n\t */\r\n\taddLibraryImport: function ( libraryPath ) {\r\n\r\n\t\tconst libraryUrl = new URL( libraryPath, window.location.href ).href;\r\n\t\tconst code = 'importScripts( \"' + libraryUrl + '\" );';\r\n\t\tthis.importStatements.push(\tcode );\r\n\r\n\t},\r\n\r\n\tgetImportStatements: function () {\r\n\r\n\t\treturn this.importStatements;\r\n\r\n\t},\r\n\r\n\tgetCodeFragments: function () {\r\n\r\n\t\treturn this.codeFragments;\r\n\r\n\t},\r\n\r\n\tgetStartCode: function () {\r\n\r\n\t\treturn this.startCode;\r\n\r\n\t}\r\n\r\n};\r\n/**\r\n * This class provides means to transform existing parser code into a web worker. It defines a simple communication protocol\r\n * which allows to configure the worker and receive raw mesh data during execution.\r\n * @class\r\n */\r\nconst WorkerExecutionSupport = function () {\r\n\r\n\t// check worker support first\r\n\tif ( window.Worker === undefined ) throw \"This browser does not support web workers!\";\r\n\tif ( window.Blob === undefined ) throw \"This browser does not support Blob!\";\r\n\tif ( typeof window.URL.createObjectURL !== 'function' ) throw \"This browser does not support Object creation from URL!\";\r\n\r\n\tthis._reset();\r\n\r\n};\r\n\r\nWorkerExecutionSupport.WORKER_SUPPORT_VERSION = '3.2.0';\r\nconsole.info( 'Using WorkerSupport version: ' + WorkerExecutionSupport.WORKER_SUPPORT_VERSION );\r\n\r\n\r\nWorkerExecutionSupport.prototype = {\r\n\r\n\tconstructor: WorkerExecutionSupport,\r\n\r\n\t_reset: function () {\r\n\r\n\t\tthis.logging = {\r\n\t\t\tenabled: false,\r\n\t\t\tdebug: false\r\n\t\t};\r\n\r\n\t\tconst scope = this;\r\n\t\tconst scopeTerminate = function ( ) {\r\n\r\n\t\t\tscope._terminate();\r\n\r\n\t\t};\r\n\r\n\t\tthis.worker = {\r\n\t\t\tnative: null,\r\n\t\t\tjsmWorker: false,\r\n\t\t\tlogging: true,\r\n\t\t\tworkerRunner: {\r\n\t\t\t\tname: 'WorkerRunner',\r\n\t\t\t\tusesMeshDisassembler: false,\r\n\t\t\t\tdefaultGeometryType: 0\r\n\t\t\t},\r\n\t\t\tterminateWorkerOnLoad: true,\r\n\t\t\tforceWorkerDataCopy: false,\r\n\t\t\tstarted: false,\r\n\t\t\tqueuedMessage: null,\r\n\t\t\tcallbacks: {\r\n\t\t\t\tonAssetAvailable: null,\r\n\t\t\t\tonLoad: null,\r\n\t\t\t\tterminate: scopeTerminate\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\r\n\t *\r\n\t * @param {boolean} enabled True or false.\r\n\t * @param {boolean} debug True or false.\r\n\t */\r\n\tsetLogging: function ( enabled, debug ) {\r\n\r\n\t\tthis.logging.enabled = enabled === true;\r\n\t\tthis.logging.debug = debug === true;\r\n\t\tthis.worker.logging = enabled === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Forces all ArrayBuffers to be transferred to worker to be copied.\r\n\t *\r\n\t * @param {boolean} forceWorkerDataCopy True or false.\r\n\t */\r\n\tsetForceWorkerDataCopy: function ( forceWorkerDataCopy ) {\r\n\r\n\t\tthis.worker.forceWorkerDataCopy = forceWorkerDataCopy === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Request termination of worker once parser is finished.\r\n\t *\r\n\t * @param {boolean} terminateWorkerOnLoad True or false.\r\n\t */\r\n\tsetTerminateWorkerOnLoad: function ( terminateWorkerOnLoad ) {\r\n\r\n\t\tthis.worker.terminateWorkerOnLoad = terminateWorkerOnLoad === true;\r\n\t\tif ( this.worker.terminateWorkerOnLoad && this.isWorkerLoaded( this.worker.jsmWorker ) &&\r\n\t\t\t\tthis.worker.queuedMessage === null && this.worker.started ) {\r\n\r\n\t\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\t\tconsole.info( 'Worker is terminated immediately as it is not running!' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._terminate();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Update all callbacks.\r\n\t *\r\n\t * @param {Function} onAssetAvailable The function for processing the data, e.g. {@link MeshReceiver}.\r\n\t * @param {Function} [onLoad] The function that is called when parsing is complete.\r\n\t */\r\n\tupdateCallbacks: function ( onAssetAvailable, onLoad ) {\r\n\r\n\t\tif ( onAssetAvailable !== undefined && onAssetAvailable !== null ) {\r\n\r\n\t\t\tthis.worker.callbacks.onAssetAvailable = onAssetAvailable;\r\n\r\n\t\t}\r\n\r\n\t\tif ( onLoad !== undefined && onLoad !== null ) {\r\n\r\n\t\t\tthis.worker.callbacks.onLoad = onLoad;\r\n\r\n\t\t}\r\n\r\n\t\tthis._verifyCallbacks();\r\n\r\n\t},\r\n\r\n\t_verifyCallbacks: function () {\r\n\r\n\t\tif ( this.worker.callbacks.onAssetAvailable === undefined || this.worker.callbacks.onAssetAvailable === null ) {\r\n\r\n\t\t\tthrow 'Unable to run as no \"onAssetAvailable\" callback is set.';\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Builds the worker code according the provided Instructions.\r\n\t * If jsm worker code shall be built, then function may fall back to standard if lag is set\r\n\t *\r\n \t * @param {CodeBuilderInstructions} codeBuilderInstructions\r\n\t */\r\n\tbuildWorker: function ( codeBuilderInstructions ) {\r\n\r\n\t\tlet jsmSuccess = false;\r\n\r\n\t\tif ( codeBuilderInstructions.isSupportsJsmWorker() && codeBuilderInstructions.isPreferJsmWorker() ) {\r\n\r\n\t\t\tjsmSuccess = this._buildWorkerJsm( codeBuilderInstructions );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! jsmSuccess && codeBuilderInstructions.isSupportsStandardWorker() ) {\r\n\r\n\t\t\tthis._buildWorkerStandard( codeBuilderInstructions );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t *\r\n\t * @param {CodeBuilderInstructions} codeBuilderInstructions\r\n\t * @return {boolean} Whether loading of jsm worker was successful\r\n\t * @private\r\n\t */\r\n\t_buildWorkerJsm: function ( codeBuilderInstructions ) {\r\n\r\n\t\tlet jsmSuccess = true;\r\n\t\tconst timeLabel = 'buildWorkerJsm';\r\n\t\tconst workerAvailable = this._buildWorkerCheckPreconditions( true, timeLabel );\r\n\t\tif ( ! workerAvailable ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tconst worker = new Worker( codeBuilderInstructions.jsmWorkerUrl.href, { type: \"module\" } );\r\n\t\t\t\tthis._configureWorkerCommunication( worker, true, codeBuilderInstructions.defaultGeometryType, timeLabel );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tjsmSuccess = false;\r\n\t\t\t\t// Chrome throws this exception, but Firefox currently does not complain, but can't execute the worker afterwards\r\n\t\t\t\tif ( e instanceof TypeError || e instanceof SyntaxError ) {\r\n\r\n\t\t\t\t\tconsole.error( \"Modules are not supported in workers.\" );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn jsmSuccess;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Validate the status of worker code and the derived worker and specify functions that should be build when new raw mesh data becomes available and when the parser is finished.\r\n\t *\r\n\t * @param {CodeBuilderIns} buildWorkerCode The function that is invoked to create the worker code of the parser.\r\n\t */\r\n\r\n\t/**\r\n\t *\r\n\t * @param {CodeBuilderInstructions} codeBuilderInstructions\r\n\t * @private\r\n\t */\r\n\t_buildWorkerStandard: function ( codeBuilderInstructions ) {\r\n\r\n\t\tconst timeLabel = 'buildWorkerStandard';\r\n\t\tconst workerAvailable = this._buildWorkerCheckPreconditions( false, timeLabel );\r\n\t\tif ( ! workerAvailable ) {\r\n\r\n\t\t\tlet concatenateCode = '';\r\n\t\t\tcodeBuilderInstructions.getImportStatements().forEach( function ( element ) {\r\n\r\n\t\t\t\tconcatenateCode += element + '\\n';\r\n\r\n\t\t\t} );\r\n\t\t\tconcatenateCode += '\\n';\r\n\t\t\tcodeBuilderInstructions.getCodeFragments().forEach( function ( element ) {\r\n\r\n\t\t\t\tconcatenateCode += element + '\\n';\r\n\r\n\t\t\t} );\r\n\t\t\tconcatenateCode += '\\n';\r\n\t\t\tconcatenateCode += codeBuilderInstructions.getStartCode();\r\n\r\n\t\t\tconst blob = new Blob( [ concatenateCode ], { type: 'application/javascript' } );\r\n\t\t\tconst worker = new Worker( window.URL.createObjectURL( blob ) );\r\n\r\n\t\t\tthis._configureWorkerCommunication( worker, false, codeBuilderInstructions.defaultGeometryType, timeLabel );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_buildWorkerCheckPreconditions: function ( requireJsmWorker, timeLabel ) {\r\n\r\n\t\tlet workerAvailable = false;\r\n\t\tif ( this.isWorkerLoaded( requireJsmWorker ) ) {\r\n\r\n\t\t\tworkerAvailable = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\t\tconsole.info( 'WorkerExecutionSupport: Building ' + ( requireJsmWorker ? 'jsm' : 'standard' ) + ' worker code...' );\r\n\t\t\t\tconsole.time( timeLabel );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn workerAvailable;\r\n\r\n\t},\r\n\r\n\t_configureWorkerCommunication: function ( worker, haveJsmWorker, defaultGeometryType, timeLabel ) {\r\n\r\n\t\tthis.worker.native = worker;\r\n\t\tthis.worker.jsmWorker = haveJsmWorker;\r\n\r\n\t\tconst scope = this;\r\n\t\tconst scopedReceiveWorkerMessage = function ( event ) {\r\n\r\n\t\t\tscope._receiveWorkerMessage( event );\r\n\r\n\t\t};\r\n\r\n\t\tthis.worker.native.onmessage = scopedReceiveWorkerMessage;\r\n\t\tthis.worker.native.onerror = scopedReceiveWorkerMessage;\r\n\t\tif ( defaultGeometryType !== undefined && defaultGeometryType !== null ) {\r\n\r\n\t\t\tthis.worker.workerRunner.defaultGeometryType = defaultGeometryType;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.logging.enabled ) {\r\n\r\n\t\t\tconsole.timeEnd( timeLabel );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Returns if Worker code is available and complies with expectation.\r\n\t * @param {boolean} requireJsmWorker\r\n\t * @return {boolean|*}\r\n\t */\r\n\tisWorkerLoaded: function ( requireJsmWorker ) {\r\n\r\n\t\treturn this.worker.native !== null &&\r\n\t\t\t( ( requireJsmWorker && this.worker.jsmWorker ) || ( ! requireJsmWorker && ! this.worker.jsmWorker ) );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Executed in worker scope\r\n\t */\r\n\t_receiveWorkerMessage: function ( event ) {\r\n\r\n\t\t// fast-fail in case of error\r\n\t\tif ( event.type === \"error\" ) {\r\n\r\n\t\t\tconsole.error( event );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst payload = event.data;\r\n\t\tconst workerRunnerName = this.worker.workerRunner.name;\r\n\t\tswitch ( payload.cmd ) {\r\n\r\n\t\t\tcase 'assetAvailable':\r\n\t\t\t\tthis.worker.callbacks.onAssetAvailable( payload );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'completeOverall':\r\n\t\t\t\tthis.worker.queuedMessage = null;\r\n\t\t\t\tthis.worker.started = false;\r\n\t\t\t\tif ( this.worker.callbacks.onLoad !== null ) {\r\n\r\n\t\t\t\t\tthis.worker.callbacks.onLoad( payload.msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.worker.terminateWorkerOnLoad ) {\r\n\r\n\t\t\t\t\tif ( this.worker.logging.enabled ) {\r\n\r\n\t\t\t\t\t\tconsole.info( 'WorkerSupport [' + workerRunnerName + ']: Run is complete. Terminating application on request!' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.worker.callbacks.terminate();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'error':\r\n\t\t\t\tconsole.error( 'WorkerSupport [' + workerRunnerName + ']: Reported error: ' + payload.msg );\r\n\t\t\t\tthis.worker.queuedMessage = null;\r\n\t\t\t\tthis.worker.started = false;\r\n\t\t\t\tif ( this.worker.callbacks.onLoad !== null ) {\r\n\r\n\t\t\t\t\tthis.worker.callbacks.onLoad( payload.msg );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.worker.terminateWorkerOnLoad ) {\r\n\r\n\t\t\t\t\tif ( this.worker.logging.enabled ) {\r\n\r\n\t\t\t\t\t\tconsole.info( 'WorkerSupport [' + workerRunnerName + ']: Run reported error. Terminating application on request!' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.worker.callbacks.terminate();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error( 'WorkerSupport [' + workerRunnerName + ']: Received unknown command: ' + payload.cmd );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Runs the parser with the provided configuration.\r\n\t *\r\n\t * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\r\n\t */\r\n\texecuteParallel: function ( payload, transferables ) {\r\n\r\n\t\tpayload.cmd = 'parse';\r\n\t\tpayload.usesMeshDisassembler = this.worker.workerRunner.usesMeshDisassembler;\r\n\t\tpayload.defaultGeometryType = this.worker.workerRunner.defaultGeometryType;\r\n\t\tif ( ! this._verifyWorkerIsAvailable( payload, transferables ) ) return;\r\n\r\n\t\tthis._postMessage();\r\n\r\n\t},\r\n\r\n\t_verifyWorkerIsAvailable: function ( payload, transferables ) {\r\n\r\n\t\tthis._verifyCallbacks();\r\n\t\tlet ready = true;\r\n\t\tif ( this.worker.queuedMessage !== null ) {\r\n\r\n\t\t\tconsole.warn( 'Already processing message. Rejecting new run instruction' );\r\n\t\t\tready = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.worker.queuedMessage = {\r\n\t\t\t\tpayload: payload,\r\n\t\t\t\ttransferables: ( transferables === undefined || transferables === null ) ? [] : transferables\r\n\t\t\t};\r\n\t\t\tthis.worker.started = true;\r\n\r\n\t\t}\r\n\r\n\t\treturn ready;\r\n\r\n\t},\r\n\r\n\t_postMessage: function () {\r\n\r\n\t\tif ( this.worker.queuedMessage !== null ) {\r\n\r\n\t\t\tif ( this.worker.queuedMessage.payload.data.input instanceof ArrayBuffer ) {\r\n\r\n\t\t\t\tlet transferables = [];\r\n\t\t\t\tif ( this.worker.forceWorkerDataCopy ) {\r\n\r\n\t\t\t\t\ttransferables.push( this.worker.queuedMessage.payload.data.input.slice( 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttransferables.push( this.worker.queuedMessage.payload.data.input );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.worker.queuedMessage.transferables.length > 0 ) {\r\n\r\n\t\t\t\t\ttransferables = transferables.concat( this.worker.queuedMessage.transferables );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.worker.native.postMessage( this.worker.queuedMessage.payload, transferables );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.worker.native.postMessage( this.worker.queuedMessage.payload );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_terminate: function () {\r\n\r\n\t\tthis.worker.native.terminate();\r\n\t\tthis._reset();\r\n\r\n\t}\r\n};\r\n\r\nexport {\r\n\tCodeBuilderInstructions,\r\n\tWorkerExecutionSupport\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/worker/main/WorkerExecutionSupport.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\nconst CodeSerializer = {\r\n\r\n\t/**\r\n\t * Serialize an object with specific prototype definition.\r\n\t *\r\n\t * @param {Object} targetPrototype The object that should be serialized\r\n\t * @param {Object} targetPrototypeInstance An instance of the oriobject that should be serialized\r\n\t * @param {String} [basePrototypeName] Name of the prototype\r\n\t * @param {Object} [overrideFunctions} Array of {@Link CodeSerializationInstruction} allows to replace or remove function with provided content\r\n\t *\r\n\t * @returns {String}\r\n\t */\r\n\tserializeClass: function ( targetPrototype, targetPrototypeInstance, basePrototypeName, overrideFunctions ) {\r\n\r\n\t\tlet objectPart, constructorString, i, funcInstructions, funcTemp;\r\n\t\tconst fullObjectName = targetPrototypeInstance.constructor.name;\r\n\t\tconst prototypeFunctions = [];\r\n\t\tconst objectProperties = [];\r\n\t\tconst objectFunctions = [];\r\n\t\tconst isExtended = ( basePrototypeName !== null && basePrototypeName !== undefined );\r\n\r\n\t\tif ( ! Array.isArray( overrideFunctions ) ) overrideFunctions = [];\r\n\r\n\t\tfor ( const name in targetPrototype.prototype ) {\r\n\r\n\t\t\tobjectPart = targetPrototype.prototype[ name ];\r\n\t\t\tfuncInstructions = new CodeSerializationInstruction( name, fullObjectName + '.prototype.' + name );\r\n\t\t\tfuncInstructions.setCode( objectPart.toString() );\r\n\r\n\t\t\tif ( name === 'constructor' ) {\r\n\r\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\r\n\r\n\t\t\t\t\tconstructorString = fullObjectName + ' = ' + funcInstructions.getCode() + ';\\n\\n';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( typeof objectPart === 'function' ) {\r\n\r\n\t\t\t\tfuncTemp = overrideFunctions[ name ];\r\n\r\n\t\t\t\tif ( funcTemp instanceof CodeSerializationInstruction && funcTemp.getName() === funcInstructions.getName() ) {\r\n\r\n\t\t\t\t\tfuncInstructions = funcTemp;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\r\n\r\n\t\t\t\t\tif ( isExtended ) {\r\n\r\n\t\t\t\t\t\tprototypeFunctions.push( funcInstructions.getFullName() + ' = ' + funcInstructions.getCode() + ';\\n\\n' );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tprototypeFunctions.push( '\\t' + funcInstructions.getName() + ': ' + funcInstructions.getCode() + ',\\n\\n' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const name in targetPrototype ) {\r\n\r\n\t\t\tobjectPart = targetPrototype[ name ];\r\n\t\t\tfuncInstructions = new CodeSerializationInstruction( name, fullObjectName + '.' + name );\r\n\r\n\t\t\tif ( typeof objectPart === 'function' ) {\r\n\r\n\t\t\t\tfuncTemp = overrideFunctions[ name ];\r\n\t\t\t\tif ( funcTemp instanceof CodeSerializationInstruction && funcTemp.getName() === funcInstructions.getName() ) {\r\n\r\n\t\t\t\t\tfuncInstructions = funcTemp;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfuncInstructions.setCode( objectPart.toString() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\r\n\r\n\t\t\t\t\tobjectFunctions.push( funcInstructions.getFullName() + ' = ' + funcInstructions.getCode() + ';\\n\\n' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( typeof ( objectPart ) === 'string' || objectPart instanceof String ) {\r\n\r\n\t\t\t\t\tfuncInstructions.setCode( '\\\"' + objectPart.toString() + '\\\"' );\r\n\r\n\t\t\t\t} else if ( typeof objectPart === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.log( 'Omitting object \"' + funcInstructions.getName() + '\" and replace it with empty object.' );\r\n\t\t\t\t\tfuncInstructions.setCode( \"{}\" );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfuncInstructions.setCode( objectPart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! funcInstructions.isRemoveCode() ) {\r\n\r\n\t\t\t\t\tobjectProperties.push( funcInstructions.getFullName() + ' = ' + funcInstructions.getCode() + ';\\n' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet objectString = constructorString + '\\n\\n';\r\n\r\n\t\tif ( isExtended ) {\r\n\r\n\t\t\tobjectString += fullObjectName + '.prototype = Object.create( ' + basePrototypeName + '.prototype );\\n';\r\n\r\n\t\t}\r\n\r\n\t\tobjectString += fullObjectName + '.prototype.constructor = ' + fullObjectName + ';\\n';\r\n\t\tobjectString += '\\n\\n';\r\n\r\n\t\tfor ( i = 0; i < objectProperties.length; i ++ ) {\r\n\r\n\t\t\tobjectString += objectProperties[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tobjectString += '\\n\\n';\r\n\r\n\t\tfor ( i = 0; i < objectFunctions.length; i ++ ) {\r\n\r\n\t\t\tobjectString += objectFunctions[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tobjectString += '\\n\\n';\r\n\r\n\t\tif ( isExtended ) {\r\n\r\n\t\t\tfor ( i = 0; i < prototypeFunctions.length; i ++ ) {\r\n\r\n\t\t\t\tobjectString += prototypeFunctions[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobjectString += fullObjectName + '.prototype = {\\n\\n';\r\n\t\t\tfor ( i = 0; i < prototypeFunctions.length; i ++ ) {\r\n\r\n\t\t\t\tobjectString += prototypeFunctions[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobjectString += '\\n};';\r\n\r\n\t\t}\r\n\r\n\t\tobjectString += '\\n\\n';\r\n\r\n\t\treturn objectString;\r\n\r\n\t},\r\n};\r\n\r\n/**\r\n * Allows to define instructions to override or remove\r\n * @param {String} name Usually the name of a function\r\n * @param {String} fullName The name plus full object description\r\n * @constructor\r\n */\r\nconst CodeSerializationInstruction = function ( name, fullName ) {\r\n\r\n\tthis.name = name;\r\n\tthis.fullName = fullName;\r\n\tthis.code = null;\r\n\tthis.removeCode = false;\r\n\r\n};\r\n\r\nCodeSerializationInstruction.prototype = {\r\n\r\n\tconstructor: CodeSerializationInstruction,\r\n\r\n\t/**\r\n\t * Returns the name of the function\r\n\t * @return {String}\r\n\t */\r\n\tgetName: function () {\r\n\r\n\t\treturn this.name;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the full name of the function\r\n\t * @return {String}\r\n\t */\r\n\tgetFullName: function () {\r\n\r\n\t\treturn this.fullName;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set the string containing the serialized function\r\n\t * @param {String} code\r\n\t * @return {CodeSerializationInstruction}\r\n\t */\r\n\tsetCode: function ( code ) {\r\n\r\n\t\tthis.code = code;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Returns the serialized function code\r\n\t * @return {String}\r\n\t */\r\n\tgetCode: function () {\r\n\r\n\t\treturn this.code;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set if function should be removed\r\n\t * @param {boolean} removeCode\r\n\t * @return {CodeSerializationInstruction}\r\n\t */\r\n\tsetRemoveCode: function ( removeCode ) {\r\n\r\n\t\tthis.removeCode = removeCode;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * If function should be completely removed\r\n\t * @return {boolean}\r\n\t */\r\n\tisRemoveCode: function () {\r\n\r\n\t\treturn this.removeCode;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport {\r\n\tCodeSerializer,\r\n\tCodeSerializationInstruction\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/utils/CodeSerializer.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\nconst ObjectManipulator = function () {\r\n};\r\n\r\nObjectManipulator.prototype = {\r\n\r\n\tconstructor: ObjectManipulator,\r\n\r\n\t/**\r\n\t * Applies values from parameter object via set functions or via direct assignment.\r\n\t *\r\n\t * @param {Object} objToAlter The objToAlter instance\r\n\t * @param {Object} params The parameter object\r\n\t * @param {boolean} forceCreation Force the creation of a property\r\n\t */\r\n\tapplyProperties: function ( objToAlter, params, forceCreation ) {\r\n\r\n\t\t// fast-fail\r\n\t\tif ( objToAlter === undefined || objToAlter === null || params === undefined || params === null ) return;\r\n\r\n\t\tlet property, funcName, values;\r\n\t\tfor ( property in params ) {\r\n\r\n\t\t\tfuncName = 'set' + property.substring( 0, 1 ).toLocaleUpperCase() + property.substring( 1 );\r\n\t\t\tvalues = params[ property ];\r\n\r\n\t\t\tif ( typeof objToAlter[ funcName ] === 'function' ) {\r\n\r\n\t\t\t\tobjToAlter[ funcName ]( values );\r\n\r\n\t\t\t} else if ( objToAlter.hasOwnProperty( property ) || forceCreation ) {\r\n\r\n\t\t\t\tobjToAlter[ property ] = values;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\nconst DefaultWorkerPayloadHandler = function ( parser ) {\r\n\r\n\tthis.parser = parser;\r\n\tthis.logging = {\r\n\t\tenabled: false,\r\n\t\tdebug: false\r\n\t};\r\n\r\n};\r\n\r\nDefaultWorkerPayloadHandler.prototype = {\r\n\r\n\tconstructor: DefaultWorkerPayloadHandler,\r\n\r\n\thandlePayload: function ( payload ) {\r\n\r\n\t\tif ( payload.logging ) {\r\n\r\n\t\t\tthis.logging.enabled = payload.logging.enabled === true;\r\n\t\t\tthis.logging.debug = payload.logging.debug === true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( payload.cmd === 'parse' ) {\r\n\r\n\t\t\tconst scope = this;\r\n\t\t\tconst callbacks = {\r\n\t\t\t\tcallbackOnAssetAvailable: function ( payload ) {\r\n\r\n\t\t\t\t\tself.postMessage( payload );\r\n\r\n\t\t\t\t},\r\n\t\t\t\tcallbackOnProgress: function ( text ) {\r\n\r\n\t\t\t\t\tif ( scope.logging.enabled && scope.logging.debug ) console.debug( 'WorkerRunner: progress: ' + text );\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst parser = this.parser;\r\n\t\t\tif ( typeof parser[ 'setLogging' ] === 'function' ) {\r\n\r\n\t\t\t\tparser.setLogging( this.logging.enabled, this.logging.debug );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst objectManipulator = new ObjectManipulator();\r\n\t\t\tobjectManipulator.applyProperties( parser, payload.params, false );\r\n\t\t\tobjectManipulator.applyProperties( parser, callbacks, false );\r\n\r\n\t\t\tconst arraybuffer = payload.data.input;\r\n\t\t\tlet executeFunctionName = 'execute';\r\n\t\t\tif ( typeof parser.getParseFunctionName === 'function' ) executeFunctionName = parser.getParseFunctionName();\r\n\t\t\tif ( payload.usesMeshDisassembler ) {\r\n\r\n\t\t\t\t// TODO: Allow to plug and use generic MeshDisassembler\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tparser[ executeFunctionName ]( arraybuffer, payload.data.options );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.logging.enabled ) console.log( 'WorkerRunner: Run complete!' );\r\n\r\n\t\t\tself.postMessage( {\r\n\t\t\t\tcmd: 'completeOverall',\r\n\t\t\t\tmsg: 'WorkerRunner completed run.'\r\n\t\t\t} );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'WorkerRunner: Received unknown command: ' + payload.cmd );\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Default implementation of the WorkerRunner responsible for creation and configuration of the parser within the worker.\r\n * @constructor\r\n */\r\nconst WorkerRunner = function ( payloadHandler ) {\r\n\r\n\tthis.payloadHandler = payloadHandler;\r\n\r\n\tconst scope = this;\r\n\tconst scopedRunner = function ( event ) {\r\n\r\n\t\tscope.processMessage( event.data );\r\n\r\n\t};\r\n\r\n\tself.addEventListener( 'message', scopedRunner, false );\r\n\r\n};\r\n\r\nWorkerRunner.prototype = {\r\n\r\n\tconstructor: WorkerRunner,\r\n\r\n\t/**\r\n\t * Configures the Parser implementation according the supplied configuration object.\r\n\t *\r\n\t * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\r\n\t */\r\n\tprocessMessage: function ( payload ) {\r\n\r\n\t\tthis.payloadHandler.handlePayload( payload );\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport {\r\n\tWorkerRunner,\r\n\tDefaultWorkerPayloadHandler,\r\n\tObjectManipulator\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/obj2/worker/parallel/WorkerRunner.js","/**\r\n * Development repository: https://github.com/kaisalmen/WWOBJLoader\r\n */\r\n\r\n// Imports only related to wrapper\r\nimport {\r\n\tObject3D\r\n} from \"@/components/build/three.module.js\";\r\nimport {\r\n\tCodeBuilderInstructions,\r\n\tWorkerExecutionSupport\r\n} from \"./obj2/worker/main/WorkerExecutionSupport.js\";\r\nimport { CodeSerializer } from \"./obj2/utils/CodeSerializer.js\";\r\nimport { OBJLoader2 } from \"./OBJLoader2.js\";\r\n\r\n// Imports only related to worker (when standard workers (modules aren't supported) are used)\r\nimport { OBJLoader2Parser } from \"./obj2/OBJLoader2Parser.js\";\r\nimport {\r\n\tWorkerRunner,\r\n\tDefaultWorkerPayloadHandler,\r\n\tObjectManipulator\r\n} from \"./obj2/worker/parallel/WorkerRunner.js\";\r\n\r\n\r\n/**\r\n * Creates a new OBJLoader2Parallel. Use it to load OBJ data from files or to parse OBJ data from arraybuffer.\r\n * It extends {@link OBJLoader2} with the capability to run the parser in a web worker.\r\n *\r\n * @param [LoadingManager] manager The loadingManager for the loader to use. Default is {@link LoadingManager}\r\n * @constructor\r\n */\r\nconst OBJLoader2Parallel = function ( manager ) {\r\n\r\n\tOBJLoader2.call( this, manager );\r\n\tthis.preferJsmWorker = false;\r\n\tthis.jsmWorkerUrl = null;\r\n\r\n\tthis.executeParallel = true;\r\n\tthis.workerExecutionSupport = new WorkerExecutionSupport();\r\n\r\n};\r\n\r\nOBJLoader2Parallel.OBJLOADER2_PARALLEL_VERSION = '3.2.0';\r\nconsole.info( 'Using OBJLoader2Parallel version: ' + OBJLoader2Parallel.OBJLOADER2_PARALLEL_VERSION );\r\nOBJLoader2Parallel.DEFAULT_JSM_WORKER_PATH = './jsm/loaders/obj2/worker/parallel/OBJLoader2JsmWorker.js';\r\n\r\nOBJLoader2Parallel.prototype = Object.assign( Object.create( OBJLoader2.prototype ), {\r\n\r\n\tconstructor: OBJLoader2Parallel,\r\n\r\n\t/**\r\n\t * Execution of parse in parallel via Worker is default, but normal {OBJLoader2} parsing can be enforced via false here.\r\n\t *\r\n\t * @param {boolean} executeParallel True or False\r\n\t * @return {OBJLoader2Parallel}\r\n\t */\r\n\tsetExecuteParallel: function ( executeParallel ) {\r\n\r\n\t\tthis.executeParallel = executeParallel === true;\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Set whether jsm modules in workers should be used. This requires browser support which is currently only experimental.\r\n\t * @param {boolean} preferJsmWorker True or False\r\n\t * @param {URL} jsmWorkerUrl Provide complete jsm worker URL otherwise relative path to this module may not be correct\r\n\t * @return {OBJLoader2Parallel}\r\n\t */\r\n\tsetJsmWorker: function ( preferJsmWorker, jsmWorkerUrl ) {\r\n\r\n\t\tthis.preferJsmWorker = preferJsmWorker === true;\r\n\r\n\t\tif ( jsmWorkerUrl === undefined || jsmWorkerUrl === null ) {\r\n\r\n\t\t\tthrow \"The url to the jsm worker is not valid. Aborting...\";\r\n\r\n\t\t}\r\n\r\n\t\tthis.jsmWorkerUrl = jsmWorkerUrl;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Allow to get hold of {@link WorkerExecutionSupport} for configuration purposes.\r\n\t * @return {WorkerExecutionSupport}\r\n\t */\r\n\tgetWorkerExecutionSupport: function () {\r\n\r\n\t\treturn this.workerExecutionSupport;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Provide instructions on what is to be contained in the worker.\r\n\t * @return {CodeBuilderInstructions}\r\n\t */\r\n\tbuildWorkerCode: function () {\r\n\r\n\t\tconst codeBuilderInstructions = new CodeBuilderInstructions( true, true, this.preferJsmWorker );\r\n\r\n\t\tif ( codeBuilderInstructions.isSupportsJsmWorker() ) {\r\n\r\n\t\t\tcodeBuilderInstructions.setJsmWorkerUrl( this.jsmWorkerUrl );\r\n\r\n\t\t}\r\n\r\n\t\tif ( codeBuilderInstructions.isSupportsStandardWorker() ) {\r\n\r\n\t\t\tconst objectManipulator = new ObjectManipulator();\r\n\t\t\tconst defaultWorkerPayloadHandler = new DefaultWorkerPayloadHandler( this.parser );\r\n\t\t\tconst workerRunner = new WorkerRunner( {} );\r\n\t\t\tcodeBuilderInstructions.addCodeFragment( CodeSerializer.serializeClass( OBJLoader2Parser, this.parser ) );\r\n\t\t\tcodeBuilderInstructions.addCodeFragment( CodeSerializer.serializeClass( ObjectManipulator, objectManipulator ) );\r\n\t\t\tcodeBuilderInstructions.addCodeFragment( CodeSerializer.serializeClass( DefaultWorkerPayloadHandler, defaultWorkerPayloadHandler ) );\r\n\t\t\tcodeBuilderInstructions.addCodeFragment( CodeSerializer.serializeClass( WorkerRunner, workerRunner ) );\r\n\r\n\t\t\tconst startCode = 'new ' + workerRunner.constructor.name + '( new ' + defaultWorkerPayloadHandler.constructor.name + '( new ' + this.parser.constructor.name + '() ) );';\r\n\t\t\tcodeBuilderInstructions.addStartCode( startCode );\r\n\r\n\t\t}\r\n\r\n\t\treturn codeBuilderInstructions;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2.load}\r\n\t */\r\n\tload: function ( content, onLoad, onFileLoadProgress, onError, onMeshAlter ) {\r\n\r\n \t\tconst scope = this;\r\n\t\tfunction interceptOnLoad( object3d, message ) {\r\n\r\n\t\t\tif ( object3d.name === 'OBJLoader2ParallelDummy' ) {\r\n\r\n\t\t\t\tif ( scope.parser.logging.enabled && scope.parser.logging.debug ) {\r\n\r\n\t\t\t\t\tconsole.debug( 'Received dummy answer from OBJLoader2Parallel#parse' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonLoad( object3d, message );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tOBJLoader2.prototype.load.call( this, content, interceptOnLoad, onFileLoadProgress, onError, onMeshAlter );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * See {@link OBJLoader2.parse}\r\n\t * The callback onLoad needs to be set to be able to receive the content if used in parallel mode.\r\n\t * Fallback is possible via {@link OBJLoader2Parallel#setExecuteParallel}.\r\n\t */\r\n\tparse: function ( content ) {\r\n\r\n\t\tif ( this.executeParallel ) {\r\n\r\n\t\t\tif ( this.parser.callbacks.onLoad === this.parser._onLoad ) {\r\n\r\n\t\t\t\tthrow \"No callback other than the default callback was provided! Aborting!\";\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// check if worker has been initialize before. If yes, skip init\r\n\t\t\tif ( ! this.workerExecutionSupport.isWorkerLoaded( this.preferJsmWorker ) ) {\r\n\r\n\t\t\t\tthis.workerExecutionSupport.buildWorker( this.buildWorkerCode() );\r\n\r\n\t\t\t\tconst scope = this;\r\n\t\t\t\tconst scopedOnAssetAvailable = function ( payload ) {\r\n\r\n\t\t\t\t\tscope._onAssetAvailable( payload );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction scopedOnLoad( message ) {\r\n\r\n\t\t\t\t\tscope.parser.callbacks.onLoad( scope.baseObject3d, message );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.workerExecutionSupport.updateCallbacks( scopedOnAssetAvailable, scopedOnLoad );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Create default materials beforehand, but do not override previously set materials (e.g. during init)\r\n\t\t\tthis.materialHandler.createDefaultMaterials( false );\r\n\r\n\t\t\tthis.workerExecutionSupport.executeParallel(\r\n\t\t\t\t{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tmodelName: this.modelName,\r\n\t\t\t\t\t\tinstanceNo: this.instanceNo,\r\n\t\t\t\t\t\tuseIndices: this.parser.useIndices,\r\n\t\t\t\t\t\tdisregardNormals: this.parser.disregardNormals,\r\n\t\t\t\t\t\tmaterialPerSmoothingGroup: this.parser.materialPerSmoothingGroup,\r\n\t\t\t\t\t\tuseOAsMesh: this.parser.useOAsMesh,\r\n\t\t\t\t\t\tmaterials: this.materialHandler.getMaterialsJSON()\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tinput: content,\r\n\t\t\t\t\t\toptions: null\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlogging: {\r\n\t\t\t\t\t\tenabled: this.parser.logging.enabled,\r\n\t\t\t\t\t\tdebug: this.parser.logging.debug\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\tconst dummy = new Object3D();\r\n\t\t\tdummy.name = 'OBJLoader2ParallelDummy';\r\n\t\t\treturn dummy;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn OBJLoader2.prototype.parse.call( this, content );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n} );\r\n\r\nexport { OBJLoader2Parallel };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/OBJLoader2Parallel.js","import { TrackballControls } from \"@/components/jsm/controls/TrackballControls.js\"\r\nimport { VertexNormalsHelper } from \"@/components/jsm/helpers/VertexNormalsHelper.js\"\r\nimport { MTLLoader } from \"@/components/jsm/loaders/MTLLoader.js\"\r\nimport { MtlObjBridge } from \"@/components/jsm/loaders/obj2/bridge/MtlObjBridge.js\"\r\nimport { OBJLoader2 } from \"@/components/jsm/loaders/OBJLoader2.js\"\r\nimport { OBJLoader2Parallel } from \"@/components/jsm/loaders/OBJLoader2Parallel.js\"\r\nimport { LoadedMeshUserOverride } from \"@/components/jsm/loaders/obj2/shared/MeshReceiver.js\"\r\nimport { CompressedPixelFormat } from \"three\"\r\nexport function WWOBJLoader2Example(elementToBindTo, THREE) {\r\n    this.renderer = null\r\n    this.canvas = elementToBindTo\r\n    this.aspectRatio = 1\r\n    this.recalcAspectRatio()\r\n    this.THREE = THREE\r\n    this.scene = null\r\n    this.cameraDefaults = {\r\n        posCamera: new this.THREE.Vector3(0.0, 175.0, 500.0),\r\n        posCameraTarget: new this.THREE.Vector3(0, 0, 0),\r\n        near: 0.1,\r\n        far: 10000,\r\n        fov: 45\r\n    }\r\n    this.camera = null\r\n    this.cameraTarget = this.cameraDefaults.posCameraTarget\r\n    this.controls = null\r\n    this.flatShading = false\r\n    this.doubleSide = false\r\n    this.useJsmWorker = false\r\n    this.loadCount = 6\r\n    this.cube = null\r\n    this.pivot = null\r\n}\r\n\r\nWWOBJLoader2Example.prototype = {\r\n    constructor: WWOBJLoader2Example,\r\n    initGL: function () {\r\n        this.renderer = new this.THREE.WebGLRenderer({\r\n            canvas: this.canvas,\r\n            antialias: true,\r\n            autoClear: true\r\n        })\r\n        this.renderer.setClearColor(0x050505)\r\n        this.scene = new this.THREE.Scene()\r\n        this.camera = new this.THREE.PerspectiveCamera(this.cameraDefaults.fov, this.aspectRatio, this.cameraDefaults.near, this.cameraDefaults.far)\r\n        this.resetCamera()\r\n        this.controls = new TrackballControls(this.camera, this.renderer.domElement)\r\n        const ambientLight = new this.THREE.AmbientLight(0x404040)\r\n        const directionalLight1 = new this.THREE.DirectionalLight(0xC0C090)\r\n        const directionalLight2 = new this.THREE.DirectionalLight(0xC0C090)\r\n        directionalLight1.position.set(- 100, - 50, 100)\r\n        directionalLight2.position.set(100, 50, - 100)\r\n        this.scene.add(directionalLight1)\r\n        this.scene.add(directionalLight2)\r\n        this.scene.add(ambientLight)\r\n        const helper = new this.THREE.GridHelper(1200, 60, 0xFF4444, 0x404040)\r\n        this.scene.add(helper)\r\n        const geometry = new this.THREE.BoxBufferGeometry(10, 10, 10)\r\n        const material = new this.THREE.MeshNormalMaterial()\r\n        this.cube = new this.THREE.Mesh(geometry, material)\r\n        this.cube.position.set(0, 0, 0)\r\n        this.scene.add(this.cube)\r\n        this.pivot = new this.THREE.Object3D()\r\n        this.pivot.name = 'Pivot'\r\n        this.scene.add(this.pivot)\r\n    },\r\n    useParseMain: function () {\r\n        const modelName = 'female02'\r\n        this._reportProgress({ detail: { text: 'Loading: ' + modelName } })\r\n        const objLoader2 = new OBJLoader2()\r\n            .setModelName(modelName)\r\n        const scope = this\r\n        function onLoadMtl(mtlParseResult) {\r\n            objLoader2.addMaterials(MtlObjBridge.addMaterialsFromMtlLoader(mtlParseResult), true)\r\n            const fileLoader = new scope.THREE.FileLoader()\r\n            fileLoader.setPath('')\r\n            fileLoader.setResponseType('arraybuffer')\r\n            fileLoader.load('static/models/obj/female02/female02.obj',\r\n                function (content) {\r\n                    const local = new scope.THREE.Object3D()\r\n                    local.name = 'Pivot_female02'\r\n                    local.position.set(75, 0, 0)\r\n                    scope.pivot.add(local)\r\n                    local.add(objLoader2.parse(content))\r\n                    scope._reportProgress({ detail: { text: 'Loading of ' + modelName + ' completed: OBJLoader2#pase: Parsing completed' } })\r\n                    scope.finalize()\r\n                }\r\n        )\r\n        }\r\n        const mtlLoader = new MTLLoader()\r\n        mtlLoader.load('static/models/obj/female02/female02.mtl', onLoadMtl)\r\n    },\r\n    useParseParallel: function () {\r\n        const modelName = 'female02_vertex'\r\n        this._reportProgress({ detail: { text: 'Loading: ' + modelName } })\r\n        const local = new this.THREE.Object3D()\r\n        local.name = 'Pivot_female02_vertex'\r\n        local.position.set(- 75, 0, 0)\r\n        this.pivot.add(local)\r\n        const scope = this\r\n        function callbackOnLoad(object3d, message) {\r\n            local.add(object3d)\r\n            scope._reportProgress({ detail: { text: 'Loading of ' + modelName + ' completed: ' + message } })\r\n            scope.finalize()\r\n        }\r\n        const materials = {\r\n            tester: new this.THREE.MeshStandardMaterial()\r\n        }\r\n        const objLoader2Parallel = new OBJLoader2Parallel()\r\n            .setModelName(modelName)\r\n            .setJsmWorker(this.useJsmWorker, new URL(OBJLoader2Parallel.DEFAULT_JSM_WORKER_PATH, window.location.href))\r\n            .setCallbackOnLoad(callbackOnLoad)\r\n            .addMaterials(materials, true)\r\n        const fileLoader = new this.THREE.FileLoader()\r\n        fileLoader.setPath('')\r\n        fileLoader.setResponseType('arraybuffer')\r\n        fileLoader.load('static/models/obj/female02/female02_vertex_colors.obj',\r\n            function (content) {\r\n                objLoader2Parallel.parse(content)\r\n            }\r\n    )\r\n    },\r\n    useLoadMain: function () {\r\n        const modelName = 'male02'\r\n        this._reportProgress({ detail: { text: 'Loading: ' + modelName } })\r\n        const objLoader2 = new OBJLoader2()\r\n            .setModelName(modelName)\r\n            .setUseIndices(true)\r\n        const scope = this\r\n        function callbackOnLoad(object3d, message) {\r\n            const local = new scope.THREE.Object3D()\r\n            local.name = 'Pivot_male02'\r\n            local.position.set(0, 0, - 75)\r\n            scope.pivot.add(local)\r\n            local.add(object3d)\r\n            scope._reportProgress({ detail: { text: 'Loading of ' + modelName + ' completed: ' + message } })\r\n            scope.finalize()\r\n        }\r\n        function onLoadMtl(mtlParseResult) {\r\n            objLoader2.addMaterials(MtlObjBridge.addMaterialsFromMtlLoader(mtlParseResult), true)\r\n            objLoader2.load('static/models/obj/male02/male02.obj', callbackOnLoad, null, null, null)\r\n        }\r\n        const mtlLoader = new MTLLoader()\r\n        mtlLoader.load('static/models/obj/male02/male02.mtl', onLoadMtl)\r\n    },\r\n    useLoadParallel: function () {\r\n        const modelName = 'WaltHead'\r\n        this._reportProgress({ detail: { text: 'Loading: ' + modelName } })\r\n        const local = new this.THREE.Object3D()\r\n        local.name = 'Pivot_WaltHead'\r\n        local.position.set(- 175, 50, 0)\r\n        const scale = 0.5\r\n        local.scale.set(scale, scale, scale)\r\n        this.pivot.add(local)\r\n        const objLoader2Parallel = new OBJLoader2Parallel()\r\n            .setModelName(modelName)\r\n            .setJsmWorker(this.useJsmWorker, new URL(OBJLoader2Parallel.DEFAULT_JSM_WORKER_PATH, window.location.href))\r\n        const scope = this\r\n        function callbackOnLoad(object3d, message) {\r\n            local.add(object3d)\r\n            scope._reportProgress({ detail: { text: 'Loading of ' + modelName + ' completed: ' + message } })\r\n            scope.finalize()\r\n        }\r\n        function onLoadMtl(mtlParseResult) {\r\n            objLoader2Parallel.addMaterials(MtlObjBridge.addMaterialsFromMtlLoader(mtlParseResult), true)\r\n            objLoader2Parallel.load('static/models/obj/walt/WaltHead.obj', callbackOnLoad)\r\n        }\r\n        const mtlLoader = new MTLLoader()\r\n        mtlLoader.load('static/models/obj/walt/WaltHead.mtl', onLoadMtl)\r\n    },\r\n    useLoadMainFallback: function () {\r\n        const local = new this.THREE.Object3D()\r\n        local.name = 'Pivot_Cerberus'\r\n        local.position.set(0, 0, 100)\r\n        const scale = 50\r\n        local.scale.set(scale, scale, scale)\r\n        this.pivot.add(local)\r\n        const objLoader2Parallel = new OBJLoader2Parallel()\r\n            .setModelName(local.name)\r\n            .setExecuteParallel(false)\r\n        const scope = this\r\n        function callbackOnLoad(object3d, message) {\r\n            local.add(object3d)\r\n            scope._reportProgress({ detail: { text: 'Loading of ' + objLoader2Parallel.modelName + ' completed: ' + message } })\r\n            scope.finalize()\r\n        }\r\n        objLoader2Parallel.load('static/models/obj/cerberus/Cerberus.obj', callbackOnLoad)\r\n    },\r\n    useLoadParallelMeshAlter: function () {\r\n        const local = new this.THREE.Object3D()\r\n        local.position.set(175, - 100, 0)\r\n        local.name = 'Pivot_ninjaHead'\r\n        this.pivot.add(local)\r\n        const objLoader2Parallel = new OBJLoader2Parallel()\r\n            .setModelName(local.name)\r\n            .setJsmWorker(this.useJsmWorker, new URL(OBJLoader2Parallel.DEFAULT_JSM_WORKER_PATH, window.location.href))\r\n            .setBaseObject3d(local)\r\n        // Configure WorkerExecutionSupport to not disregard worker after execution\r\n        objLoader2Parallel.getWorkerExecutionSupport().setTerminateWorkerOnLoad(false)\r\n        const scope = this\r\n        function callbackMeshAlter(event) {\r\n            const override = new LoadedMeshUserOverride(false, true)\r\n            const mesh = new scope.THREE.Mesh(event.detail.bufferGeometry, event.detail.material)\r\n            mesh.name = event.detail.meshName\r\n            const helper = new VertexNormalsHelper(mesh, 2, 0x00ff00)\r\n            helper.name = 'VertexNormalsHelper'\r\n            override.addMesh(mesh)\r\n            override.addMesh(helper)\r\n            return override\r\n        }\r\n        objLoader2Parallel.setCallbackOnMeshAlter(callbackMeshAlter)\r\n        function callbackOnLoad(object3d, message) {\r\n            scope._reportProgress({ detail: { text: 'Loading of ' + objLoader2Parallel.modelName + ' completed: ' + message } })\r\n            scope.finalize()\r\n        }\r\n        objLoader2Parallel.load('static/models/obj/ninja/ninjaHead_Low.obj', callbackOnLoad)\r\n    },\r\n    finalize: function () {\r\n        this.loadCount --\r\n        if (this.loadCount === 0) {\r\n            this._reportProgress({ detail: { text: '' } })\r\n        }\r\n    },\r\n    _reportProgress: function (event) {\r\n        let output = ''\r\n        if (event.detail !== null && event.detail !== undefined && event.detail.text) {\r\n            output = event.detail.text\r\n        }\r\n        console.log('Progress: ' + output)\r\n        document.getElementById('feedback').innerHTML = output\r\n    },\r\n    resizeDisplayGL: function () {\r\n        this.controls.handleResize()\r\n        this.recalcAspectRatio()\r\n        this.renderer.setSize(this.canvas.offsetWidth, this.canvas.offsetHeight, false)\r\n        this.updateCamera()\r\n    },\r\n    recalcAspectRatio: function () {\r\n        this.aspectRatio = (this.canvas.offsetHeight === 0) ? 1 : this.canvas.offsetWidth / this.canvas.offsetHeight\r\n    },\r\n    resetCamera: function () {\r\n        this.camera.position.copy(this.cameraDefaults.posCamera)\r\n        this.cameraTarget.copy(this.cameraDefaults.posCameraTarget)\r\n        this.updateCamera()\r\n    },\r\n    updateCamera: function () {\r\n        this.camera.aspect = this.aspectRatio\r\n        this.camera.lookAt(this.cameraTarget)\r\n        this.camera.updateProjectionMatrix()\r\n    },\r\n    render: function () {\r\n        if (! this.renderer.autoClear) this.renderer.clear()\r\n        this.controls.update()\r\n        this.cube.rotation.x += 0.05\r\n        this.cube.rotation.y += 0.05\r\n        this.renderer.render(this.scene, this.camera)\r\n    },\r\n    alterShading: function () {\r\n        const scope = this\r\n        scope.flatShading = ! scope.flatShading\r\n        console.log(scope.flatShading ? 'Enabling flat shading' : 'Enabling smooth shading')\r\n        scope.traversalFunction = function (material) {\r\n            material.flatShading = scope.flatShading\r\n            material.needsUpdate = true\r\n        }\r\n        function scopeTraverse(object3d) {\r\n            scope.traverseScene(object3d)\r\n        }\r\n        scope.pivot.traverse(scopeTraverse)\r\n    },\r\n    alterDouble: function () {\r\n        const scope = this\r\n        scope.doubleSide = ! scope.doubleSide\r\n        console.log(scope.doubleSide ? 'Enabling THREE.DoubleSide materials' : 'Enabling THREE.FrontSide materials')\r\n        scope.traversalFunction = function (material) {\r\n            material.side = scope.doubleSide ? scope.THREE.DoubleSide : scope.THREE.FrontSide\r\n        }\r\n        function scopeTraverse(object3d) {\r\n            scope.traverseScene(object3d)\r\n        }\r\n        scope.pivot.traverse(scopeTraverse)\r\n    },\r\n    traverseScene: function (object3d) {\r\n        if (Array.isArray(object3d.material)) {\r\n            const materials = object3d.material.materials\r\n            for (const name in materials) {\r\n                if (materials.hasOwnProperty(name))\tthis.traversalFunction(materials[ name ])\r\n            }\r\n        } else if (object3d.material) {\r\n            this.traversalFunction(object3d.material)\r\n        }\r\n    },\r\n    executeLoading: function () {\r\n        // Load a file with OBJLoader2.parse on main\r\n        this.useParseMain()\r\n        // Load a file with OBJLoader2Parallel.parse in parallel in worker\r\n        this.useParseParallel()\r\n        // Load a file with OBJLoader.load on main\r\n        this.useLoadMain()\r\n        // Load a file with OBJLoader2Parallel.load in parallel in worker\r\n        this.useLoadParallel()\r\n        // Load a file with OBJLoader2Parallel.load on main with fallback to OBJLoader2.parse\r\n        this.useLoadMainFallback()\r\n        // Load a file with OBJLoader2Parallel.load in parallel in worker and add normals during onMeshAlter\r\n        this.useLoadParallelMeshAlter()\r\n    }\r\n}\r\n\r\nexport default { WWOBJLoader2Example }\n\n\n// WEBPACK FOOTER //\n// ./src/utils/webglLoaderObj2Options.js","<template>\r\n    <div class=\"webglLoaderObj2Options-container\">\r\n        <div id=\"glFullscreen\">\r\n\t\t\t<canvas id=\"example\"></canvas>\r\n\t\t</div>\r\n\t\t<div id=\"dat\" class=\"dg ac\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - OBJLoader2 usage options<br>Use module workers with Chromium based browser (80+)\r\n\t\t\t<div id=\"feedback\"></div>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { WWOBJLoader2Example } from '@/utils/webglLoaderObj2Options.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            app: null,\r\n            wwObjLoader2Control: null,\r\n            menuDiv: null,\r\n            gui: null,\r\n            folderRenderingOptions: null,\r\n            controlFlat: null,\r\n            controlDouble: null,\r\n            folderObjLoader2ParallelOptions: null,\r\n            controlJsmWorker: null,\r\n            folderExecution: null,\r\n            handleExecuteLoading: null,\r\n        }\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    mounted() {\r\n        this.app = new WWOBJLoader2Example(document.getElementById('example'), this.$THREE)\r\n        var that = this\r\n        this.wwObjLoader2Control = {\r\n            flatShading: this.app.flatShading,\r\n            doubleSide: this.app.doubleSide,\r\n            useJsmWorker: this.app.useJsmWorker,\r\n            blockEvent: function (event) {\r\n                event.stopPropagation()\r\n            },\r\n            disableElement: function (elementHandle) {\r\n                elementHandle.domElement.addEventListener('click', this.blockEvent, true)\r\n                elementHandle.domElement.parentElement.style.pointerEvents = 'none'\r\n                elementHandle.domElement.parentElement.style.opacity = 0.5\r\n            },\r\n            executeLoading: function () {\r\n                that.app.executeLoading()\r\n                this.disableElement(that.handleExecuteLoading)\r\n            },\r\n        }\r\n        this.menuDiv = document.getElementById('dat')\r\n        this.gui = new GUI({\r\n            autoPlace: false,\r\n            width: 320\r\n        })\r\n        this.menuDiv.appendChild(this.gui.domElement)\r\n        this.folderRenderingOptions = this.gui.addFolder('Rendering Options')\r\n        this.controlFlat = this.folderRenderingOptions.add(this.wwObjLoader2Control, 'flatShading').name('Flat Shading')\r\n        this.controlFlat.onChange((value) => {\r\n            console.log('Setting flatShading to: ' + value)\r\n            this.app.alterShading()\r\n        })\r\n        this.controlDouble = this.folderRenderingOptions.add(this.wwObjLoader2Control, 'doubleSide').name('Double Side Materials')\r\n        this.controlDouble.onChange((value) => {\r\n            console.log('Setting doubleSide to: ' + value)\r\n            this.app.alterDouble()\r\n        })\r\n        this.folderObjLoader2ParallelOptions = this.gui.addFolder('OBJLoader2Parallel Options')\r\n        this.controlJsmWorker = this.folderObjLoader2ParallelOptions.add(this.wwObjLoader2Control, 'useJsmWorker').name('Use Module Workers')\r\n        this.controlJsmWorker.onChange((value) => {\r\n            console.log('Setting useJsmWorker to: ' + value)\r\n            this.app.useJsmWorker = value\r\n        })\r\n        this.folderExecution = this.gui.addFolder('Execution')\r\n        this.handleExecuteLoading = this.folderExecution.add(this.wwObjLoader2Control, 'executeLoading').name('Run')\r\n        this.handleExecuteLoading.domElement.id = 'startButton'\r\n        this.folderRenderingOptions.open()\r\n        this.folderObjLoader2ParallelOptions.open()\r\n        this.folderExecution.open()\r\n        window.addEventListener('resize', this.resizeWindow, false)\r\n        console.log('Starting initialisation phase...')\r\n        this.app.initGL()\r\n        this.app.resizeDisplayGL()\r\n        // kick render loop\r\n        this.render()\r\n    },\r\n    methods: {\r\n        resizeWindow() {\r\n            this.app.resizeDisplayGL()\r\n        },\r\n        render() {\r\n            requestAnimationFrame(this.render)\r\n            this.app.render()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoaderObj2Options-container {\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n#glFullscreen {\r\n    width: 100%;\r\n    height: 100vh;\r\n    min-width: 640px;\r\n    min-height: 360px;\r\n    position: relative;\r\n    overflow: hidden;\r\n    z-index: 0;\r\n}\r\n#example {\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #000000;\r\n}\r\n#feedback {\r\n    color: darkorange;\r\n}\r\n#dat {\r\n    user-select: none;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-Index: 200;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoaderObj2Options.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoaderObj2Options-container\"},[_c('div',{attrs:{\"id\":\"glFullscreen\"}},[_c('canvas',{attrs:{\"id\":\"example\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"dg ac\",attrs:{\"id\":\"dat\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - OBJLoader2 usage options\"),_c('br'),_vm._v(\"Use module workers with Chromium based browser (80+)\\n\\t\\t\\t\"),_c('div',{attrs:{\"id\":\"feedback\"}})])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8f934bba\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoaderObj2Options.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8f934bba\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoaderObj2Options.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderObj2Options.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderObj2Options.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8f934bba\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoaderObj2Options.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8f934bba\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoaderObj2Options.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}