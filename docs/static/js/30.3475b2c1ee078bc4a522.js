webpackJsonp([30],{"8sl2":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=r("QEtz"),a=r("wIBv"),s=r("6+nK"),n=r("uSAz"),o=function e(t){s.BufferGeometry.call(this),this.type="LightningStrike",t=t||{},this.init(e.copyParameters(t,t)),this.createMesh()};(o.prototype=Object.create(s.BufferGeometry.prototype)).constructor=o,o.prototype.isLightningStrike=!0,o.RAY_INITIALIZED=0,o.RAY_UNBORN=1,o.RAY_PROPAGATING=2,o.RAY_STEADY=3,o.RAY_VANISHING=4,o.RAY_EXTINGUISHED=5,o.COS30DEG=Math.cos(30*Math.PI/180),o.SIN30DEG=Math.sin(30*Math.PI/180),o.createRandomGenerator=function(){for(var e=[],t=0;t<2053;t++)e.push(Math.random());var r={currentSeed:0,random:function(){var t=e[r.currentSeed];return r.currentSeed=(r.currentSeed+1)%2053,t},getSeed:function(){return r.currentSeed/2053},setSeed:function(e){r.currentSeed=Math.floor(2053*e)%2053}};return r},o.copyParameters=function(e,t){t=t||{};var r=function(r){return t===e?r:r.clone()};return(e=e||{}).sourceOffset=void 0!==t.sourceOffset?r(t.sourceOffset):new s.Vector3(0,100,0),e.destOffset=void 0!==t.destOffset?r(t.destOffset):new s.Vector3(0,0,0),e.timeScale=void 0!==t.timeScale?t.timeScale:1,e.roughness=void 0!==t.roughness?t.roughness:.9,e.straightness=void 0!==t.straightness?t.straightness:.7,e.up0=void 0!==t.up0?r(t.up0):new s.Vector3(0,0,1),e.up1=void 0!==t.up1?r(t.up1):new s.Vector3(0,0,1),e.radius0=void 0!==t.radius0?t.radius0:1,e.radius1=void 0!==t.radius1?t.radius1:1,e.radius0Factor=void 0!==t.radius0Factor?t.radius0Factor:.5,e.radius1Factor=void 0!==t.radius1Factor?t.radius1Factor:.2,e.minRadius=void 0!==t.minRadius?t.minRadius:.2,e.isEternal=void 0!==t.isEternal?t.isEternal:void 0===t.birthTime||void 0===t.deathTime,e.birthTime=t.birthTime,e.deathTime=t.deathTime,e.propagationTimeFactor=void 0!==t.propagationTimeFactor?t.propagationTimeFactor:.1,e.vanishingTimeFactor=void 0!==t.vanishingTimeFactor?t.vanishingTimeFactor:.9,e.subrayPeriod=void 0!==t.subrayPeriod?t.subrayPeriod:4,e.subrayDutyCycle=void 0!==t.subrayDutyCycle?t.subrayDutyCycle:.6,e.maxIterations=void 0!==t.maxIterations?t.maxIterations:9,e.isStatic=void 0!==t.isStatic&&t.isStatic,e.ramification=void 0!==t.ramification?t.ramification:5,e.maxSubrayRecursion=void 0!==t.maxSubrayRecursion?t.maxSubrayRecursion:3,e.recursionProbability=void 0!==t.recursionProbability?t.recursionProbability:.6,e.generateUVs=void 0!==t.generateUVs&&t.generateUVs,e.randomGenerator=t.randomGenerator,e.noiseSeed=t.noiseSeed,e.onDecideSubrayCreation=t.onDecideSubrayCreation,e.onSubrayCreation=t.onSubrayCreation,e},o.prototype.update=function(e){this.isStatic||(this.rayParameters.isEternal||this.rayParameters.birthTime<=e&&e<=this.rayParameters.deathTime?(this.updateMesh(e),e<this.subrays[0].endPropagationTime?this.state=o.RAY_PROPAGATING:e>this.subrays[0].beginVanishingTime?this.state=o.RAY_VANISHING:this.state=o.RAY_STEADY,this.visible=!0):(this.visible=!1,e<this.rayParameters.birthTime?this.state=o.RAY_UNBORN:this.state=o.RAY_EXTINGUISHED))},o.prototype.init=function(e){this.rayParameters=e,this.maxIterations=void 0!==e.maxIterations?Math.floor(e.maxIterations):9,e.maxIterations=this.maxIterations,this.isStatic=void 0!==e.isStatic&&e.isStatic,e.isStatic=this.isStatic,this.ramification=void 0!==e.ramification?Math.floor(e.ramification):5,e.ramification=this.ramification,this.maxSubrayRecursion=void 0!==e.maxSubrayRecursion?Math.floor(e.maxSubrayRecursion):3,e.maxSubrayRecursion=this.maxSubrayRecursion,this.recursionProbability=void 0!==e.recursionProbability?e.recursionProbability:.6,e.recursionProbability=this.recursionProbability,this.generateUVs=void 0!==e.generateUVs&&e.generateUVs,e.generateUVs=this.generateUVs,void 0!==e.randomGenerator?(this.randomGenerator=e.randomGenerator,this.seedGenerator=e.randomGenerator,void 0!==e.noiseSeed&&this.seedGenerator.setSeed(e.noiseSeed)):(this.randomGenerator=o.createRandomGenerator(),this.seedGenerator=Math),void 0!==e.onDecideSubrayCreation?this.onDecideSubrayCreation=e.onDecideSubrayCreation:(this.createDefaultSubrayCreationCallbacks(),void 0!==e.onSubrayCreation&&(this.onSubrayCreation=e.onSubrayCreation)),this.state=o.RAY_INITIALIZED,this.maxSubrays=Math.ceil(1+Math.pow(this.ramification,Math.max(0,this.maxSubrayRecursion-1))),e.maxSubrays=this.maxSubrays,this.maxRaySegments=2*(1<<this.maxIterations),this.subrays=[];for(var t=0;t<this.maxSubrays;t++)this.subrays.push(this.createSubray());this.raySegments=[];for(t=0;t<this.maxRaySegments;t++)this.raySegments.push(this.createSegment());this.time=0,this.timeFraction=0,this.currentSegmentCallback=null,this.currentCreateTriangleVertices=this.generateUVs?this.createTriangleVerticesWithUVs:this.createTriangleVerticesWithoutUVs,this.numSubrays=0,this.currentSubray=null,this.currentSegmentIndex=0,this.isInitialSegment=!1,this.subrayProbability=0,this.currentVertex=0,this.currentIndex=0,this.currentCoordinate=0,this.currentUVCoordinate=0,this.vertices=null,this.uvs=null,this.indices=null,this.positionAttribute=null,this.uvsAttribute=null,this.simplexX=new n.a(this.seedGenerator),this.simplexY=new n.a(this.seedGenerator),this.simplexZ=new n.a(this.seedGenerator),this.forwards=new s.Vector3,this.forwardsFill=new s.Vector3,this.side=new s.Vector3,this.down=new s.Vector3,this.middlePos=new s.Vector3,this.middleLinPos=new s.Vector3,this.newPos=new s.Vector3,this.vPos=new s.Vector3,this.cross1=new s.Vector3},o.prototype.createMesh=function(){var e=1<<this.maxIterations,t=3*(e+1)*this.maxSubrays,r=18*e*this.maxSubrays;this.vertices=new Float32Array(3*t),this.indices=new Uint32Array(r),this.generateUVs&&(this.uvs=new Float32Array(2*t)),this.fillMesh(0),this.setIndex(new s.Uint32BufferAttribute(this.indices,1)),this.positionAttribute=new s.Float32BufferAttribute(this.vertices,3),this.setAttribute("position",this.positionAttribute),this.generateUVs&&(this.uvsAttribute=new s.Float32BufferAttribute(new Float32Array(this.uvs),2),this.setAttribute("uv",this.uvsAttribute)),this.isStatic||(this.index.usage=s.DynamicDrawUsage,this.positionAttribute.usage=s.DynamicDrawUsage,this.generateUVs&&(this.uvsAttribute.usage=s.DynamicDrawUsage)),this.vertices=this.positionAttribute.array,this.indices=this.index.array,this.generateUVs&&(this.uvs=this.uvsAttribute.array)},o.prototype.updateMesh=function(e){this.fillMesh(e),this.drawRange.count=this.currentIndex,this.index.needsUpdate=!0,this.positionAttribute.needsUpdate=!0,this.generateUVs&&(this.uvsAttribute.needsUpdate=!0)},o.prototype.fillMesh=function(e){var t=this;this.currentVertex=0,this.currentIndex=0,this.currentCoordinate=0,this.currentUVCoordinate=0,this.fractalRay(e,function(r){var i=t.currentSubray;e<i.birthTime||(this.rayParameters.isEternal&&0==t.currentSubray.recursion?(t.createPrism(r),t.onDecideSubrayCreation(r,t)):e<i.endPropagationTime?t.timeFraction>=r.fraction0*i.propagationTimeFactor&&(t.createPrism(r),t.onDecideSubrayCreation(r,t)):e<i.beginVanishingTime?(t.createPrism(r),t.onDecideSubrayCreation(r,t)):(t.timeFraction<=i.vanishingTimeFactor+r.fraction1*(1-i.vanishingTimeFactor)&&t.createPrism(r),t.onDecideSubrayCreation(r,t)))})},o.prototype.addNewSubray=function(){return this.subrays[this.numSubrays++]},o.prototype.initSubray=function(e,t){e.pos0.copy(t.sourceOffset),e.pos1.copy(t.destOffset),e.up0.copy(t.up0),e.up1.copy(t.up1),e.radius0=t.radius0,e.radius1=t.radius1,e.birthTime=t.birthTime,e.deathTime=t.deathTime,e.timeScale=t.timeScale,e.roughness=t.roughness,e.straightness=t.straightness,e.propagationTimeFactor=t.propagationTimeFactor,e.vanishingTimeFactor=t.vanishingTimeFactor,e.maxIterations=this.maxIterations,e.seed=void 0!==t.noiseSeed?t.noiseSeed:0,e.recursion=0},o.prototype.fractalRay=function(e,t){this.time=e,this.currentSegmentCallback=t,this.numSubrays=0,this.initSubray(this.addNewSubray(),this.rayParameters);for(var r=0;r<this.numSubrays;r++){var i=this.subrays[r];this.currentSubray=i,this.randomGenerator.setSeed(i.seed),i.endPropagationTime=s.MathUtils.lerp(i.birthTime,i.deathTime,i.propagationTimeFactor),i.beginVanishingTime=s.MathUtils.lerp(i.deathTime,i.birthTime,1-i.vanishingTimeFactor);var a=this.randomGenerator.random;i.linPos0.set(a(),a(),a()).multiplyScalar(1e3),i.linPos1.set(a(),a(),a()).multiplyScalar(1e3),this.timeFraction=(e-i.birthTime)/(i.deathTime-i.birthTime),this.currentSegmentIndex=0,this.isInitialSegment=!0;var n=this.getNewSegment();n.iteration=0,n.pos0.copy(i.pos0),n.pos1.copy(i.pos1),n.linPos0.copy(i.linPos0),n.linPos1.copy(i.linPos1),n.up0.copy(i.up0),n.up1.copy(i.up1),n.radius0=i.radius0,n.radius1=i.radius1,n.fraction0=0,n.fraction1=1,n.positionVariationFactor=1-i.straightness,this.subrayProbability=this.ramification*Math.pow(this.recursionProbability,i.recursion)/(1<<i.maxIterations),this.fractalRayRecursive(n)}this.currentSegmentCallback=null,this.currentSubray=null},o.prototype.fractalRayRecursive=function(e){if(e.iteration>=this.currentSubray.maxIterations)this.currentSegmentCallback(e);else{this.forwards.subVectors(e.pos1,e.pos0);var t=this.forwards.length();t<1e-6&&(this.forwards.set(0,0,.01),t=this.forwards.length());var r=.5*(e.radius0+e.radius1),i=.5*(e.fraction0+e.fraction1),a=this.time*this.currentSubray.timeScale*Math.pow(2,e.iteration);this.middlePos.lerpVectors(e.pos0,e.pos1,.5),this.middleLinPos.lerpVectors(e.linPos0,e.linPos1,.5);var s=this.middleLinPos;this.newPos.set(this.simplexX.noise4d(s.x,s.y,s.z,a),this.simplexY.noise4d(s.x,s.y,s.z,a),this.simplexZ.noise4d(s.x,s.y,s.z,a)),this.newPos.multiplyScalar(e.positionVariationFactor*t),this.newPos.add(this.middlePos);var n=this.getNewSegment();n.pos0.copy(e.pos0),n.pos1.copy(this.newPos),n.linPos0.copy(e.linPos0),n.linPos1.copy(this.middleLinPos),n.up0.copy(e.up0),n.up1.copy(e.up1),n.radius0=e.radius0,n.radius1=r,n.fraction0=e.fraction0,n.fraction1=i,n.positionVariationFactor=e.positionVariationFactor*this.currentSubray.roughness,n.iteration=e.iteration+1;var o=this.getNewSegment();o.pos0.copy(this.newPos),o.pos1.copy(e.pos1),o.linPos0.copy(this.middleLinPos),o.linPos1.copy(e.linPos1),this.cross1.crossVectors(e.up0,this.forwards.normalize()),o.up0.crossVectors(this.forwards,this.cross1).normalize(),o.up1.copy(e.up1),o.radius0=r,o.radius1=e.radius1,o.fraction0=i,o.fraction1=e.fraction1,o.positionVariationFactor=e.positionVariationFactor*this.currentSubray.roughness,o.iteration=e.iteration+1,this.fractalRayRecursive(n),this.fractalRayRecursive(o)}},o.prototype.createPrism=function(e){this.forwardsFill.subVectors(e.pos1,e.pos0).normalize(),this.isInitialSegment&&(this.currentCreateTriangleVertices(e.pos0,e.up0,this.forwardsFill,e.radius0,0),this.isInitialSegment=!1),this.currentCreateTriangleVertices(e.pos1,e.up0,this.forwardsFill,e.radius1,e.fraction1),this.createPrismFaces()},o.prototype.createTriangleVerticesWithoutUVs=function(e,t,r,i){this.side.crossVectors(t,r).multiplyScalar(i*o.COS30DEG),this.down.copy(t).multiplyScalar(-i*o.SIN30DEG);var a=this.vPos,s=this.vertices;a.copy(e).sub(this.side).add(this.down),s[this.currentCoordinate++]=a.x,s[this.currentCoordinate++]=a.y,s[this.currentCoordinate++]=a.z,a.copy(e).add(this.side).add(this.down),s[this.currentCoordinate++]=a.x,s[this.currentCoordinate++]=a.y,s[this.currentCoordinate++]=a.z,a.copy(t).multiplyScalar(i).add(e),s[this.currentCoordinate++]=a.x,s[this.currentCoordinate++]=a.y,s[this.currentCoordinate++]=a.z,this.currentVertex+=3},o.prototype.createTriangleVerticesWithUVs=function(e,t,r,i,a){this.side.crossVectors(t,r).multiplyScalar(i*o.COS30DEG),this.down.copy(t).multiplyScalar(-i*o.SIN30DEG);var s=this.vPos,n=this.vertices,u=this.uvs;s.copy(e).sub(this.side).add(this.down),n[this.currentCoordinate++]=s.x,n[this.currentCoordinate++]=s.y,n[this.currentCoordinate++]=s.z,u[this.currentUVCoordinate++]=a,u[this.currentUVCoordinate++]=0,s.copy(e).add(this.side).add(this.down),n[this.currentCoordinate++]=s.x,n[this.currentCoordinate++]=s.y,n[this.currentCoordinate++]=s.z,u[this.currentUVCoordinate++]=a,u[this.currentUVCoordinate++]=.5,s.copy(t).multiplyScalar(i).add(e),n[this.currentCoordinate++]=s.x,n[this.currentCoordinate++]=s.y,n[this.currentCoordinate++]=s.z,u[this.currentUVCoordinate++]=a,u[this.currentUVCoordinate++]=1,this.currentVertex+=3},o.prototype.createPrismFaces=function(e){var t=this.indices;e=this.currentVertex-6;t[this.currentIndex++]=e+1,t[this.currentIndex++]=e+2,t[this.currentIndex++]=e+5,t[this.currentIndex++]=e+1,t[this.currentIndex++]=e+5,t[this.currentIndex++]=e+4,t[this.currentIndex++]=e+0,t[this.currentIndex++]=e+1,t[this.currentIndex++]=e+4,t[this.currentIndex++]=e+0,t[this.currentIndex++]=e+4,t[this.currentIndex++]=e+3,t[this.currentIndex++]=e+2,t[this.currentIndex++]=e+0,t[this.currentIndex++]=e+3,t[this.currentIndex++]=e+2,t[this.currentIndex++]=e+3,t[this.currentIndex++]=e+5},o.prototype.createDefaultSubrayCreationCallbacks=function(){var e=this.randomGenerator.random;this.onDecideSubrayCreation=function(t,r){var i=r.currentSubray,a=r.rayParameters.subrayPeriod,n=r.rayParameters.subrayDutyCycle,o=r.rayParameters.isEternal&&0==i.recursion?-e()*a:s.MathUtils.lerp(i.birthTime,i.endPropagationTime,t.fraction0)-e()*a,u=r.time-o,h=Math.floor(u/a),l=e()*(h+1),c=0;if(u%a<=n*a&&(c=r.subrayProbability),i.recursion<r.maxSubrayRecursion&&r.numSubrays<r.maxSubrays&&e()<c){var d=r.addNewSubray(),m=r.randomGenerator.getSeed();d.seed=l,r.randomGenerator.setSeed(l),d.recursion=i.recursion+1,d.maxIterations=Math.max(1,i.maxIterations-1),d.linPos0.set(e(),e(),e()).multiplyScalar(1e3),d.linPos1.set(e(),e(),e()).multiplyScalar(1e3),d.up0.copy(i.up0),d.up1.copy(i.up1),d.radius0=t.radius0*r.rayParameters.radius0Factor,d.radius1=Math.min(r.rayParameters.minRadius,t.radius1*r.rayParameters.radius1Factor),d.birthTime=o+h*a,d.deathTime=d.birthTime+a*n,r.rayParameters.isEternal||0!=i.recursion||(d.birthTime=Math.max(d.birthTime,i.birthTime),d.deathTime=Math.min(d.deathTime,i.deathTime)),d.timeScale=2*i.timeScale,d.roughness=i.roughness,d.straightness=i.straightness,d.propagationTimeFactor=i.propagationTimeFactor,d.vanishingTimeFactor=i.vanishingTimeFactor,r.onSubrayCreation(t,i,d,r),r.randomGenerator.setSeed(m)}};var t=new s.Vector3,r=new s.Vector3,i=new s.Vector3,a=new s.Vector3;this.onSubrayCreation=function(e,t,r,i){i.subrayCylinderPosition(e,t,r,.5,.6,.2)},this.subrayConePosition=function(s,n,o,u,h,l){o.pos0.copy(s.pos0),t.subVectors(n.pos1,n.pos0),r.copy(t).normalize(),t.multiplyScalar(s.fraction0+(1-s.fraction0)*(e()*u));var c=t.length();i.crossVectors(n.up0,r);var d=2*Math.PI*e();i.multiplyScalar(Math.cos(d)),a.copy(n.up0).multiplyScalar(Math.sin(d)),o.pos1.copy(i).add(a).multiplyScalar(c*h*(l+e()*(1-l))).add(t).add(n.pos0)},this.subrayCylinderPosition=function(s,n,o,u,h,l){o.pos0.copy(s.pos0),t.subVectors(n.pos1,n.pos0),r.copy(t).normalize(),t.multiplyScalar(s.fraction0+(1-s.fraction0)*((2*e()-1)*u));var c=t.length();i.crossVectors(n.up0,r);var d=2*Math.PI*e();i.multiplyScalar(Math.cos(d)),a.copy(n.up0).multiplyScalar(Math.sin(d)),o.pos1.copy(i).add(a).multiplyScalar(c*h*(l+e()*(1-l))).add(t).add(n.pos0)}},o.prototype.createSubray=function(){return{seed:0,maxIterations:0,recursion:0,pos0:new s.Vector3,pos1:new s.Vector3,linPos0:new s.Vector3,linPos1:new s.Vector3,up0:new s.Vector3,up1:new s.Vector3,radius0:0,radius1:0,birthTime:0,deathTime:0,timeScale:0,roughness:0,straightness:0,propagationTimeFactor:0,vanishingTimeFactor:0,endPropagationTime:0,beginVanishingTime:0}},o.prototype.createSegment=function(){return{iteration:0,pos0:new s.Vector3,pos1:new s.Vector3,linPos0:new s.Vector3,linPos1:new s.Vector3,up0:new s.Vector3,up1:new s.Vector3,radius0:0,radius1:0,fraction0:0,fraction1:0,positionVariationFactor:0}},o.prototype.getNewSegment=function(){return this.raySegments[this.currentSegmentIndex++]},o.prototype.copy=function(e){return s.BufferGeometry.prototype.copy.call(this,e),this.init(o.copyParameters({},e.rayParameters)),this},o.prototype.clone=function(){return new this.constructor(o.copyParameters({},this.rayParameters))};var u=function(e){s.Object3D.call(this),e=e||{},this.stormParams=e,e.size=void 0!==e.size?e.size:1e3,e.minHeight=void 0!==e.minHeight?e.minHeight:80,e.maxHeight=void 0!==e.maxHeight?e.maxHeight:100,e.maxSlope=void 0!==e.maxSlope?e.maxSlope:1.1,e.maxLightnings=void 0!==e.maxLightnings?e.maxLightnings:3,e.lightningMinPeriod=void 0!==e.lightningMinPeriod?e.lightningMinPeriod:3,e.lightningMaxPeriod=void 0!==e.lightningMaxPeriod?e.lightningMaxPeriod:7,e.lightningMinDuration=void 0!==e.lightningMinDuration?e.lightningMinDuration:1,e.lightningMaxDuration=void 0!==e.lightningMaxDuration?e.lightningMaxDuration:2.5,this.lightningParameters=o.copyParameters(e.lightningParameters,e.lightningParameters),this.lightningParameters.isEternal=!1,this.lightningMaterial=void 0!==e.lightningMaterial?e.lightningMaterial:new s.MeshBasicMaterial({color:11599871}),void 0!==e.onRayPosition?this.onRayPosition=e.onRayPosition:this.onRayPosition=function(t,r){r.set((Math.random()-.5)*e.size,0,(Math.random()-.5)*e.size);var i=s.MathUtils.lerp(e.minHeight,e.maxHeight,Math.random());t.set(e.maxSlope*(2*Math.random()-1),1,e.maxSlope*(2*Math.random()-1)).multiplyScalar(i).add(r)},this.onLightningDown=e.onLightningDown,this.inited=!1,this.nextLightningTime=0,this.lightningsMeshes=[],this.deadLightningsMeshes=[];for(var t=0;t<this.stormParams.maxLightnings;t++){var r=new o(o.copyParameters({},this.lightningParameters)),i=new s.Mesh(r,this.lightningMaterial);this.deadLightningsMeshes.push(i)}};(u.prototype=Object.create(s.Object3D.prototype)).constructor=u,u.prototype.isLightningStorm=!0,u.prototype.update=function(e){if(this.inited||(this.nextLightningTime=this.getNextLightningTime(e)*Math.random(),this.inited=!0),e>=this.nextLightningTime){var t=this.deadLightningsMeshes.pop();if(t){var r=o.copyParameters(t.geometry.rayParameters,this.lightningParameters);r.birthTime=e,r.deathTime=e+s.MathUtils.lerp(this.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration,Math.random()),this.onRayPosition(r.sourceOffset,r.destOffset),r.noiseSeed=Math.random(),this.add(t),this.lightningsMeshes.push(t)}this.nextLightningTime=this.getNextLightningTime(e)}for(var i=0,a=this.lightningsMeshes.length;i<a;){var n=this.lightningsMeshes[i],u=n.geometry,h=u.state;u.update(e),h===o.RAY_PROPAGATING&&u.state>h&&this.onLightningDown&&this.onLightningDown(u),u.state===o.RAY_EXTINGUISHED?(this.lightningsMeshes.splice(this.lightningsMeshes.indexOf(n),1),this.deadLightningsMeshes.push(n),this.remove(n),a--):i++}},u.prototype.getNextLightningTime=function(e){return e+s.MathUtils.lerp(this.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod,Math.random())/(this.stormParams.maxLightnings+1)},u.prototype.copy=function(e){return s.Object3D.prototype.copy.call(this,e),this.stormParams.size=e.stormParams.size,this.stormParams.minHeight=e.stormParams.minHeight,this.stormParams.maxHeight=e.stormParams.maxHeight,this.stormParams.maxSlope=e.stormParams.maxSlope,this.stormParams.maxLightnings=e.stormParams.maxLightnings,this.stormParams.lightningMinPeriod=e.stormParams.lightningMinPeriod,this.stormParams.lightningMaxPeriod=e.stormParams.lightningMaxPeriod,this.stormParams.lightningMinDuration=e.stormParams.lightningMinDuration,this.stormParams.lightningMaxDuration=e.stormParams.lightningMaxDuration,this.lightningParameters=o.copyParameters({},e.lightningParameters),this.lightningMaterial=e.stormParams.lightningMaterial,this.onLightningDown=e.onLightningDown,this},o.prototype.clone=function(){return new this.constructor(this.stormParams).copy(this)};var h=r("85s5"),l=r("Z9IJ"),c=r("IP6c"),d={data:function(){return{container:null,stats:null,scene:null,renderer:null,composer:null,gui:null,currentSceneIndex:0,currentTime:0,sceneCreators:null,clock:null,raycaster:null,mouse:null}},mounted:function(){this.sceneCreators=[this.createConesScene,this.createPlasmaBallScene,this.createStormScene],this.clock=new this.$THREE.Clock,this.raycaster=new this.$THREE.Raycaster,this.mouse=new this.$THREE.Vector2,this.init(),this.animate()},beforeDestroy:function(){this.gui.destroy()},methods:{init:function(){this.container=document.getElementById("container"),this.renderer=new this.$THREE.WebGLRenderer,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.renderer.outputEncoding=this.$THREE.sRGBEncoding,this.container.appendChild(this.renderer.domElement),this.composer=new h.a(this.renderer),this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom),window.addEventListener("resize",this.onWindowResize,!1),this.createScene()},createScene:function(){this.scene=this.sceneCreators[this.currentSceneIndex](),this.createGUI()},onWindowResize:function(){this.scene.userData.camera.aspect=(window.innerWidth-281)/window.innerHeight,this.scene.userData.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth-281,window.innerHeight),this.composer.setSize(window.innerWidth-281,window.innerHeight)},createGUI:function(){var e=this;this.gui&&this.gui.destroy(),this.gui=new i.a({width:350});var t=this.gui.addFolder("Scene");this.scene.userData.sceneIndex=this.currentSceneIndex,t.add(this.scene.userData,"sceneIndex",{"Electric Cones":0,"Plasma Ball":1,Storm:2}).name("Scene").onChange(function(t){e.currentSceneIndex=t,e.createScene()}),this.scene.userData.timeRate=1,t.add(this.scene.userData,"timeRate",this.scene.userData.canGoBackwardsInTime?-1:0,1).name("Time rate"),t.open();var r=this.gui.addFolder("Graphics");r.add(this.scene.userData,"outlineEnabled").name("Glow enabled"),this.scene.userData.lightningColorRGB=[255*this.scene.userData.lightningColor.r,255*this.scene.userData.lightningColor.g,255*this.scene.userData.lightningColor.b],r.addColor(this.scene.userData,"lightningColorRGB").name("Color").onChange(function(t){e.scene.userData.lightningMaterial.color.setRGB(t[0],t[1],t[2]).multiplyScalar(1/255)}),this.scene.userData.outlineColorRGB=[255*this.scene.userData.outlineColor.r,255*this.scene.userData.outlineColor.g,255*this.scene.userData.outlineColor.b],r.addColor(this.scene.userData,"outlineColorRGB").name("Glow color").onChange(function(t){e.scene.userData.outlineColor.setRGB(t[0],t[1],t[2]).multiplyScalar(1/255)}),r.open();var a=this.gui.addFolder("Ray parameters");if(a.add(this.scene.userData.rayParams,"straightness",0,1).name("Straightness"),a.add(this.scene.userData.rayParams,"roughness",0,1).name("Roughness"),a.add(this.scene.userData.rayParams,"radius0",.1,10).name("Initial radius"),a.add(this.scene.userData.rayParams,"radius1",.1,10).name("Final radius"),a.add(this.scene.userData.rayParams,"radius0Factor",0,1).name("Subray initial radius"),a.add(this.scene.userData.rayParams,"radius1Factor",0,1).name("Subray final radius"),a.add(this.scene.userData.rayParams,"timeScale",0,5).name("Ray time scale"),a.add(this.scene.userData.rayParams,"subrayPeriod",.1,10).name("Subray period (s)"),a.add(this.scene.userData.rayParams,"subrayDutyCycle",0,1).name("Subray duty cycle"),this.scene.userData.recreateRay){var s=this.gui.addFolder("Ray parameters (slow)");s.add(this.scene.userData.rayParams,"ramification",0,15).step(1).name("Ramification").onFinishChange(function(){e.scene.userData.recreateRay()}),s.add(this.scene.userData.rayParams,"maxSubrayRecursion",0,5).step(1).name("Recursion").onFinishChange(function(){e.scene.userData.recreateRay()}),s.add(this.scene.userData.rayParams,"recursionProbability",0,1).name("Rec. probability").onFinishChange(function(){e.scene.userData.recreateRay()}),s.open()}a.open()},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){this.currentTime+=this.scene.userData.timeRate*this.clock.getDelta(),this.currentTime<0&&(this.currentTime=0),this.scene.userData.render(this.currentTime)},createOutline:function(e,t,r){var i=new c.a(new this.$THREE.Vector2(this.$webglInnerWidth,window.innerHeight),e,e.userData.camera,t);return i.edgeStrength=2.5,i.edgeGlow=.7,i.edgeThickness=2.8,i.visibleEdgeColor=r,i.hiddenEdgeColor.set(0),this.composer.addPass(i),e.userData.outlineEnabled=!0,i},createConesScene:function(){var e=new this.$THREE.Scene;e.background=new this.$THREE.Color(328965),e.userData.canGoBackwardsInTime=!0,e.userData.camera=new this.$THREE.PerspectiveCamera(27,this.$webglInnerWidth/window.innerHeight,200,1e5),e.userData.lightningColor=new this.$THREE.Color(11599871),e.userData.outlineColor=new this.$THREE.Color(65535);var t=new this.$THREE.PointLight(65535,1,5e3,2);e.add(t);var r=new this.$THREE.Mesh(new this.$THREE.PlaneBufferGeometry(2e5,2e5),new this.$THREE.MeshPhongMaterial({color:12632256,shininess:0}));r.rotation.x=.5*-Math.PI,e.add(r);t.position.set(0,600,0),t.color=e.userData.outlineColor,e.userData.camera.position.set(1e3,800,3600);var i=new this.$THREE.Mesh(new this.$THREE.ConeBufferGeometry(200,200,30,1,!1),new this.$THREE.MeshPhongMaterial({color:16776960,emissive:2039552}));i.rotation.x=Math.PI,i.position.y=1200,e.add(i);var s,n,u=new this.$THREE.Mesh(i.geometry.clone(),new this.$THREE.MeshPhongMaterial({color:16719904,emissive:2032130}));u.position.y=100,e.add(u),e.userData.lightningMaterial=new this.$THREE.MeshBasicMaterial({color:e.userData.lightningColor}),e.userData.rayParams={sourceOffset:new this.$THREE.Vector3,destOffset:new this.$THREE.Vector3,radius0:4,radius1:4,minRadius:2.5,maxIterations:7,isEternal:!0,timeScale:.7,propagationTimeFactor:.05,vanishingTimeFactor:.95,subrayPeriod:3.5,subrayDutyCycle:.6,maxSubrayRecursion:3,ramification:7,recursionProbability:.6,roughness:.85,straightness:.6};var h=[],c=this;e.userData.recreateRay=function(){n&&e.remove(n),s=new o(e.userData.rayParams),n=new c.$THREE.Mesh(s,e.userData.lightningMaterial),h.length=0,h.push(n),e.add(n)},e.userData.recreateRay(),this.composer.passes=[],this.composer.addPass(new l.a(e,e.userData.camera)),this.createOutline(e,h,e.userData.outlineColor);var d=new a.b(e.userData.camera,this.renderer.domElement);return d.target.y=600,d.enableDamping=!0,d.dampingFactor=.05,e.userData.render=function(r){i.position.set(1e3*Math.sin(.5*r)*.6,1200,1e3*Math.cos(.5*r)*.6),u.position.set(1e3*Math.sin(.9*r),100,0),s.rayParameters.sourceOffset.copy(i.position),s.rayParameters.sourceOffset.y-=100,s.rayParameters.destOffset.copy(u.position),s.rayParameters.destOffset.y+=100,s.update(r),d.update(),t.position.lerpVectors(s.rayParameters.sourceOffset,s.rayParameters.destOffset,.5),e.userData.outlineEnabled?c.composer.render():c.renderer.render(e,e.userData.camera)},e},createPlasmaBallScene:function(){var e=this,t=new this.$THREE.Scene;t.userData.canGoBackwardsInTime=!0,t.userData.camera=new this.$THREE.PerspectiveCamera(27,this.$webglInnerWidth/window.innerHeight,100,5e4);var r=new this.$THREE.Scene;r.background=new this.$THREE.Color(4539717);var i=new this.$THREE.AmbientLight(4473924);r.add(i),t.add(i);var s=new this.$THREE.DirectionalLight(16777215,.5);s.position.set(1,1,1),r.add(s),t.add(s);var n=new this.$THREE.DirectionalLight(16777215,1.5);n.position.set(-.5,1,.2),r.add(n),t.add(n),t.userData.lightningColor=new this.$THREE.Color(16756991),t.userData.outlineColor=new this.$THREE.Color(16711935),t.userData.lightningMaterial=new this.$THREE.MeshBasicMaterial({color:t.userData.lightningColor,side:this.$THREE.DoubleSide});var u="static/textures/cube/Bridge2/",h=[u+"posx.jpg",u+"negx.jpg",u+"posy.jpg",u+"negy.jpg",u+"posz.jpg",u+"negz.jpg"],c=(new this.$THREE.CubeTextureLoader).load(h);c.mapping=this.$THREE.CubeReflectionMapping,c.encoding=this.$THREE.sRGBEncoding;var d=new this.$THREE.MeshPhysicalMaterial({transparent:!0,transmission:.96,depthWrite:!1,color:"white",metalness:0,roughness:0,envMap:c});t.userData.camera.position.set(1e3,600,1200);var m=new this.$THREE.Mesh(new this.$THREE.SphereBufferGeometry(200,80,40),d);m.position.set(0,300,0),r.add(m);var g=new this.$THREE.Sphere(m.position,200),p=new this.$THREE.Mesh(new this.$THREE.SphereBufferGeometry(10,24,12),t.userData.lightningMaterial);p.position.copy(m.position),p.scale.y=.6,t.add(p);var f=new this.$THREE.Mesh(new this.$THREE.CylinderBufferGeometry(12,12,300,6,1,!0),new this.$THREE.MeshLambertMaterial({color:131586}));f.position.y=138,t.add(f);var y=new this.$THREE.Mesh(new this.$THREE.BoxBufferGeometry(150,30,150),f.material);y.position.y=7.5,t.add(y);var v,b,S=new this.$THREE.Vector3,T=0,x=new this.$THREE.Vector3,w=new this.$THREE.Vector3;t.userData.rayParams={sourceOffset:m.position,destOffset:new this.$THREE.Vector3(200,0,0).add(m.position),radius0:4,radius1:4,radius0Factor:.82,minRadius:2.5,maxIterations:6,isEternal:!0,timeScale:.6,propagationTimeFactor:.15,vanishingTimeFactor:.87,subrayPeriod:.8,ramification:5,recursionProbability:.8,roughness:.85,straightness:.7,onSubrayCreation:function(e,t,r,i){i.subrayConePosition(e,t,r,.6,.9,.7),x.subVectors(r.pos1,i.rayParameters.sourceOffset),w.set(0,0,0),i.randomGenerator.random()<.7&&w.copy(S).multiplyScalar(1.0865*T),x.add(w).setLength(T),r.pos1.addVectors(x,i.rayParameters.sourceOffset)}};var M=[],P=this;t.userData.recreateRay=function(){b&&t.remove(b),v=new o(t.userData.rayParams),b=new P.$THREE.Mesh(v,t.userData.lightningMaterial),M.length=0,M.push(b),M.push(p),t.add(b)},t.userData.recreateRay(),this.composer.passes=[],this.composer.addPass(new l.a(r,t.userData.camera));var E=new l.a(t,t.userData.camera);E.clear=!1,this.composer.addPass(E);var D=this.createOutline(t,M,t.userData.outlineColor);t.userData.render=function(r){S.subVectors(v.rayParameters.destOffset,v.rayParameters.sourceOffset),T=S.length(),S.normalize(),v.update(r),C.update(),D.enabled=t.userData.outlineEnabled,e.composer.render()};var C=new a.b(t.userData.camera,this.renderer.domElement);C.target.copy(m.position),C.enableDamping=!0,C.dampingFactor=.05,container.style.touchAction="none",container.addEventListener("pointermove",function(e){if(!1===e.isPrimary)return;P.mouse.x=e.clientX/this.$webglInnerWidth*2-1,P.mouse.y=-e.clientY/window.innerHeight*2+1,P.raycaster.setFromCamera(P.mouse,t.userData.camera),null!==P.raycaster.ray.intersectSphere(g,R)&&v.rayParameters.destOffset.copy(R)},!1);P=this;var R=new this.$THREE.Vector3;return t},createStormScene:function(){var e=new this.$THREE.Scene;e.background=new this.$THREE.Color(328965),e.userData.canGoBackwardsInTime=!1,e.userData.camera=new this.$THREE.PerspectiveCamera(27,this.$webglInnerWidth/window.innerHeight,20,1e4),e.add(new this.$THREE.AmbientLight(4473924));var t=new this.$THREE.DirectionalLight(16777215,.5);t.position.set(1,1,1),e.add(t);var r=new this.$THREE.PointLight(65535);r.position.set(0,100,0),e.add(r);e.userData.camera.position.set(0,.2,1.6).multiplyScalar(500);var i=new this.$THREE.Mesh(new this.$THREE.PlaneBufferGeometry(1e3,1e3),new this.$THREE.MeshLambertMaterial({color:467714}));i.rotation.x=.5*-Math.PI,e.add(i),e.userData.lightningColor=new this.$THREE.Color(11599871),e.userData.outlineColor=new this.$THREE.Color(65535),e.userData.lightningMaterial=new this.$THREE.MeshBasicMaterial({color:e.userData.lightningColor});var s=new this.$THREE.Vector3(0,-1,0),n=0,o=new this.$THREE.Vector3,h=new this.$THREE.Vector3;e.userData.rayParams={radius0:1,radius1:.5,minRadius:.3,maxIterations:7,timeScale:.15,propagationTimeFactor:.2,vanishingTimeFactor:.9,subrayPeriod:4,subrayDutyCycle:.6,maxSubrayRecursion:3,ramification:3,recursionProbability:.4,roughness:.85,straightness:.65,onSubrayCreation:function(e,t,r,i){i.subrayConePosition(e,t,r,.6,.6,.5),n=i.rayParameters.sourceOffset.y,o.subVectors(r.pos1,i.rayParameters.sourceOffset);var a=s.dot(o);h.copy(s).multiplyScalar(a),o.sub(h);var u=a/n>.5?n/a:1;h.multiplyScalar(u),o.add(h),r.pos1.addVectors(o,i.rayParameters.sourceOffset)}};for(var c=[],d=new this.$THREE.Vector3(0,0,1),m=new this.$THREE.Vector3,g=1;g<=16;g++)m.set(Math.sin(2*Math.PI*g/16),0,Math.cos(2*Math.PI*g/16)),g%2==1&&m.multiplyScalar(.3),c.push(0,0,0),c.push(d.x,d.y,d.z),c.push(m.x,m.y,m.z),d.copy(m);var p=new this.$THREE.BufferGeometry;p.setAttribute("position",new this.$THREE.Float32BufferAttribute(c,3));var f=new this.$THREE.Mesh(p,new this.$THREE.MeshBasicMaterial({color:133376}));f.scale.multiplyScalar(6);var y=new u({size:1e3,minHeight:90,maxHeight:200,maxSlope:.6,maxLightnings:8,lightningParameters:e.userData.rayParams,lightningMaterial:e.userData.lightningMaterial,onLightningDown:function(t){var r=f.clone();r.position.copy(t.rayParameters.destOffset),r.position.y=.05,r.rotation.y=2*Math.PI*Math.random(),e.add(r)}});e.add(y),this.composer.passes=[],this.composer.addPass(new l.a(e,e.userData.camera)),this.createOutline(e,y.lightningsMeshes,e.userData.outlineColor);var v=new a.b(e.userData.camera,this.renderer.domElement);v.target.y=50,v.enableDamping=!0,v.dampingFactor=.05;var b=this;return e.userData.render=function(t){y.update(t),v.update(),e.userData.outlineEnabled?b.composer.render():b.renderer.render(e,e.userData.camera)},e}}},m={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webglLightningstrike-container"},[t("div",{attrs:{id:"container"}}),this._v(" "),t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" webgl - lightning strike")])])}]};var g=r("VU/8")(d,m,!1,function(e){r("SuvF")},"data-v-ffed1d5c",null);t.default=g.exports},IP6c:function(e,t,r){"use strict";r.d(t,"a",function(){return n});var i=r("6+nK"),a=r("Ah8h"),s=r("fcDU"),n=function(e,t,r,n){this.renderScene=t,this.renderCamera=r,this.selectedObjects=void 0!==n?n:[],this.visibleEdgeColor=new i.Color(1,1,1),this.hiddenEdgeColor=new i.Color(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,this._visibilityCache=new Map,a.a.call(this),this.resolution=void 0!==e?new i.Vector2(e.x,e.y):new i.Vector2(256,256);var o={minFilter:i.LinearFilter,magFilter:i.LinearFilter,format:i.RGBAFormat},u=Math.round(this.resolution.x/this.downSampleRatio),h=Math.round(this.resolution.y/this.downSampleRatio);this.maskBufferMaterial=new i.MeshBasicMaterial({color:16777215}),this.maskBufferMaterial.side=i.DoubleSide,this.renderTargetMaskBuffer=new i.WebGLRenderTarget(this.resolution.x,this.resolution.y,o),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new i.MeshDepthMaterial,this.depthMaterial.side=i.DoubleSide,this.depthMaterial.depthPacking=i.RGBADepthPacking,this.depthMaterial.blending=i.NoBlending,this.prepareMaskMaterial=this.getPrepareMaskMaterial(),this.prepareMaskMaterial.side=i.DoubleSide,this.prepareMaskMaterial.fragmentShader=function(e,t){var r=t.isPerspectiveCamera?"perspective":"orthographic";return e.replace(/DEPTH_TO_VIEW_Z/g,r+"DepthToViewZ")}(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new i.WebGLRenderTarget(this.resolution.x,this.resolution.y,o),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new i.WebGLRenderTarget(u,h,o),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new i.WebGLRenderTarget(u,h,o),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new i.WebGLRenderTarget(Math.round(u/2),Math.round(h/2),o),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this.getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new i.WebGLRenderTarget(u,h,o),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new i.WebGLRenderTarget(Math.round(u/2),Math.round(h/2),o),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1;this.separableBlurMaterial1=this.getSeperableBlurMaterial(4),this.separableBlurMaterial1.uniforms.texSize.value.set(u,h),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this.getSeperableBlurMaterial(4),this.separableBlurMaterial2.uniforms.texSize.value.set(Math.round(u/2),Math.round(h/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=4,this.overlayMaterial=this.getOverlayMaterial(),void 0===s.a&&console.error("OutlinePass relies on CopyShader");var l=s.a;this.copyUniforms=i.UniformsUtils.clone(l.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new i.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,blending:i.NoBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new i.Color,this.oldClearAlpha=1,this.fsQuad=new a.a.FullScreenQuad(null),this.tempPulseColor1=new i.Color,this.tempPulseColor2=new i.Color,this.textureMatrix=new i.Matrix4};n.prototype=Object.assign(Object.create(a.a.prototype),{constructor:n,dispose:function(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose()},setSize:function(e,t){this.renderTargetMaskBuffer.setSize(e,t);var r=Math.round(e/this.downSampleRatio),i=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(r,i),this.renderTargetBlurBuffer1.setSize(r,i),this.renderTargetEdgeBuffer1.setSize(r,i),this.separableBlurMaterial1.uniforms.texSize.value.set(r,i),r=Math.round(r/2),i=Math.round(i/2),this.renderTargetBlurBuffer2.setSize(r,i),this.renderTargetEdgeBuffer2.setSize(r,i),this.separableBlurMaterial2.uniforms.texSize.value.set(r,i)},changeVisibilityOfSelectedObjects:function(e){var t=this._visibilityCache;function r(r){r.isMesh&&(!0===e?r.visible=t.get(r):(t.set(r,r.visible),r.visible=e))}for(var i=0;i<this.selectedObjects.length;i++){this.selectedObjects[i].traverse(r)}},changeVisibilityOfNonSelectedObjects:function(e){var t=this._visibilityCache,r=[];function i(e){e.isMesh&&r.push(e)}for(var a=0;a<this.selectedObjects.length;a++){this.selectedObjects[a].traverse(i)}this.renderScene.traverse(function(i){if(i.isMesh||i.isSprite){for(var a=!1,s=0;s<r.length;s++)if(r[s].id===i.id){a=!0;break}if(!1===a){var n=i.visible;!1!==e&&!0!==t.get(i)||(i.visible=e),t.set(i,n)}}else(i.isPoints||i.isLine)&&(!0===e?i.visible=t.get(i):(t.set(i,i.visible),i.visible=e))})},updateTextureMatrix:function(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)},render:function(e,t,r,i,a){if(this.selectedObjects.length>0){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var s=e.autoClear;e.autoClear=!1,a&&e.state.buffers.stencil.setTest(!1),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);var o=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this._visibilityCache.clear(),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value.set(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this._visibilityCache.clear(),this.renderScene.background=o,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.tempPulseColor1.copy(this.visibleEdgeColor),this.tempPulseColor2.copy(this.hiddenEdgeColor),this.pulsePeriod>0){var u=.625+.75*Math.cos(.01*performance.now()/this.pulsePeriod)/2;this.tempPulseColor1.multiplyScalar(u),this.tempPulseColor2.multiplyScalar(u)}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value.set(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.tempPulseColor1,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.tempPulseColor2,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=n.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=n.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=n.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=n.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,a&&e.state.buffers.stencil.setTest(!0),e.setRenderTarget(r),this.fsQuad.render(e),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=s}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=r.texture,e.setRenderTarget(null),this.fsQuad.render(e))},getPrepareMaskMaterial:function(){return new i.ShaderMaterial({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new i.Vector2(.5,.5)},textureMatrix:{value:null}},vertexShader:["#include <morphtarget_pars_vertex>","#include <skinning_pars_vertex>","varying vec4 projTexCoord;","varying vec4 vPosition;","uniform mat4 textureMatrix;","void main() {","\t#include <skinbase_vertex>","\t#include <begin_vertex>","\t#include <morphtarget_vertex>","\t#include <skinning_vertex>","\t#include <project_vertex>","\tvPosition = mvPosition;","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tprojTexCoord = textureMatrix * worldPosition;","}"].join("\n"),fragmentShader:["#include <packing>","varying vec4 vPosition;","varying vec4 projTexCoord;","uniform sampler2D depthTexture;","uniform vec2 cameraNearFar;","void main() {","\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));","\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );","\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;","\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);","}"].join("\n")})},getEdgeDetectionMaterial:function(){return new i.ShaderMaterial({uniforms:{maskTexture:{value:null},texSize:{value:new i.Vector2(.5,.5)},visibleEdgeColor:{value:new i.Vector3(1,1,1)},hiddenEdgeColor:{value:new i.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D maskTexture;\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec3 visibleEdgeColor;\t\t\t\tuniform vec3 hiddenEdgeColor;\t\t\t\t\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\t\t\t\t}"})},getSeperableBlurMaterial:function(e){return new i.ShaderMaterial({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new i.Vector2(.5,.5)},direction:{value:new i.Vector2(.5,.5)},kernelRadius:{value:1}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\t\t\t\tuniform sampler2D colorTexture;\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\tuniform float kernelRadius;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, kernelRadius);\t\t\t\t\tvec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\t\t\t\t\tvec2 uvOffset = delta;\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\t\t\t\t\t\tfloat w = gaussianPdf(uvOffset.x, kernelRadius);\t\t\t\t\t\tvec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\t\t\t\t\t\tvec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\t\t\t\t\t\tweightSum += (2.0 * w);\t\t\t\t\t\tuvOffset += delta;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = diffuseSum/weightSum;\t\t\t\t}"})},getOverlayMaterial:function(){return new i.ShaderMaterial({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D maskTexture;\t\t\t\tuniform sampler2D edgeTexture1;\t\t\t\tuniform sampler2D edgeTexture2;\t\t\t\tuniform sampler2D patternTexture;\t\t\t\tuniform float edgeStrength;\t\t\t\tuniform float edgeGlow;\t\t\t\tuniform bool usePatternTexture;\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\t\t\t\t\tvec4 finalColor = edgeStrength * maskColor.r * edgeValue;\t\t\t\t\tif(usePatternTexture)\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\t\t\t\t\tgl_FragColor = finalColor;\t\t\t\t}",blending:i.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0})}}),n.BlurDirectionX=new i.Vector2(1,0),n.BlurDirectionY=new i.Vector2(0,1)},SuvF:function(e,t){}});
//# sourceMappingURL=30.3475b2c1ee078bc4a522.js.map