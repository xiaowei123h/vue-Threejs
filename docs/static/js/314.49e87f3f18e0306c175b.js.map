{"version":3,"sources":["webpack:///./src/components/jsm/loaders/PVRLoader.js","webpack:///src/views/loader/webglLoaderTexturePvrtc.vue","webpack:///./src/views/loader/webglLoaderTexturePvrtc.vue?6c5d","webpack:///./src/views/loader/webglLoaderTexturePvrtc.vue"],"names":["PVRLoader","manager","CompressedTextureLoader","call","this","prototype","Object","assign","create","constructor","parse","buffer","loadMipmaps","header","Uint32Array","pvrDatas","_parseV3","_parseV2","console","error","bpp","format","metaLen","pixelFormat","height","width","numFaces","numMipmaps","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","dataPtr","numSurfaces","isCubemap","_extract","headerLength","flags","bitmaskAlpha","numSurfs","formatFlags","_hasAlpha","blockSize","pvr","mipmaps","mipmapCount","dataOffset","dataSize","blockWidth","blockHeight","widthBlocks","heightBlocks","length","mipLevel","sWidth","sHeight","surfIndex","mipmap","data","Uint8Array","webglLoaderTexturePvrtc","camera","scene","renderer","meshes","mounted","init","animate","methods","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","z","Scene","geometry","BoxBufferGeometry","that","loader","PVRLoader_PVRLoader","disturb_4bpp_rgb","load","disturb_4bpp_rgb_v3","disturb_4bpp_rgb_mips","disturb_2bpp_rgb","flare_4bpp_rgba","flare_2bpp_rgba","park3_cube_nomip_4bpp_rgb","texture","magFilter","LinearFilter","minFilter","mapping","CubeReflectionMapping","material6","needsUpdate","park3_cube_mip_2bpp_rgb_v3","material8","material1","MeshBasicMaterial","map","material2","material3","material4","side","DoubleSide","depthTest","transparent","material5","envMap","material7","mesh","Mesh","x","y","add","push","torus","TorusBufferGeometry","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","time","Date","now","i","rotation","render","loader_webglLoaderTexturePvrtc","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8IAcIA,EAAY,SAAWC,GAE1BC,0BAAwBC,KAAMC,KAAMH,IAIrCD,EAAUK,UAAYC,OAAOC,OAAQD,OAAOE,OAAQN,0BAAwBG,YAE3EI,YAAaT,EAEbU,MAAO,SAAWC,EAAQC,GAEzB,IACIC,EAAS,IAAIC,YAAaH,EAAQ,EADhB,IAGlBI,GACHJ,OAAQA,EACRE,OAAQA,EACRD,YAAaA,GAGd,OAAqB,WAAhBC,EAAQ,GAILb,EAAUgB,SAAUD,GAEC,YAAjBF,EAAQ,IAIZb,EAAUiB,SAAUF,QAI3BG,QAAQC,MAAO,2CAQlBnB,EAAUgB,SAAW,SAAWD,GAE/B,IACIK,EAAKC,EADLR,EAASE,EAASF,OAIlBS,EAAUT,EAAQ,IACrBU,EAAcV,EAAQ,GACtBW,EAASX,EAAQ,GACjBY,EAAQZ,EAAQ,GAEhBa,EAAWb,EAAQ,IACnBc,EAAad,EAAQ,IAEtB,OAASU,GAER,KAAK,EACJH,EAAM,EACNC,EAASO,0BACT,MAED,KAAK,EACJR,EAAM,EACNC,EAASQ,2BACT,MAED,KAAK,EACJT,EAAM,EACNC,EAASS,0BACT,MAED,KAAK,EACJV,EAAM,EACNC,EAASU,2BACT,MAED,QACCb,QAAQC,MAAO,2CAA4CI,GAa7D,OATAR,EAASiB,QAAU,GAAKV,EACxBP,EAASK,IAAMA,EACfL,EAASM,OAASA,EAClBN,EAASU,MAAQA,EACjBV,EAASS,OAASA,EAClBT,EAASkB,YAAcP,EACvBX,EAASY,WAAaA,EACtBZ,EAASmB,UAA4B,IAAbR,EAEjB1B,EAAUmC,SAAUpB,IAI5Bf,EAAUiB,SAAW,SAAWF,GAE/B,IAuBIK,EAAKC,EAvBLR,EAASE,EAASF,OAElBuB,EAAevB,EAAQ,GAC1BW,EAASX,EAAQ,GACjBY,EAAQZ,EAAQ,GAChBc,EAAad,EAAQ,GACrBwB,EAAQxB,EAAQ,GAMhByB,EAAezB,EAAQ,IAEvB0B,EAAW1B,EAAQ,IAOhB2B,EAJY,IAIEH,EAGdI,EAAYH,EAAe,EA8B/B,OAnCW,KAONE,GAEJnB,EAASoB,EAAYV,2BAA2BD,0BAChDV,EAAM,GAXO,KAaFoB,GAEXnB,EAASoB,EAAYZ,2BAA2BD,0BAChDR,EAAM,GAINF,QAAQC,MAAO,uCAAwCqB,GAIxDzB,EAASiB,QAAUI,EACnBrB,EAASK,IAAMA,EACfL,EAASM,OAASA,EAClBN,EAASU,MAAQA,EACjBV,EAASS,OAASA,EAClBT,EAASkB,YAAcM,EACvBxB,EAASY,WAAaA,EAAa,EAInCZ,EAASmB,UAA4B,IAAbK,EAEjBvC,EAAUmC,SAAUpB,IAK5Bf,EAAUmC,SAAW,SAAWpB,GAE/B,IAeC2B,EAfGC,GACHC,WACAnB,MAAOV,EAASU,MAChBD,OAAQT,EAASS,OACjBH,OAAQN,EAASM,OACjBwB,YAAa9B,EAASY,WACtBO,UAAWnB,EAASmB,WAGjBvB,EAASI,EAASJ,OAElBmC,EAAa/B,EAASiB,QACzBZ,EAAML,EAASK,IACfmB,EAAWxB,EAASkB,YACpBc,EAAW,EAEXC,EAAa,EACbC,EAAc,EACdC,EAAc,EACdC,EAAe,EAEH,IAAR/B,GAEJ4B,EAAa,EACbC,EAAc,IAIdD,EAAa,EACbC,EAAc,GAIfP,EAAcM,EAAaC,EAAgB7B,EAAM,EAEjDuB,EAAIC,QAAQQ,OAASrC,EAASY,WAAaY,EAI3C,IAFA,IAAIc,EAAW,EAEPA,EAAWtC,EAASY,YAAa,CAExC,IAAI2B,EAASvC,EAASU,OAAS4B,EAC9BE,EAAUxC,EAASS,QAAU6B,EAG9BF,EAAeI,EAAUN,GADzBC,EAAcI,EAASN,GAIJ,IAAIE,EAAc,GAChCC,EAAe,IAAIA,EAAe,GAEvCJ,EAAWG,EAAcC,EAAeT,EAExC,IAAM,IAAIc,EAAY,EAAGA,EAAYjB,EAAUiB,IAAe,CAE7D,IAEIC,GACHC,KAHe,IAAIC,WAAYhD,EAAQmC,EAAYC,GAInDtB,MAAO6B,EACP9B,OAAQ+B,GAGTZ,EAAIC,QAASY,EAAYzC,EAASY,WAAa0B,GAAaI,EAE5DX,GAAcC,EAIfM,IAID,OAAOV,GC7OR,IAAAiB,GACAF,KADA,WAEA,OACAG,OAAA,KACAC,MAAA,KACAC,SAAA,KACAC,YAGAC,QATA,WAUA7D,KAAA8D,OACA9D,KAAA+D,WAEAC,SACAF,KADA,WAEA9D,KAAAyD,OAAA,IAAAzD,KAAAiE,OAAAC,kBAAA,GAAAlE,KAAAmE,iBAAAC,OAAAC,YAAA,OACArE,KAAAyD,OAAAa,SAAAC,EAAA,IACAvE,KAAA0D,MAAA,IAAA1D,KAAAiE,OAAAO,MACA,IAAAC,EAAA,IAAAzE,KAAAiE,OAAAS,kBAAA,aAEAC,EAAA3E,KAeA4E,EAAA,IAAAC,EACAC,EAAAF,EAAAG,KAAA,mDACAC,EAAAJ,EAAAG,KAAA,sDACAE,EAAAL,EAAAG,KAAA,wDACAG,EAAAN,EAAAG,KAAA,mDACAI,EAAAP,EAAAG,KAAA,kDACAK,EAAAR,EAAAG,KAAA,kDACAM,EAAAT,EAAAG,KAAA,2DArBA,SAAAO,GACAA,EAAAC,UAAAZ,EAAAV,OAAAuB,aACAF,EAAAG,UAAAd,EAAAV,OAAAuB,aACAF,EAAAI,QAAAf,EAAAV,OAAA0B,sBACAC,EAAAC,aAAA,IAkBAC,EAAAlB,EAAAG,KAAA,4DAhBA,SAAAO,GACAA,EAAAC,UAAAZ,EAAAV,OAAAuB,aAEAF,EAAAG,UAAAd,EAAAV,OAAAuB,aACAF,EAAAI,QAAAf,EAAAV,OAAA0B,sBACAI,EAAAF,aAAA,IAYAX,EAAAO,UACAP,EAAAK,UACAJ,EAAAM,UACAN,EAAAI,UACAT,EAAAW,UACAX,EAAAS,UACAP,EAAAS,UACAT,EAAAO,UACAH,EAAAK,UACAL,EAAAG,UAAAvF,KAAAiE,OAAAuB,aACA,IAAAQ,EAAA,IAAAhG,KAAAiE,OAAAgC,mBAAAC,IAAApB,IACAqB,EAAA,IAAAnG,KAAAiE,OAAAgC,mBAAAC,IAAAjB,IACAmB,EAAA,IAAApG,KAAAiE,OAAAgC,mBAAAC,IAAAhB,IACAmB,EAAA,IAAArG,KAAAiE,OAAAgC,mBAAAC,IAAAf,EAAAmB,KAAAtG,KAAAiE,OAAAsC,WAAAC,WAAA,EAAAC,aAAA,IACAC,EAAA,IAAA1G,KAAAiE,OAAAgC,mBAAAC,IAAAd,EAAAkB,KAAAtG,KAAAiE,OAAAsC,WAAAC,WAAA,EAAAC,aAAA,IACAb,EAAA,IAAA5F,KAAAiE,OAAAgC,mBAAAU,OAAAtB,IACAU,EAAA,IAAA/F,KAAAiE,OAAAgC,mBAAAU,OAAAb,IACAc,EAAA,IAAA5G,KAAAiE,OAAAgC,mBAAAC,IAAAlB,IAEA6B,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAArC,EAAAuB,GACAa,EAAAvC,SAAAyC,GAAA,IACAF,EAAAvC,SAAA0C,EAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,IACAA,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAArC,EAAA0B,IACA7B,SAAAyC,GAAA,IACAF,EAAAvC,SAAA0C,EAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,IACAA,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAArC,EAAA2B,IACA9B,SAAAyC,EAAA,IACAF,EAAAvC,SAAA0C,EAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,IACAA,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAArC,EAAAmC,IACAtC,SAAAyC,EAAA,IACAF,EAAAvC,SAAA0C,EAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,IACAA,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAArC,EAAA4B,IACA/B,SAAAyC,GAAA,IACAF,EAAAvC,SAAA0C,GAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,IACAA,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAArC,EAAAiC,IACApC,SAAAyC,GAAA,IACAF,EAAAvC,SAAA0C,GAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,GACA,IAAAM,EAAA,IAAAnH,KAAAiE,OAAAmD,oBAAA,eACAP,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAAK,EAAAvB,IACAtB,SAAAyC,EAAA,IACAF,EAAAvC,SAAA0C,GAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,IACAA,EAAA,IAAA7G,KAAAiE,OAAA6C,KAAAK,EAAApB,IACAzB,SAAAyC,EAAA,IACAF,EAAAvC,SAAA0C,GAAA,IACAhH,KAAA0D,MAAAuD,IAAAJ,GACA7G,KAAA4D,OAAAsD,KAAAL,GAEA7G,KAAA2D,SAAA,IAAA3D,KAAAiE,OAAAoD,eAAAC,WAAA,IACAtH,KAAA2D,SAAA4D,cAAAnD,OAAAoD,kBACAxH,KAAA2D,SAAA8D,QAAAzH,KAAAmE,iBAAAC,OAAAC,aACAqD,SAAAC,uBAAA,wCAAAC,YAAA5H,KAAA2D,SAAAkE,YACAzD,OAAA0D,iBAAA,SAAA9H,KAAA+H,gBAAA,IAEAA,eAlGA,WAmGA/H,KAAAgI,gBAAAhI,KAAAyD,OAAAzD,KAAA2D,WAEAI,QArGA,WAsGAkE,sBAAAjI,KAAA+D,SAEA,IADA,IAAAmE,EAAA,KAAAC,KAAAC,MACAC,EAAA,EAAAA,EAAArI,KAAA4D,OAAAZ,OAAAqF,IAAA,CACA,IAAAxB,EAAA7G,KAAA4D,OAAAyE,GACAxB,EAAAyB,SAAAvB,EAAAmB,EACArB,EAAAyB,SAAAtB,EAAAkB,EAEAlI,KAAA2D,SAAA4E,OAAAvI,KAAA0D,MAAA1D,KAAAyD,WCjIe+E,GADED,OAFjB,WAA0BvI,KAAayI,eAAbzI,KAAuC0I,MAAAC,GAAwB,OAA/D3I,KAA+D4I,GAAA,IAExEC,iBADjB,WAAoC,IAAaC,EAAb9I,KAAayI,eAA0BE,EAAvC3I,KAAuC0I,MAAAC,IAAAG,EAAwB,OAAAH,EAAA,OAAiBI,YAAA,sCAAgDJ,EAAA,OAAYK,OAAOC,GAAA,UAAaN,EAAA,KAAUK,OAAOE,KAAA,sBAAAC,OAAA,SAAAC,IAAA,cAAjLpJ,KAAkPqJ,GAAA,cAAlPrJ,KAAkPqJ,GAAA,mDCEtR,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEhG,EACAgF,GATF,EAVA,SAAAiB,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/314.49e87f3f18e0306c175b.js","sourcesContent":["import {\r\n\tCompressedTextureLoader,\r\n\tRGBA_PVRTC_2BPPV1_Format,\r\n\tRGBA_PVRTC_4BPPV1_Format,\r\n\tRGB_PVRTC_2BPPV1_Format,\r\n\tRGB_PVRTC_4BPPV1_Format\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/*\r\n *\t PVR v2 (legacy) parser\r\n *   TODO : Add Support for PVR v3 format\r\n *   TODO : implement loadMipmaps option\r\n */\r\n\r\nvar PVRLoader = function ( manager ) {\r\n\r\n\tCompressedTextureLoader.call( this, manager );\r\n\r\n};\r\n\r\nPVRLoader.prototype = Object.assign( Object.create( CompressedTextureLoader.prototype ), {\r\n\r\n\tconstructor: PVRLoader,\r\n\r\n\tparse: function ( buffer, loadMipmaps ) {\r\n\r\n\t\tvar headerLengthInt = 13;\r\n\t\tvar header = new Uint32Array( buffer, 0, headerLengthInt );\r\n\r\n\t\tvar pvrDatas = {\r\n\t\t\tbuffer: buffer,\r\n\t\t\theader: header,\r\n\t\t\tloadMipmaps: loadMipmaps\r\n\t\t};\r\n\r\n\t\tif ( header[ 0 ] === 0x03525650 ) {\r\n\r\n\t\t\t// PVR v3\r\n\r\n\t\t\treturn PVRLoader._parseV3( pvrDatas );\r\n\r\n\t\t} else if ( header[ 11 ] === 0x21525650 ) {\r\n\r\n\t\t\t// PVR v2\r\n\r\n\t\t\treturn PVRLoader._parseV2( pvrDatas );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'THREE.PVRLoader: Unknown PVR format.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nPVRLoader._parseV3 = function ( pvrDatas ) {\r\n\r\n\tvar header = pvrDatas.header;\r\n\tvar bpp, format;\r\n\r\n\r\n\tvar metaLen = header[ 12 ],\r\n\t\tpixelFormat = header[ 2 ],\r\n\t\theight = header[ 6 ],\r\n\t\twidth = header[ 7 ],\r\n\t\t// numSurfs = header[ 9 ],\r\n\t\tnumFaces = header[ 10 ],\r\n\t\tnumMipmaps = header[ 11 ];\r\n\r\n\tswitch ( pixelFormat ) {\r\n\r\n\t\tcase 0 : // PVRTC 2bpp RGB\r\n\t\t\tbpp = 2;\r\n\t\t\tformat = RGB_PVRTC_2BPPV1_Format;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 1 : // PVRTC 2bpp RGBA\r\n\t\t\tbpp = 2;\r\n\t\t\tformat = RGBA_PVRTC_2BPPV1_Format;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 2 : // PVRTC 4bpp RGB\r\n\t\t\tbpp = 4;\r\n\t\t\tformat = RGB_PVRTC_4BPPV1_Format;\r\n\t\t\tbreak;\r\n\r\n\t\tcase 3 : // PVRTC 4bpp RGBA\r\n\t\t\tbpp = 4;\r\n\t\t\tformat = RGBA_PVRTC_4BPPV1_Format;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault :\r\n\t\t\tconsole.error( 'THREE.PVRLoader: Unsupported PVR format:', pixelFormat );\r\n\r\n\t}\r\n\r\n\tpvrDatas.dataPtr = 52 + metaLen;\r\n\tpvrDatas.bpp = bpp;\r\n\tpvrDatas.format = format;\r\n\tpvrDatas.width = width;\r\n\tpvrDatas.height = height;\r\n\tpvrDatas.numSurfaces = numFaces;\r\n\tpvrDatas.numMipmaps = numMipmaps;\r\n\tpvrDatas.isCubemap \t= ( numFaces === 6 );\r\n\r\n\treturn PVRLoader._extract( pvrDatas );\r\n\r\n};\r\n\r\nPVRLoader._parseV2 = function ( pvrDatas ) {\r\n\r\n\tvar header = pvrDatas.header;\r\n\r\n\tvar headerLength = header[ 0 ],\r\n\t\theight = header[ 1 ],\r\n\t\twidth = header[ 2 ],\r\n\t\tnumMipmaps = header[ 3 ],\r\n\t\tflags = header[ 4 ],\r\n\t\t// dataLength = header[ 5 ],\r\n\t\t// bpp =  header[ 6 ],\r\n\t\t// bitmaskRed = header[ 7 ],\r\n\t\t// bitmaskGreen = header[ 8 ],\r\n\t\t// bitmaskBlue = header[ 9 ],\r\n\t\tbitmaskAlpha = header[ 10 ],\r\n\t\t// pvrTag = header[ 11 ],\r\n\t\tnumSurfs = header[ 12 ];\r\n\r\n\r\n\tvar TYPE_MASK = 0xff;\r\n\tvar PVRTC_2 = 24,\r\n\t\tPVRTC_4 = 25;\r\n\r\n\tvar formatFlags = flags & TYPE_MASK;\r\n\r\n\tvar bpp, format;\r\n\tvar _hasAlpha = bitmaskAlpha > 0;\r\n\r\n\tif ( formatFlags === PVRTC_4 ) {\r\n\r\n\t\tformat = _hasAlpha ? RGBA_PVRTC_4BPPV1_Format : RGB_PVRTC_4BPPV1_Format;\r\n\t\tbpp = 4;\r\n\r\n\t} else if ( formatFlags === PVRTC_2 ) {\r\n\r\n\t\tformat = _hasAlpha ? RGBA_PVRTC_2BPPV1_Format : RGB_PVRTC_2BPPV1_Format;\r\n\t\tbpp = 2;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.error( 'THREE.PVRLoader: Unknown PVR format:', formatFlags );\r\n\r\n\t}\r\n\r\n\tpvrDatas.dataPtr = headerLength;\r\n\tpvrDatas.bpp = bpp;\r\n\tpvrDatas.format = format;\r\n\tpvrDatas.width = width;\r\n\tpvrDatas.height = height;\r\n\tpvrDatas.numSurfaces = numSurfs;\r\n\tpvrDatas.numMipmaps = numMipmaps + 1;\r\n\r\n\t// guess cubemap type seems tricky in v2\r\n\t// it juste a pvr containing 6 surface (no explicit cubemap type)\r\n\tpvrDatas.isCubemap \t= ( numSurfs === 6 );\r\n\r\n\treturn PVRLoader._extract( pvrDatas );\r\n\r\n};\r\n\r\n\r\nPVRLoader._extract = function ( pvrDatas ) {\r\n\r\n\tvar pvr = {\r\n\t\tmipmaps: [],\r\n\t\twidth: pvrDatas.width,\r\n\t\theight: pvrDatas.height,\r\n\t\tformat: pvrDatas.format,\r\n\t\tmipmapCount: pvrDatas.numMipmaps,\r\n\t\tisCubemap: pvrDatas.isCubemap\r\n\t};\r\n\r\n\tvar buffer = pvrDatas.buffer;\r\n\r\n\tvar dataOffset = pvrDatas.dataPtr,\r\n\t\tbpp = pvrDatas.bpp,\r\n\t\tnumSurfs = pvrDatas.numSurfaces,\r\n\t\tdataSize = 0,\r\n\t\tblockSize = 0,\r\n\t\tblockWidth = 0,\r\n\t\tblockHeight = 0,\r\n\t\twidthBlocks = 0,\r\n\t\theightBlocks = 0;\r\n\r\n\tif ( bpp === 2 ) {\r\n\r\n\t\tblockWidth = 8;\r\n\t\tblockHeight = 4;\r\n\r\n\t} else {\r\n\r\n\t\tblockWidth = 4;\r\n\t\tblockHeight = 4;\r\n\r\n\t}\r\n\r\n\tblockSize = ( blockWidth * blockHeight ) * bpp / 8;\r\n\r\n\tpvr.mipmaps.length = pvrDatas.numMipmaps * numSurfs;\r\n\r\n\tvar mipLevel = 0;\r\n\r\n\twhile ( mipLevel < pvrDatas.numMipmaps ) {\r\n\r\n\t\tvar sWidth = pvrDatas.width >> mipLevel,\r\n\t\t\tsHeight = pvrDatas.height >> mipLevel;\r\n\r\n\t\twidthBlocks = sWidth / blockWidth;\r\n\t\theightBlocks = sHeight / blockHeight;\r\n\r\n\t\t// Clamp to minimum number of blocks\r\n\t\tif ( widthBlocks < 2 ) widthBlocks = 2;\r\n\t\tif ( heightBlocks < 2 ) heightBlocks = 2;\r\n\r\n\t\tdataSize = widthBlocks * heightBlocks * blockSize;\r\n\r\n\t\tfor ( var surfIndex = 0; surfIndex < numSurfs; surfIndex ++ ) {\r\n\r\n\t\t\tvar byteArray = new Uint8Array( buffer, dataOffset, dataSize );\r\n\r\n\t\t\tvar mipmap = {\r\n\t\t\t\tdata: byteArray,\r\n\t\t\t\twidth: sWidth,\r\n\t\t\t\theight: sHeight\r\n\t\t\t};\r\n\r\n\t\t\tpvr.mipmaps[ surfIndex * pvrDatas.numMipmaps + mipLevel ] = mipmap;\r\n\r\n\t\t\tdataOffset += dataSize;\r\n\r\n\t\t}\r\n\r\n\t\tmipLevel ++;\r\n\r\n\t}\r\n\r\n\treturn pvr;\r\n\r\n};\r\n\r\nexport { PVRLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/PVRLoader.js","<template>\r\n    <div class=\"webglLoaderTexturePvrtc-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl - PVR compressed textures\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { PVRLoader } from '@/components/jsm/loaders/PVRLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tmeshes: [],\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 1, 2000)\r\n            this.camera.position.z = 1000\r\n            this.scene = new this.$THREE.Scene()\r\n            var geometry = new this.$THREE.BoxBufferGeometry(200, 200, 200)\r\n            //\r\n            var that = this\r\n            var onCube1Loaded = function (texture) {\r\n                texture.magFilter = that.$THREE.LinearFilter\r\n                texture.minFilter = that.$THREE.LinearFilter\r\n                texture.mapping = that.$THREE.CubeReflectionMapping\r\n                material6.needsUpdate = true\r\n            }\r\n            var onCube2Loaded = function (texture) {\r\n                texture.magFilter = that.$THREE.LinearFilter\r\n                // texture.minFilter = LinearMipmapNearestFilter\r\n                texture.minFilter = that.$THREE.LinearFilter\r\n                texture.mapping = that.$THREE.CubeReflectionMapping\r\n                material8.needsUpdate = true\r\n            }\r\n            //\r\n            var loader = new PVRLoader()\r\n            var disturb_4bpp_rgb = loader.load('static/textures/compressed/disturb_4bpp_rgb.pvr')\r\n            var disturb_4bpp_rgb_v3 = loader.load('static/textures/compressed/disturb_4bpp_rgb_v3.pvr')\r\n            var disturb_4bpp_rgb_mips = loader.load('static/textures/compressed/disturb_4bpp_rgb_mips.pvr')\r\n            var disturb_2bpp_rgb = loader.load('static/textures/compressed/disturb_2bpp_rgb.pvr')\r\n            var flare_4bpp_rgba = loader.load('static/textures/compressed/flare_4bpp_rgba.pvr')\r\n            var flare_2bpp_rgba = loader.load('static/textures/compressed/flare_2bpp_rgba.pvr')\r\n            var park3_cube_nomip_4bpp_rgb = loader.load('static/textures/compressed/park3_cube_nomip_4bpp_rgb.pvr', onCube1Loaded)\r\n            var park3_cube_mip_2bpp_rgb_v3 = loader.load('static/textures/compressed/park3_cube_mip_2bpp_rgb_v3.pvr', onCube2Loaded)\r\n            disturb_2bpp_rgb.minFilter =\r\n            disturb_2bpp_rgb.magFilter =\r\n            flare_4bpp_rgba.minFilter =\r\n            flare_4bpp_rgba.magFilter =\r\n            disturb_4bpp_rgb.minFilter =\r\n            disturb_4bpp_rgb.magFilter =\r\n            disturb_4bpp_rgb_v3.minFilter =\r\n            disturb_4bpp_rgb_v3.magFilter =\r\n            flare_2bpp_rgba.minFilter =\r\n            flare_2bpp_rgba.magFilter = this.$THREE.LinearFilter\r\n            var material1 = new this.$THREE.MeshBasicMaterial({ map: disturb_4bpp_rgb })\r\n            var material2 = new this.$THREE.MeshBasicMaterial({ map: disturb_4bpp_rgb_mips })\r\n            var material3 = new this.$THREE.MeshBasicMaterial({ map: disturb_2bpp_rgb })\r\n            var material4 = new this.$THREE.MeshBasicMaterial({ map: flare_4bpp_rgba, side: this.$THREE.DoubleSide, depthTest: false, transparent: true })\r\n            var material5 = new this.$THREE.MeshBasicMaterial({ map: flare_2bpp_rgba, side: this.$THREE.DoubleSide, depthTest: false, transparent: true })\r\n            var material6 = new this.$THREE.MeshBasicMaterial({ envMap: park3_cube_nomip_4bpp_rgb })\r\n            var material8 = new this.$THREE.MeshBasicMaterial({ envMap: park3_cube_mip_2bpp_rgb_v3 })\r\n            var material7 = new this.$THREE.MeshBasicMaterial({ map: disturb_4bpp_rgb_v3 })\r\n            //\r\n            var mesh = new this.$THREE.Mesh(geometry, material1)\r\n            mesh.position.x = - 500\r\n            mesh.position.y = 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, material2)\r\n            mesh.position.x = - 166\r\n            mesh.position.y = 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, material3)\r\n            mesh.position.x = 166\r\n            mesh.position.y = 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, material7)\r\n            mesh.position.x = 500\r\n            mesh.position.y = 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, material4)\r\n            mesh.position.x = - 500\r\n            mesh.position.y = - 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry, material5)\r\n            mesh.position.x = - 166\r\n            mesh.position.y = - 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            var torus = new this.$THREE.TorusBufferGeometry(100, 50, 32, 24)\r\n            mesh = new this.$THREE.Mesh(torus, material6)\r\n            mesh.position.x = 166\r\n            mesh.position.y = - 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            mesh = new this.$THREE.Mesh(torus, material8)\r\n            mesh.position.x = 500\r\n            mesh.position.y = - 200\r\n            this.scene.add(mesh)\r\n            this.meshes.push(mesh)\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglLoaderTexturePvrtc-container')[0].appendChild(this.renderer.domElement)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            var time = Date.now() * 0.001\r\n            for (var i = 0; i < this.meshes.length; i ++) {\r\n                var mesh = this.meshes[ i ]\r\n                mesh.rotation.x = time\r\n                mesh.rotation.y = time\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoaderTexturePvrtc-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoaderTexturePvrtc.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoaderTexturePvrtc-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl - PVR compressed textures\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-19fa18d2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoaderTexturePvrtc.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-19fa18d2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoaderTexturePvrtc.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderTexturePvrtc.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoaderTexturePvrtc.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-19fa18d2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoaderTexturePvrtc.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-19fa18d2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoaderTexturePvrtc.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}