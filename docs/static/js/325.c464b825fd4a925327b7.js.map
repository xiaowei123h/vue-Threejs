{"version":3,"sources":["webpack:///./src/components/jsm/exporters/ColladaExporter.js","webpack:///src/views/misc/miscExporterCollada.vue","webpack:///./src/views/misc/miscExporterCollada.vue?94ca","webpack:///./src/views/misc/miscExporterCollada.vue"],"names":["ColladaExporter","prototype","constructor","parse","object","onDone","options","Object","assign","version","author","textureDirectory","replace","canvas","ctx","console","warn","imageToData","image","ext","document","createElement","getContext","width","height","drawImage","str","b","atob","buf","Uint8Array","length","i","l","charCodeAt","base64ToBuffer","toDataURL","transMat","getFuncs","attrBufferToArray","attr","isInterleavedBufferAttribute","arr","array","count","itemSize","size","j","getAttribute","name","params","type","join","Math","floor","map","n","processTexture","tex","texid","imageMap","get","libraryImages","imageNode","push","set","textures","directory","data","original","geometryInfo","WeakMap","materialMap","libraryGeometries","libraryEffects","libraryMaterials","libraryVisualScenes","processObject","o","node","updateMatrix","Matrix4","copy","matrix","transpose","toArray","getTransform","Mesh","geometry","geomInfo","g","st","ct","info","bufferGeometry","Geometry","BufferGeometry","fromGeometry","meshid","indexCount","index","attributes","position","groups","start","materialIndex","gnode","posName","vertName","triangleInputs","normName","normal","uvName","uv","uv2","colName","color","indexArray","Array","group","subarr","isArray","slice","buffer","BYTES_PER_ELEMENT","polycount","processGeometry","matids","mat","material","MeshBasicMaterial","materials","fill","v","m","matid","MeshLambertMaterial","emissive","Color","diffuse","specular","shininess","reflectivity","transparencyNode","transparent","opacity","techniqueNode","emissiveMap","r","normalMap","specularMap","effectnode","side","DoubleSide","materialNode","processMaterial","id","children","forEach","c","dae","Date","toISOString","urdf","IS_END_TAG","IS_SELF_CLOSING","HAS_TEXT","tagnum","res","match","tag","test","pad","ch","num","requestAnimationFrame","miscExporterCollada","camera","scene","renderer","cameraControls","effectController","teapotSize","ambientLight","light","tess","bBottom","bLid","bBody","bFitLid","bNonBlinn","shading","wireMaterial","flatMaterial","gouraudMaterial","phongMaterial","texturedMaterial","normalMaterial","reflectiveMaterial","teapot","textureCube","diffuseColor","specularColor","exporter","link","gui","mounted","this","$THREE","style","display","getElementsByClassName","appendChild","init","render","beforeDestroy","destroy","methods","container","canvasWidth","$webglInnerWidth","canvasHeight","window","innerHeight","PerspectiveCamera","AmbientLight","DirectionalLight","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","domElement","addEventListener","onWindowResize","OrbitControls","loader","TextureLoader","textureMap","load","wrapS","wrapT","RepeatWrapping","anisotropy","encoding","diffuseMap","path","urls","CubeTextureLoader","materialColor","setRGB","wireframe","MeshPhongMaterial","flatShading","envMap","Scene","background","add","setupGui","$onWindowResize","h","ka","kd","ks","metallic","hue","saturation","lightness","lhue","lsaturation","llightness","lx","ly","lz","newTess","bottom","lid","body","fitLid","nonblinn","newShading","dat_gui_module","addFolder","onChange","getElementById","exportCollada","createNewTeapot","setHSL","multiplyScalar","dispose","remove","teapotGeometry","TeapotBufferGeometry","_this","result","materialType","saveString","saveArrayBuffer","save","blob","filename","href","URL","createObjectURL","download","click","text","Blob","misc_miscExporterCollada","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/325.c464b825fd4a925327b7.js","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tColor,\r\n\tDoubleSide,\r\n\tGeometry,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tMeshLambertMaterial\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * https://github.com/gkjohnson/collada-exporter-js\r\n *\r\n * Usage:\r\n *  var exporter = new ColladaExporter();\r\n *\r\n *  var data = exporter.parse(mesh);\r\n *\r\n * Format Definition:\r\n *  https://www.khronos.org/collada/\r\n */\r\n\r\nvar ColladaExporter = function () {};\r\n\r\nColladaExporter.prototype = {\r\n\r\n\tconstructor: ColladaExporter,\r\n\r\n\tparse: function ( object, onDone, options ) {\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\toptions = Object.assign( {\r\n\t\t\tversion: '1.4.1',\r\n\t\t\tauthor: null,\r\n\t\t\ttextureDirectory: '',\r\n\t\t}, options );\r\n\r\n\t\tif ( options.textureDirectory !== '' ) {\r\n\r\n\t\t\toptions.textureDirectory = `${ options.textureDirectory }/`\r\n\t\t\t\t.replace( /\\\\/g, '/' )\r\n\t\t\t\t.replace( /\\/+/g, '/' );\r\n\r\n\t\t}\r\n\r\n\t\tvar version = options.version;\r\n\t\tif ( version !== '1.4.1' && version !== '1.5.0' ) {\r\n\r\n\t\t\tconsole.warn( `ColladaExporter : Version ${ version } not supported for export. Only 1.4.1 and 1.5.0.` );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Convert the urdf xml into a well-formatted, indented format\r\n\t\tfunction format( urdf ) {\r\n\r\n\t\t\tvar IS_END_TAG = /^<\\//;\r\n\t\t\tvar IS_SELF_CLOSING = /(\\?>$)|(\\/>$)/;\r\n\t\t\tvar HAS_TEXT = /<[^>]+>[^<]*<\\/[^<]+>/;\r\n\r\n\t\t\tvar pad = ( ch, num ) => ( num > 0 ? ch + pad( ch, num - 1 ) : '' );\r\n\r\n\t\t\tvar tagnum = 0;\r\n\t\t\treturn urdf\r\n\t\t\t\t.match( /(<[^>]+>[^<]+<\\/[^<]+>)|(<[^>]+>)/g )\r\n\t\t\t\t.map( tag => {\r\n\r\n\t\t\t\t\tif ( ! HAS_TEXT.test( tag ) && ! IS_SELF_CLOSING.test( tag ) && IS_END_TAG.test( tag ) ) {\r\n\r\n\t\t\t\t\t\ttagnum --;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar res = `${ pad( '  ', tagnum ) }${ tag }`;\r\n\r\n\t\t\t\t\tif ( ! HAS_TEXT.test( tag ) && ! IS_SELF_CLOSING.test( tag ) && ! IS_END_TAG.test( tag ) ) {\r\n\r\n\t\t\t\t\t\ttagnum ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn res;\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\t// Convert an image into a png format for saving\r\n\t\tfunction base64ToBuffer( str ) {\r\n\r\n\t\t\tvar b = atob( str );\r\n\t\t\tvar buf = new Uint8Array( b.length );\r\n\r\n\t\t\tfor ( var i = 0, l = buf.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tbuf[ i ] = b.charCodeAt( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buf;\r\n\r\n\t\t}\r\n\r\n\t\tvar canvas, ctx;\r\n\t\tfunction imageToData( image, ext ) {\r\n\r\n\t\t\tcanvas = canvas || document.createElement( 'canvas' );\r\n\t\t\tctx = ctx || canvas.getContext( '2d' );\r\n\r\n\t\t\tcanvas.width = image.width;\r\n\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\tctx.drawImage( image, 0, 0 );\r\n\r\n\t\t\t// Get the base64 encoded data\r\n\t\t\tvar base64data = canvas\r\n\t\t\t\t.toDataURL( `image/${ ext }`, 1 )\r\n\t\t\t\t.replace( /^data:image\\/(png|jpg);base64,/, '' );\r\n\r\n\t\t\t// Convert to a uint8 array\r\n\t\t\treturn base64ToBuffer( base64data );\r\n\r\n\t\t}\r\n\r\n\t\t// gets the attribute array. Generate a new array if the attribute is interleaved\r\n\t\tvar getFuncs = [ 'getX', 'getY', 'getZ', 'getW' ];\r\n\t\tfunction attrBufferToArray( attr ) {\r\n\r\n\t\t\tif ( attr.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t// use the typed array constructor to save on memory\r\n\t\t\t\tvar arr = new attr.array.constructor( attr.count * attr.itemSize );\r\n\t\t\t\tvar size = attr.itemSize;\r\n\t\t\t\tfor ( var i = 0, l = attr.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < size; j ++ ) {\r\n\r\n\t\t\t\t\t\tarr[ i * size + j ] = attr[ getFuncs[ j ] ]( i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn arr;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn attr.array;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Returns an array of the same type starting at the `st` index,\r\n\t\t// and `ct` length\r\n\t\tfunction subArray( arr, st, ct ) {\r\n\r\n\t\t\tif ( Array.isArray( arr ) ) return arr.slice( st, st + ct );\r\n\t\t\telse return new arr.constructor( arr.buffer, st * arr.BYTES_PER_ELEMENT, ct );\r\n\r\n\t\t}\r\n\r\n\t\t// Returns the string for a geometry's attribute\r\n\t\tfunction getAttribute( attr, name, params, type ) {\r\n\r\n\t\t\tvar array = attrBufferToArray( attr );\r\n\t\t\tvar res =\r\n\t\t\t\t\t`<source id=\"${ name }\">` +\r\n\r\n\t\t\t\t\t`<float_array id=\"${ name }-array\" count=\"${ array.length }\">` +\r\n\t\t\t\t\tarray.join( ' ' ) +\r\n\t\t\t\t\t'</float_array>' +\r\n\r\n\t\t\t\t\t'<technique_common>' +\r\n\t\t\t\t\t`<accessor source=\"#${ name }-array\" count=\"${ Math.floor( array.length / attr.itemSize ) }\" stride=\"${ attr.itemSize }\">` +\r\n\r\n\t\t\t\t\tparams.map( n => `<param name=\"${ n }\" type=\"${ type }\" />` ).join( '' ) +\r\n\r\n\t\t\t\t\t'</accessor>' +\r\n\t\t\t\t\t'</technique_common>' +\r\n\t\t\t\t\t'</source>';\r\n\r\n\t\t\treturn res;\r\n\r\n\t\t}\r\n\r\n\t\t// Returns the string for a node's transform information\r\n\t\tvar transMat;\r\n\t\tfunction getTransform( o ) {\r\n\r\n\t\t\t// ensure the object's matrix is up to date\r\n\t\t\t// before saving the transform\r\n\t\t\to.updateMatrix();\r\n\r\n\t\t\ttransMat = transMat || new Matrix4();\r\n\t\t\ttransMat.copy( o.matrix );\r\n\t\t\ttransMat.transpose();\r\n\t\t\treturn `<matrix>${ transMat.toArray().join( ' ' ) }</matrix>`;\r\n\r\n\t\t}\r\n\r\n\t\t// Process the given piece of geometry into the geometry library\r\n\t\t// Returns the mesh id\r\n\t\tfunction processGeometry( g ) {\r\n\r\n\t\t\tvar info = geometryInfo.get( g );\r\n\r\n\t\t\tif ( ! info ) {\r\n\r\n\t\t\t\t// convert the geometry to bufferGeometry if it isn't already\r\n\t\t\t\tvar bufferGeometry = g;\r\n\t\t\t\tif ( bufferGeometry instanceof Geometry ) {\r\n\r\n\t\t\t\t\tbufferGeometry = ( new BufferGeometry() ).fromGeometry( bufferGeometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar meshid = `Mesh${ libraryGeometries.length + 1 }`;\r\n\r\n\t\t\t\tvar indexCount =\r\n\t\t\t\t\tbufferGeometry.index ?\r\n\t\t\t\t\t\tbufferGeometry.index.count * bufferGeometry.index.itemSize :\r\n\t\t\t\t\t\tbufferGeometry.attributes.position.count;\r\n\r\n\t\t\t\tvar groups =\r\n\t\t\t\t\tbufferGeometry.groups != null && bufferGeometry.groups.length !== 0 ?\r\n\t\t\t\t\t\tbufferGeometry.groups :\r\n\t\t\t\t\t\t[ { start: 0, count: indexCount, materialIndex: 0 } ];\r\n\r\n\r\n\t\t\t\tvar gname = g.name ? ` name=\"${ g.name }\"` : '';\r\n\t\t\t\tvar gnode = `<geometry id=\"${ meshid }\"${ gname }><mesh>`;\r\n\r\n\t\t\t\t// define the geometry node and the vertices for the geometry\r\n\t\t\t\tvar posName = `${ meshid }-position`;\r\n\t\t\t\tvar vertName = `${ meshid }-vertices`;\r\n\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.position, posName, [ 'X', 'Y', 'Z' ], 'float' );\r\n\t\t\t\tgnode += `<vertices id=\"${ vertName }\"><input semantic=\"POSITION\" source=\"#${ posName }\" /></vertices>`;\r\n\r\n\t\t\t\t// NOTE: We're not optimizing the attribute arrays here, so they're all the same length and\r\n\t\t\t\t// can therefore share the same triangle indices. However, MeshLab seems to have trouble opening\r\n\t\t\t\t// models with attributes that share an offset.\r\n\t\t\t\t// MeshLab Bug#424: https://sourceforge.net/p/meshlab/bugs/424/\r\n\r\n\t\t\t\t// serialize normals\r\n\t\t\t\tvar triangleInputs = `<input semantic=\"VERTEX\" source=\"#${ vertName }\" offset=\"0\" />`;\r\n\t\t\t\tif ( 'normal' in bufferGeometry.attributes ) {\r\n\r\n\t\t\t\t\tvar normName = `${ meshid }-normal`;\r\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.normal, normName, [ 'X', 'Y', 'Z' ], 'float' );\r\n\t\t\t\t\ttriangleInputs += `<input semantic=\"NORMAL\" source=\"#${ normName }\" offset=\"0\" />`;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// serialize uvs\r\n\t\t\t\tif ( 'uv' in bufferGeometry.attributes ) {\r\n\r\n\t\t\t\t\tvar uvName = `${ meshid }-texcoord`;\r\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.uv, uvName, [ 'S', 'T' ], 'float' );\r\n\t\t\t\t\ttriangleInputs += `<input semantic=\"TEXCOORD\" source=\"#${ uvName }\" offset=\"0\" set=\"0\" />`;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// serialize lightmap uvs\r\n\t\t\t\tif ( 'uv2' in bufferGeometry.attributes ) {\r\n\r\n\t\t\t\t\tvar uvName = `${ meshid }-texcoord2`;\r\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.uv2, uvName, [ 'S', 'T' ], 'float' );\r\n\t\t\t\t\ttriangleInputs += `<input semantic=\"TEXCOORD\" source=\"#${ uvName }\" offset=\"0\" set=\"1\" />`;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// serialize colors\r\n\t\t\t\tif ( 'color' in bufferGeometry.attributes ) {\r\n\r\n\t\t\t\t\tvar colName = `${ meshid }-color`;\r\n\t\t\t\t\tgnode += getAttribute( bufferGeometry.attributes.color, colName, [ 'X', 'Y', 'Z' ], 'uint8' );\r\n\t\t\t\t\ttriangleInputs += `<input semantic=\"COLOR\" source=\"#${ colName }\" offset=\"0\" />`;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar indexArray = null;\r\n\t\t\t\tif ( bufferGeometry.index ) {\r\n\r\n\t\t\t\t\tindexArray = attrBufferToArray( bufferGeometry.index );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tindexArray = new Array( indexCount );\r\n\t\t\t\t\tfor ( var i = 0, l = indexArray.length; i < l; i ++ ) indexArray[ i ] = i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\tvar subarr = subArray( indexArray, group.start, group.count );\r\n\t\t\t\t\tvar polycount = subarr.length / 3;\r\n\t\t\t\t\tgnode += `<triangles material=\"MESH_MATERIAL_${ group.materialIndex }\" count=\"${ polycount }\">`;\r\n\t\t\t\t\tgnode += triangleInputs;\r\n\r\n\t\t\t\t\tgnode += `<p>${ subarr.join( ' ' ) }</p>`;\r\n\t\t\t\t\tgnode += '</triangles>';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgnode += `</mesh></geometry>`;\r\n\r\n\t\t\t\tlibraryGeometries.push( gnode );\r\n\r\n\t\t\t\tinfo = { meshid: meshid, bufferGeometry: bufferGeometry };\r\n\t\t\t\tgeometryInfo.set( g, info );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn info;\r\n\r\n\t\t}\r\n\r\n\t\t// Process the given texture into the image library\r\n\t\t// Returns the image library\r\n\t\tfunction processTexture( tex ) {\r\n\r\n\t\t\tvar texid = imageMap.get( tex );\r\n\t\t\tif ( texid == null ) {\r\n\r\n\t\t\t\ttexid = `image-${ libraryImages.length + 1 }`;\r\n\r\n\t\t\t\tvar ext = 'png';\r\n\t\t\t\tvar name = tex.name || texid;\r\n\t\t\t\tvar imageNode = `<image id=\"${ texid }\" name=\"${ name }\">`;\r\n\r\n\t\t\t\tif ( version === '1.5.0' ) {\r\n\r\n\t\t\t\t\timageNode += `<init_from><ref>${ options.textureDirectory }${ name }.${ ext }</ref></init_from>`;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// version image node 1.4.1\r\n\t\t\t\t\timageNode += `<init_from>${ options.textureDirectory }${ name }.${ ext }</init_from>`;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\timageNode += '</image>';\r\n\r\n\t\t\t\tlibraryImages.push( imageNode );\r\n\t\t\t\timageMap.set( tex, texid );\r\n\t\t\t\ttextures.push( {\r\n\t\t\t\t\tdirectory: options.textureDirectory,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\text,\r\n\t\t\t\t\tdata: imageToData( tex.image, ext ),\r\n\t\t\t\t\toriginal: tex\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texid;\r\n\r\n\t\t}\r\n\r\n\t\t// Process the given material into the material and effect libraries\r\n\t\t// Returns the material id\r\n\t\tfunction processMaterial( m ) {\r\n\r\n\t\t\tvar matid = materialMap.get( m );\r\n\r\n\t\t\tif ( matid == null ) {\r\n\r\n\t\t\t\tmatid = `Mat${ libraryEffects.length + 1 }`;\r\n\r\n\t\t\t\tvar type = 'phong';\r\n\r\n\t\t\t\tif ( m instanceof MeshLambertMaterial ) {\r\n\r\n\t\t\t\t\ttype = 'lambert';\r\n\r\n\t\t\t\t} else if ( m instanceof MeshBasicMaterial ) {\r\n\r\n\t\t\t\t\ttype = 'constant';\r\n\r\n\t\t\t\t\tif ( m.map !== null ) {\r\n\r\n\t\t\t\t\t\t// The Collada spec does not support diffuse texture maps with the\r\n\t\t\t\t\t\t// constant shader type.\r\n\t\t\t\t\t\t// mrdoob/three.js#15469\r\n\t\t\t\t\t\tconsole.warn( 'ColladaExporter: Texture maps not supported with MeshBasicMaterial.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar emissive = m.emissive ? m.emissive : new Color( 0, 0, 0 );\r\n\t\t\t\tvar diffuse = m.color ? m.color : new Color( 0, 0, 0 );\r\n\t\t\t\tvar specular = m.specular ? m.specular : new Color( 1, 1, 1 );\r\n\t\t\t\tvar shininess = m.shininess || 0;\r\n\t\t\t\tvar reflectivity = m.reflectivity || 0;\r\n\r\n\t\t\t\t// Do not export and alpha map for the reasons mentioned in issue (#13792)\r\n\t\t\t\t// in three.js alpha maps are black and white, but collada expects the alpha\r\n\t\t\t\t// channel to specify the transparency\r\n\t\t\t\tvar transparencyNode = '';\r\n\t\t\t\tif ( m.transparent === true ) {\r\n\r\n\t\t\t\t\ttransparencyNode +=\r\n\t\t\t\t\t\t`<transparent>` +\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tm.map ?\r\n\t\t\t\t\t\t\t\t`<texture texture=\"diffuse-sampler\"></texture>` :\r\n\t\t\t\t\t\t\t\t'<float>1</float>'\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t'</transparent>';\r\n\r\n\t\t\t\t\tif ( m.opacity < 1 ) {\r\n\r\n\t\t\t\t\t\ttransparencyNode += `<transparency><float>${ m.opacity }</float></transparency>`;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar techniqueNode = `<technique sid=\"common\"><${ type }>` +\r\n\r\n\t\t\t\t\t'<emission>' +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tm.emissiveMap ?\r\n\t\t\t\t\t\t\t'<texture texture=\"emissive-sampler\" texcoord=\"TEXCOORD\" />' :\r\n\t\t\t\t\t\t\t`<color sid=\"emission\">${ emissive.r } ${ emissive.g } ${ emissive.b } 1</color>`\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t'</emission>' +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\ttype !== 'constant' ?\r\n\t\t\t\t\t\t\t'<diffuse>' +\r\n\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tm.map ?\r\n\t\t\t\t\t\t\t\t'<texture texture=\"diffuse-sampler\" texcoord=\"TEXCOORD\" />' :\r\n\t\t\t\t\t\t\t\t`<color sid=\"diffuse\">${ diffuse.r } ${ diffuse.g } ${ diffuse.b } 1</color>`\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t'</diffuse>'\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\ttype !== 'constant' ?\r\n\t\t\t\t\t\t\t'<bump>' +\r\n\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tm.normalMap ? '<texture texture=\"bump-sampler\" texcoord=\"TEXCOORD\" />' : ''\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t'</bump>'\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\ttype === 'phong' ?\r\n\t\t\t\t\t\t\t`<specular><color sid=\"specular\">${ specular.r } ${ specular.g } ${ specular.b } 1</color></specular>` +\r\n\r\n\t\t\t\t\t\t'<shininess>' +\r\n\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tm.specularMap ?\r\n\t\t\t\t\t\t\t\t'<texture texture=\"specular-sampler\" texcoord=\"TEXCOORD\" />' :\r\n\t\t\t\t\t\t\t\t`<float sid=\"shininess\">${ shininess }</float>`\r\n\t\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t\t'</shininess>'\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t`<reflective><color>${ diffuse.r } ${ diffuse.g } ${ diffuse.b } 1</color></reflective>` +\r\n\r\n\t\t\t\t\t`<reflectivity><float>${ reflectivity }</float></reflectivity>` +\r\n\r\n\t\t\t\t\ttransparencyNode +\r\n\r\n\t\t\t\t\t`</${ type }></technique>`;\r\n\r\n\t\t\t\tvar effectnode =\r\n\t\t\t\t\t`<effect id=\"${ matid }-effect\">` +\r\n\t\t\t\t\t'<profile_COMMON>' +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tm.map ?\r\n\t\t\t\t\t\t\t'<newparam sid=\"diffuse-surface\"><surface type=\"2D\">' +\r\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.map ) }</init_from>` +\r\n\t\t\t\t\t\t\t'</surface></newparam>' +\r\n\t\t\t\t\t\t\t'<newparam sid=\"diffuse-sampler\"><sampler2D><source>diffuse-surface</source></sampler2D></newparam>' :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tm.specularMap ?\r\n\t\t\t\t\t\t\t'<newparam sid=\"specular-surface\"><surface type=\"2D\">' +\r\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.specularMap ) }</init_from>` +\r\n\t\t\t\t\t\t\t'</surface></newparam>' +\r\n\t\t\t\t\t\t\t'<newparam sid=\"specular-sampler\"><sampler2D><source>specular-surface</source></sampler2D></newparam>' :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tm.emissiveMap ?\r\n\t\t\t\t\t\t\t'<newparam sid=\"emissive-surface\"><surface type=\"2D\">' +\r\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.emissiveMap ) }</init_from>` +\r\n\t\t\t\t\t\t\t'</surface></newparam>' +\r\n\t\t\t\t\t\t\t'<newparam sid=\"emissive-sampler\"><sampler2D><source>emissive-surface</source></sampler2D></newparam>' :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tm.normalMap ?\r\n\t\t\t\t\t\t\t'<newparam sid=\"bump-surface\"><surface type=\"2D\">' +\r\n\t\t\t\t\t\t\t`<init_from>${ processTexture( m.normalMap ) }</init_from>` +\r\n\t\t\t\t\t\t\t'</surface></newparam>' +\r\n\t\t\t\t\t\t\t'<newparam sid=\"bump-sampler\"><sampler2D><source>bump-surface</source></sampler2D></newparam>' :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\ttechniqueNode +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tm.side === DoubleSide ?\r\n\t\t\t\t\t\t\t`<extra><technique profile=\"THREEJS\"><double_sided sid=\"double_sided\" type=\"int\">1</double_sided></technique></extra>` :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t'</profile_COMMON>' +\r\n\r\n\t\t\t\t\t'</effect>';\r\n\r\n\t\t\t\tvar materialName = m.name ? ` name=\"${ m.name }\"` : '';\r\n\t\t\t\tvar materialNode = `<material id=\"${ matid }\"${ materialName }><instance_effect url=\"#${ matid }-effect\" /></material>`;\r\n\r\n\t\t\t\tlibraryMaterials.push( materialNode );\r\n\t\t\t\tlibraryEffects.push( effectnode );\r\n\t\t\t\tmaterialMap.set( m, matid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn matid;\r\n\r\n\t\t}\r\n\r\n\t\t// Recursively process the object into a scene\r\n\t\tfunction processObject( o ) {\r\n\r\n\t\t\tvar node = `<node name=\"${ o.name }\">`;\r\n\r\n\t\t\tnode += getTransform( o );\r\n\r\n\t\t\tif ( o instanceof Mesh && o.geometry != null ) {\r\n\r\n\t\t\t\t// function returns the id associated with the mesh and a \"BufferGeometry\" version\r\n\t\t\t\t// of the geometry in case it's not a geometry.\r\n\t\t\t\tvar geomInfo = processGeometry( o.geometry );\r\n\t\t\t\tvar meshid = geomInfo.meshid;\r\n\t\t\t\tvar geometry = geomInfo.bufferGeometry;\r\n\r\n\t\t\t\t// ids of the materials to bind to the geometry\r\n\t\t\t\tvar matids = null;\r\n\t\t\t\tvar matidsArray = [];\r\n\r\n\t\t\t\t// get a list of materials to bind to the sub groups of the geometry.\r\n\t\t\t\t// If the amount of subgroups is greater than the materials, than reuse\r\n\t\t\t\t// the materials.\r\n\t\t\t\tvar mat = o.material || new MeshBasicMaterial();\r\n\t\t\t\tvar materials = Array.isArray( mat ) ? mat : [ mat ];\r\n\r\n\t\t\t\tif ( geometry.groups.length > materials.length ) {\r\n\r\n\t\t\t\t\tmatidsArray = new Array( geometry.groups.length );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmatidsArray = new Array( materials.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmatids = matidsArray.fill().map( ( v, i ) => processMaterial( materials[ i % materials.length ] ) );\r\n\r\n\t\t\t\tnode +=\r\n\t\t\t\t\t`<instance_geometry url=\"#${ meshid }\">` +\r\n\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tmatids != null ?\r\n\t\t\t\t\t\t\t'<bind_material><technique_common>' +\r\n\t\t\t\t\t\t\tmatids.map( ( id, i ) =>\r\n\r\n\t\t\t\t\t\t\t\t`<instance_material symbol=\"MESH_MATERIAL_${ i }\" target=\"#${ id }\" >` +\r\n\r\n\t\t\t\t\t\t\t\t'<bind_vertex_input semantic=\"TEXCOORD\" input_semantic=\"TEXCOORD\" input_set=\"0\" />' +\r\n\r\n\t\t\t\t\t\t\t\t'</instance_material>'\r\n\t\t\t\t\t\t\t).join( '' ) +\r\n\t\t\t\t\t\t\t'</technique_common></bind_material>' :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\r\n\t\t\t\t\t'</instance_geometry>';\r\n\r\n\t\t\t}\r\n\r\n\t\t\to.children.forEach( c => node += processObject( c ) );\r\n\r\n\t\t\tnode += '</node>';\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometryInfo = new WeakMap();\r\n\t\tvar materialMap = new WeakMap();\r\n\t\tvar imageMap = new WeakMap();\r\n\t\tvar textures = [];\r\n\r\n\t\tvar libraryImages = [];\r\n\t\tvar libraryGeometries = [];\r\n\t\tvar libraryEffects = [];\r\n\t\tvar libraryMaterials = [];\r\n\t\tvar libraryVisualScenes = processObject( object );\r\n\r\n\t\tvar specLink = version === '1.4.1' ? 'http://www.collada.org/2005/11/COLLADASchema' : 'https://www.khronos.org/collada/';\r\n\t\tvar dae =\r\n\t\t\t'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>' +\r\n\t\t\t`<COLLADA xmlns=\"${ specLink }\" version=\"${ version }\">` +\r\n\t\t\t'<asset>' +\r\n\t\t\t(\r\n\t\t\t\t'<contributor>' +\r\n\t\t\t\t'<authoring_tool>three.js Collada Exporter</authoring_tool>' +\r\n\t\t\t\t( options.author !== null ? `<author>${ options.author }</author>` : '' ) +\r\n\t\t\t\t'</contributor>' +\r\n\t\t\t\t`<created>${ ( new Date() ).toISOString() }</created>` +\r\n\t\t\t\t`<modified>${ ( new Date() ).toISOString() }</modified>` +\r\n\t\t\t\t'<up_axis>Y_UP</up_axis>'\r\n\t\t\t) +\r\n\t\t\t'</asset>';\r\n\r\n\t\tdae += `<library_images>${ libraryImages.join( '' ) }</library_images>`;\r\n\r\n\t\tdae += `<library_effects>${ libraryEffects.join( '' ) }</library_effects>`;\r\n\r\n\t\tdae += `<library_materials>${ libraryMaterials.join( '' ) }</library_materials>`;\r\n\r\n\t\tdae += `<library_geometries>${ libraryGeometries.join( '' ) }</library_geometries>`;\r\n\r\n\t\tdae += `<library_visual_scenes><visual_scene id=\"Scene\" name=\"scene\">${ libraryVisualScenes }</visual_scene></library_visual_scenes>`;\r\n\r\n\t\tdae += '<scene><instance_visual_scene url=\"#Scene\"/></scene>';\r\n\r\n\t\tdae += '</COLLADA>';\r\n\r\n\t\tvar res = {\r\n\t\t\tdata: format( dae ),\r\n\t\t\ttextures\r\n\t\t};\r\n\r\n\t\tif ( typeof onDone === 'function' ) {\r\n\r\n\t\t\trequestAnimationFrame( () => onDone( res ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { ColladaExporter };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/exporters/ColladaExporter.js","<template>\r\n    <div class=\"miscExporterCollada-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - exporter - collada<br /><br />\r\n\t\t\t<button id=\"export\">Export COLLADA</button>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { ColladaExporter } from '@/components/jsm/exporters/ColladaExporter.js'\r\nimport { TeapotBufferGeometry } from '@/components/jsm/geometries/TeapotBufferGeometry.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tcameraControls: null,\r\n\t\t\teffectController: null,\r\n\t\t\tteapotSize: 400,\r\n            ambientLight: null,\r\n            light: null,\r\n\t\t\ttess: - 1,\t// force initialization\r\n\t\t\tbBottom: null,\r\n\t\t\tbLid: null,\r\n\t\t\tbBody: null,\r\n\t\t\tbFitLid: null,\r\n\t\t\tbNonBlinn: null,\r\n\t\t\tshading: null,\r\n            wireMaterial: null,\r\n            flatMaterial: null,\r\n            gouraudMaterial: null,\r\n            phongMaterial: null,\r\n            texturedMaterial: null,\r\n            normalMaterial: null,\r\n            reflectiveMaterial: null,\r\n            teapot: null,\r\n            textureCube: null,\r\n\t\t\t// allocate these just once\r\n\t\t\tdiffuseColor: null,\r\n            specularColor: null,\r\n            exporter: null,\r\n            link: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.diffuseColor = new this.$THREE.Color()\r\n        this.specularColor = new this.$THREE.Color()\r\n        this.exporter = new ColladaExporter()\r\n        this.link = document.createElement('a')\r\n        this.link.style.display = 'none'\r\n        document.getElementsByClassName('miscExporterCollada-container')[0].appendChild(this.link)\r\n        this.init()\r\n\t\tthis.render()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('miscExporterCollada-container')[0].appendChild(container)\r\n            var canvasWidth = this.$webglInnerWidth\r\n            var canvasHeight = window.innerHeight\r\n            // CAMERA\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 80000)\r\n            this.camera.position.set(- 600, 550, 1300)\r\n            // LIGHTS\r\n            this.ambientLight = new this.$THREE.AmbientLight(0x333333)\t// 0.2\r\n            this.light = new this.$THREE.DirectionalLight(0xFFFFFF, 1.0)\r\n            // direction is set in GUI\r\n            // RENDERER\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(canvasWidth, canvasHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            container.appendChild(this.renderer.domElement)\r\n            // EVENTS\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            // CONTROLS\r\n            this.cameraControls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.cameraControls.addEventListener('change', this.render)\r\n            // TEXTURE MAP\r\n            var loader = new this.$THREE.TextureLoader()\r\n            var textureMap = loader.load('staic/textures/uv_grid_opengl.jpg')\r\n            textureMap.wrapS = textureMap.wrapT = this.$THREE.RepeatWrapping\r\n            textureMap.anisotropy = 16\r\n            textureMap.encoding = this.$THREE.sRGBEncoding\r\n            // NORMAL MAP\r\n            var diffuseMap = loader.load('staic/textures/floors/FloorsCheckerboard_S_Diffuse.jpg')\r\n            var normalMap = loader.load('staic/textures/floors/FloorsCheckerboard_S_Normal.jpg')\r\n            // REFLECTION MAP\r\n            var path = \"staic/textures/cube/pisa/\"\r\n            var urls = [\r\n                path + \"px.png\", path + \"nx.png\",\r\n                path + \"py.png\", path + \"ny.png\",\r\n                path + \"pz.png\", path + \"nz.png\"\r\n            ]\r\n            this.textureCube = new this.$THREE.CubeTextureLoader().load(urls)\r\n            this.textureCube.encoding = this.$THREE.sRGBEncoding\r\n            // MATERIALS\r\n            var materialColor = new this.$THREE.Color()\r\n            materialColor.setRGB(1.0, 1.0, 1.0)\r\n            this.wireMaterial = new this.$THREE.MeshBasicMaterial({ color: 0xFFFFFF, wireframe: true })\r\n            this.flatMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, specular: 0x000000, flatShading: true, side: this.$THREE.DoubleSide })\r\n            this.gouraudMaterial = new this.$THREE.MeshLambertMaterial({ color: materialColor, side: this.$THREE.DoubleSide })\r\n            this.phongMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, side: this.$THREE.DoubleSide })\r\n            this.texturedMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, map: textureMap, side: this.$THREE.DoubleSide })\r\n            this.normalMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, map: diffuseMap, normalMap: normalMap, side: this.$THREE.DoubleSide })\r\n            this.reflectiveMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, envMap: this.textureCube, side: this.$THREE.DoubleSide })\r\n            // scene itself\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xAAAAAA)\r\n            this.scene.add(this.ambientLight)\r\n            this.scene.add(this.light)\r\n            // GUI\r\n            this.setupGui()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.render()\r\n        },\r\n        setupGui() {\r\n            this.effectController = {\r\n                shininess: 40.0,\r\n                ka: 0.17,\r\n                kd: 0.51,\r\n                ks: 0.2,\r\n                metallic: true,\r\n                hue:\t0.121,\r\n                saturation: 0.73,\r\n                lightness: 0.66,\r\n                lhue:\t0.04,\r\n                lsaturation: 0.01,\t// non-zero so that fractions will be shown\r\n                llightness: 1.0,\r\n                // bizarrely, if you initialize these with negative numbers, the sliders\r\n                // will not show any decimal places.\r\n                lx: 0.32,\r\n                ly: 0.39,\r\n                lz: 0.7,\r\n                newTess: 15,\r\n                bottom: true,\r\n                lid: true,\r\n                body: true,\r\n                fitLid: false,\r\n                nonblinn: false,\r\n                newShading: \"glossy\"\r\n            }\r\n            var h\r\n            this.gui = new GUI()\r\n            // material (attributes)\r\n            h = this.gui.addFolder(\"Material control\")\r\n            h.add(this.effectController, \"shininess\", 1.0, 400.0, 1.0).name(\"shininess\").onChange(this.render)\r\n            h.add(this.effectController, \"kd\", 0.0, 1.0, 0.025).name(\"diffuse strength\").onChange(this.render)\r\n            h.add(this.effectController, \"ks\", 0.0, 1.0, 0.025).name(\"specular strength\").onChange(this.render)\r\n            h.add(this.effectController, \"metallic\").onChange(this.render)\r\n            // material (color)\r\n            h = this.gui.addFolder(\"Material color\")\r\n            h.add(this.effectController, \"hue\", 0.0, 1.0, 0.025).name(\"hue\").onChange(this.render)\r\n            h.add(this.effectController, \"saturation\", 0.0, 1.0, 0.025).name(\"saturation\").onChange(this.render)\r\n            h.add(this.effectController, \"lightness\", 0.0, 1.0, 0.025).name(\"lightness\").onChange(this.render)\r\n            // light (point)\r\n            h = this.gui.addFolder(\"Lighting\")\r\n            h.add(this.effectController, \"lhue\", 0.0, 1.0, 0.025).name(\"hue\").onChange(this.render)\r\n            h.add(this.effectController, \"lsaturation\", 0.0, 1.0, 0.025).name(\"saturation\").onChange(this.render)\r\n            h.add(this.effectController, \"llightness\", 0.0, 1.0, 0.025).name(\"lightness\").onChange(this.render)\r\n            h.add(this.effectController, \"ka\", 0.0, 1.0, 0.025).name(\"ambient\").onChange(this.render)\r\n            // light (directional)\r\n            h = this.gui.addFolder(\"Light direction\")\r\n            h.add(this.effectController, \"lx\", - 1.0, 1.0, 0.025).name(\"x\").onChange(this.render)\r\n            h.add(this.effectController, \"ly\", - 1.0, 1.0, 0.025).name(\"y\").onChange(this.render)\r\n            h.add(this.effectController, \"lz\", - 1.0, 1.0, 0.025).name(\"z\").onChange(this.render)\r\n            h = this.gui.addFolder(\"Tessellation control\")\r\n            h.add(this.effectController, \"newTess\", [ 2, 3, 4, 5, 6, 8, 10, 15, 20, 30, 40, 50 ]).name(\"Tessellation Level\").onChange(this.render)\r\n            h.add(this.effectController, \"lid\").name(\"display lid\").onChange(this.render)\r\n            h.add(this.effectController, \"body\").name(\"display body\").onChange(this.render)\r\n            h.add(this.effectController, \"bottom\").name(\"display bottom\").onChange(this.render)\r\n            h.add(this.effectController, \"fitLid\").name(\"snug lid\").onChange(this.render)\r\n            h.add(this.effectController, \"nonblinn\").name(\"original scale\").onChange(this.render)\r\n            // shading\r\n            this.gui.add(this.effectController, \"newShading\", [ \"wireframe\", \"flat\", \"smooth\", \"glossy\", \"textured\", \"normal\", \"reflective\" ]).name(\"Shading\").onChange(this.render)\r\n            var exportButton = document.getElementById('export')\r\n            exportButton.addEventListener('click', this.exportCollada)\r\n        },\r\n        render() {\r\n            if (this.effectController.newTess !== this.tess ||\r\n                this.effectController.bottom !== this.bBottom ||\r\n                this.effectController.lid !== this.bLid ||\r\n                this.effectController.body !== this.bBody ||\r\n                this.effectController.fitLid !== this.bFitLid ||\r\n                this.effectController.nonblinn !== this.bNonBlinn ||\r\n                this.effectController.newShading !== this.shading) {\r\n                this.tess = this.effectController.newTess\r\n                this.bBottom = this.effectController.bottom\r\n                this.bLid = this.effectController.lid\r\n                this.bBody = this.effectController.body\r\n                this.bFitLid = this.effectController.fitLid\r\n                this.bNonBlinn = this.effectController.nonblinn\r\n                this.shading = this.effectController.newShading\r\n                this.createNewTeapot()\r\n            }\r\n            // We're a bit lazy here. We could check to see if any material attributes changed and update\r\n            // only if they have. But, these calls are cheap enough and this is just a demo.\r\n            this.phongMaterial.shininess = this.effectController.shininess\r\n            this.texturedMaterial.shininess = this.effectController.shininess\r\n            this.normalMaterial.shininess = this.effectController.shininess\r\n            this.diffuseColor.setHSL(this.effectController.hue, this.effectController.saturation, this.effectController.lightness)\r\n            if (this.effectController.metallic) {\r\n                // make colors match to give a more metallic look\r\n                this.specularColor.copy(this.diffuseColor)\r\n            } else {\r\n                // more of a plastic look\r\n                this.specularColor.setRGB(1, 1, 1)\r\n            }\r\n            this.diffuseColor.multiplyScalar(this.effectController.kd)\r\n            this.flatMaterial.color.copy(this.diffuseColor)\r\n            this.gouraudMaterial.color.copy(this.diffuseColor)\r\n            this.phongMaterial.color.copy(this.diffuseColor)\r\n            this.texturedMaterial.color.copy(this.diffuseColor)\r\n            this.normalMaterial.color.copy(this.diffuseColor)\r\n            this.specularColor.multiplyScalar(this.effectController.ks)\r\n            this.phongMaterial.specular.copy(this.specularColor)\r\n            this.texturedMaterial.specular.copy(this.specularColor)\r\n            this.normalMaterial.specular.copy(this.specularColor)\r\n            // Ambient's actually controlled by the light for this demo\r\n            this.ambientLight.color.setHSL(this.effectController.hue, this.effectController.saturation, this.effectController.lightness * this.effectController.ka)\r\n            this.light.position.set(this.effectController.lx, this.effectController.ly, this.effectController.lz)\r\n            this.light.color.setHSL(this.effectController.lhue, this.effectController.lsaturation, this.effectController.llightness)\r\n            // skybox is rendered separately, so that it is always behind the teapot.\r\n            if (this.shading === \"reflective\") {\r\n                this.scene.background = this.textureCube\r\n            } else {\r\n                this.scene.background = null\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        createNewTeapot() {\r\n            if (this.teapot !== null) {\r\n                this.teapot.geometry.dispose()\r\n                this.scene.remove(this.teapot)\r\n            }\r\n            var teapotGeometry = new TeapotBufferGeometry(this.teapotSize,\r\n                this.tess,\r\n                this.effectController.bottom,\r\n                this.effectController.lid,\r\n                this.effectController.body,\r\n                this.effectController.fitLid,\r\n                ! this.effectController.nonblinn)\r\n            this.teapot = new this.$THREE.Mesh(\r\n                teapotGeometry,\r\n                this.shading === \"wireframe\" ? this.wireMaterial : (\r\n                    this.shading === \"flat\" ? this.flatMaterial : (\r\n                        this.shading === \"smooth\" ? this.gouraudMaterial : (\r\n                            this.shading === \"glossy\" ? this.phongMaterial : (\r\n                                this.shading === \"textured\" ? this.texturedMaterial : (\r\n                                    this.shading === \"normal\" ? this.normalMaterial : this.reflectiveMaterial))))))\t// if no match, pick Phong\r\n            this.scene.add(this.teapot)\r\n        },\r\n        exportCollada() {\r\n            var result = this.exporter.parse(this.teapot)\r\n            var materialType = \"Phong\"\r\n            if (this.shading === \"wireframe\") {\r\n                materialType = \"Constant\"\r\n            }\r\n            if (this.shading === \"smooth\") {\r\n                materialType = \"Lambert\"\r\n            }\r\n            this.saveString(result.data, 'teapot_' + this.shading + \"_\" + materialType + '.dae')\r\n            result.textures.forEach(tex => {\r\n                this.saveArrayBuffer(tex.data, `${ tex.name }.${ tex.ext }`)\r\n            })\r\n        },\r\n        save(blob, filename) {\r\n            this.link.href = URL.createObjectURL(blob)\r\n            this.link.download = filename\r\n            this.link.click()\r\n        },\r\n        saveString(text, filename) {\r\n            this.save(new Blob([ text ], { type: 'text/plain' }), filename)\r\n        },\r\n        saveArrayBuffer(buffer, filename) {\r\n            this.save(new Blob([ buffer ], { type: 'application/octet-stream' }), filename)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.miscExporterCollada-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/misc/miscExporterCollada.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"miscExporterCollada-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - exporter - collada\"),_c('br'),_c('br'),_vm._v(\" \"),_c('button',{attrs:{\"id\":\"export\"}},[_vm._v(\"Export COLLADA\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1547b2bb\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/misc/miscExporterCollada.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1547b2bb\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./miscExporterCollada.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./miscExporterCollada.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./miscExporterCollada.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1547b2bb\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./miscExporterCollada.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1547b2bb\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/misc/miscExporterCollada.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}