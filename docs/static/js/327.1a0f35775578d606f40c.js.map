{"version":3,"sources":["webpack:///src/views/shading/webglShadingPhysical.vue","webpack:///./src/views/shading/webglShadingPhysical.vue?8fd0","webpack:///./src/views/shading/webglShadingPhysical.vue"],"names":["webglShadingPhysical","data","stats","camera","scene","renderer","mesh","controls","cubeCamera","sunLight","pointLight","ambientLight","mixer","clock","gui","shadowCameraHelper","shadowConfig","shadowCameraVisible","shadowCameraNear","shadowCameraFar","shadowBias","mounted","this","$THREE","Clock","init","animate","beforeDestroy","destroy","methods","_this","container","document","createElement","getElementsByClassName","appendChild","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","fog","Fog","cubeRenderTarget","WebGLCubeRenderTarget","format","RGBFormat","generateMipmaps","minFilter","LinearMipmapLinearFilter","encoding","sRGBEncoding","CubeCamera","textureLoader","TextureLoader","textureSquares","load","repeat","wrapS","wrapT","RepeatWrapping","magFilter","NearestFilter","textureNoiseColor","textureLava","groundMaterial","MeshPhongMaterial","shininess","color","specular","map","planeGeometry","PlaneBufferGeometry","ground","Mesh","rotation","x","Math","PI","scale","receiveShadow","add","materialLambert","materialPhong","materialPhongCube","envMap","texture","sphereGeometry","SphereBufferGeometry","torusGeometry","TorusBufferGeometry","cubeGeometry","BoxBufferGeometry","that","addObjectColor","geometry","y","z","ry","addObject","material","tmpMesh","offsetHSL","castShadow","bigCube","midCube","smallCube","GLTFLoader","gltf","children","AnimationMixer","clipAction","animations","setDuration","play","AmbientLight","PointLight","DirectionalLight","shadow","top","bottom","left","right","near","far","mapSize","bias","CameraHelper","visible","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","domElement","shadowMap","enabled","type","PCFSoftShadowMap","outputEncoding","TrackballControls","target","rotateSpeed","zoomSpeed","panSpeed","staticMoving","keys","$Stats","dom","style","addEventListener","onWindowResize","dat_gui_module","width","shadowGUI","addFolder","onChange","updateProjectionMatrix","update","open","$onWindowResize","handleResize","requestAnimationFrame","begin","render","end","delta","getDelta","shading_webglShadingPhysical","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/327.1a0f35775578d606f40c.js","sourcesContent":["<template>\r\n    <div class=\"webglShadingPhysical-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl physically based shading testbed\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { TrackballControls } from '@/components/jsm/controls/TrackballControls.js'\r\nimport { GLTFLoader } from '@/components/jsm/loaders/GLTFLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tmesh: null,\r\n\t\t\tcontrols: null,\r\n\t\t\tcubeCamera: null,\r\n            sunLight: null,\r\n            pointLight: null,\r\n            ambientLight: null,\r\n\t\t\tmixer: null,\r\n\t\t\tclock: null,\r\n            gui: null,\r\n            shadowCameraHelper: null,\r\n\t\t\tshadowConfig: {\r\n\t\t\t\tshadowCameraVisible: false,\r\n\t\t\t\tshadowCameraNear: 750,\r\n\t\t\t\tshadowCameraFar: 4000,\r\n\t\t\t\tshadowBias: - 0.0002\r\n\t\t\t},\r\n        }\r\n    },\r\n    mounted() {\r\n        this.clock = new this.$THREE.Clock()\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('webglShadingPhysical-container')[0].appendChild(container)\r\n            // CAMERA\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 2, 10000)\r\n            this.camera.position.set(500, 400, 1200)\r\n            // SCENE\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.fog = new this.$THREE.Fog(0, 1000, 10000)\r\n            // CUBE CAMERA\r\n            var cubeRenderTarget = new this.$THREE.WebGLCubeRenderTarget(128, {\r\n                format: this.$THREE.RGBFormat,\r\n                generateMipmaps: true,\r\n                minFilter: this.$THREE.LinearMipmapLinearFilter,\r\n                encoding: this.$THREE.sRGBEncoding\r\n            })\r\n            this.cubeCamera = new this.$THREE.CubeCamera(1, 10000, cubeRenderTarget)\r\n            // TEXTURES\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            var textureSquares = textureLoader.load(\"static/textures/patterns/bright_squares256.png\")\r\n            textureSquares.repeat.set(50, 50)\r\n            textureSquares.wrapS = textureSquares.wrapT = this.$THREE.RepeatWrapping\r\n            textureSquares.magFilter = this.$THREE.NearestFilter\r\n            textureSquares.encoding = this.$THREE.sRGBEncoding\r\n            var textureNoiseColor = textureLoader.load(\"static/textures/disturb.jpg\")\r\n            textureNoiseColor.repeat.set(1, 1)\r\n            textureNoiseColor.wrapS = textureNoiseColor.wrapT = this.$THREE.RepeatWrapping\r\n            textureNoiseColor.encoding = this.$THREE.sRGBEncoding\r\n            var textureLava = textureLoader.load(\"static/textures/lava/lavatile.jpg\")\r\n            textureLava.repeat.set(6, 2)\r\n            textureLava.wrapS = textureLava.wrapT = this.$THREE.RepeatWrapping\r\n            textureLava.encoding = this.$THREE.sRGBEncoding\r\n            // GROUND\r\n            var groundMaterial = new this.$THREE.MeshPhongMaterial({\r\n                shininess: 80,\r\n                color: 0xffffff,\r\n                specular: 0xffffff,\r\n                map: textureSquares\r\n            })\r\n            var planeGeometry = new this.$THREE.PlaneBufferGeometry(100, 100)\r\n            var ground = new this.$THREE.Mesh(planeGeometry, groundMaterial)\r\n            ground.position.set(0, 0, 0)\r\n            ground.rotation.x = - Math.PI / 2\r\n            ground.scale.set(1000, 1000, 1000)\r\n            ground.receiveShadow = true\r\n            this.scene.add(ground)\r\n            // MATERIALS\r\n            var materialLambert = new this.$THREE.MeshPhongMaterial({ shininess: 50, color: 0xffffff, map: textureNoiseColor })\r\n            var materialPhong = new this.$THREE.MeshPhongMaterial({ shininess: 50, color: 0xffffff, specular: 0x999999, map: textureLava })\r\n            var materialPhongCube = new this.$THREE.MeshPhongMaterial({ shininess: 50, color: 0xffffff, specular: 0x999999, envMap: cubeRenderTarget.texture })\r\n            // OBJECTS\r\n            var sphereGeometry = new this.$THREE.SphereBufferGeometry(100, 64, 32)\r\n            var torusGeometry = new this.$THREE.TorusBufferGeometry(240, 60, 32, 64)\r\n            var cubeGeometry = new this.$THREE.BoxBufferGeometry(150, 150, 150)\r\n            var that = this\r\n            addObject(torusGeometry, materialPhong, 0, 100, 0, 0)\r\n            addObject(cubeGeometry, materialLambert, 350, 75, 300, 0)\r\n            this.mesh = addObject(sphereGeometry, materialPhongCube, 350, 100, - 350, 0)\r\n            this.mesh.add(this.cubeCamera)\r\n            function addObjectColor(geometry, color, x, y, z, ry) {\r\n                var material = new that.$THREE.MeshPhongMaterial({ color: 0xffffff })\r\n                return addObject(geometry, material, x, y, z, ry)\r\n            }\r\n            function addObject(geometry, material, x, y, z, ry) {\r\n                var tmpMesh = new that.$THREE.Mesh(geometry, material)\r\n                tmpMesh.material.color.offsetHSL(0.1, - 0.1, 0)\r\n                tmpMesh.position.set(x, y, z)\r\n                tmpMesh.rotation.y = ry\r\n                tmpMesh.castShadow = true\r\n                tmpMesh.receiveShadow = true\r\n                that.scene.add(tmpMesh)\r\n                return tmpMesh\r\n            }\r\n            var bigCube = new this.$THREE.BoxBufferGeometry(50, 500, 50)\r\n            var midCube = new this.$THREE.BoxBufferGeometry(50, 200, 50)\r\n            var smallCube = new this.$THREE.BoxBufferGeometry(100, 100, 100)\r\n            addObjectColor(bigCube, 0xff0000, - 500, 250, 0, 0)\r\n            addObjectColor(smallCube, 0xff0000, - 500, 50, - 150, 0)\r\n            addObjectColor(midCube, 0x00ff00, 500, 100, 0, 0)\r\n            addObjectColor(smallCube, 0x00ff00, 500, 50, - 150, 0)\r\n            addObjectColor(midCube, 0x0000ff, 0, 100, - 500, 0)\r\n            addObjectColor(smallCube, 0x0000ff, - 150, 50, - 500, 0)\r\n            addObjectColor(midCube, 0xff00ff, 0, 100, 500, 0)\r\n            addObjectColor(smallCube, 0xff00ff, - 150, 50, 500, 0)\r\n            addObjectColor(new this.$THREE.BoxBufferGeometry(500, 10, 10), 0xffff00, 0, 600, 0, Math.PI / 4)\r\n            addObjectColor(new this.$THREE.BoxBufferGeometry(250, 10, 10), 0xffff00, 0, 600, 0, 0)\r\n            addObjectColor(new this.$THREE.SphereBufferGeometry(100, 32, 26), 0xffffff, - 300, 100, 300, 0)\r\n            // MORPHS\r\n            var loader = new GLTFLoader()\r\n            loader.load(\"static/models/gltf/SittingBox.glb\", (gltf) => {\r\n                var mesh = gltf.scene.children[ 0 ]\r\n                this.mixer = new this.$THREE.AnimationMixer(mesh)\r\n                this.mixer.clipAction(gltf.animations[ 0 ]).setDuration(10).play()\r\n                var s = 200\r\n                mesh.scale.set(s, s, s)\r\n                mesh.castShadow = true\r\n                mesh.receiveShadow = true\r\n                this.scene.add(mesh)\r\n            })\r\n            // LIGHTS\r\n            this.ambientLight = new this.$THREE.AmbientLight(0x3f2806)\r\n            this.scene.add(this.ambientLight)\r\n            this.pointLight = new this.$THREE.PointLight(0xffaa00, 1, 5000)\r\n            this.scene.add(this.pointLight)\r\n            this.sunLight = new this.$THREE.DirectionalLight(0xffffff, 0.3)\r\n            this.sunLight.position.set(1000, 2000, 1000)\r\n            this.sunLight.castShadow = true\r\n            this.sunLight.shadow.camera.top = 750\r\n            this.sunLight.shadow.camera.bottom = - 750\r\n            this.sunLight.shadow.camera.left = - 750\r\n            this.sunLight.shadow.camera.right = 750\r\n            this.sunLight.shadow.camera.near = this.shadowConfig.shadowCameraNear\r\n            this.sunLight.shadow.camera.far = this.shadowConfig.shadowCameraFar\r\n            this.sunLight.shadow.mapSize.set(1024, 1024)\r\n            this.sunLight.shadow.bias = this.shadowConfig.shadowBias\r\n            this.scene.add(this.sunLight)\r\n            // SHADOW CAMERA HELPER\r\n            this.shadowCameraHelper = new this.$THREE.CameraHelper(this.sunLight.shadow.camera)\r\n            this.shadowCameraHelper.visible = this.shadowConfig.shadowCameraVisible\r\n            this.scene.add(this.shadowCameraHelper)\r\n            // RENDERER\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            container.appendChild(this.renderer.domElement)\r\n            //\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.shadowMap.type = this.$THREE.PCFSoftShadowMap\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            //\r\n            this.controls = new TrackballControls(this.camera, this.renderer.domElement)\r\n            this.controls.target.set(0, 120, 0)\r\n            this.controls.rotateSpeed = 1.0\r\n            this.controls.zoomSpeed = 1.2\r\n            this.controls.panSpeed = 0.8\r\n            this.controls.staticMoving = true\r\n            this.controls.keys = [ 65, 83, 68 ]\r\n            // STATS\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            // EVENTS\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            // GUI\r\n            this.gui = new GUI({ width: 400 })\r\n            // SHADOW\r\n            var shadowGUI = this.gui.addFolder(\"Shadow\")\r\n            shadowGUI.add(this.shadowConfig, 'shadowCameraVisible').onChange(() => {\r\n                this.shadowCameraHelper.visible = this.shadowConfig.shadowCameraVisible\r\n            })\r\n            shadowGUI.add(this.shadowConfig, 'shadowCameraNear', 1, 1500).onChange(() => {\r\n                this.sunLight.shadow.camera.near = this.shadowConfig.shadowCameraNear\r\n                this.sunLight.shadow.camera.updateProjectionMatrix()\r\n                this.shadowCameraHelper.update()\r\n            })\r\n            shadowGUI.add(this.shadowConfig, 'shadowCameraFar', 1501, 5000).onChange(() => {\r\n                this.sunLight.shadow.camera.far = this.shadowConfig.shadowCameraFar\r\n                this.sunLight.shadow.camera.updateProjectionMatrix()\r\n                this.shadowCameraHelper.update()\r\n            })\r\n            shadowGUI.add(this.shadowConfig, 'shadowBias', - 0.01, 0.01).onChange(() => {\r\n                this.sunLight.shadow.bias = this.shadowConfig.shadowBias\r\n            })\r\n            shadowGUI.open()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.controls.handleResize()\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.stats.begin()\r\n            this.render()\r\n            this.stats.end()\r\n        },\r\n        render() {\r\n            // update\r\n            var delta = this.clock.getDelta()\r\n            this.controls.update()\r\n            if (this.mixer) {\r\n                this.mixer.update(delta)\r\n            }\r\n            // render cube map\r\n            this.mesh.visible = false\r\n            this.cubeCamera.update(this.renderer, this.scene)\r\n            this.mesh.visible = true\r\n            // render this.scene\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglShadingPhysical-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    margin-left: 40px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/shading/webglShadingPhysical.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglShadingPhysical-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl physically based shading testbed\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-12da242d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/shading/webglShadingPhysical.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-12da242d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglShadingPhysical.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadingPhysical.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadingPhysical.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-12da242d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglShadingPhysical.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-12da242d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/shading/webglShadingPhysical.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}