{"version":3,"sources":["webpack:///src/views/instancing/webglInstancingModified.vue","webpack:///./src/views/instancing/webglInstancingModified.vue?a76a","webpack:///./src/views/instancing/webglInstancingModified.vue"],"names":["webglInstancingModified","data","camera","scene","renderer","stats","mesh","dummy","amount","count","mounted","this","$THREE","Object3D","Math","pow","init","animate","methods","_this","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","outputEncoding","sRGBEncoding","Scene","PerspectiveCamera","position","set","BufferGeometryLoader","load","geometry","instanceColors","i","push","random","setAttribute","InstancedBufferAttribute","Float32Array","computeVertexNormals","scale","TextureLoader","texture","encoding","material","MeshMatcapMaterial","color","matcap","colorParsChunk","join","instanceColorChunk","fragmentParsChunk","colorChunk","onBeforeCompile","shader","vertexShader","replace","fragmentShader","InstancedMesh","instanceMatrix","setUsage","DynamicDrawUsage","add","$Stats","dom","style","left","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","render","update","time","Date","now","rotation","x","sin","y","offset","z","updateMatrix","setMatrixAt","matrix","needsUpdate","instancing_webglInstancingModified","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/341.09d028601d7d6b1ca1bf.js","sourcesContent":["<template>\r\n    <div class=\"webglInstancingModified-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - webgl instancing - modified\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            stats: null,\r\n\t\t\tmesh: null,\r\n\t\t\tdummy: null,\r\n\t\t\tamount: 8,\r\n\t\t\tcount: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.dummy = new this.$THREE.Object3D()\r\n        this.count = Math.pow(this.amount, 3)\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: false }) // false improves the frame rate\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglInstancingModified-container')[0].appendChild(this.renderer.domElement)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.scene = new this.$THREE.Scene()\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 100)\r\n            this.camera.position.set(0, 0, 20)\r\n            new this.$THREE.BufferGeometryLoader().load('static/models/json/suzanne_buffergeometry.json', (geometry) => {\r\n                var instanceColors = []\r\n                for (var i = 0; i < this.count; i ++) {\r\n                    instanceColors.push(Math.random())\r\n                    instanceColors.push(Math.random())\r\n                    instanceColors.push(Math.random())\r\n                }\r\n                geometry.setAttribute('instanceColor', new this.$THREE.InstancedBufferAttribute(new Float32Array(instanceColors), 3))\r\n                geometry.computeVertexNormals()\r\n                geometry.scale(0.5, 0.5, 0.5)\r\n                //console.log(geometry)\r\n                //\r\n                new this.$THREE.TextureLoader().load('static/textures/matcaps/matcap-porcelain-white.jpg', (texture) => {\r\n                    texture.encoding = this.$THREE.sRGBEncoding\r\n                    var material = new this.$THREE.MeshMatcapMaterial({ color: 0xaaaaff, matcap: texture })\r\n                    const colorParsChunk = [\r\n                        'attribute vec3 instanceColor;',\r\n                        'varying vec3 vInstanceColor;',\r\n                        '#include <common>'\r\n                    ].join( '\\n' )\r\n                    const instanceColorChunk = [\r\n                        '#include <begin_vertex>',\r\n                        '\\tvInstanceColor = instanceColor;'\r\n                    ].join( '\\n' )\r\n                    const fragmentParsChunk = [\r\n                        'varying vec3 vInstanceColor;',\r\n                        '#include <common>'\r\n                    ].join( '\\n' )\r\n                    const colorChunk = [\r\n                        'vec4 diffuseColor = vec4( diffuse * vInstanceColor, opacity );'\r\n                    ].join( '\\n' )\r\n                    material.onBeforeCompile = function ( shader ) {\r\n                        shader.vertexShader = shader.vertexShader\r\n                            .replace( '#include <common>', colorParsChunk )\r\n                            .replace( '#include <begin_vertex>', instanceColorChunk );\r\n                        shader.fragmentShader = shader.fragmentShader\r\n                            .replace( '#include <common>', fragmentParsChunk )\r\n                            .replace( 'vec4 diffuseColor = vec4( diffuse, opacity );', colorChunk );\r\n                        //console.log( shader.uniforms );\r\n                        //console.log( shader.vertexShader );\r\n                        //console.log( shader.fragmentShader );\r\n                    }\r\n                    this.mesh = new this.$THREE.InstancedMesh(geometry, material, this.count)\r\n                    this.mesh.instanceMatrix.setUsage(this.$THREE.DynamicDrawUsage) // will be updated every frame\r\n                    this.scene.add(this.mesh)\r\n                })\r\n            })\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglInstancingModified-container')[0].appendChild(this.stats.dom)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            if (this.mesh) {\r\n                var time = Date.now() * 0.001\r\n                this.mesh.rotation.x = Math.sin(time / 4)\r\n                this.mesh.rotation.y = Math.sin(time / 2)\r\n                var i = 0\r\n                var offset = (this.amount - 1) / 2\r\n                for (var x = 0; x < this.amount; x ++) {\r\n                    for (var y = 0; y < this.amount; y ++) {\r\n                        for (var z = 0; z < this.amount; z ++) {\r\n                            this.dummy.position.set(offset - x, offset - y, offset - z)\r\n                            this.dummy.rotation.y = (Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time))\r\n                            this.dummy.rotation.z = this.dummy.rotation.y * 2\r\n                            this.dummy.updateMatrix()\r\n                            this.mesh.setMatrixAt(i ++, this.dummy.matrix)\r\n                        }\r\n                    }\r\n                }\r\n                this.mesh.instanceMatrix.needsUpdate = true\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglInstancingModified-container {\r\n    width: 100%;\r\n}\r\n#info {\r\n    margin-left: 0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/instancing/webglInstancingModified.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglInstancingModified-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - webgl instancing - modified\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-094b5f30\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/instancing/webglInstancingModified.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-094b5f30\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglInstancingModified.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglInstancingModified.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglInstancingModified.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-094b5f30\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglInstancingModified.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-094b5f30\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/instancing/webglInstancingModified.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}