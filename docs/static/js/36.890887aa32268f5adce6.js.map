{"version":3,"sources":["webpack:///./src/components/jsm/objects/Sky.js","webpack:///src/views/shaders/webglShadersSky.vue","webpack:///./src/views/shaders/webglShadersSky.vue?54f2","webpack:///./src/views/shaders/webglShadersSky.vue"],"names":["__webpack_require__","d","__webpack_exports__","Sky","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","shader","SkyShader","material","ShaderMaterial","name","fragmentShader","vertexShader","uniforms","UniformsUtils","clone","side","BackSide","depthWrite","Mesh","call","this","BoxBufferGeometry","prototype","Object","create","turbidity","value","rayleigh","mieCoefficient","mieDirectionalG","sunPosition","Vector3","up","join","webglShadersSky","data","camera","scene","renderer","sky","sun","gui","mounted","init","render","beforeDestroy","destroy","methods","initSky","scale","setScalar","add","$THREE","effectController","inclination","azimuth","exposure","toneMappingExposure","that","guiChanged","theta","Math","PI","phi","x","cos","y","sin","z","copy","dat_gui_module","onChange","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","helper","GridHelper","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","toneMapping","ACESFilmicToneMapping","document","getElementsByClassName","appendChild","domElement","controls","OrbitControls","addEventListener","enableZoom","enablePan","onWindowResize","$onWindowResize","shaders_webglShadersSky","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/36.890887aa32268f5adce6.js","sourcesContent":["import {\r\n\tBackSide,\r\n\tBoxBufferGeometry,\r\n\tMesh,\r\n\tShaderMaterial,\r\n\tUniformsUtils,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Based on \"A Practical Analytic Model for Daylight\"\r\n * aka The Preetham Model, the de facto standard analytic skydome model\r\n * https://www.researchgate.net/publication/220720443_A_Practical_Analytic_Model_for_Daylight\r\n *\r\n * First implemented by Simon Wallner\r\n * http://www.simonwallner.at/projects/atmospheric-scattering\r\n *\r\n * Improved by Martin Upitis\r\n * http://blenderartists.org/forum/showthread.php?245954-preethams-sky-impementation-HDR\r\n *\r\n * Three.js integration by zz85 http://twitter.com/blurspline\r\n*/\r\n\r\nvar Sky = function () {\r\n\r\n\tvar shader = Sky.SkyShader;\r\n\r\n\tvar material = new ShaderMaterial( {\r\n\t\tname: 'SkyShader',\r\n\t\tfragmentShader: shader.fragmentShader,\r\n\t\tvertexShader: shader.vertexShader,\r\n\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\r\n\t\tside: BackSide,\r\n\t\tdepthWrite: false\r\n\t} );\r\n\r\n\tMesh.call( this, new BoxBufferGeometry( 1, 1, 1 ), material );\r\n\r\n};\r\n\r\nSky.prototype = Object.create( Mesh.prototype );\r\n\r\nSky.SkyShader = {\r\n\r\n\tuniforms: {\r\n\t\t\"turbidity\": { value: 2 },\r\n\t\t\"rayleigh\": { value: 1 },\r\n\t\t\"mieCoefficient\": { value: 0.005 },\r\n\t\t\"mieDirectionalG\": { value: 0.8 },\r\n\t\t\"sunPosition\": { value: new Vector3() },\r\n\t\t\"up\": { value: new Vector3( 0, 1, 0 ) }\r\n\t},\r\n\r\n\tvertexShader: [\r\n\t\t'uniform vec3 sunPosition;',\r\n\t\t'uniform float rayleigh;',\r\n\t\t'uniform float turbidity;',\r\n\t\t'uniform float mieCoefficient;',\r\n\t\t'uniform vec3 up;',\r\n\r\n\t\t'varying vec3 vWorldPosition;',\r\n\t\t'varying vec3 vSunDirection;',\r\n\t\t'varying float vSunfade;',\r\n\t\t'varying vec3 vBetaR;',\r\n\t\t'varying vec3 vBetaM;',\r\n\t\t'varying float vSunE;',\r\n\r\n\t\t// constants for atmospheric scattering\r\n\t\t'const float e = 2.71828182845904523536028747135266249775724709369995957;',\r\n\t\t'const float pi = 3.141592653589793238462643383279502884197169;',\r\n\r\n\t\t// wavelength of used primaries, according to preetham\r\n\t\t'const vec3 lambda = vec3( 680E-9, 550E-9, 450E-9 );',\r\n\t\t// this pre-calcuation replaces older TotalRayleigh(vec3 lambda) function:\r\n\t\t// (8.0 * pow(pi, 3.0) * pow(pow(n, 2.0) - 1.0, 2.0) * (6.0 + 3.0 * pn)) / (3.0 * N * pow(lambda, vec3(4.0)) * (6.0 - 7.0 * pn))\r\n\t\t'const vec3 totalRayleigh = vec3( 5.804542996261093E-6, 1.3562911419845635E-5, 3.0265902468824876E-5 );',\r\n\r\n\t\t// mie stuff\r\n\t\t// K coefficient for the primaries\r\n\t\t'const float v = 4.0;',\r\n\t\t'const vec3 K = vec3( 0.686, 0.678, 0.666 );',\r\n\t\t// MieConst = pi * pow( ( 2.0 * pi ) / lambda, vec3( v - 2.0 ) ) * K\r\n\t\t'const vec3 MieConst = vec3( 1.8399918514433978E14, 2.7798023919660528E14, 4.0790479543861094E14 );',\r\n\r\n\t\t// earth shadow hack\r\n\t\t// cutoffAngle = pi / 1.95;\r\n\t\t'const float cutoffAngle = 1.6110731556870734;',\r\n\t\t'const float steepness = 1.5;',\r\n\t\t'const float EE = 1000.0;',\r\n\r\n\t\t'float sunIntensity( float zenithAngleCos ) {',\r\n\t\t'\tzenithAngleCos = clamp( zenithAngleCos, -1.0, 1.0 );',\r\n\t\t'\treturn EE * max( 0.0, 1.0 - pow( e, -( ( cutoffAngle - acos( zenithAngleCos ) ) / steepness ) ) );',\r\n\t\t'}',\r\n\r\n\t\t'vec3 totalMie( float T ) {',\r\n\t\t'\tfloat c = ( 0.2 * T ) * 10E-18;',\r\n\t\t'\treturn 0.434 * c * MieConst;',\r\n\t\t'}',\r\n\r\n\t\t'void main() {',\r\n\r\n\t\t'\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );',\r\n\t\t'\tvWorldPosition = worldPosition.xyz;',\r\n\r\n\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\t\t'\tgl_Position.z = gl_Position.w;', // set z to camera.far\r\n\r\n\t\t'\tvSunDirection = normalize( sunPosition );',\r\n\r\n\t\t'\tvSunE = sunIntensity( dot( vSunDirection, up ) );',\r\n\r\n\t\t'\tvSunfade = 1.0 - clamp( 1.0 - exp( ( sunPosition.y / 450000.0 ) ), 0.0, 1.0 );',\r\n\r\n\t\t'\tfloat rayleighCoefficient = rayleigh - ( 1.0 * ( 1.0 - vSunfade ) );',\r\n\r\n\t\t// extinction (absorbtion + out scattering)\r\n\t\t// rayleigh coefficients\r\n\t\t'\tvBetaR = totalRayleigh * rayleighCoefficient;',\r\n\r\n\t\t// mie coefficients\r\n\t\t'\tvBetaM = totalMie( turbidity ) * mieCoefficient;',\r\n\r\n\t\t'}'\r\n\t].join( '\\n' ),\r\n\r\n\tfragmentShader: [\r\n\t\t'varying vec3 vWorldPosition;',\r\n\t\t'varying vec3 vSunDirection;',\r\n\t\t'varying float vSunfade;',\r\n\t\t'varying vec3 vBetaR;',\r\n\t\t'varying vec3 vBetaM;',\r\n\t\t'varying float vSunE;',\r\n\r\n\t\t'uniform float mieDirectionalG;',\r\n\t\t'uniform vec3 up;',\r\n\r\n\t\t'const vec3 cameraPos = vec3( 0.0, 0.0, 0.0 );',\r\n\r\n\t\t// constants for atmospheric scattering\r\n\t\t'const float pi = 3.141592653589793238462643383279502884197169;',\r\n\r\n\t\t'const float n = 1.0003;', // refractive index of air\r\n\t\t'const float N = 2.545E25;', // number of molecules per unit volume for air at 288.15K and 1013mb (sea level -45 celsius)\r\n\r\n\t\t// optical length at zenith for molecules\r\n\t\t'const float rayleighZenithLength = 8.4E3;',\r\n\t\t'const float mieZenithLength = 1.25E3;',\r\n\t\t// 66 arc seconds -> degrees, and the cosine of that\r\n\t\t'const float sunAngularDiameterCos = 0.999956676946448443553574619906976478926848692873900859324;',\r\n\r\n\t\t// 3.0 / ( 16.0 * pi )\r\n\t\t'const float THREE_OVER_SIXTEENPI = 0.05968310365946075;',\r\n\t\t// 1.0 / ( 4.0 * pi )\r\n\t\t'const float ONE_OVER_FOURPI = 0.07957747154594767;',\r\n\r\n\t\t'float rayleighPhase( float cosTheta ) {',\r\n\t\t'\treturn THREE_OVER_SIXTEENPI * ( 1.0 + pow( cosTheta, 2.0 ) );',\r\n\t\t'}',\r\n\r\n\t\t'float hgPhase( float cosTheta, float g ) {',\r\n\t\t'\tfloat g2 = pow( g, 2.0 );',\r\n\t\t'\tfloat inverse = 1.0 / pow( 1.0 - 2.0 * g * cosTheta + g2, 1.5 );',\r\n\t\t'\treturn ONE_OVER_FOURPI * ( ( 1.0 - g2 ) * inverse );',\r\n\t\t'}',\r\n\r\n\t\t'void main() {',\r\n\r\n\t\t'\tvec3 direction = normalize( vWorldPosition - cameraPos );',\r\n\r\n\t\t// optical length\r\n\t\t// cutoff angle at 90 to avoid singularity in next formula.\r\n\t\t'\tfloat zenithAngle = acos( max( 0.0, dot( up, direction ) ) );',\r\n\t\t'\tfloat inverse = 1.0 / ( cos( zenithAngle ) + 0.15 * pow( 93.885 - ( ( zenithAngle * 180.0 ) / pi ), -1.253 ) );',\r\n\t\t'\tfloat sR = rayleighZenithLength * inverse;',\r\n\t\t'\tfloat sM = mieZenithLength * inverse;',\r\n\r\n\t\t// combined extinction factor\r\n\t\t'\tvec3 Fex = exp( -( vBetaR * sR + vBetaM * sM ) );',\r\n\r\n\t\t// in scattering\r\n\t\t'\tfloat cosTheta = dot( direction, vSunDirection );',\r\n\r\n\t\t'\tfloat rPhase = rayleighPhase( cosTheta * 0.5 + 0.5 );',\r\n\t\t'\tvec3 betaRTheta = vBetaR * rPhase;',\r\n\r\n\t\t'\tfloat mPhase = hgPhase( cosTheta, mieDirectionalG );',\r\n\t\t'\tvec3 betaMTheta = vBetaM * mPhase;',\r\n\r\n\t\t'\tvec3 Lin = pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * ( 1.0 - Fex ), vec3( 1.5 ) );',\r\n\t\t'\tLin *= mix( vec3( 1.0 ), pow( vSunE * ( ( betaRTheta + betaMTheta ) / ( vBetaR + vBetaM ) ) * Fex, vec3( 1.0 / 2.0 ) ), clamp( pow( 1.0 - dot( up, vSunDirection ), 5.0 ), 0.0, 1.0 ) );',\r\n\r\n\t\t// nightsky\r\n\t\t'\tfloat theta = acos( direction.y ); // elevation --> y-axis, [-pi/2, pi/2]',\r\n\t\t'\tfloat phi = atan( direction.z, direction.x ); // azimuth --> x-axis [-pi/2, pi/2]',\r\n\t\t'\tvec2 uv = vec2( phi, theta ) / vec2( 2.0 * pi, pi ) + vec2( 0.5, 0.0 );',\r\n\t\t'\tvec3 L0 = vec3( 0.1 ) * Fex;',\r\n\r\n\t\t// composition + solar disc\r\n\t\t'\tfloat sundisk = smoothstep( sunAngularDiameterCos, sunAngularDiameterCos + 0.00002, cosTheta );',\r\n\t\t'\tL0 += ( vSunE * 19000.0 * Fex ) * sundisk;',\r\n\r\n\t\t'\tvec3 texColor = ( Lin + L0 ) * 0.04 + vec3( 0.0, 0.0003, 0.00075 );',\r\n\r\n\t\t'\tvec3 retColor = pow( texColor, vec3( 1.0 / ( 1.2 + ( 1.2 * vSunfade ) ) ) );',\r\n\r\n\t\t'\tgl_FragColor = vec4( retColor, 1.0 );',\r\n\r\n\t\t'#include <tonemapping_fragment>',\r\n\t\t'#include <encodings_fragment>',\r\n\r\n\t\t'}'\r\n\t].join( '\\n' )\r\n\r\n};\r\n\r\nexport { Sky };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/objects/Sky.js","<template>\r\n    <div class=\"webglShadersSky-container\">\r\n        <div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - sky + sun shader\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { Sky } from '@/components/jsm/objects/Sky.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            sky: null,\r\n            sun: null,\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init();\r\n\t\tthis.render()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        initSky() {\r\n            // Add Sky\r\n            this.sky = new Sky()\r\n            this.sky.scale.setScalar(450000)\r\n            this.scene.add(this.sky)\r\n            this.sun = new this.$THREE.Vector3()\r\n            /// GUI\r\n            var effectController = {\r\n                turbidity: 10,\r\n                rayleigh: 3,\r\n                mieCoefficient: 0.005,\r\n                mieDirectionalG: 0.7,\r\n                inclination: 0.49, // elevation / inclination\r\n                azimuth: 0.25, // Facing front,\r\n                exposure: this.renderer.toneMappingExposure\r\n            }\r\n            var that = this\r\n            function guiChanged() {\r\n                var uniforms = that.sky.material.uniforms\r\n                uniforms[ \"turbidity\" ].value = effectController.turbidity\r\n                uniforms[ \"rayleigh\" ].value = effectController.rayleigh\r\n                uniforms[ \"mieCoefficient\" ].value = effectController.mieCoefficient\r\n                uniforms[ \"mieDirectionalG\" ].value = effectController.mieDirectionalG\r\n                var theta = Math.PI * (effectController.inclination - 0.5)\r\n                var phi = 2 * Math.PI * (effectController.azimuth - 0.5)\r\n                that.sun.x = Math.cos(phi)\r\n                that.sun.y = Math.sin(phi) * Math.sin(theta)\r\n                that.sun.z = Math.sin(phi) * Math.cos(theta)\r\n                uniforms[ \"sunPosition\" ].value.copy(that.sun)\r\n                that.renderer.toneMappingExposure = effectController.exposure\r\n                that.renderer.render(that.scene, that.camera)\r\n            }\r\n            this.gui = new GUI()\r\n            this.gui.add(effectController, \"turbidity\", 0.0, 20.0, 0.1).onChange(guiChanged)\r\n            this.gui.add(effectController, \"rayleigh\", 0.0, 4, 0.001).onChange(guiChanged)\r\n            this.gui.add(effectController, \"mieCoefficient\", 0.0, 0.1, 0.001).onChange(guiChanged)\r\n            this.gui.add(effectController, \"mieDirectionalG\", 0.0, 1, 0.001).onChange(guiChanged)\r\n            this.gui.add(effectController, \"inclination\", 0, 1, 0.0001).onChange(guiChanged)\r\n            this.gui.add(effectController, \"azimuth\", 0, 1, 0.0001).onChange(guiChanged)\r\n            this.gui.add(effectController, \"exposure\", 0, 1, 0.0001).onChange(guiChanged)\r\n            guiChanged()\r\n        },\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(60, this.$webglInnerWidth / window.innerHeight, 100, 2000000)\r\n            this.camera.position.set(0, 100, 2000)\r\n            this.scene = new this.$THREE.Scene()\r\n            var helper = new this.$THREE.GridHelper(10000, 2, 0xffffff, 0xffffff)\r\n            this.scene.add(helper)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.toneMapping = this.$THREE.ACESFilmicToneMapping\r\n            this.renderer.toneMappingExposure = 0.5\r\n            document.getElementsByClassName('webglShadersSky-container')[0].appendChild(this.renderer.domElement)\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.addEventListener('change', this.render)\r\n            //controls.maxPolarAngle = Math.PI / 2\r\n            controls.enableZoom = false\r\n            controls.enablePan = false\r\n            this.initSky()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglShadersSky-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/shaders/webglShadersSky.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglShadersSky-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - sky + sun shader\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2b0f6b5a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/shaders/webglShadersSky.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2b0f6b5a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglShadersSky.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadersSky.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglShadersSky.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2b0f6b5a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglShadersSky.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2b0f6b5a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/shaders/webglShadersSky.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}