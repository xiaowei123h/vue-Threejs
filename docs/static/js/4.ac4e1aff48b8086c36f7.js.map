{"version":3,"sources":["webpack:///./src/components/jsm/lines/LineSegments2.js","webpack:///./src/components/jsm/lines/LineGeometry.js","webpack:///./src/components/jsm/lines/Line2.js","webpack:///src/views/lines/webglLinesFat.vue","webpack:///./src/views/lines/webglLinesFat.vue?f12e","webpack:///./src/views/lines/webglLinesFat.vue","webpack:///./src/components/jsm/lines/LineSegmentsGeometry.js","webpack:///./src/components/jsm/lines/LineMaterial.js"],"names":["start","end","LineSegments2","geometry","material","undefined","LineSegmentsGeometry","LineMaterial","color","Math","random","Mesh","call","this","type","prototype","Object","assign","create","constructor","isLineSegments2","computeLineDistances","Vector3","instanceStart","attributes","instanceEnd","lineDistances","Float32Array","data","count","i","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","InstancedInterleavedBuffer","setAttribute","InterleavedBufferAttribute","raycast","Vector4","ssOrigin","ssOrigin3","mvMatrix","Matrix4","line","Line3","closestPoint","raycaster","intersects","camera","console","error","threshold","params","Line2","ray","projectionMatrix","resolution","lineWidth","linewidth","at","w","applyMatrix4","matrixWorldInverse","multiplyScalar","x","y","z","copy","matrixWorld","multiplyMatrices","isBehindCameraNear","isPastCameraFar","param","closestPointToPointParameter","zPos","MathUtils","lerp","isInClipSpace","isInside","pointOnLine","point","distanceSqToSegment","push","distance","origin","object","face","faceIndex","uv","uv2","LineGeometry","isLineGeometry","setPositions","array","length","points","setColors","colors","fromLine","isGeometry","vertices","isBufferGeometry","position","isLine2","webglLinesFat","renderer","scene","camera2","controls","line1","matLine","matLineBasic","matLineDashed","stats","gui","insetWidth","insetHeight","mounted","init","animate","beforeDestroy","hide","methods","$THREE","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","$webglInnerWidth","innerHeight","document","getElementsByClassName","appendChild","domElement","Scene","PerspectiveCamera","set","OrbitControls","minDistance","maxDistance","positions","GeometryUtils","hilbert3D","spline","CatmullRomCurve3","divisions","round","Color","t","getPoint","setHSL","r","g","b","LineGeometry_LineGeometry","vertexColors","dashed","Line2_Line2","scale","add","geo","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","LineDashedMaterial","dashSize","gapSize","Line","visible","addEventListener","onWindowResize","$Stats","dom","style","left","initGui","$onWindowResize","aspect","updateProjectionMatrix","requestAnimationFrame","update","setViewport","render","clearDepth","setScissorTest","setScissor","quaternion","_this","dat_gui_module","line type","width (px)","dash scale","dash / gap","gl.LINE","onChange","val","defines","USE_DASH","needsUpdate","dashScale","2 : 1","1 : 1","1 : 2","lines_webglLinesFat","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","d","vector","box","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","InstancedBufferGeometry","setIndex","isLineSegmentsGeometry","matrix","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","lineSegments","Array","isArray","instanceBuffer","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","mesh","WireframeGeometry","fromLineSegments","Box3","setFromBufferAttribute","union","Sphere","center","getCenter","maxRadiusSq","il","max","distanceToSquared","radius","sqrt","isNaN","toJSON","applyMatrix","warn","UniformsLib","value","Vector2","dashOffset","opacity","ShaderLib","uniforms","UniformsUtils","merge","common","fog","vertexShader","fragmentShader","parameters","ShaderMaterial","clone","clipping","defineProperties","enumerable","get","diffuse","setValues","isLineMaterial"],"mappings":"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","file":"static/js/4.ac4e1aff48b8086c36f7.js","sourcesContent":["import {\r\n\tInstancedInterleavedBuffer,\r\n\tInterleavedBufferAttribute,\r\n\tLine3,\r\n\tMathUtils,\r\n\tMatrix4,\r\n\tMesh,\r\n\tVector3,\r\n\tVector4\r\n} from \"@/components/build/three.module.js\";\r\nimport { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\r\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\r\n\r\nvar LineSegments2 = function ( geometry, material ) {\r\n\r\n\tif ( geometry === undefined ) geometry = new LineSegmentsGeometry();\r\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tMesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments2';\r\n\r\n};\r\n\r\nLineSegments2.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\tconstructor: LineSegments2,\r\n\r\n\tisLineSegments2: true,\r\n\r\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\r\n\r\n\t\tvar start = new Vector3();\r\n\t\tvar end = new Vector3();\r\n\r\n\t\treturn function computeLineDistances() {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\r\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\r\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\r\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\r\n\r\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\r\n\r\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\r\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\r\n\r\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\r\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\r\n\r\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\r\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar start = new Vector4();\r\n\t\tvar end = new Vector4();\r\n\r\n\t\tvar ssOrigin = new Vector4();\r\n\t\tvar ssOrigin3 = new Vector3();\r\n\t\tvar mvMatrix = new Matrix4();\r\n\t\tvar line = new Line3();\r\n\t\tvar closestPoint = new Vector3();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tif ( raycaster.camera === null ) {\r\n\r\n\t\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\r\n\r\n\t\t\tvar ray = raycaster.ray;\r\n\t\t\tvar camera = raycaster.camera;\r\n\t\t\tvar projectionMatrix = camera.projectionMatrix;\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\t\tvar resolution = material.resolution;\r\n\t\t\tvar lineWidth = material.linewidth + threshold;\r\n\r\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\r\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\r\n\r\n\t\t\t// pick a point 1 unit out along the ray to avoid the ray origin\r\n\t\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\r\n\t\t\t// applying the projection matrix.\r\n\t\t\tray.at( 1, ssOrigin );\r\n\r\n\t\t\t// ndc space [ - 1.0, 1.0 ]\r\n\t\t\tssOrigin.w = 1;\r\n\t\t\tssOrigin.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\tssOrigin.applyMatrix4( projectionMatrix );\r\n\t\t\tssOrigin.multiplyScalar( 1 / ssOrigin.w );\r\n\r\n\t\t\t// screen space\r\n\t\t\tssOrigin.x *= resolution.x / 2;\r\n\t\t\tssOrigin.y *= resolution.y / 2;\r\n\t\t\tssOrigin.z = 0;\r\n\r\n\t\t\tssOrigin3.copy( ssOrigin );\r\n\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\tmvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\r\n\r\n\t\t\tfor ( var i = 0, l = instanceStart.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\r\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\r\n\r\n\t\t\t\tstart.w = 1;\r\n\t\t\t\tend.w = 1;\r\n\r\n\t\t\t\t// camera space\r\n\t\t\t\tstart.applyMatrix4( mvMatrix );\r\n\t\t\t\tend.applyMatrix4( mvMatrix );\r\n\r\n\t\t\t\t// clip space\r\n\t\t\t\tstart.applyMatrix4( projectionMatrix );\r\n\t\t\t\tend.applyMatrix4( projectionMatrix );\r\n\r\n\t\t\t\t// ndc space [ - 1.0, 1.0 ]\r\n\t\t\t\tstart.multiplyScalar( 1 / start.w );\r\n\t\t\t\tend.multiplyScalar( 1 / end.w );\r\n\r\n\t\t\t\t// skip the segment if it's outside the camera near and far planes\r\n\t\t\t\tvar isBehindCameraNear = start.z < - 1 && end.z < - 1;\r\n\t\t\t\tvar isPastCameraFar = start.z > 1 && end.z > 1;\r\n\t\t\t\tif ( isBehindCameraNear || isPastCameraFar ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// screen space\r\n\t\t\t\tstart.x *= resolution.x / 2;\r\n\t\t\t\tstart.y *= resolution.y / 2;\r\n\r\n\t\t\t\tend.x *= resolution.x / 2;\r\n\t\t\t\tend.y *= resolution.y / 2;\r\n\r\n\t\t\t\t// create 2d segment\r\n\t\t\t\tline.start.copy( start );\r\n\t\t\t\tline.start.z = 0;\r\n\r\n\t\t\t\tline.end.copy( end );\r\n\t\t\t\tline.end.z = 0;\r\n\r\n\t\t\t\t// get closest point on ray to segment\r\n\t\t\t\tvar param = line.closestPointToPointParameter( ssOrigin3, true );\r\n\t\t\t\tline.at( param, closestPoint );\r\n\r\n\t\t\t\t// check if the intersection point is within clip space\r\n\t\t\t\tvar zPos = MathUtils.lerp( start.z, end.z, param );\r\n\t\t\t\tvar isInClipSpace = zPos >= - 1 && zPos <= 1;\r\n\r\n\t\t\t\tvar isInside = ssOrigin3.distanceTo( closestPoint ) < lineWidth * 0.5;\r\n\r\n\t\t\t\tif ( isInClipSpace && isInside ) {\r\n\r\n\t\t\t\t\tline.start.fromBufferAttribute( instanceStart, i );\r\n\t\t\t\t\tline.end.fromBufferAttribute( instanceEnd, i );\r\n\r\n\t\t\t\t\tline.start.applyMatrix4( matrixWorld );\r\n\t\t\t\t\tline.end.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tvar pointOnLine = new Vector3();\r\n\t\t\t\t\tvar point = new Vector3();\r\n\r\n\t\t\t\t\tray.distanceSqToSegment( line.start, line.end, point, pointOnLine );\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tpoint: point,\r\n\t\t\t\t\t\tpointOnLine: pointOnLine,\r\n\t\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\r\n\r\n\t\t\t\t\t\tobject: this,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: i,\r\n\t\t\t\t\t\tuv: null,\r\n\t\t\t\t\t\tuv2: null,\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() )\r\n\r\n} );\r\n\r\nexport { LineSegments2 };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/LineSegments2.js","import { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\r\n\r\nvar LineGeometry = function () {\r\n\r\n\tLineSegmentsGeometry.call( this );\r\n\r\n\tthis.type = 'LineGeometry';\r\n\r\n};\r\n\r\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\r\n\r\n\tconstructor: LineGeometry,\r\n\r\n\tisLineGeometry: true,\r\n\r\n\tsetPositions: function ( array ) {\r\n\r\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\r\n\r\n\t\tvar length = array.length - 3;\r\n\t\tvar points = new Float32Array( 2 * length );\r\n\r\n\t\tfor ( var i = 0; i < length; i += 3 ) {\r\n\r\n\t\t\tpoints[ 2 * i ] = array[ i ];\r\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\r\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\r\n\r\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\r\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\r\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\r\n\r\n\t\t}\r\n\r\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetColors: function ( array ) {\r\n\r\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\r\n\r\n\t\tvar length = array.length - 3;\r\n\t\tvar colors = new Float32Array( 2 * length );\r\n\r\n\t\tfor ( var i = 0; i < length; i += 3 ) {\r\n\r\n\t\t\tcolors[ 2 * i ] = array[ i ];\r\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\r\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\r\n\r\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\r\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\r\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\r\n\r\n\t\t}\r\n\r\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromLine: function ( line ) {\r\n\r\n\t\tvar geometry = line.geometry;\r\n\r\n\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\tthis.setPositions( geometry.vertices );\r\n\r\n\t\t} else if ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\r\n\r\n\t\t}\r\n\r\n\t\t// set colors, maybe\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( /* source */ ) {\r\n\r\n\t\t// todo\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { LineGeometry };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/LineGeometry.js","import { LineSegments2 } from \"../lines/LineSegments2.js\";\r\nimport { LineGeometry } from \"../lines/LineGeometry.js\";\r\nimport { LineMaterial } from \"../lines/LineMaterial.js\";\r\n\r\nvar Line2 = function ( geometry, material ) {\r\n\r\n\tif ( geometry === undefined ) geometry = new LineGeometry();\r\n\tif ( material === undefined ) material = new LineMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tLineSegments2.call( this, geometry, material );\r\n\r\n\tthis.type = 'Line2';\r\n\r\n};\r\n\r\nLine2.prototype = Object.assign( Object.create( LineSegments2.prototype ), {\r\n\r\n\tconstructor: Line2,\r\n\r\n\tisLine2: true\r\n\r\n} );\r\n\r\nexport { Line2 };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/Line2.js","<template>\r\n    <div class=\"webglLinesFat-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\">three.js</a> - fat lines</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { Line2 } from '@/components/jsm/lines/Line2.js'\r\nimport { LineMaterial } from '@/components/jsm/lines/LineMaterial.js'\r\nimport { LineGeometry } from '@/components/jsm/lines/LineGeometry.js'\r\nimport { GeometryUtils } from '@/components/jsm/utils/GeometryUtils.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            line: null,\r\n            renderer: null,\r\n            scene: null,\r\n            camera: null,\r\n            camera2: null,\r\n            controls: null,\r\n\t\t\tline1: null,\r\n            matLine: null,\r\n            matLineBasic: null,\r\n            matLineDashed: null,\r\n\t\t\tstats: null,\r\n\t\t\tgui: null,\r\n\t\t\t// viewport\r\n\t\t\tinsetWidth: null,\r\n\t\t\tinsetHeight: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setClearColor(0x000000, 0.0)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglLinesFat-container')[0].appendChild(this.renderer.domElement)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set(- 40, 0, 60)\r\n            this.camera2 = new this.$THREE.PerspectiveCamera(40, 1, 1, 1000)\r\n            this.camera2.position.copy(this.camera.position)\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.controls.minDistance = 10\r\n            this.controls.maxDistance = 500\r\n            // Position and this.$THREE.Color Data\r\n            var positions = []\r\n            var colors = []\r\n            var points = GeometryUtils.hilbert3D(new this.$THREE.Vector3(0, 0, 0), 20.0, 1, 0, 1, 2, 3, 4, 5, 6, 7)\r\n            var spline = new this.$THREE.CatmullRomCurve3(points)\r\n            var divisions = Math.round(12 * points.length)\r\n            var point = new this.$THREE.Vector3()\r\n            var color = new this.$THREE.Color()\r\n            for (var i = 0, l = divisions; i < l; i ++) {\r\n                var t = i / l\r\n                spline.getPoint(t, point)\r\n                positions.push(point.x, point.y, point.z)\r\n                color.setHSL(t, 1.0, 0.5)\r\n                colors.push(color.r, color.g, color.b)\r\n            }\r\n            // Line2 (LineGeometry, LineMaterial)\r\n            var geometry = new LineGeometry()\r\n            geometry.setPositions(positions)\r\n            geometry.setColors(colors)\r\n            this.matLine = new LineMaterial({\r\n                color: 0xffffff,\r\n                linewidth: 5, // in pixels\r\n                vertexColors: true,\r\n                //resolution:  // to be set by renderer, eventually\r\n                dashed: false\r\n            })\r\n            this.line = new Line2(geometry, this.matLine)\r\n            this.line.computeLineDistances()\r\n            this.line.scale.set(1, 1, 1)\r\n            this.scene.add(this.line)\r\n            // this.$THREE.Line (this.$THREE.BufferGeometry, this.$THREE.LineBasicMaterial) - rendered with gl.LINE_STRIP\r\n            var geo = new this.$THREE.BufferGeometry()\r\n            geo.setAttribute('position', new this.$THREE.Float32BufferAttribute(positions, 3))\r\n            geo.setAttribute('color', new this.$THREE.Float32BufferAttribute(colors, 3))\r\n            this.matLineBasic = new this.$THREE.LineBasicMaterial({ vertexColors: true })\r\n            this.matLineDashed = new this.$THREE.LineDashedMaterial({ vertexColors: true, scale: 2, dashSize: 1, gapSize: 1 })\r\n            this.line1 = new this.$THREE.Line(geo, this.matLineBasic)\r\n            this.line1.computeLineDistances()\r\n            this.line1.visible = false\r\n            this.scene.add(this.line1)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            this.onWindowResize()\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglLinesFat-container')[0].appendChild(this.stats.dom)\r\n            this.initGui()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.insetWidth = window.innerHeight / 4 // square\r\n            this.insetHeight = window.innerHeight / 4\r\n            this.camera2.aspect = this.insetWidth / this.insetHeight\r\n            this.camera2.updateProjectionMatrix()\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.stats.update()\r\n            // main scene\r\n            this.renderer.setClearColor(0x000000, 0)\r\n            this.renderer.setViewport(0, 0, this.$webglInnerWidth, window.innerHeight)\r\n            // this.renderer will set this eventually\r\n            this.matLine.resolution.set(this.$webglInnerWidth, window.innerHeight) // resolution of the viewport\r\n            this.renderer.render(this.scene, this.camera)\r\n            // inset this.scene\r\n            this.renderer.setClearColor(0x222222, 1)\r\n            this.renderer.clearDepth() // important!\r\n            this.renderer.setScissorTest(true)\r\n            this.renderer.setScissor(20, 20, this.insetWidth, this.insetHeight)\r\n            this.renderer.setViewport(20, 20, this.insetWidth, this.insetHeight)\r\n            this.camera2.position.copy(this.camera.position)\r\n            this.camera2.quaternion.copy(this.camera.quaternion)\r\n            // this.renderer will set this eventually\r\n            this.matLine.resolution.set(this.insetWidth, this.insetHeight) // resolution of the inset viewport\r\n            this.renderer.render(this.scene, this.camera2)\r\n            this.renderer.setScissorTest(false)\r\n        },\r\n        initGui() {\r\n            this.gui = new GUI()\r\n            var param = {\r\n                'line type': 0,\r\n                'width (px)': 5,\r\n                'dashed': false,\r\n                'dash scale': 1,\r\n                'dash / gap': 1\r\n            }\r\n            this.gui.add(param, 'line type', { 'LineGeometry': 0, 'gl.LINE': 1 }).onChange((val) => {\r\n                switch (val) {\r\n                    case '0':\r\n                        this.line.visible = true\r\n                        this.line1.visible = false\r\n                        break\r\n                    case '1':\r\n                        this.line.visible = false\r\n                        this.line1.visible = true\r\n                        break\r\n                }\r\n            })\r\n            this.gui.add(param, 'width (px)', 1, 10).onChange((val) => {\r\n                this.matLine.linewidth = val\r\n            })\r\n            this.gui.add(param, 'dashed').onChange((val) => {\r\n                this.matLine.dashed = val\r\n                // dashed is implemented as a defines -- not as a uniform. this could be changed.\r\n                // ... or this.$THREE.LineDashedMaterial could be implemented as a separate material\r\n                // temporary hack - renderer should do this eventually\r\n                if (val) this.matLine.defines.USE_DASH = \"\"; else delete this.matLine.defines.USE_DASH\r\n                this.matLine.needsUpdate = true\r\n                this.line1.material = val ? this.matLineDashed : this.matLineBasic\r\n            })\r\n            this.gui.add(param, 'dash scale', 0.5, 2, 0.1).onChange((val) => {\r\n                this.matLine.dashScale = val\r\n                this.matLineDashed.scale = val\r\n            })\r\n            this.gui.add(param, 'dash / gap', { '2 : 1': 0, '1 : 1': 1, '1 : 2': 2 }).onChange((val) => {\r\n                switch (val) {\r\n                    case '0':\r\n                        this.matLine.dashSize = 2\r\n                        this.matLine.gapSize = 1\r\n                        this.matLineDashed.dashSize = 2\r\n                        this.matLineDashed.gapSize = 1\r\n                        break\r\n                    case '1':\r\n                        this.matLine.dashSize = 1\r\n                        this.matLine.gapSize = 1\r\n                        this.matLineDashed.dashSize = 1\r\n                        this.matLineDashed.gapSize = 1\r\n                        break\r\n                    case '2':\r\n                        this.matLine.dashSize = 1\r\n                        this.matLine.gapSize = 2\r\n                        this.matLineDashed.dashSize = 1\r\n                        this.matLineDashed.gapSize = 2\r\n                        break\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLinesFat-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/lines/webglLinesFat.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLinesFat-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\"}},[_vm._v(\"three.js\")]),_vm._v(\" - fat lines\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-31197f09\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/lines/webglLinesFat.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-31197f09\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLinesFat.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLinesFat.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLinesFat.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-31197f09\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLinesFat.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-31197f09\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/lines/webglLinesFat.vue\n// module id = null\n// module chunks = ","import {\r\n\tBox3,\r\n\tFloat32BufferAttribute,\r\n\tInstancedBufferGeometry,\r\n\tInstancedInterleavedBuffer,\r\n\tInterleavedBufferAttribute,\r\n\tSphere,\r\n\tVector3,\r\n\tWireframeGeometry\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar LineSegmentsGeometry = function () {\r\n\r\n\tInstancedBufferGeometry.call( this );\r\n\r\n\tthis.type = 'LineSegmentsGeometry';\r\n\r\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\r\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\r\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\r\n\r\n\tthis.setIndex( index );\r\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\r\n\r\n\tconstructor: LineSegmentsGeometry,\r\n\r\n\tisLineSegmentsGeometry: true,\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tvar start = this.attributes.instanceStart;\r\n\t\tvar end = this.attributes.instanceEnd;\r\n\r\n\t\tif ( start !== undefined ) {\r\n\r\n\t\t\tstart.applyMatrix4( matrix );\r\n\r\n\t\t\tend.applyMatrix4( matrix );\r\n\r\n\t\t\tstart.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetPositions: function ( array ) {\r\n\r\n\t\tvar lineSegments;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\tlineSegments = array;\r\n\r\n\t\t} else if ( Array.isArray( array ) ) {\r\n\r\n\t\t\tlineSegments = new Float32Array( array );\r\n\r\n\t\t}\r\n\r\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\r\n\r\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\r\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\r\n\r\n\t\t//\r\n\r\n\t\tthis.computeBoundingBox();\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetColors: function ( array ) {\r\n\r\n\t\tvar colors;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\tcolors = array;\r\n\r\n\t\t} else if ( Array.isArray( array ) ) {\r\n\r\n\t\t\tcolors = new Float32Array( array );\r\n\r\n\t\t}\r\n\r\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\r\n\r\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\r\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromWireframeGeometry: function ( geometry ) {\r\n\r\n\t\tthis.setPositions( geometry.attributes.position.array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromEdgesGeometry: function ( geometry ) {\r\n\r\n\t\tthis.setPositions( geometry.attributes.position.array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromMesh: function ( mesh ) {\r\n\r\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\r\n\r\n\t\t// set colors, maybe\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromLineSegments: function ( lineSegments ) {\r\n\r\n\t\tvar geometry = lineSegments.geometry;\r\n\r\n\t\tif ( geometry.isGeometry ) {\r\n\r\n\t\t\tthis.setPositions( geometry.vertices );\r\n\r\n\t\t} else if ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\r\n\r\n\t\t}\r\n\r\n\t\t// set colors, maybe\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar box = new Box3();\r\n\r\n\t\treturn function computeBoundingBox() {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar start = this.attributes.instanceStart;\r\n\t\t\tvar end = this.attributes.instanceEnd;\r\n\r\n\t\t\tif ( start !== undefined && end !== undefined ) {\r\n\r\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\r\n\r\n\t\t\t\tbox.setFromBufferAttribute( end );\r\n\r\n\t\t\t\tthis.boundingBox.union( box );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar vector = new Vector3();\r\n\r\n\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar start = this.attributes.instanceStart;\r\n\t\t\tvar end = this.attributes.instanceEnd;\r\n\r\n\t\t\tif ( start !== undefined && end !== undefined ) {\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tthis.boundingBox.getCenter( center );\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\t// todo\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\r\n\r\n\t\treturn this.applyMatrix4( matrix );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { LineSegmentsGeometry };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/LineSegmentsGeometry.js","import {\r\n\tShaderLib,\r\n\tShaderMaterial,\r\n\tUniformsLib,\r\n\tUniformsUtils,\r\n\tVector2\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  linewidth: <float>,\r\n *  dashed: <boolean>,\r\n *  dashScale: <float>,\r\n *  dashSize: <float>,\r\n *  dashOffset: <float>,\r\n *  gapSize: <float>,\r\n *  resolution: <Vector2>, // to be set by renderer\r\n * }\r\n */\r\n\r\nUniformsLib.line = {\r\n\r\n\tlinewidth: { value: 1 },\r\n\tresolution: { value: new Vector2( 1, 1 ) },\r\n\tdashScale: { value: 1 },\r\n\tdashSize: { value: 1 },\r\n\tdashOffset: { value: 0 },\r\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\r\n\topacity: { value: 1 }\r\n\r\n};\r\n\r\nShaderLib[ 'line' ] = {\r\n\r\n\tuniforms: UniformsUtils.merge( [\r\n\t\tUniformsLib.common,\r\n\t\tUniformsLib.fog,\r\n\t\tUniformsLib.line\r\n\t] ),\r\n\r\n\tvertexShader:\r\n\t\t`\r\n\t\t#include <common>\r\n\t\t#include <color_pars_vertex>\r\n\t\t#include <fog_pars_vertex>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\t\t#include <clipping_planes_pars_vertex>\r\n\r\n\t\tuniform float linewidth;\r\n\t\tuniform vec2 resolution;\r\n\r\n\t\tattribute vec3 instanceStart;\r\n\t\tattribute vec3 instanceEnd;\r\n\r\n\t\tattribute vec3 instanceColorStart;\r\n\t\tattribute vec3 instanceColorEnd;\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\t#ifdef USE_DASH\r\n\r\n\t\t\tuniform float dashScale;\r\n\t\t\tattribute float instanceDistanceStart;\r\n\t\t\tattribute float instanceDistanceEnd;\r\n\t\t\tvarying float vLineDistance;\r\n\r\n\t\t#endif\r\n\r\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\r\n\r\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\r\n\r\n\t\t\t// conservative estimate of the near plane\r\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\r\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\r\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\r\n\r\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\r\n\r\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#ifdef USE_COLOR\r\n\r\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tfloat aspect = resolution.x / resolution.y;\r\n\r\n\t\t\tvUv = uv;\r\n\r\n\t\t\t// camera space\r\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\r\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\r\n\r\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\r\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\r\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\r\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\r\n\r\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\r\n\r\n\t\t\tif ( perspective ) {\r\n\r\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\r\n\r\n\t\t\t\t\ttrimSegment( start, end );\r\n\r\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\r\n\r\n\t\t\t\t\ttrimSegment( end, start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// clip space\r\n\t\t\tvec4 clipStart = projectionMatrix * start;\r\n\t\t\tvec4 clipEnd = projectionMatrix * end;\r\n\r\n\t\t\t// ndc space\r\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\r\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\r\n\r\n\t\t\t// direction\r\n\t\t\tvec2 dir = ndcEnd - ndcStart;\r\n\r\n\t\t\t// account for clip-space aspect ratio\r\n\t\t\tdir.x *= aspect;\r\n\t\t\tdir = normalize( dir );\r\n\r\n\t\t\t// perpendicular to dir\r\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\r\n\r\n\t\t\t// undo aspect ratio adjustment\r\n\t\t\tdir.x /= aspect;\r\n\t\t\toffset.x /= aspect;\r\n\r\n\t\t\t// sign flip\r\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\r\n\r\n\t\t\t// endcaps\r\n\t\t\tif ( position.y < 0.0 ) {\r\n\r\n\t\t\t\toffset += - dir;\r\n\r\n\t\t\t} else if ( position.y > 1.0 ) {\r\n\r\n\t\t\t\toffset += dir;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// adjust for linewidth\r\n\t\t\toffset *= linewidth;\r\n\r\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\r\n\t\t\toffset /= resolution.y;\r\n\r\n\t\t\t// select end\r\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\r\n\r\n\t\t\t// back to clip space\r\n\t\t\toffset *= clip.w;\r\n\r\n\t\t\tclip.xy += offset;\r\n\r\n\t\t\tgl_Position = clip;\r\n\r\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\t\t\t#include <clipping_planes_vertex>\r\n\t\t\t#include <fog_vertex>\r\n\r\n\t\t}\r\n\t\t`,\r\n\r\n\tfragmentShader:\r\n\t\t`\r\n\t\tuniform vec3 diffuse;\r\n\t\tuniform float opacity;\r\n\r\n\t\t#ifdef USE_DASH\r\n\r\n\t\t\tuniform float dashSize;\r\n\t\t\tuniform float dashOffset;\r\n\t\t\tuniform float gapSize;\r\n\r\n\t\t#endif\r\n\r\n\t\tvarying float vLineDistance;\r\n\r\n\t\t#include <common>\r\n\t\t#include <color_pars_fragment>\r\n\t\t#include <fog_pars_fragment>\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\t\t#include <clipping_planes_pars_fragment>\r\n\r\n\t\tvarying vec2 vUv;\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <clipping_planes_fragment>\r\n\r\n\t\t\t#ifdef USE_DASH\r\n\r\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\r\n\r\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\r\n\r\n\t\t\t#endif\r\n\r\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\r\n\r\n\t\t\t\tfloat a = vUv.x;\r\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\r\n\t\t\t\tfloat len2 = a * a + b * b;\r\n\r\n\t\t\t\tif ( len2 > 1.0 ) discard;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\t\t\t#include <color_fragment>\r\n\r\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <encodings_fragment>\r\n\t\t\t#include <fog_fragment>\r\n\t\t\t#include <premultiplied_alpha_fragment>\r\n\r\n\t\t}\r\n\t\t`\r\n};\r\n\r\nvar LineMaterial = function ( parameters ) {\r\n\r\n\tShaderMaterial.call( this, {\r\n\r\n\t\ttype: 'LineMaterial',\r\n\r\n\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\r\n\r\n\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\r\n\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\r\n\r\n\t\tclipping: true // required for clipping support\r\n\r\n\t} );\r\n\r\n\tthis.dashed = false;\r\n\r\n\tObject.defineProperties( this, {\r\n\r\n\t\tcolor: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.diffuse.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.diffuse.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tlinewidth: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.linewidth.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.linewidth.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdashScale: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.dashScale.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.dashScale.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdashSize: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.dashSize.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.dashSize.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tdashOffset: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.dashOffset.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.dashOffset.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgapSize: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.gapSize.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.gapSize.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\topacity: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.opacity.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.opacity.value = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tresolution: {\r\n\r\n\t\t\tenumerable: true,\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn this.uniforms.resolution.value;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nLineMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\nLineMaterial.prototype.constructor = LineMaterial;\r\n\r\nLineMaterial.prototype.isLineMaterial = true;\r\n\r\nexport { LineMaterial };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/lines/LineMaterial.js"],"sourceRoot":""}