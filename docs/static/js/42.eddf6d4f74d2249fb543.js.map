{"version":3,"sources":["webpack:///./src/components/jsm/modifiers/CurveModifier.js","webpack:///src/views/modifier/webglModifierCurve.vue","webpack:///./src/views/modifier/webglModifierCurve.vue?055d","webpack:///./src/views/modifier/webglModifierCurve.vue","webpack:///./src/components/jsm/controls/TransformControls.js"],"names":["BITS","TEXTURE_WIDTH","TEXTURE_HEIGHT","setTextureValue","texture","index","x","y","z","o","data","image","i","Flow","mesh","numberOfCurves","arguments","length","undefined","_classCallCheck","this","obj3D","clone","splineTexure","dataArray","Float32Array","dataTexture","DataTexture","RGBFormat","FloatType","wrapS","RepeatWrapping","wrapY","magFilter","NearestFilter","needsUpdate","initSplineTexture","uniforms","spineTexture","value","pathOffset","type","pathSegment","spineOffset","spineLength","flow","traverse","child","Mesh","InstancedMesh","material","__ok","onBeforeCompile","shader","__modified","Object","assign","vertexShader","replace","modifyShader","curveArray","Array","curveLengthArray","object3D","_createClass","key","curve","Error","curveLength","getLength","splineCurve","offset","numberOfPoints","Math","floor","arcLengthDivisions","updateArcLengths","points","getSpacedPoints","frenetFrames","computeFrenetFrames","rowOffset","rowIndex","pt","tangents","normals","binormals","updateSplineTexture","amount","matrix","Matrix4","webglModifierCurve","_Flow","InstancedFlow","count","curveCount","geometry","instanceMatrix","setUsage","DynamicDrawUsage","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","offsets","fill","whichCurve","_inherits","makeTranslation","setMatrixAt","writeChanges","curveNo","isNaN","ACTION_SELECT","ACTION_NONE","curveHandles","mouse","stats","scene","camera","renderer","rayCaster","control","action","mounted","$THREE","Vector2","init","animate","methods","Scene","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","lookAt","boxGeometry","BoxBufferGeometry","boxMaterial","MeshBasicMaterial","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","handlePos","handle","copy","push","add","err","return","CatmullRomCurve3","map","curveType","closed","getPoints","line","LineLoop","BufferGeometry","setFromPoints","LineBasicMaterial","color","light","DirectionalLight","intensity","light2","AmbientLight","FontLoader","load","font","TextBufferGeometry","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","rotateX","PI","MeshStandardMaterial","objectToCurve","CurveModifier_Flow","updateCurve","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","addEventListener","onPointerDown","Raycaster","TransformControls","event","$Stats","dom","style","left","onWindowResize","$onWindowResize","clientX","innerWidth","clientY","requestAnimationFrame","setFromCamera","intersects","intersectObjects","target","object","attach","moveAlongCurve","render","update","modifier_webglModifierCurve","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","d","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","console","warn","Object3D","visible","_gizmo","TransformControlsGizmo","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","raycaster","intersectObjectWithRay","includeInvisible","allIntersections","intersectObject","_tempVector","Vector3","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","pointStart","pointEnd","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","get","dispatchEvent","getPointer","ownerDocument","pointerLockElement","button","pointer","changedTouches","rect","getBoundingClientRect","width","top","onPointerHover","enabled","pointerType","pointerHover","touchAction","onPointerMove","pointerDown","pointerMove","onPointerUp","removeEventListener","pointerUp","dispose","detach","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","invert","sub","normalize","prototype","dragging","intersect","picker","name","planeIntersect","space","snap","rotationSnap","rotation","round","quaternion","scale","point","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSpace","create","constructor","isTransformControls","gizmoMaterial","depthTest","depthWrite","transparent","side","DoubleSide","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","opacity","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderBufferGeometry","scaleHandleGeometry","lineGeometry","setAttribute","Float32BufferAttribute","CircleGeometry","radius","arc","vertices","cos","sin","gizmoTranslate","Line","XYZ","OctahedronBufferGeometry","XY","PlaneBufferGeometry","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusBufferGeometry","SphereBufferGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","renderOrder","Infinity","tempVector","tempEuler","Euler","alignVector","zeroVector","lookAtMatrix","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","concat","children","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","abs","setFromRotationMatrix","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","lerp","Color","split","some","a","setFromEuler","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane"],"mappings":"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","file":"static/js/42.eddf6d4f74d2249fb543.js","sourcesContent":["// Original src: https://github.com/zz85/threejs-path-flow\r\nconst BITS = 3;\r\nconst TEXTURE_WIDTH = 1024;\r\nconst TEXTURE_HEIGHT = 4;\r\n\r\nimport {\r\n\tDataTexture,\r\n\tRGBFormat,\r\n\tFloatType,\r\n\tRepeatWrapping,\r\n\tMesh,\r\n\tInstancedMesh,\r\n\tNearestFilter,\r\n\tDynamicDrawUsage,\r\n\tMatrix4\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Make a new DataTexture to store the descriptions of the curves.\r\n *\r\n * @param { number } numberOfCurves the number of curves needed to be described by this texture.\r\n */\r\nexport function initSplineTexture( numberOfCurves = 1 ) {\r\n\r\n\tconst dataArray = new Float32Array( TEXTURE_WIDTH * TEXTURE_HEIGHT * numberOfCurves * BITS );\r\n\tconst dataTexture = new DataTexture(\r\n\t\tdataArray,\r\n\t\tTEXTURE_WIDTH,\r\n\t\tTEXTURE_HEIGHT * numberOfCurves,\r\n\t\tRGBFormat,\r\n\t\tFloatType\r\n\t);\r\n\r\n\tdataTexture.wrapS = RepeatWrapping;\r\n\tdataTexture.wrapY = RepeatWrapping;\r\n\tdataTexture.magFilter = NearestFilter;\r\n\tdataTexture.needsUpdate = true;\r\n\r\n\treturn dataTexture;\r\n\r\n}\r\n\r\n/**\r\n * Write the curve description to the data texture\r\n *\r\n * @param { DataTexture } texture The DataTexture to write to\r\n * @param { Curve } splineCurve The curve to describe\r\n * @param { number } offset Which curve slot to write to\r\n */\r\nexport function updateSplineTexture( texture, splineCurve, offset = 0 ) {\r\n\r\n\tconst numberOfPoints = Math.floor( TEXTURE_WIDTH * ( TEXTURE_HEIGHT / 4 ) );\r\n\tsplineCurve.arcLengthDivisions = numberOfPoints / 2;\r\n\tsplineCurve.updateArcLengths();\r\n\tconst points = splineCurve.getSpacedPoints( numberOfPoints );\r\n\tconst frenetFrames = splineCurve.computeFrenetFrames( numberOfPoints, true );\r\n\r\n\tfor ( let i = 0; i < numberOfPoints; i ++ ) {\r\n\r\n\t\tconst rowOffset = Math.floor( i / TEXTURE_WIDTH );\r\n\t\tconst rowIndex = i % TEXTURE_WIDTH;\r\n\r\n\t\tlet pt = points[ i ];\r\n\t\tsetTextureValue( texture, rowIndex, pt.x, pt.y, pt.z, 0 + rowOffset + ( TEXTURE_HEIGHT * offset ) );\r\n\t\tpt = frenetFrames.tangents[ i ];\r\n\t\tsetTextureValue( texture, rowIndex, pt.x, pt.y, pt.z, 1 + rowOffset + ( TEXTURE_HEIGHT * offset ) );\r\n\t\tpt = frenetFrames.normals[ i ];\r\n\t\tsetTextureValue( texture, rowIndex, pt.x, pt.y, pt.z, 2 + rowOffset + ( TEXTURE_HEIGHT * offset ) );\r\n\t\tpt = frenetFrames.binormals[ i ];\r\n\t\tsetTextureValue( texture, rowIndex, pt.x, pt.y, pt.z, 3 + rowOffset + ( TEXTURE_HEIGHT * offset ) );\r\n\r\n\t}\r\n\r\n\ttexture.needsUpdate = true;\r\n\r\n}\r\n\r\n\r\nfunction setTextureValue( texture, index, x, y, z, o ) {\r\n\r\n\tconst image = texture.image;\r\n\tconst { data } = image;\r\n\tconst i = BITS * TEXTURE_WIDTH * o; // Row Offset\r\n\tdata[ index * BITS + i + 0 ] = x;\r\n\tdata[ index * BITS + i + 1 ] = y;\r\n\tdata[ index * BITS + i + 2 ] = z;\r\n\r\n}\r\n\r\n/**\r\n * Create a new set of uniforms for describing the curve modifier\r\n *\r\n * @param { DataTexture } Texture which holds the curve description\r\n */\r\nexport function getUniforms( splineTexture ) {\r\n\r\n\tconst uniforms = {\r\n\t\tspineTexture: { value: splineTexture },\r\n\t\tpathOffset: { type: 'f', value: 0 }, // time of path curve\r\n\t\tpathSegment: { type: 'f', value: 1 }, // fractional length of path\r\n\t\tspineOffset: { type: 'f', value: 161 },\r\n\t\tspineLength: { type: 'f', value: 400 },\r\n\t\tflow: { type: 'i', value: 1 },\r\n\t};\r\n\treturn uniforms;\r\n\r\n}\r\n\r\nexport function modifyShader( material, uniforms, numberOfCurves = 1 ) {\r\n\r\n\tif ( material.__ok ) return;\r\n\tmaterial.__ok = true;\r\n\r\n\tmaterial.onBeforeCompile = ( shader ) => {\r\n\r\n\t\tif ( shader.__modified ) return;\r\n\t\tshader.__modified = true;\r\n\r\n\t\tObject.assign( shader.uniforms, uniforms );\r\n\r\n\t\tconst vertexShader = `\r\n\t\t#define USE_ENVMAP\r\n\t\tuniform sampler2D spineTexture;\r\n\t\tuniform float pathOffset;\r\n\t\tuniform float pathSegment;\r\n\t\tuniform float spineOffset;\r\n\t\tuniform float spineLength;\r\n\t\tuniform int flow;\r\n\r\n\t\tfloat textureLayers = ${TEXTURE_HEIGHT * numberOfCurves}.;\r\n\t\tfloat textureStacks = ${TEXTURE_HEIGHT / 4}.;\r\n\r\n\t\t${shader.vertexShader}\r\n\t\t`.replace(\r\n\t\t'#include <defaultnormal_vertex>',\r\n\t\t`\r\n\t\tvec4 worldPos = modelMatrix * vec4(position, 1.);\r\n\r\n\t\tbool bend = flow > 0;\r\n\t\tfloat xWeight = bend ? 0. : 1.;\r\n\r\n\t\t#ifdef USE_INSTANCING\r\n\t\tfloat pathOffsetFromInstanceMatrix = instanceMatrix[3][2];\r\n\t\tfloat spineLengthFromInstanceMatrix = instanceMatrix[3][0];\r\n\t\tfloat spinePortion = bend ? (worldPos.x + spineOffset) / spineLengthFromInstanceMatrix : 0.;\r\n\t\tfloat mt = (spinePortion * pathSegment + pathOffset + pathOffsetFromInstanceMatrix)*textureStacks;\r\n\t\t#else\r\n\t\tfloat spinePortion = bend ? (worldPos.x + spineOffset) / spineLength : 0.;\r\n\t\tfloat mt = (spinePortion * pathSegment + pathOffset)*textureStacks;\r\n\t\t#endif\r\n\r\n\t\tmt = mod(mt, textureStacks);\r\n\t\tfloat rowOffset = floor(mt);\r\n\r\n\t\t#ifdef USE_INSTANCING\r\n\t\trowOffset += instanceMatrix[3][1] * ${TEXTURE_HEIGHT}.;\r\n\t\t#endif\r\n\r\n\t\tvec3 spinePos = texture(spineTexture, vec2(mt, (0. + rowOffset + 0.5) / textureLayers)).xyz;\r\n\t\tvec3 a =        texture(spineTexture, vec2(mt, (1. + rowOffset + 0.5) / textureLayers)).xyz;\r\n\t\tvec3 b =        texture(spineTexture, vec2(mt, (2. + rowOffset + 0.5) / textureLayers)).xyz;\r\n\t\tvec3 c =        texture(spineTexture, vec2(mt, (3. + rowOffset + 0.5) / textureLayers)).xyz;\r\n\t\tmat3 basis = mat3(a, b, c);\r\n\r\n\t\tvec3 transformed = basis\r\n\t\t\t* vec3(worldPos.x * xWeight, worldPos.y * 1., worldPos.z * 1.)\r\n\t\t\t+ spinePos;\r\n\r\n\t\tvec3 transformedNormal = normalMatrix * (basis * objectNormal);\r\n\t\t`\r\n\t).replace(\r\n\t\t'#include <begin_vertex>',\r\n\t\t''\r\n\t).replace(\r\n\t\t'#include <project_vertex>',\r\n\t\t`\r\n\t\t\tvec4 mvPosition = viewMatrix * vec4( transformed, 1.0 );\r\n\t\t\t// vec4 mvPosition = viewMatrix * worldPos;\r\n\t\t\tgl_Position = projectionMatrix * mvPosition;\r\n\t\t\t`\r\n\t);\r\n\r\n\t\tshader.vertexShader = vertexShader;\r\n\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * A helper class for making meshes bend aroudn curves\r\n */\r\nexport class Flow {\r\n\r\n\t/**\r\n\t * @param {Mesh} mesh The mesh to clone and modify to bend around the curve\r\n\t * @param {number} numberOfCurves The amount of space that should preallocated for additional curves\r\n\t */\r\n\tconstructor( mesh, numberOfCurves = 1 ) {\r\n\r\n\t\tconst obj3D = mesh.clone();\r\n\t\tconst splineTexure = initSplineTexture( numberOfCurves );\r\n\t\tconst uniforms = getUniforms( splineTexure );\r\n\t\tobj3D.traverse( function ( child ) {\r\n\r\n\t\t\tif (\r\n\t\t\t\tchild instanceof Mesh ||\r\n\t\t\t\tchild instanceof InstancedMesh\r\n\t\t\t) {\r\n\r\n\t\t\t\tchild.material = child.material.clone();\r\n\t\t\t\tmodifyShader( child.material, uniforms, numberOfCurves );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tthis.curveArray = new Array( numberOfCurves );\r\n\t\tthis.curveLengthArray = new Array( numberOfCurves );\r\n\r\n\t\tthis.object3D = obj3D;\r\n\t\tthis.splineTexure = splineTexure;\r\n\t\tthis.uniforms = uniforms;\r\n\r\n\t}\r\n\r\n\tupdateCurve( index, curve ) {\r\n\r\n\t\tif ( index >= this.curveArray.length ) throw Error( 'Index out of range for Flow' );\r\n\t\tconst curveLength = curve.getLength();\r\n\t\tthis.uniforms.spineLength.value = curveLength;\r\n\t\tthis.curveLengthArray[ index ] = curveLength;\r\n\t\tthis.curveArray[ index ] = curve;\r\n\t\tupdateSplineTexture( this.splineTexure, curve, index );\r\n\r\n\t}\r\n\r\n\tmoveAlongCurve( amount ) {\r\n\r\n\t\tthis.uniforms.pathOffset.value += amount;\r\n\r\n\t}\r\n\r\n}\r\nconst matrix = new Matrix4();\r\n\r\n/**\r\n * A helper class for creating instanced versions of flow, where the instances are placed on the curve.\r\n */\r\nexport class InstancedFlow extends Flow {\r\n\r\n\t/**\r\n\t *\r\n\t * @param {number} count The number of instanced elements\r\n\t * @param {number} curveCount The number of curves to preallocate for\r\n\t * @param {Geometry} geometry The geometry to use for the instanced mesh\r\n\t * @param {Material} material The material to use for the instanced mesh\r\n\t */\r\n\tconstructor( count, curveCount, geometry, material ) {\r\n\r\n\t\tconst mesh = new InstancedMesh(\r\n\t\t\tgeometry,\r\n\t\t\tmaterial,\r\n\t\t\tcount\r\n\t\t);\r\n\t\tmesh.instanceMatrix.setUsage( DynamicDrawUsage );\r\n\t\tsuper( mesh, curveCount );\r\n\r\n\t\tthis.offsets = new Array( count ).fill( 0 );\r\n\t\tthis.whichCurve = new Array( count ).fill( 0 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The extra information about which curve and curve position is stored in the translation components of the matrix for the instanced objects\r\n\t * This writes that information to the matrix and marks it as needing update.\r\n\t *\r\n\t * @param {number} index of the instanced element to update\r\n\t */\r\n\twriteChanges( index ) {\r\n\r\n\t\tmatrix.makeTranslation(\r\n\t\t\tthis.curveLengthArray[ this.whichCurve[ index ] ],\r\n\t\t\tthis.whichCurve[ index ],\r\n\t\t\tthis.offsets[ index ]\r\n\t\t);\r\n\t\tthis.object3D.setMatrixAt( index, matrix );\r\n\t\tthis.object3D.instanceMatrix.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Move an individual element along the curve by a specific amount\r\n\t *\r\n\t * @param {number} index Which element to update\r\n\t * @param {number} offset Move by how much\r\n\t */\r\n\tmoveIndividualAlongCurve( index, offset ) {\r\n\r\n\t\tthis.offsets[ index ] += offset;\r\n\t\tthis.writeChanges( index );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Select which curve to use for an element\r\n\t *\r\n\t * @param {number} index the index of the instanced element to update\r\n\t * @param {number} curveNo the index of the curve it should use\r\n\t */\r\n\tsetCurve( index, curveNo ) {\r\n\r\n\t\tif ( isNaN( curveNo ) ) throw Error( \"curve index being set is Not a Number (NaN)\" );\r\n\t\tthis.whichCurve[ index ] = curveNo;\r\n\t\tthis.writeChanges( index );\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/modifiers/CurveModifier.js","<template>\r\n    <div class=\"webglModifierCurve-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - curve modifier\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { TransformControls } from \"@/components/jsm/controls/TransformControls.js\"\r\nimport { Flow } from \"@/components/jsm/modifiers/CurveModifier.js\"\r\nexport default {\r\n    data() {\r\n        return {\r\n            ACTION_SELECT: 1,\r\n            ACTION_NONE: 0,\r\n\t\t\tcurveHandles: [],\r\n\t\t\tmouse: null,\r\n\t\t\tstats: null,\r\n\t\t\tscene: null,\r\n            camera: null,\r\n            renderer: null,\r\n            rayCaster: null,\r\n            control: null,\r\n            flow: null,\r\n            action: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.mouse = new this.$THREE.Vector2()\r\n        this.action = this.ACTION_NONE\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.scene = new this.$THREE.Scene()\r\n            this.camera = new this.$THREE.PerspectiveCamera(\r\n                40,\r\n                this.$webglInnerWidth / window.innerHeight,\r\n                1,\r\n                1000\r\n            )\r\n            this.camera.position.set(2, 2, 4)\r\n            this.camera.lookAt(this.scene.position)\r\n            var initialPoints = [\r\n                { x: 1, y: 0, z: - 1 },\r\n                { x: 1, y: 0, z: 1 },\r\n                { x: - 1, y: 0, z: 1 },\r\n                { x: - 1, y: 0, z: - 1 },\r\n            ]\r\n            var boxGeometry = new this.$THREE.BoxBufferGeometry(0.1, 0.1, 0.1)\r\n            var boxMaterial = new this.$THREE.MeshBasicMaterial(0x99ff99)\r\n            for (var handlePos of initialPoints) {\r\n                var handle = new this.$THREE.Mesh(boxGeometry, boxMaterial)\r\n                handle.position.copy(handlePos)\r\n                this.curveHandles.push(handle)\r\n                this.scene.add(handle)\r\n            }\r\n            var curve = new this.$THREE.CatmullRomCurve3(\r\n                this.curveHandles.map((handle) => handle.position)\r\n            )\r\n            curve.curveType = \"centripetal\"\r\n            curve.closed = true\r\n            var points = curve.getPoints(50)\r\n            var line = new this.$THREE.LineLoop(\r\n                new this.$THREE.BufferGeometry().setFromPoints(points),\r\n                new this.$THREE.LineBasicMaterial({ color: 0x00ff00 })\r\n            )\r\n            this.scene.add(line)\r\n            //\r\n            var light = new this.$THREE.DirectionalLight(0xffaa33)\r\n            light.position.set(- 10, 10, 10)\r\n            light.intensity = 1.0\r\n            this.scene.add(light)\r\n            var light2 = new this.$THREE.AmbientLight(0x003973)\r\n            light2.intensity = 1.0\r\n            this.scene.add(light2)\r\n            //\r\n            var loader = new this.$THREE.FontLoader()\r\n            loader.load(\"static/fonts/helvetiker_regular.typeface.json\", (\r\n                font\r\n            ) => {\r\n                var geometry = new this.$THREE.TextBufferGeometry(\"Hello three.js!\", {\r\n                    font: font,\r\n                    size: 0.2,\r\n                    height: 0.05,\r\n                    curveSegments: 12,\r\n                    bevelEnabled: true,\r\n                    bevelThickness: 0.02,\r\n                    bevelSize: 0.01,\r\n                    bevelOffset: 0,\r\n                    bevelSegments: 5,\r\n                })\r\n                geometry.rotateX(Math.PI)\r\n                var material = new this.$THREE.MeshStandardMaterial({\r\n                    color: 0x99ffff\r\n                })\r\n                var objectToCurve = new this.$THREE.Mesh(geometry, material)\r\n                this.flow = new Flow(objectToCurve)\r\n                this.flow.updateCurve(0, curve)\r\n                this.scene.add(this.flow.object3D)\r\n            })\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglModifierCurve-container')[0].appendChild(this.renderer.domElement)\r\n            this.renderer.domElement.addEventListener('pointerdown', this.onPointerDown, false)\r\n            this.rayCaster = new this.$THREE.Raycaster()\r\n            this.control = new TransformControls(this.camera, this.renderer.domElement)\r\n            this.control.addEventListener(\"dragging-changed\", (event) => {\r\n                if (! event.value) {\r\n                    var points = curve.getPoints(50)\r\n                    line.geometry.setFromPoints(points)\r\n                    this.flow.updateCurve(0, curve)\r\n                }\r\n            })\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglModifierCurve-container')[0].appendChild(this.stats.dom)\r\n            window.addEventListener(\"resize\", this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        onPointerDown(event) {\r\n            this.action = this.ACTION_SELECT\r\n            this.mouse.x = (event.clientX / (window.innerWidth - 281)) * 2 - 1\r\n            this.mouse.y = - (event.clientY / window.innerHeight) * 2 + 1\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            if (this.action === this.ACTION_SELECT) {\r\n                this.rayCaster.setFromCamera(this.mouse, this.camera)\r\n                this.action = this.ACTION_NONE\r\n                var intersects = this.rayCaster.intersectObjects(this.curveHandles)\r\n                if (intersects.length) {\r\n                    var target = intersects[ 0 ].object\r\n                    this.control.attach(target)\r\n                    this.scene.add(this.control)\r\n                }\r\n            }\r\n            if (this.flow) {\r\n                this.flow.moveAlongCurve(0.001)\r\n            }\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.stats.update()\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglModifierCurve-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/modifier/webglModifierCurve.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglModifierCurve-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - curve modifier\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-526e0f10\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/modifier/webglModifierCurve.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-526e0f10\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglModifierCurve.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglModifierCurve.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglModifierCurve.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-526e0f10\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglModifierCurve.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-526e0f10\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/modifier/webglModifierCurve.vue\n// module id = null\n// module chunks = ","import {\r\n\tBoxBufferGeometry,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tCylinderBufferGeometry,\r\n\tDoubleSide,\r\n\tEuler,\r\n\tFloat32BufferAttribute,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tObject3D,\r\n\tOctahedronBufferGeometry,\r\n\tPlaneBufferGeometry,\r\n\tQuaternion,\r\n\tRaycaster,\r\n\tSphereBufferGeometry,\r\n\tTorusBufferGeometry,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar TransformControls = function ( camera, domElement ) {\r\n\r\n\tif ( domElement === undefined ) {\r\n\r\n\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\r\n\t\tdomElement = document;\r\n\r\n\t}\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.visible = false;\r\n\tthis.domElement = domElement;\r\n\r\n\tvar _gizmo = new TransformControlsGizmo();\r\n\tthis.add( _gizmo );\r\n\r\n\tvar _plane = new TransformControlsPlane();\r\n\tthis.add( _plane );\r\n\r\n\tvar scope = this;\r\n\r\n\t// Define properties with getters/setter\r\n\t// Setting the defined property will automatically trigger change event\r\n\t// Defined properties are passed down to gizmo and plane\r\n\r\n\tdefineProperty( \"camera\", camera );\r\n\tdefineProperty( \"object\", undefined );\r\n\tdefineProperty( \"enabled\", true );\r\n\tdefineProperty( \"axis\", null );\r\n\tdefineProperty( \"mode\", \"translate\" );\r\n\tdefineProperty( \"translationSnap\", null );\r\n\tdefineProperty( \"rotationSnap\", null );\r\n\tdefineProperty( \"scaleSnap\", null );\r\n\tdefineProperty( \"space\", \"world\" );\r\n\tdefineProperty( \"size\", 1 );\r\n\tdefineProperty( \"dragging\", false );\r\n\tdefineProperty( \"showX\", true );\r\n\tdefineProperty( \"showY\", true );\r\n\tdefineProperty( \"showZ\", true );\r\n\r\n\tvar changeEvent = { type: \"change\" };\r\n\tvar mouseDownEvent = { type: \"mouseDown\" };\r\n\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\r\n\tvar objectChangeEvent = { type: \"objectChange\" };\r\n\r\n\t// Reusable utility variables\r\n\r\n\tvar raycaster = new Raycaster();\r\n\r\n\tfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\r\n\r\n\t\tvar allIntersections = raycaster.intersectObject( object, true );\r\n\r\n\t\tfor ( var i = 0; i < allIntersections.length; i ++ ) {\r\n\r\n\t\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\r\n\r\n\t\t\t\treturn allIntersections[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tvar _tempVector = new Vector3();\r\n\tvar _tempVector2 = new Vector3();\r\n\tvar _tempQuaternion = new Quaternion();\r\n\tvar _unit = {\r\n\t\tX: new Vector3( 1, 0, 0 ),\r\n\t\tY: new Vector3( 0, 1, 0 ),\r\n\t\tZ: new Vector3( 0, 0, 1 )\r\n\t};\r\n\r\n\tvar pointStart = new Vector3();\r\n\tvar pointEnd = new Vector3();\r\n\tvar offset = new Vector3();\r\n\tvar rotationAxis = new Vector3();\r\n\tvar startNorm = new Vector3();\r\n\tvar endNorm = new Vector3();\r\n\tvar rotationAngle = 0;\r\n\r\n\tvar cameraPosition = new Vector3();\r\n\tvar cameraQuaternion = new Quaternion();\r\n\tvar cameraScale = new Vector3();\r\n\r\n\tvar parentPosition = new Vector3();\r\n\tvar parentQuaternion = new Quaternion();\r\n\tvar parentQuaternionInv = new Quaternion();\r\n\tvar parentScale = new Vector3();\r\n\r\n\tvar worldPositionStart = new Vector3();\r\n\tvar worldQuaternionStart = new Quaternion();\r\n\tvar worldScaleStart = new Vector3();\r\n\r\n\tvar worldPosition = new Vector3();\r\n\tvar worldQuaternion = new Quaternion();\r\n\tvar worldQuaternionInv = new Quaternion();\r\n\tvar worldScale = new Vector3();\r\n\r\n\tvar eye = new Vector3();\r\n\r\n\tvar positionStart = new Vector3();\r\n\tvar quaternionStart = new Quaternion();\r\n\tvar scaleStart = new Vector3();\r\n\r\n\t// TODO: remove properties unused in plane and gizmo\r\n\r\n\tdefineProperty( \"worldPosition\", worldPosition );\r\n\tdefineProperty( \"worldPositionStart\", worldPositionStart );\r\n\tdefineProperty( \"worldQuaternion\", worldQuaternion );\r\n\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\r\n\tdefineProperty( \"cameraPosition\", cameraPosition );\r\n\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\r\n\tdefineProperty( \"pointStart\", pointStart );\r\n\tdefineProperty( \"pointEnd\", pointEnd );\r\n\tdefineProperty( \"rotationAxis\", rotationAxis );\r\n\tdefineProperty( \"rotationAngle\", rotationAngle );\r\n\tdefineProperty( \"eye\", eye );\r\n\r\n\t{\r\n\r\n\t\tdomElement.addEventListener( \"pointerdown\", onPointerDown, false );\r\n\t\tdomElement.addEventListener( \"pointermove\", onPointerHover, false );\r\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointerup\", onPointerUp, false );\r\n\r\n\t}\r\n\r\n\tthis.dispose = function () {\r\n\r\n\t\tdomElement.removeEventListener( \"pointerdown\", onPointerDown );\r\n\t\tdomElement.removeEventListener( \"pointermove\", onPointerHover );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointerup\", onPointerUp );\r\n\r\n\t\tthis.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.geometry ) child.geometry.dispose();\r\n\t\t\tif ( child.material ) child.material.dispose();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t// Set current object\r\n\tthis.attach = function ( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.visible = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t// Detatch from object\r\n\tthis.detach = function () {\r\n\r\n\t\tthis.object = undefined;\r\n\t\tthis.visible = false;\r\n\t\tthis.axis = null;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t// Defined getter, setter and store for a property\r\n\tfunction defineProperty( propName, defaultValue ) {\r\n\r\n\t\tvar propValue = defaultValue;\r\n\r\n\t\tObject.defineProperty( scope, propName, {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tif ( propValue !== value ) {\r\n\r\n\t\t\t\t\tpropValue = value;\r\n\t\t\t\t\t_plane[ propName ] = value;\r\n\t\t\t\t\t_gizmo[ propName ] = value;\r\n\r\n\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\r\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tscope[ propName ] = defaultValue;\r\n\t\t_plane[ propName ] = defaultValue;\r\n\t\t_gizmo[ propName ] = defaultValue;\r\n\r\n\t}\r\n\r\n\t// updateMatrixWorld  updates key transformation variables\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\tthis.object.updateMatrixWorld();\r\n\r\n\t\t\tif ( this.object.parent === null ) {\r\n\r\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\r\n\r\n\t\t\tparentQuaternionInv.copy( parentQuaternion ).invert();\r\n\t\t\tworldQuaternionInv.copy( worldQuaternion ).invert();\r\n\r\n\t\t}\r\n\r\n\t\tthis.camera.updateMatrixWorld();\r\n\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\r\n\r\n\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n\tthis.pointerHover = function ( pointer ) {\r\n\r\n\t\tif ( this.object === undefined || this.dragging === true ) return;\r\n\r\n\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\tvar intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\r\n\r\n\t\tif ( intersect ) {\r\n\r\n\t\t\tthis.axis = intersect.object.name;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.axis = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.pointerDown = function ( pointer ) {\r\n\r\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\r\n\r\n\t\tif ( this.axis !== null ) {\r\n\r\n\t\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\r\n\r\n\t\t\tif ( planeIntersect ) {\r\n\r\n\t\t\t\tvar space = this.space;\r\n\r\n\t\t\t\tif ( this.mode === 'scale' ) {\r\n\r\n\t\t\t\t\tspace = 'local';\r\n\r\n\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\r\n\r\n\t\t\t\t\tspace = 'world';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\r\n\r\n\t\t\t\t\tvar snap = this.rotationSnap;\r\n\r\n\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\r\n\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\r\n\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.object.updateMatrixWorld();\r\n\t\t\t\tthis.object.parent.updateMatrixWorld();\r\n\r\n\t\t\t\tpositionStart.copy( this.object.position );\r\n\t\t\t\tquaternionStart.copy( this.object.quaternion );\r\n\t\t\t\tscaleStart.copy( this.object.scale );\r\n\r\n\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\r\n\r\n\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dragging = true;\r\n\t\t\tmouseDownEvent.mode = this.mode;\r\n\t\t\tthis.dispatchEvent( mouseDownEvent );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.pointerMove = function ( pointer ) {\r\n\r\n\t\tvar axis = this.axis;\r\n\t\tvar mode = this.mode;\r\n\t\tvar object = this.object;\r\n\t\tvar space = this.space;\r\n\r\n\t\tif ( mode === 'scale' ) {\r\n\r\n\t\t\tspace = 'local';\r\n\r\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\r\n\r\n\t\t\tspace = 'world';\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\r\n\r\n\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\r\n\r\n\t\tif ( ! planeIntersect ) return;\r\n\r\n\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\r\n\r\n\t\tif ( mode === 'translate' ) {\r\n\r\n\t\t\t// Apply translate\r\n\r\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\r\n\r\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\r\n\r\n\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\r\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\r\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\r\n\r\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\r\n\r\n\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.position.copy( offset ).add( positionStart );\r\n\r\n\t\t\t// Apply translation snap\r\n\r\n\t\t\tif ( this.translationSnap ) {\r\n\r\n\t\t\t\tif ( space === 'local' ) {\r\n\r\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).invert() );\r\n\r\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( space === 'world' ) {\r\n\r\n\t\t\t\t\tif ( object.parent ) {\r\n\r\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( object.parent ) {\r\n\r\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( mode === 'scale' ) {\r\n\r\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\r\n\r\n\t\t\t\tvar d = pointEnd.length() / pointStart.length();\r\n\r\n\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\r\n\r\n\t\t\t\t_tempVector2.set( d, d, d );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_tempVector.copy( pointStart );\r\n\t\t\t\t_tempVector2.copy( pointEnd );\r\n\r\n\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\r\n\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\r\n\r\n\t\t\t\t_tempVector2.divide( _tempVector );\r\n\r\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.x = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.y = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.z = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply scale\r\n\r\n\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\r\n\r\n\t\t\tif ( this.scaleSnap ) {\r\n\r\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( mode === 'rotate' ) {\r\n\r\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\r\n\r\n\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\r\n\r\n\t\t\tif ( axis === 'E' ) {\r\n\r\n\t\t\t\trotationAxis.copy( eye );\r\n\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\r\n\r\n\t\t\t\tstartNorm.copy( pointStart ).normalize();\r\n\t\t\t\tendNorm.copy( pointEnd ).normalize();\r\n\r\n\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\r\n\r\n\t\t\t} else if ( axis === 'XYZE' ) {\r\n\r\n\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\r\n\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\r\n\r\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\r\n\r\n\t\t\t\trotationAxis.copy( _unit[ axis ] );\r\n\r\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\r\n\r\n\t\t\t\tif ( space === 'local' ) {\r\n\r\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply rotation snap\r\n\r\n\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\r\n\r\n\t\t\tthis.rotationAngle = rotationAngle;\r\n\r\n\t\t\t// Apply rotate\r\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\r\n\r\n\t\t\t\tobject.quaternion.copy( quaternionStart );\r\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\r\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\r\n\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent( changeEvent );\r\n\t\tthis.dispatchEvent( objectChangeEvent );\r\n\r\n\t};\r\n\r\n\tthis.pointerUp = function ( pointer ) {\r\n\r\n\t\tif ( pointer.button !== 0 ) return;\r\n\r\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\r\n\r\n\t\t\tmouseUpEvent.mode = this.mode;\r\n\t\t\tthis.dispatchEvent( mouseUpEvent );\r\n\r\n\t\t}\r\n\r\n\t\tthis.dragging = false;\r\n\t\tthis.axis = null;\r\n\r\n\t};\r\n\r\n\t// normalize mouse / touch pointer and remap {x,y} to view space.\r\n\r\n\tfunction getPointer( event ) {\r\n\r\n\t\tif ( scope.domElement.ownerDocument.pointerLockElement ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\tbutton: event.button\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\r\n\r\n\t\t\tvar rect = domElement.getBoundingClientRect();\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\r\n\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\r\n\t\t\t\tbutton: event.button\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// mouse / touch event handlers\r\n\r\n\tfunction onPointerHover( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tscope.pointerHover( getPointer( event ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerDown( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointermove\", onPointerMove, false );\r\n\r\n\t\tscope.pointerHover( getPointer( event ) );\r\n\t\tscope.pointerDown( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\tfunction onPointerMove( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.pointerMove( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\tfunction onPointerUp( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.domElement.style.touchAction = '';\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove, false );\r\n\r\n\t\tscope.pointerUp( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\t// TODO: deprecate\r\n\r\n\tthis.getMode = function () {\r\n\r\n\t\treturn scope.mode;\r\n\r\n\t};\r\n\r\n\tthis.setMode = function ( mode ) {\r\n\r\n\t\tscope.mode = mode;\r\n\r\n\t};\r\n\r\n\tthis.setTranslationSnap = function ( translationSnap ) {\r\n\r\n\t\tscope.translationSnap = translationSnap;\r\n\r\n\t};\r\n\r\n\tthis.setRotationSnap = function ( rotationSnap ) {\r\n\r\n\t\tscope.rotationSnap = rotationSnap;\r\n\r\n\t};\r\n\r\n\tthis.setScaleSnap = function ( scaleSnap ) {\r\n\r\n\t\tscope.scaleSnap = scaleSnap;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( size ) {\r\n\r\n\t\tscope.size = size;\r\n\r\n\t};\r\n\r\n\tthis.setSpace = function ( space ) {\r\n\r\n\t\tscope.space = space;\r\n\r\n\t};\r\n\r\n\tthis.update = function () {\r\n\r\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\tconstructor: TransformControls,\r\n\r\n\tisTransformControls: true\r\n\r\n} );\r\n\r\n\r\nvar TransformControlsGizmo = function () {\r\n\r\n\t'use strict';\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.type = 'TransformControlsGizmo';\r\n\r\n\t// shared materials\r\n\r\n\tvar gizmoMaterial = new MeshBasicMaterial( {\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true,\r\n\t\tside: DoubleSide,\r\n\t\tfog: false,\r\n\t\ttoneMapped: false\r\n\t} );\r\n\r\n\tvar gizmoLineMaterial = new LineBasicMaterial( {\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true,\r\n\t\tlinewidth: 1,\r\n\t\tfog: false,\r\n\t\ttoneMapped: false\r\n\t} );\r\n\r\n\t// Make unique material for each axis/color\r\n\r\n\tvar matInvisible = gizmoMaterial.clone();\r\n\tmatInvisible.opacity = 0.15;\r\n\r\n\tvar matHelper = gizmoMaterial.clone();\r\n\tmatHelper.opacity = 0.33;\r\n\r\n\tvar matRed = gizmoMaterial.clone();\r\n\tmatRed.color.set( 0xff0000 );\r\n\r\n\tvar matGreen = gizmoMaterial.clone();\r\n\tmatGreen.color.set( 0x00ff00 );\r\n\r\n\tvar matBlue = gizmoMaterial.clone();\r\n\tmatBlue.color.set( 0x0000ff );\r\n\r\n\tvar matWhiteTransparent = gizmoMaterial.clone();\r\n\tmatWhiteTransparent.opacity = 0.25;\r\n\r\n\tvar matYellowTransparent = matWhiteTransparent.clone();\r\n\tmatYellowTransparent.color.set( 0xffff00 );\r\n\r\n\tvar matCyanTransparent = matWhiteTransparent.clone();\r\n\tmatCyanTransparent.color.set( 0x00ffff );\r\n\r\n\tvar matMagentaTransparent = matWhiteTransparent.clone();\r\n\tmatMagentaTransparent.color.set( 0xff00ff );\r\n\r\n\tvar matYellow = gizmoMaterial.clone();\r\n\tmatYellow.color.set( 0xffff00 );\r\n\r\n\tvar matLineRed = gizmoLineMaterial.clone();\r\n\tmatLineRed.color.set( 0xff0000 );\r\n\r\n\tvar matLineGreen = gizmoLineMaterial.clone();\r\n\tmatLineGreen.color.set( 0x00ff00 );\r\n\r\n\tvar matLineBlue = gizmoLineMaterial.clone();\r\n\tmatLineBlue.color.set( 0x0000ff );\r\n\r\n\tvar matLineCyan = gizmoLineMaterial.clone();\r\n\tmatLineCyan.color.set( 0x00ffff );\r\n\r\n\tvar matLineMagenta = gizmoLineMaterial.clone();\r\n\tmatLineMagenta.color.set( 0xff00ff );\r\n\r\n\tvar matLineYellow = gizmoLineMaterial.clone();\r\n\tmatLineYellow.color.set( 0xffff00 );\r\n\r\n\tvar matLineGray = gizmoLineMaterial.clone();\r\n\tmatLineGray.color.set( 0x787878 );\r\n\r\n\tvar matLineYellowTransparent = matLineYellow.clone();\r\n\tmatLineYellowTransparent.opacity = 0.25;\r\n\r\n\t// reusable geometry\r\n\r\n\tvar arrowGeometry = new CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\r\n\r\n\tvar scaleHandleGeometry = new BoxBufferGeometry( 0.125, 0.125, 0.125 );\r\n\r\n\tvar lineGeometry = new BufferGeometry();\r\n\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\r\n\r\n\tvar CircleGeometry = function ( radius, arc ) {\r\n\r\n\t\tvar geometry = new BufferGeometry( );\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\r\n\r\n\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t};\r\n\r\n\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\r\n\r\n\tvar TranslateHelperGeometry = function () {\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t};\r\n\r\n\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\r\n\r\n\tvar gizmoTranslate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineRed ) ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\r\n\t\t],\r\n\t\tXYZ: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerTranslate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\r\n\t\t],\r\n\t\tXYZ: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperTranslate = {\r\n\t\tSTART: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tEND: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tDELTA: [\r\n\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tX: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar gizmoRotate = {\r\n\t\tX: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\r\n\t\t],\r\n\t\tE: [\r\n\t\t\t[ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\r\n\t\t],\r\n\t\tXYZE: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperRotate = {\r\n\t\tAXIS: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerRotate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\r\n\t\t],\r\n\t\tE: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\r\n\t\t],\r\n\t\tXYZE: [\r\n\t\t\t[ new Mesh( new SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar gizmoScale = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXYZX: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\r\n\t\t],\r\n\t\tXYZY: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\r\n\t\t],\r\n\t\tXYZZ: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerScale = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\r\n\t\t],\r\n\t\tXYZX: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\r\n\t\t],\r\n\t\tXYZY: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\r\n\t\t],\r\n\t\tXYZZ: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperScale = {\r\n\t\tX: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\t// Creates an Object3D with gizmos described in custom hierarchy definition.\r\n\r\n\tvar setupGizmo = function ( gizmoMap ) {\r\n\r\n\t\tvar gizmo = new Object3D();\r\n\r\n\t\tfor ( var name in gizmoMap ) {\r\n\r\n\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\r\n\r\n\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\r\n\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\r\n\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\r\n\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\r\n\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\r\n\r\n\t\t\t\t// name and tag properties are essential for picking and updating logic.\r\n\t\t\t\tobject.name = name;\r\n\t\t\t\tobject.tag = tag;\r\n\r\n\t\t\t\tif ( position ) {\r\n\r\n\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( rotation ) {\r\n\r\n\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scale ) {\r\n\r\n\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.updateMatrix();\r\n\r\n\t\t\t\tvar tempGeometry = object.geometry.clone();\r\n\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\r\n\t\t\t\tobject.geometry = tempGeometry;\r\n\t\t\t\tobject.renderOrder = Infinity;\r\n\r\n\t\t\t\tobject.position.set( 0, 0, 0 );\r\n\t\t\t\tobject.rotation.set( 0, 0, 0 );\r\n\t\t\t\tobject.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t\tgizmo.add( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn gizmo;\r\n\r\n\t};\r\n\r\n\t// Reusable utility variables\r\n\r\n\tvar tempVector = new Vector3( 0, 0, 0 );\r\n\tvar tempEuler = new Euler();\r\n\tvar alignVector = new Vector3( 0, 1, 0 );\r\n\tvar zeroVector = new Vector3( 0, 0, 0 );\r\n\tvar lookAtMatrix = new Matrix4();\r\n\tvar tempQuaternion = new Quaternion();\r\n\tvar tempQuaternion2 = new Quaternion();\r\n\tvar identityQuaternion = new Quaternion();\r\n\r\n\tvar unitX = new Vector3( 1, 0, 0 );\r\n\tvar unitY = new Vector3( 0, 1, 0 );\r\n\tvar unitZ = new Vector3( 0, 0, 1 );\r\n\r\n\t// Gizmo creation\r\n\r\n\tthis.gizmo = {};\r\n\tthis.picker = {};\r\n\tthis.helper = {};\r\n\r\n\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\r\n\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\r\n\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\r\n\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\r\n\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\r\n\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\r\n\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\r\n\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\r\n\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\r\n\r\n\t// Pickers should be hidden always\r\n\r\n\tthis.picker[ \"translate\" ].visible = false;\r\n\tthis.picker[ \"rotate\" ].visible = false;\r\n\tthis.picker[ \"scale\" ].visible = false;\r\n\r\n\t// updateMatrixWorld will update transformations and appearance of individual handles\r\n\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tvar space = this.space;\r\n\r\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\r\n\r\n\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\r\n\r\n\t\t// Show only gizmos for current transform mode\r\n\r\n\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\r\n\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\r\n\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\r\n\r\n\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\r\n\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\r\n\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\r\n\r\n\r\n\t\tvar handles = [];\r\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\r\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\r\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\r\n\r\n\t\tfor ( var i = 0; i < handles.length; i ++ ) {\r\n\r\n\t\t\tvar handle = handles[ i ];\r\n\r\n\t\t\t// hide aligned to camera\r\n\r\n\t\t\thandle.visible = true;\r\n\t\t\thandle.rotation.set( 0, 0, 0 );\r\n\t\t\thandle.position.copy( this.worldPosition );\r\n\r\n\t\t\tvar factor;\r\n\r\n\t\t\tif ( this.camera.isOrthographicCamera ) {\r\n\r\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\r\n\r\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\r\n\r\n\t\t\tif ( handle.tag === 'helper' ) {\r\n\r\n\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\tif ( handle.name === 'AXIS' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.visible = !! this.axis;\r\n\r\n\t\t\t\t\tif ( this.axis === 'X' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'Y' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'Z' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\r\n\t\t\t\t\t\talignVector.copy( this.rotationAxis );\r\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\r\n\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\r\n\t\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'E' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t} else if ( handle.name === 'START' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else if ( handle.name === 'END' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPosition );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\r\n\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\r\n\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\r\n\t\t\t\t\thandle.scale.copy( tempVector );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thandle.quaternion.copy( quaternion );\r\n\r\n\t\t\t\t\tif ( this.dragging ) {\r\n\r\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis ) {\r\n\r\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If updating helper, skip rest of the loop\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Align handles to current local or world rotation\r\n\r\n\t\t\thandle.quaternion.copy( quaternion );\r\n\r\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\r\n\r\n\t\t\t\t// Hide translate and scale axis facing the camera\r\n\r\n\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\r\n\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\r\n\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\r\n\r\n\r\n\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'XY' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'YZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'XZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Flip translate and scale axis ocluded behind another axis\r\n\r\n\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.x *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.y *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.z *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( this.mode === 'rotate' ) {\r\n\r\n\t\t\t\t// Align handles to current local or world rotation\r\n\r\n\t\t\t\ttempQuaternion2.copy( quaternion );\r\n\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).invert() );\r\n\r\n\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\r\n\r\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'X' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Y' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Z' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Hide disabled axes\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\r\n\r\n\t\t\t// highlight selected axis\r\n\r\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\r\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\r\n\r\n\t\t\thandle.material.color.copy( handle.material._color );\r\n\t\t\thandle.material.opacity = handle.material._opacity;\r\n\r\n\t\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t\thandle.material.opacity *= 0.5;\r\n\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t} else if ( this.axis ) {\r\n\r\n\t\t\t\tif ( handle.name === this.axis ) {\r\n\r\n\t\t\t\t\thandle.material.opacity = 1.0;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\r\n\r\n\t\t\t\t\treturn handle.name === a;\r\n\r\n\t\t\t\t} ) ) {\r\n\r\n\t\t\t\t\thandle.material.opacity = 1.0;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thandle.material.opacity *= 0.25;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\tconstructor: TransformControlsGizmo,\r\n\r\n\tisTransformControlsGizmo: true\r\n\r\n} );\r\n\r\n\r\nvar TransformControlsPlane = function () {\r\n\r\n\t'use strict';\r\n\r\n\tMesh.call( this,\r\n\t\tnew PlaneBufferGeometry( 100000, 100000, 2, 2 ),\r\n\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\r\n\t);\r\n\r\n\tthis.type = 'TransformControlsPlane';\r\n\r\n\tvar unitX = new Vector3( 1, 0, 0 );\r\n\tvar unitY = new Vector3( 0, 1, 0 );\r\n\tvar unitZ = new Vector3( 0, 0, 1 );\r\n\r\n\tvar tempVector = new Vector3();\r\n\tvar dirVector = new Vector3();\r\n\tvar alignVector = new Vector3();\r\n\tvar tempMatrix = new Matrix4();\r\n\tvar identityQuaternion = new Quaternion();\r\n\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tvar space = this.space;\r\n\r\n\t\tthis.position.copy( this.worldPosition );\r\n\r\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\r\n\r\n\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\r\n\t\t// Align the plane for current transform mode, axis and space.\r\n\r\n\t\talignVector.copy( unitY );\r\n\r\n\t\tswitch ( this.mode ) {\r\n\r\n\t\t\tcase 'translate':\r\n\t\t\tcase 'scale':\r\n\t\t\t\tswitch ( this.axis ) {\r\n\r\n\t\t\t\t\tcase 'X':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\r\n\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Y':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\r\n\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Z':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\r\n\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XY':\r\n\t\t\t\t\t\tdirVector.copy( unitZ );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'YZ':\r\n\t\t\t\t\t\tdirVector.copy( unitX );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XZ':\r\n\t\t\t\t\t\talignVector.copy( unitZ );\r\n\t\t\t\t\t\tdirVector.copy( unitY );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tcase 'E':\r\n\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rotate':\r\n\t\t\tdefault:\r\n\t\t\t\t// special case for rotate\r\n\t\t\t\tdirVector.set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirVector.length() === 0 ) {\r\n\r\n\t\t\t// If in rotate mode, make the plane parallel to camera\r\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\tconstructor: TransformControlsPlane,\r\n\r\n\tisTransformControlsPlane: true\r\n\r\n} );\r\n\r\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/controls/TransformControls.js"],"sourceRoot":""}