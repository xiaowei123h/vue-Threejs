{"version":3,"sources":["webpack:///src/views/geometries/webglGeometryExtrudeShapes.vue","webpack:///./src/views/geometries/webglGeometryExtrudeShapes.vue?02b5","webpack:///./src/views/geometries/webglGeometryExtrudeShapes.vue"],"names":["webglGeometryExtrudeShapes","data","camera","scene","renderer","controls","mounted","this","init","animate","methods","info","document","createElement","style","position","top","width","textAlign","color","link","innerHTML","getElementsByClassName","appendChild","$THREE","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","domElement","Scene","background","Color","PerspectiveCamera","set","TrackballControls","minDistance","maxDistance","add","AmbientLight","light","PointLight","copy","closedSpline","CatmullRomCurve3","Vector3","curveType","closed","extrudeSettings1","steps","bevelEnabled","extrudePath","pts1","i","l","a","Math","PI","push","Vector2","cos","sin","shape1","Shape","geometry1","ExtrudeBufferGeometry","material1","MeshLambertMaterial","wireframe","mesh1","Mesh","randomPoints","MathUtils","randFloat","extrudeSettings2","pts2","numPts","shape2","geometry2","material2","mesh2","materials","geometry3","depth","bevelThickness","bevelSize","bevelSegments","mesh3","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","update","render","geometries_webglGeometryExtrudeShapes","_h","$createElement","_self","_c","staticClass","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/44.845559a03d43190dd6d0.js","sourcesContent":["<template>\r\n    <div class=\"webglGeometryExtrudeShapes-container\">\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { TrackballControls } from '@/components/jsm/controls/TrackballControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            controls: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var info = document.createElement('div')\r\n            info.style.position = 'absolute'\r\n            info.style.top = '10px'\r\n            info.style.width = 'calc(100%-281px)'\r\n            info.style.textAlign = 'center'\r\n            info.style.color = '#fff'\r\n            info.style.link = '#f80'\r\n            info.innerHTML = '<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - geometry extrude shapes'\r\n            document.getElementsByClassName('webglGeometryExtrudeShapes-container')[0].appendChild(info)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglGeometryExtrudeShapes-container')[0].appendChild(this.renderer.domElement)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x222222)\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 1000)\r\n            this.camera.position.set(0, 0, 500)\r\n            this.controls = new TrackballControls(this.camera, this.renderer.domElement)\r\n            this.controls.minDistance = 200\r\n            this.controls.maxDistance = 500\r\n            this.scene.add(new this.$THREE.AmbientLight(0x222222))\r\n            var light = new this.$THREE.PointLight(0xffffff)\r\n            light.position.copy(this.camera.position)\r\n            this.scene.add(light)\r\n            //\r\n            var closedSpline = new this.$THREE.CatmullRomCurve3([\r\n                new this.$THREE.Vector3(- 60, - 100, 60),\r\n                new this.$THREE.Vector3(- 60, 20, 60),\r\n                new this.$THREE.Vector3(- 60, 120, 60),\r\n                new this.$THREE.Vector3(60, 20, - 60),\r\n                new this.$THREE.Vector3(60, - 100, - 60)\r\n            ])\r\n            closedSpline.curveType = 'catmullrom'\r\n            closedSpline.closed = true\r\n            var extrudeSettings1 = {\r\n                steps: 100,\r\n                bevelEnabled: false,\r\n                extrudePath: closedSpline\r\n            }\r\n            var pts1 = [], count = 3\r\n            for (var i = 0; i < count; i ++) {\r\n                var l = 20\r\n                var a = 2 * i / count * Math.PI\r\n                pts1.push(new this.$THREE.Vector2(Math.cos(a) * l, Math.sin(a) * l))\r\n            }\r\n            var shape1 = new this.$THREE.Shape(pts1)\r\n            var geometry1 = new this.$THREE.ExtrudeBufferGeometry(shape1, extrudeSettings1)\r\n            var material1 = new this.$THREE.MeshLambertMaterial({ color: 0xb00000, wireframe: false })\r\n            var mesh1 = new this.$THREE.Mesh(geometry1, material1)\r\n            this.scene.add(mesh1)\r\n            //\r\n            var randomPoints = []\r\n            for (var i = 0; i < 10; i ++) {\r\n                randomPoints.push(new this.$THREE.Vector3((i - 4.5) * 50, this.$THREE.MathUtils.randFloat(- 50, 50), this.$THREE.MathUtils.randFloat(- 50, 50)))\r\n            }\r\n            var randomSpline = new this.$THREE.CatmullRomCurve3(randomPoints)\r\n            //\r\n            var extrudeSettings2 = {\r\n                steps: 200,\r\n                bevelEnabled: false,\r\n                extrudePath: randomSpline\r\n            }\r\n            var pts2 = [], numPts = 5\r\n            for (var i = 0; i < numPts * 2; i ++) {\r\n                var l = i % 2 == 1 ? 10 : 20\r\n                var a = i / numPts * Math.PI\r\n                pts2.push(new this.$THREE.Vector2(Math.cos(a) * l, Math.sin(a) * l))\r\n            }\r\n            var shape2 = new this.$THREE.Shape(pts2)\r\n            var geometry2 = new this.$THREE.ExtrudeBufferGeometry(shape2, extrudeSettings2)\r\n            var material2 = new this.$THREE.MeshLambertMaterial({ color: 0xff8000, wireframe: false })\r\n            var mesh2 = new this.$THREE.Mesh(geometry2, material2)\r\n            this.scene.add(mesh2)\r\n            //\r\n            var materials = [ material1, material2 ]\r\n            var extrudeSettings3 = {\r\n                depth: 20,\r\n                steps: 1,\r\n                bevelEnabled: true,\r\n                bevelThickness: 2,\r\n                bevelSize: 4,\r\n                bevelSegments: 1\r\n            }\r\n            var geometry3 = new this.$THREE.ExtrudeBufferGeometry(shape2, extrudeSettings3)\r\n            var mesh3 = new this.$THREE.Mesh(geometry3, materials)\r\n            mesh3.position.set(50, 100, 50)\r\n            this.scene.add(mesh3)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.controls.update()\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometryExtrudeShapes-container {\r\n    width: 100%;\r\n    background-color: #222;\r\n}\r\n.webglGeometryExtrudeShapes-container a {\r\n    color: #f80;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometryExtrudeShapes.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometryExtrudeShapes-container\"})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a297b704\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometryExtrudeShapes.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a297b704\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometryExtrudeShapes.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryExtrudeShapes.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryExtrudeShapes.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a297b704\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometryExtrudeShapes.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-a297b704\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometryExtrudeShapes.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}