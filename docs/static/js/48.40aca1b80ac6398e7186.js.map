{"version":3,"sources":["webpack:///./src/components/jsm/loaders/SVGLoader.js","webpack:///src/views/geometries/webglGeometryTextStroke.vue","webpack:///./src/views/geometries/webglGeometryTextStroke.vue?7e2a","webpack:///./src/views/geometries/webglGeometryTextStroke.vue"],"names":["__webpack_require__","d","__webpack_exports__","SVGLoader","tempV2_1","tempV2_2","tempV2_3","tempV2_4","tempV2_5","tempV2_6","tempV2_7","lastPointL","lastPointR","point0L","point0R","currentPointL","currentPointR","nextPointL","nextPointR","innerPoint","outerPoint","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","manager","Loader","call","this","defaultDPI","defaultUnit","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","parseArcCommand","rx","ry","x_axis_rotation","large_arc_flag","sweep_flag","start","end","Math","PI","abs","dx2","x","dy2","y","x1p","cos","sin","y1p","rxs","rys","x1ps","y1ps","cr","s","sqrt","dq","pq","q","max","cxp","cyp","cx","cy","theta","svgAngle","delta","currentPath","absellipse","lineTo","ux","uy","vx","vy","dot","len","ang","acos","min","parseStyle","node","style","stylesheetStyles","hasAttribute","classSelectors","getAttribute","split","filter","Boolean","map","i","trim","length","stylesheets","addStyle","svgName","jsName","adjustFunction","undefined","v","startsWith","warn","clamp","parseFloatWithUnits","positive","getReflection","a","b","parseFloats","string","array","number","indexOf","lastIndexOf","splice","units","unitConversion","mm","cm","in","pt","pc","px","theUnit","String","n","u","endsWith","substring","scale","parseFloat","getTransformScaleX","m","te","elements","getTransformScaleY","paths","transformStack","tempTransform0","Matrix3","tempTransform1","tempTransform2","tempTransform3","tempV2","Vector2","tempV3","Vector3","currentTransform","xml","DOMParser","parseFromString","parseNode","nodeType","transform","nodeName","tx","ty","translate","transformsTexts","tIndex","transformText","openParPos","closeParPos","transformType","substr","identity","angle","rotate","multiplyMatrices","scaleX","scaleY","set","tan","premultiply","parseNodeTransform","copy","push","getNodeTransform","traverseChildNodes","sheet","cssRules","stylesheet","type","selectorList","selectorText","j","parseCSSStylesheet","ShapePath","point","control","firstPoint","isFirstPoint","doSetFirstPoint","commands","match","l","command","charAt","data","numbers","jl","moveTo","bezierCurveTo","quadraticCurveTo","clone","autoClose","curves","currentPoint","parsePathNode","w","h","parseRectNode","index","replace","parsePolygonNode","parsePolylineNode","r","subpath","Path","absarc","subPaths","parseCircleNode","parseEllipseNode","x1","y1","x2","y2","parseLineNode","usedNodeId","href","baseVal","usedNode","viewportElement","getElementById","fill","color","setStyle","transfVec2","v2","applyMatrix3","isRotated","isTransformRotated","subPath","curve","isLineCurve","v1","isCubicBezierCurve","v0","v3","isQuadraticBezierCurve","isEllipseCurve","aX","aY","xRadius","yRadius","transformPath","userData","nodes","childNodes","pop","documentElement","fillOpacity","strokeOpacity","strokeWidth","strokeLineJoin","strokeLineCap","strokeMiterLimit","getStrokeStyle","width","lineJoin","lineCap","miterLimit","strokeColor","pointsToStroke","points","arcDivisions","minDistance","vertices","normals","uvs","pointsToStrokeWithBuffers","geometry","BufferGeometry","setAttribute","Float32BufferAttribute","vertexOffset","numPoints","dupPoints","distanceTo","newPoints","removeDuplicatedPoints","nextPoint","innerSideModified","joinIsOnLeftSide","isMiter","isClosed","equals","previousPoint","strokeWidth2","deltaU","u0","initialJoinIsOnLeftSide","numVertices","currentCoordinate","currentCoordinateUV","getNormal","multiplyScalar","sub","add","iPoint","normal1","u1","subVectors","normalize","miterSide","setLength","negate","miterLength2","segmentLengthPrev","divideScalar","segmentLengthNext","makeSegmentTriangles","makeSegmentWithBevelJoin","createSegmentTrianglesWithMiddleSection","makeCircularSector","miterFraction","addVertex","addCapGeometry","lastOuter","lastInner","toArray","p1","p2","result","position","center","il","rotateAround","addVectors","vl","webglGeometryTextStroke","camera","scene","renderer","mounted","init","animate","methods","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","Scene","background","Color","FontLoader","that","font","matDark","MeshBasicMaterial","side","DoubleSide","matLite","transparent","opacity","shapes","generateShapes","ShapeBufferGeometry","computeBoundingBox","xMid","boundingBox","Mesh","z","holeShapes","shape","holes","hole","apply","getStyle","strokeText","Group","getPoints","strokeMesh","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","controls","OrbitControls","target","update","addEventListener","onWindowResize","requestAnimationFrame","render","$onWindowResize","geometries_webglGeometryTextStroke","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","rel","_v","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/48.40aca1b80ac6398e7186.js","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tLoader,\r\n\tMatrix3,\r\n\tPath,\r\n\tShapePath,\r\n\tVector2,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar SVGLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n\t// Default dots per inch\r\n\tthis.defaultDPI = 90;\r\n\r\n\t// Accepted units: 'mm', 'cm', 'in', 'pt', 'pc', 'px'\r\n\tthis.defaultUnit = \"px\";\r\n\r\n};\r\n\r\nSVGLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: SVGLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( text ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tfunction parseNode( node, style ) {\r\n\r\n\t\t\tif ( node.nodeType !== 1 ) return;\r\n\r\n\t\t\tvar transform = getNodeTransform( node );\r\n\r\n\t\t\tvar traverseChildNodes = true;\r\n\r\n\t\t\tvar path = null;\r\n\r\n\t\t\tswitch ( node.nodeName ) {\r\n\r\n\t\t\t\tcase 'svg':\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'style':\r\n\t\t\t\t\tparseCSSStylesheet( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'g':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'path':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tif ( node.hasAttribute( 'd' ) ) path = parsePathNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rect':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseRectNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'polygon':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parsePolygonNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'polyline':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parsePolylineNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'circle':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseCircleNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ellipse':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseEllipseNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'line':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tpath = parseLineNode( node );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'defs':\r\n\t\t\t\t\ttraverseChildNodes = false;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'use':\r\n\t\t\t\t\tstyle = parseStyle( node, style );\r\n\t\t\t\t\tvar usedNodeId = node.href.baseVal.substring( 1 );\r\n\t\t\t\t\tvar usedNode = node.viewportElement.getElementById( usedNodeId );\r\n\t\t\t\t\tif ( usedNode ) {\r\n\r\n\t\t\t\t\t\tparseNode( usedNode, style );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"SVGLoader: 'use node' references non-existent node id: \" + usedNodeId );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// console.log( node );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( path ) {\r\n\r\n\t\t\t\tif ( style.fill !== undefined && style.fill !== 'none' ) {\r\n\r\n\t\t\t\t\tpath.color.setStyle( style.fill );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttransformPath( path, currentTransform );\r\n\r\n\t\t\t\tpaths.push( path );\r\n\r\n\t\t\t\tpath.userData = { node: node, style: style };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( traverseChildNodes ) {\r\n\r\n\t\t\t\tvar nodes = node.childNodes;\r\n\r\n\t\t\t\tfor ( var i = 0; i < nodes.length; i ++ ) {\r\n\r\n\t\t\t\t\tparseNode( nodes[ i ], style );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( transform ) {\r\n\r\n\t\t\t\ttransformStack.pop();\r\n\r\n\t\t\t\tif ( transformStack.length > 0 ) {\r\n\r\n\t\t\t\t\tcurrentTransform.copy( transformStack[ transformStack.length - 1 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentTransform.identity();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePathNode( node ) {\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\r\n\t\t\tvar point = new Vector2();\r\n\t\t\tvar control = new Vector2();\r\n\r\n\t\t\tvar firstPoint = new Vector2();\r\n\t\t\tvar isFirstPoint = true;\r\n\t\t\tvar doSetFirstPoint = false;\r\n\r\n\t\t\tvar d = node.getAttribute( 'd' );\r\n\r\n\t\t\t// console.log( d );\r\n\r\n\t\t\tvar commands = d.match( /[a-df-z][^a-df-z]*/ig );\r\n\r\n\t\t\tfor ( var i = 0, l = commands.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar command = commands[ i ];\r\n\r\n\t\t\t\tvar type = command.charAt( 0 );\r\n\t\t\t\tvar data = command.substr( 1 ).trim();\r\n\r\n\t\t\t\tif ( isFirstPoint === true ) {\r\n\r\n\t\t\t\t\tdoSetFirstPoint = true;\r\n\t\t\t\t\tisFirstPoint = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 'M':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'H':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'V':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'L':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'C':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 6 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 4 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 5 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 3 ];\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 4 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 5 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'S':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\r\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Q':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'T':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tvar rx = getReflection( point.x, control.x );\r\n\t\t\t\t\t\t\tvar ry = getReflection( point.y, control.y );\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\trx,\r\n\t\t\t\t\t\t\t\try,\r\n\t\t\t\t\t\t\t\tnumbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tnumbers[ j + 1 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = rx;\r\n\t\t\t\t\t\t\tcontrol.y = ry;\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'A':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 7 ) {\r\n\r\n\t\t\t\t\t\t\t// skip command if start point == end point\r\n\t\t\t\t\t\t\tif ( numbers[ j + 5 ] == point.x && numbers[ j + 6 ] == point.y ) continue;\r\n\r\n\t\t\t\t\t\t\tvar start = point.clone();\r\n\t\t\t\t\t\t\tpoint.x = numbers[ j + 5 ];\r\n\t\t\t\t\t\t\tpoint.y = numbers[ j + 6 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tparseArcCommand(\r\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tpath.moveTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'h':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tpath.lineTo( point.x, point.y );\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 6 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 4 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 5 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 3 ];\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 4 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 5 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo(\r\n\t\t\t\t\t\t\t\tgetReflection( point.x, control.x ),\r\n\t\t\t\t\t\t\t\tgetReflection( point.y, control.y ),\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'q':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 4 ) {\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ],\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 2 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 3 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[ j + 1 ];\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 2 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 3 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 2 ) {\r\n\r\n\t\t\t\t\t\t\tvar rx = getReflection( point.x, control.x );\r\n\t\t\t\t\t\t\tvar ry = getReflection( point.y, control.y );\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo(\r\n\t\t\t\t\t\t\t\trx,\r\n\t\t\t\t\t\t\t\try,\r\n\t\t\t\t\t\t\t\tpoint.x + numbers[ j + 0 ],\r\n\t\t\t\t\t\t\t\tpoint.y + numbers[ j + 1 ]\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tcontrol.x = rx;\r\n\t\t\t\t\t\t\tcontrol.y = ry;\r\n\t\t\t\t\t\t\tpoint.x = point.x + numbers[ j + 0 ];\r\n\t\t\t\t\t\t\tpoint.y = point.y + numbers[ j + 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\tvar numbers = parseFloats( data );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = numbers.length; j < jl; j += 7 ) {\r\n\r\n\t\t\t\t\t\t\t// skip command if no displacement\r\n\t\t\t\t\t\t\tif ( numbers[ j + 5 ] == 0 && numbers[ j + 6 ] == 0 ) continue;\r\n\r\n\t\t\t\t\t\t\tvar start = point.clone();\r\n\t\t\t\t\t\t\tpoint.x += numbers[ j + 5 ];\r\n\t\t\t\t\t\t\tpoint.y += numbers[ j + 6 ];\r\n\t\t\t\t\t\t\tcontrol.x = point.x;\r\n\t\t\t\t\t\t\tcontrol.y = point.y;\r\n\t\t\t\t\t\t\tparseArcCommand(\r\n\t\t\t\t\t\t\t\tpath, numbers[ j ], numbers[ j + 1 ], numbers[ j + 2 ], numbers[ j + 3 ], numbers[ j + 4 ], start, point\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif ( j === 0 && doSetFirstPoint === true ) firstPoint.copy( point );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Z':\r\n\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\r\n\r\n\t\t\t\t\t\tif ( path.currentPath.curves.length > 0 ) {\r\n\r\n\t\t\t\t\t\t\t// Reset point to beginning of Path\r\n\t\t\t\t\t\t\tpoint.copy( firstPoint );\r\n\t\t\t\t\t\t\tpath.currentPath.currentPoint.copy( point );\r\n\t\t\t\t\t\t\tisFirstPoint = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( command );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\r\n\r\n\t\t\t\tdoSetFirstPoint = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCSSStylesheet( node ) {\r\n\r\n\t\t\tif ( ! node.sheet || ! node.sheet.cssRules || ! node.sheet.cssRules.length ) return;\r\n\r\n\t\t\tfor ( var i = 0; i < node.sheet.cssRules.length; i ++ ) {\r\n\r\n\t\t\t\tvar stylesheet = node.sheet.cssRules[ i ];\r\n\r\n\t\t\t\tif ( stylesheet.type !== 1 ) continue;\r\n\r\n\t\t\t\tvar selectorList = stylesheet.selectorText\r\n\t\t\t\t\t.split( /,/gm )\r\n\t\t\t\t\t.filter( Boolean )\r\n\t\t\t\t\t.map( i => i.trim() );\r\n\r\n\t\t\t\tfor ( var j = 0; j < selectorList.length; j ++ ) {\r\n\r\n\t\t\t\t\tstylesheets[ selectorList[ j ] ] = Object.assign(\r\n\t\t\t\t\t\tstylesheets[ selectorList[ j ] ] || {},\r\n\t\t\t\t\t\tstylesheet.style\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\r\n\t\t * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\r\n\t\t * From\r\n\t\t * rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n\t\t * To\r\n\t\t * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\r\n\t\t */\r\n\r\n\t\tfunction parseArcCommand( path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end ) {\r\n\r\n\t\t\tif ( rx == 0 || ry == 0 ) {\r\n\r\n\t\t\t\t// draw a line if either of the radii == 0\r\n\t\t\t\tpath.lineTo( end.x, end.y );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\r\n\r\n\t\t\t// Ensure radii are positive\r\n\t\t\trx = Math.abs( rx );\r\n\t\t\try = Math.abs( ry );\r\n\r\n\t\t\t// Compute (x1', y1')\r\n\t\t\tvar dx2 = ( start.x - end.x ) / 2.0;\r\n\t\t\tvar dy2 = ( start.y - end.y ) / 2.0;\r\n\t\t\tvar x1p = Math.cos( x_axis_rotation ) * dx2 + Math.sin( x_axis_rotation ) * dy2;\r\n\t\t\tvar y1p = - Math.sin( x_axis_rotation ) * dx2 + Math.cos( x_axis_rotation ) * dy2;\r\n\r\n\t\t\t// Compute (cx', cy')\r\n\t\t\tvar rxs = rx * rx;\r\n\t\t\tvar rys = ry * ry;\r\n\t\t\tvar x1ps = x1p * x1p;\r\n\t\t\tvar y1ps = y1p * y1p;\r\n\r\n\t\t\t// Ensure radii are large enough\r\n\t\t\tvar cr = x1ps / rxs + y1ps / rys;\r\n\r\n\t\t\tif ( cr > 1 ) {\r\n\r\n\t\t\t\t// scale up rx,ry equally so cr == 1\r\n\t\t\t\tvar s = Math.sqrt( cr );\r\n\t\t\t\trx = s * rx;\r\n\t\t\t\try = s * ry;\r\n\t\t\t\trxs = rx * rx;\r\n\t\t\t\trys = ry * ry;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar dq = ( rxs * y1ps + rys * x1ps );\r\n\t\t\tvar pq = ( rxs * rys - dq ) / dq;\r\n\t\t\tvar q = Math.sqrt( Math.max( 0, pq ) );\r\n\t\t\tif ( large_arc_flag === sweep_flag ) q = - q;\r\n\t\t\tvar cxp = q * rx * y1p / ry;\r\n\t\t\tvar cyp = - q * ry * x1p / rx;\r\n\r\n\t\t\t// Step 3: Compute (cx, cy) from (cx', cy')\r\n\t\t\tvar cx = Math.cos( x_axis_rotation ) * cxp - Math.sin( x_axis_rotation ) * cyp + ( start.x + end.x ) / 2;\r\n\t\t\tvar cy = Math.sin( x_axis_rotation ) * cxp + Math.cos( x_axis_rotation ) * cyp + ( start.y + end.y ) / 2;\r\n\r\n\t\t\t// Step 4: Compute θ1 and Δθ\r\n\t\t\tvar theta = svgAngle( 1, 0, ( x1p - cxp ) / rx, ( y1p - cyp ) / ry );\r\n\t\t\tvar delta = svgAngle( ( x1p - cxp ) / rx, ( y1p - cyp ) / ry, ( - x1p - cxp ) / rx, ( - y1p - cyp ) / ry ) % ( Math.PI * 2 );\r\n\r\n\t\t\tpath.currentPath.absellipse( cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation );\r\n\r\n\t\t}\r\n\r\n\t\tfunction svgAngle( ux, uy, vx, vy ) {\r\n\r\n\t\t\tvar dot = ux * vx + uy * vy;\r\n\t\t\tvar len = Math.sqrt( ux * ux + uy * uy ) * Math.sqrt( vx * vx + vy * vy );\r\n\t\t\tvar ang = Math.acos( Math.max( - 1, Math.min( 1, dot / len ) ) ); // floating point precision, slightly over values appear\r\n\t\t\tif ( ( ux * vy - uy * vx ) < 0 ) ang = - ang;\r\n\t\t\treturn ang;\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t* According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\r\n\t\t* rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\r\n\t\t*/\r\n\t\tfunction parseRectNode( node ) {\r\n\r\n\t\t\tvar x = parseFloatWithUnits( node.getAttribute( 'x' ) || 0 );\r\n\t\t\tvar y = parseFloatWithUnits( node.getAttribute( 'y' ) || 0 );\r\n\t\t\tvar rx = parseFloatWithUnits( node.getAttribute( 'rx' ) || 0 );\r\n\t\t\tvar ry = parseFloatWithUnits( node.getAttribute( 'ry' ) || 0 );\r\n\t\t\tvar w = parseFloatWithUnits( node.getAttribute( 'width' ) );\r\n\t\t\tvar h = parseFloatWithUnits( node.getAttribute( 'height' ) );\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\t\t\tpath.moveTo( x + 2 * rx, y );\r\n\t\t\tpath.lineTo( x + w - 2 * rx, y );\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) path.bezierCurveTo( x + w, y, x + w, y, x + w, y + 2 * ry );\r\n\t\t\tpath.lineTo( x + w, y + h - 2 * ry );\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) path.bezierCurveTo( x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h );\r\n\t\t\tpath.lineTo( x + 2 * rx, y + h );\r\n\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\r\n\r\n\t\t\t\tpath.bezierCurveTo( x, y + h, x, y + h, x, y + h - 2 * ry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpath.lineTo( x, y + 2 * ry );\r\n\r\n\t\t\tif ( rx !== 0 || ry !== 0 ) {\r\n\r\n\t\t\t\tpath.bezierCurveTo( x, y, x, y, x + 2 * rx, y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePolygonNode( node ) {\r\n\r\n\t\t\tfunction iterator( match, a, b ) {\r\n\r\n\t\t\t\tvar x = parseFloatWithUnits( a );\r\n\t\t\t\tvar y = parseFloatWithUnits( b );\r\n\r\n\t\t\t\tif ( index === 0 ) {\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\r\n\t\t\tvar index = 0;\r\n\r\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\r\n\r\n\t\t\tpath.currentPath.autoClose = true;\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePolylineNode( node ) {\r\n\r\n\t\t\tfunction iterator( match, a, b ) {\r\n\r\n\t\t\t\tvar x = parseFloatWithUnits( a );\r\n\t\t\t\tvar y = parseFloatWithUnits( b );\r\n\r\n\t\t\t\tif ( index === 0 ) {\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\r\n\t\t\tvar index = 0;\r\n\r\n\t\t\tnode.getAttribute( 'points' ).replace( regex, iterator );\r\n\r\n\t\t\tpath.currentPath.autoClose = false;\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCircleNode( node ) {\r\n\r\n\t\t\tvar x = parseFloatWithUnits( node.getAttribute( 'cx' ) );\r\n\t\t\tvar y = parseFloatWithUnits( node.getAttribute( 'cy' ) );\r\n\t\t\tvar r = parseFloatWithUnits( node.getAttribute( 'r' ) );\r\n\r\n\t\t\tvar subpath = new Path();\r\n\t\t\tsubpath.absarc( x, y, r, 0, Math.PI * 2 );\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\t\t\tpath.subPaths.push( subpath );\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEllipseNode( node ) {\r\n\r\n\t\t\tvar x = parseFloatWithUnits( node.getAttribute( 'cx' ) );\r\n\t\t\tvar y = parseFloatWithUnits( node.getAttribute( 'cy' ) );\r\n\t\t\tvar rx = parseFloatWithUnits( node.getAttribute( 'rx' ) );\r\n\t\t\tvar ry = parseFloatWithUnits( node.getAttribute( 'ry' ) );\r\n\r\n\t\t\tvar subpath = new Path();\r\n\t\t\tsubpath.absellipse( x, y, rx, ry, 0, Math.PI * 2 );\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\t\t\tpath.subPaths.push( subpath );\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseLineNode( node ) {\r\n\r\n\t\t\tvar x1 = parseFloatWithUnits( node.getAttribute( 'x1' ) );\r\n\t\t\tvar y1 = parseFloatWithUnits( node.getAttribute( 'y1' ) );\r\n\t\t\tvar x2 = parseFloatWithUnits( node.getAttribute( 'x2' ) );\r\n\t\t\tvar y2 = parseFloatWithUnits( node.getAttribute( 'y2' ) );\r\n\r\n\t\t\tvar path = new ShapePath();\r\n\t\t\tpath.moveTo( x1, y1 );\r\n\t\t\tpath.lineTo( x2, y2 );\r\n\t\t\tpath.currentPath.autoClose = false;\r\n\r\n\t\t\treturn path;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction parseStyle( node, style ) {\r\n\r\n\t\t\tstyle = Object.assign( {}, style ); // clone style\r\n\r\n\t\t\tvar stylesheetStyles = {};\r\n\r\n\t\t\tif ( node.hasAttribute( 'class' ) ) {\r\n\r\n\t\t\t\tvar classSelectors = node.getAttribute( 'class' )\r\n\t\t\t\t\t.split( /\\s/ )\r\n\t\t\t\t\t.filter( Boolean )\r\n\t\t\t\t\t.map( i => i.trim() );\r\n\r\n\t\t\t\tfor ( var i = 0; i < classSelectors.length; i ++ ) {\r\n\r\n\t\t\t\t\tstylesheetStyles = Object.assign( stylesheetStyles, stylesheets[ '.' + classSelectors[ i ] ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( node.hasAttribute( 'id' ) ) {\r\n\r\n\t\t\t\tstylesheetStyles = Object.assign( stylesheetStyles, stylesheets[ '#' + node.getAttribute( 'id' ) ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addStyle( svgName, jsName, adjustFunction ) {\r\n\r\n\t\t\t\tif ( adjustFunction === undefined ) adjustFunction = function copy( v ) {\r\n\r\n\t\t\t\t\tif ( v.startsWith( 'url' ) ) console.warn( \"SVGLoader: url access in attributes is not implemented.\" );\r\n\r\n\t\t\t\t\treturn v;\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ( node.hasAttribute( svgName ) ) style[ jsName ] = adjustFunction( node.getAttribute( svgName ) );\r\n\t\t\t\tif ( stylesheetStyles[ svgName ] ) style[ jsName ] = adjustFunction( stylesheetStyles[ svgName ] );\r\n\t\t\t\tif ( node.style && node.style[ svgName ] !== '' ) style[ jsName ] = adjustFunction( node.style[ svgName ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction clamp( v ) {\r\n\r\n\t\t\t\treturn Math.max( 0, Math.min( 1, parseFloatWithUnits( v ) ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction positive( v ) {\r\n\r\n\t\t\t\treturn Math.max( 0, parseFloatWithUnits( v ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taddStyle( 'fill', 'fill' );\r\n\t\t\taddStyle( 'fill-opacity', 'fillOpacity', clamp );\r\n\t\t\taddStyle( 'opacity', 'opacity', clamp );\r\n\t\t\taddStyle( 'stroke', 'stroke' );\r\n\t\t\taddStyle( 'stroke-opacity', 'strokeOpacity', clamp );\r\n\t\t\taddStyle( 'stroke-width', 'strokeWidth', positive );\r\n\t\t\taddStyle( 'stroke-linejoin', 'strokeLineJoin' );\r\n\t\t\taddStyle( 'stroke-linecap', 'strokeLineCap' );\r\n\t\t\taddStyle( 'stroke-miterlimit', 'strokeMiterLimit', positive );\r\n\t\t\taddStyle( 'visibility', 'visibility' );\r\n\r\n\t\t\treturn style;\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\r\n\r\n\t\tfunction getReflection( a, b ) {\r\n\r\n\t\t\treturn a - ( b - a );\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseFloats( string ) {\r\n\r\n\t\t\tvar array = string.split( /[\\s,]+|(?=\\s?[+\\-])/ );\r\n\r\n\t\t\tfor ( var i = 0; i < array.length; i ++ ) {\r\n\r\n\t\t\t\tvar number = array[ i ];\r\n\r\n\t\t\t\t// Handle values like 48.6037.7.8\r\n\t\t\t\t// TODO Find a regex for this\r\n\r\n\t\t\t\tif ( number.indexOf( '.' ) !== number.lastIndexOf( '.' ) ) {\r\n\r\n\t\t\t\t\tvar split = number.split( '.' );\r\n\r\n\t\t\t\t\tfor ( var s = 2; s < split.length; s ++ ) {\r\n\r\n\t\t\t\t\t\tarray.splice( i + s - 1, 0, '0.' + split[ s ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarray[ i ] = parseFloatWithUnits( number );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\r\n\t\t}\r\n\r\n\t\t// Units\r\n\r\n\t\tvar units = [ 'mm', 'cm', 'in', 'pt', 'pc', 'px' ];\r\n\r\n\t\t// Conversion: [ fromUnit ][ toUnit ] (-1 means dpi dependent)\r\n\t\tvar unitConversion = {\r\n\r\n\t\t\t\"mm\": {\r\n\t\t\t\t\"mm\": 1,\r\n\t\t\t\t\"cm\": 0.1,\r\n\t\t\t\t\"in\": 1 / 25.4,\r\n\t\t\t\t\"pt\": 72 / 25.4,\r\n\t\t\t\t\"pc\": 6 / 25.4,\r\n\t\t\t\t\"px\": - 1\r\n\t\t\t},\r\n\t\t\t\"cm\": {\r\n\t\t\t\t\"mm\": 10,\r\n\t\t\t\t\"cm\": 1,\r\n\t\t\t\t\"in\": 1 / 2.54,\r\n\t\t\t\t\"pt\": 72 / 2.54,\r\n\t\t\t\t\"pc\": 6 / 2.54,\r\n\t\t\t\t\"px\": - 1\r\n\t\t\t},\r\n\t\t\t\"in\": {\r\n\t\t\t\t\"mm\": 25.4,\r\n\t\t\t\t\"cm\": 2.54,\r\n\t\t\t\t\"in\": 1,\r\n\t\t\t\t\"pt\": 72,\r\n\t\t\t\t\"pc\": 6,\r\n\t\t\t\t\"px\": - 1\r\n\t\t\t},\r\n\t\t\t\"pt\": {\r\n\t\t\t\t\"mm\": 25.4 / 72,\r\n\t\t\t\t\"cm\": 2.54 / 72,\r\n\t\t\t\t\"in\": 1 / 72,\r\n\t\t\t\t\"pt\": 1,\r\n\t\t\t\t\"pc\": 6 / 72,\r\n\t\t\t\t\"px\": - 1\r\n\t\t\t},\r\n\t\t\t\"pc\": {\r\n\t\t\t\t\"mm\": 25.4 / 6,\r\n\t\t\t\t\"cm\": 2.54 / 6,\r\n\t\t\t\t\"in\": 1 / 6,\r\n\t\t\t\t\"pt\": 72 / 6,\r\n\t\t\t\t\"pc\": 1,\r\n\t\t\t\t\"px\": - 1\r\n\t\t\t},\r\n\t\t\t\"px\": {\r\n\t\t\t\t\"px\": 1\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseFloatWithUnits( string ) {\r\n\r\n\t\t\tvar theUnit = \"px\";\r\n\r\n\t\t\tif ( typeof string === 'string' || string instanceof String ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = units.length; i < n; i ++ ) {\r\n\r\n\t\t\t\t\tvar u = units[ i ];\r\n\r\n\t\t\t\t\tif ( string.endsWith( u ) ) {\r\n\r\n\t\t\t\t\t\ttheUnit = u;\r\n\t\t\t\t\t\tstring = string.substring( 0, string.length - u.length );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar scale = undefined;\r\n\r\n\t\t\tif ( theUnit === \"px\" && scope.defaultUnit !== \"px\" ) {\r\n\r\n\t\t\t\t// Conversion scale from  pixels to inches, then to default units\r\n\r\n\t\t\t\tscale = unitConversion[ \"in\" ][ scope.defaultUnit ] / scope.defaultDPI;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscale = unitConversion[ theUnit ][ scope.defaultUnit ];\r\n\r\n\t\t\t\tif ( scale < 0 ) {\r\n\r\n\t\t\t\t\t// Conversion scale to pixels\r\n\r\n\t\t\t\t\tscale = unitConversion[ theUnit ][ \"in\" ] * scope.defaultDPI;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn scale * parseFloat( string );\r\n\r\n\t\t}\r\n\r\n\t\t// Transforms\r\n\r\n\t\tfunction getNodeTransform( node ) {\r\n\r\n\t\t\tif ( ! ( node.hasAttribute( 'transform' ) || ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) ) ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar transform = parseNodeTransform( node );\r\n\r\n\t\t\tif ( transformStack.length > 0 ) {\r\n\r\n\t\t\t\ttransform.premultiply( transformStack[ transformStack.length - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentTransform.copy( transform );\r\n\t\t\ttransformStack.push( transform );\r\n\r\n\t\t\treturn transform;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseNodeTransform( node ) {\r\n\r\n\t\t\tvar transform = new Matrix3();\r\n\t\t\tvar currentTransform = tempTransform0;\r\n\r\n\t\t\tif ( node.nodeName === 'use' && ( node.hasAttribute( 'x' ) || node.hasAttribute( 'y' ) ) ) {\r\n\r\n\t\t\t\tvar tx = parseFloatWithUnits( node.getAttribute( 'x' ) );\r\n\t\t\t\tvar ty = parseFloatWithUnits( node.getAttribute( 'y' ) );\r\n\r\n\t\t\t\ttransform.translate( tx, ty );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( node.hasAttribute( 'transform' ) ) {\r\n\r\n\t\t\t\tvar transformsTexts = node.getAttribute( 'transform' ).split( ')' );\r\n\r\n\t\t\t\tfor ( var tIndex = transformsTexts.length - 1; tIndex >= 0; tIndex -- ) {\r\n\r\n\t\t\t\t\tvar transformText = transformsTexts[ tIndex ].trim();\r\n\r\n\t\t\t\t\tif ( transformText === '' ) continue;\r\n\r\n\t\t\t\t\tvar openParPos = transformText.indexOf( '(' );\r\n\t\t\t\t\tvar closeParPos = transformText.length;\r\n\r\n\t\t\t\t\tif ( openParPos > 0 && openParPos < closeParPos ) {\r\n\r\n\t\t\t\t\t\tvar transformType = transformText.substr( 0, openParPos );\r\n\r\n\t\t\t\t\t\tvar array = parseFloats( transformText.substr( openParPos + 1, closeParPos - openParPos - 1 ) );\r\n\r\n\t\t\t\t\t\tcurrentTransform.identity();\r\n\r\n\t\t\t\t\t\tswitch ( transformType ) {\r\n\r\n\t\t\t\t\t\t\tcase \"translate\":\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar tx = array[ 0 ];\r\n\t\t\t\t\t\t\t\t\tvar ty = tx;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tty = array[ 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.translate( tx, ty );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"rotate\":\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar angle = 0;\r\n\t\t\t\t\t\t\t\t\tvar cx = 0;\r\n\t\t\t\t\t\t\t\t\tvar cy = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t// Angle\r\n\t\t\t\t\t\t\t\t\tangle = - array[ 0 ] * Math.PI / 180;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( array.length >= 3 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Center x, y\r\n\t\t\t\t\t\t\t\t\t\tcx = array[ 1 ];\r\n\t\t\t\t\t\t\t\t\t\tcy = array[ 2 ];\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// Rotate around center (cx, cy)\r\n\t\t\t\t\t\t\t\t\ttempTransform1.identity().translate( - cx, - cy );\r\n\t\t\t\t\t\t\t\t\ttempTransform2.identity().rotate( angle );\r\n\t\t\t\t\t\t\t\t\ttempTransform3.multiplyMatrices( tempTransform2, tempTransform1 );\r\n\t\t\t\t\t\t\t\t\ttempTransform1.identity().translate( cx, cy );\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.multiplyMatrices( tempTransform1, tempTransform3 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"scale\":\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length >= 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar scaleX = array[ 0 ];\r\n\t\t\t\t\t\t\t\t\tvar scaleY = scaleX;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( array.length >= 2 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tscaleY = array[ 1 ];\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.scale( scaleX, scaleY );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"skewX\":\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\r\n\t\t\t\t\t\t\t\t\t\t1, Math.tan( array[ 0 ] * Math.PI / 180 ), 0,\r\n\t\t\t\t\t\t\t\t\t\t0, 1, 0,\r\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"skewY\":\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\r\n\t\t\t\t\t\t\t\t\t\t1, 0, 0,\r\n\t\t\t\t\t\t\t\t\t\tMath.tan( array[ 0 ] * Math.PI / 180 ), 1, 0,\r\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase \"matrix\":\r\n\r\n\t\t\t\t\t\t\t\tif ( array.length === 6 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentTransform.set(\r\n\t\t\t\t\t\t\t\t\t\tarray[ 0 ], array[ 2 ], array[ 4 ],\r\n\t\t\t\t\t\t\t\t\t\tarray[ 1 ], array[ 3 ], array[ 5 ],\r\n\t\t\t\t\t\t\t\t\t\t0, 0, 1\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttransform.premultiply( currentTransform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn transform;\r\n\r\n\t\t}\r\n\r\n\t\tfunction transformPath( path, m ) {\r\n\r\n\t\t\tfunction transfVec2( v2 ) {\r\n\r\n\t\t\t\ttempV3.set( v2.x, v2.y, 1 ).applyMatrix3( m );\r\n\r\n\t\t\t\tv2.set( tempV3.x, tempV3.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar isRotated = isTransformRotated( m );\r\n\r\n\t\t\tvar subPaths = path.subPaths;\r\n\r\n\t\t\tfor ( var i = 0, n = subPaths.length; i < n; i ++ ) {\r\n\r\n\t\t\t\tvar subPath = subPaths[ i ];\r\n\t\t\t\tvar curves = subPath.curves;\r\n\r\n\t\t\t\tfor ( var j = 0; j < curves.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar curve = curves[ j ];\r\n\r\n\t\t\t\t\tif ( curve.isLineCurve ) {\r\n\r\n\t\t\t\t\t\ttransfVec2( curve.v1 );\r\n\t\t\t\t\t\ttransfVec2( curve.v2 );\r\n\r\n\t\t\t\t\t} else if ( curve.isCubicBezierCurve ) {\r\n\r\n\t\t\t\t\t\ttransfVec2( curve.v0 );\r\n\t\t\t\t\t\ttransfVec2( curve.v1 );\r\n\t\t\t\t\t\ttransfVec2( curve.v2 );\r\n\t\t\t\t\t\ttransfVec2( curve.v3 );\r\n\r\n\t\t\t\t\t} else if ( curve.isQuadraticBezierCurve ) {\r\n\r\n\t\t\t\t\t\ttransfVec2( curve.v0 );\r\n\t\t\t\t\t\ttransfVec2( curve.v1 );\r\n\t\t\t\t\t\ttransfVec2( curve.v2 );\r\n\r\n\t\t\t\t\t} else if ( curve.isEllipseCurve ) {\r\n\r\n\t\t\t\t\t\tif ( isRotated ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( \"SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented.\" );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttempV2.set( curve.aX, curve.aY );\r\n\t\t\t\t\t\ttransfVec2( tempV2 );\r\n\t\t\t\t\t\tcurve.aX = tempV2.x;\r\n\t\t\t\t\t\tcurve.aY = tempV2.y;\r\n\r\n\t\t\t\t\t\tcurve.xRadius *= getTransformScaleX( m );\r\n\t\t\t\t\t\tcurve.yRadius *= getTransformScaleY( m );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isTransformRotated( m ) {\r\n\r\n\t\t\treturn m.elements[ 1 ] !== 0 || m.elements[ 3 ] !== 0;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTransformScaleX( m ) {\r\n\r\n\t\t\tvar te = m.elements;\r\n\t\t\treturn Math.sqrt( te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTransformScaleY( m ) {\r\n\r\n\t\t\tvar te = m.elements;\r\n\t\t\treturn Math.sqrt( te[ 3 ] * te[ 3 ] + te[ 4 ] * te[ 4 ] );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar paths = [];\r\n\t\tvar stylesheets = {};\r\n\r\n\t\tvar transformStack = [];\r\n\r\n\t\tvar tempTransform0 = new Matrix3();\r\n\t\tvar tempTransform1 = new Matrix3();\r\n\t\tvar tempTransform2 = new Matrix3();\r\n\t\tvar tempTransform3 = new Matrix3();\r\n\t\tvar tempV2 = new Vector2();\r\n\t\tvar tempV3 = new Vector3();\r\n\r\n\t\tvar currentTransform = new Matrix3();\r\n\r\n\t\tvar xml = new DOMParser().parseFromString( text, 'image/svg+xml' ); // application/xml\r\n\r\n\t\tparseNode( xml.documentElement, {\r\n\t\t\tfill: '#000',\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeLineJoin: 'miter',\r\n\t\t\tstrokeLineCap: 'butt',\r\n\t\t\tstrokeMiterLimit: 4\r\n\t\t} );\r\n\r\n\t\tvar data = { paths: paths, xml: xml.documentElement };\r\n\r\n\t\t// console.log( paths );\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nSVGLoader.getStrokeStyle = function ( width, color, lineJoin, lineCap, miterLimit ) {\r\n\r\n\t// Param width: Stroke width\r\n\t// Param color: As returned by THREE.Color.getStyle()\r\n\t// Param lineJoin: One of \"round\", \"bevel\", \"miter\" or \"miter-limit\"\r\n\t// Param lineCap: One of \"round\", \"square\" or \"butt\"\r\n\t// Param miterLimit: Maximum join length, in multiples of the \"width\" parameter (join is truncated if it exceeds that distance)\r\n\t// Returns style object\r\n\r\n\twidth = width !== undefined ? width : 1;\r\n\tcolor = color !== undefined ? color : '#000';\r\n\tlineJoin = lineJoin !== undefined ? lineJoin : 'miter';\r\n\tlineCap = lineCap !== undefined ? lineCap : 'butt';\r\n\tmiterLimit = miterLimit !== undefined ? miterLimit : 4;\r\n\r\n\treturn {\r\n\t\tstrokeColor: color,\r\n\t\tstrokeWidth: width,\r\n\t\tstrokeLineJoin: lineJoin,\r\n\t\tstrokeLineCap: lineCap,\r\n\t\tstrokeMiterLimit: miterLimit\r\n\t};\r\n\r\n};\r\n\r\nSVGLoader.pointsToStroke = function ( points, style, arcDivisions, minDistance ) {\r\n\r\n\t// Generates a stroke with some witdh around the given path.\r\n\t// The path can be open or closed (last point equals to first point)\r\n\t// Param points: Array of Vector2D (the path). Minimum 2 points.\r\n\t// Param style: Object with SVG properties as returned by SVGLoader.getStrokeStyle(), or SVGLoader.parse() in the path.userData.style object\r\n\t// Params arcDivisions: Arc divisions for round joins and endcaps. (Optional)\r\n\t// Param minDistance: Points closer to this distance will be merged. (Optional)\r\n\t// Returns BufferGeometry with stroke triangles (In plane z = 0). UV coordinates are generated ('u' along path. 'v' across it, from left to right)\r\n\r\n\tvar vertices = [];\r\n\tvar normals = [];\r\n\tvar uvs = [];\r\n\r\n\tif ( SVGLoader.pointsToStrokeWithBuffers( points, style, arcDivisions, minDistance, vertices, normals, uvs ) === 0 ) {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tvar geometry = new BufferGeometry();\r\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nSVGLoader.pointsToStrokeWithBuffers = function () {\r\n\r\n\tvar tempV2_1 = new Vector2();\r\n\tvar tempV2_2 = new Vector2();\r\n\tvar tempV2_3 = new Vector2();\r\n\tvar tempV2_4 = new Vector2();\r\n\tvar tempV2_5 = new Vector2();\r\n\tvar tempV2_6 = new Vector2();\r\n\tvar tempV2_7 = new Vector2();\r\n\tvar lastPointL = new Vector2();\r\n\tvar lastPointR = new Vector2();\r\n\tvar point0L = new Vector2();\r\n\tvar point0R = new Vector2();\r\n\tvar currentPointL = new Vector2();\r\n\tvar currentPointR = new Vector2();\r\n\tvar nextPointL = new Vector2();\r\n\tvar nextPointR = new Vector2();\r\n\tvar innerPoint = new Vector2();\r\n\tvar outerPoint = new Vector2();\r\n\r\n\treturn function ( points, style, arcDivisions, minDistance, vertices, normals, uvs, vertexOffset ) {\r\n\r\n\t\t// This function can be called to update existing arrays or buffers.\r\n\t\t// Accepts same parameters as pointsToStroke, plus the buffers and optional offset.\r\n\t\t// Param vertexOffset: Offset vertices to start writing in the buffers (3 elements/vertex for vertices and normals, and 2 elements/vertex for uvs)\r\n\t\t// Returns number of written vertices / normals / uvs pairs\r\n\t\t// if 'vertices' parameter is undefined no triangles will be generated, but the returned vertices count will still be valid (useful to preallocate the buffers)\r\n\t\t// 'normals' and 'uvs' buffers are optional\r\n\r\n\t\tarcDivisions = arcDivisions !== undefined ? arcDivisions : 12;\r\n\t\tminDistance = minDistance !== undefined ? minDistance : 0.001;\r\n\t\tvertexOffset = vertexOffset !== undefined ? vertexOffset : 0;\r\n\r\n\t\t// First ensure there are no duplicated points\r\n\t\tpoints = removeDuplicatedPoints( points );\r\n\r\n\t\tvar numPoints = points.length;\r\n\r\n\t\tif ( numPoints < 2 ) return 0;\r\n\r\n\t\tvar isClosed = points[ 0 ].equals( points[ numPoints - 1 ] );\r\n\r\n\t\tvar currentPoint;\r\n\t\tvar previousPoint = points[ 0 ];\r\n\t\tvar nextPoint;\r\n\r\n\t\tvar strokeWidth2 = style.strokeWidth / 2;\r\n\r\n\t\tvar deltaU = 1 / ( numPoints - 1 );\r\n\t\tvar u0 = 0;\r\n\r\n\t\tvar innerSideModified;\r\n\t\tvar joinIsOnLeftSide;\r\n\t\tvar isMiter;\r\n\t\tvar initialJoinIsOnLeftSide = false;\r\n\r\n\t\tvar numVertices = 0;\r\n\t\tvar currentCoordinate = vertexOffset * 3;\r\n\t\tvar currentCoordinateUV = vertexOffset * 2;\r\n\r\n\t\t// Get initial left and right stroke points\r\n\t\tgetNormal( points[ 0 ], points[ 1 ], tempV2_1 ).multiplyScalar( strokeWidth2 );\r\n\t\tlastPointL.copy( points[ 0 ] ).sub( tempV2_1 );\r\n\t\tlastPointR.copy( points[ 0 ] ).add( tempV2_1 );\r\n\t\tpoint0L.copy( lastPointL );\r\n\t\tpoint0R.copy( lastPointR );\r\n\r\n\t\tfor ( var iPoint = 1; iPoint < numPoints; iPoint ++ ) {\r\n\r\n\t\t\tcurrentPoint = points[ iPoint ];\r\n\r\n\t\t\t// Get next point\r\n\t\t\tif ( iPoint === numPoints - 1 ) {\r\n\r\n\t\t\t\tif ( isClosed ) {\r\n\r\n\t\t\t\t\t// Skip duplicated initial point\r\n\t\t\t\t\tnextPoint = points[ 1 ];\r\n\r\n\t\t\t\t} else nextPoint = undefined;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnextPoint = points[ iPoint + 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Normal of previous segment in tempV2_1\r\n\t\t\tvar normal1 = tempV2_1;\r\n\t\t\tgetNormal( previousPoint, currentPoint, normal1 );\r\n\r\n\t\t\ttempV2_3.copy( normal1 ).multiplyScalar( strokeWidth2 );\r\n\t\t\tcurrentPointL.copy( currentPoint ).sub( tempV2_3 );\r\n\t\t\tcurrentPointR.copy( currentPoint ).add( tempV2_3 );\r\n\r\n\t\t\tvar u1 = u0 + deltaU;\r\n\r\n\t\t\tinnerSideModified = false;\r\n\r\n\t\t\tif ( nextPoint !== undefined ) {\r\n\r\n\t\t\t\t// Normal of next segment in tempV2_2\r\n\t\t\t\tgetNormal( currentPoint, nextPoint, tempV2_2 );\r\n\r\n\t\t\t\ttempV2_3.copy( tempV2_2 ).multiplyScalar( strokeWidth2 );\r\n\t\t\t\tnextPointL.copy( currentPoint ).sub( tempV2_3 );\r\n\t\t\t\tnextPointR.copy( currentPoint ).add( tempV2_3 );\r\n\r\n\t\t\t\tjoinIsOnLeftSide = true;\r\n\t\t\t\ttempV2_3.subVectors( nextPoint, previousPoint );\r\n\t\t\t\tif ( normal1.dot( tempV2_3 ) < 0 ) {\r\n\r\n\t\t\t\t\tjoinIsOnLeftSide = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( iPoint === 1 ) initialJoinIsOnLeftSide = joinIsOnLeftSide;\r\n\r\n\t\t\t\ttempV2_3.subVectors( nextPoint, currentPoint );\r\n\t\t\t\ttempV2_3.normalize();\r\n\t\t\t\tvar dot = Math.abs( normal1.dot( tempV2_3 ) );\r\n\r\n\t\t\t\t// If path is straight, don't create join\r\n\t\t\t\tif ( dot !== 0 ) {\r\n\r\n\t\t\t\t\t// Compute inner and outer segment intersections\r\n\t\t\t\t\tvar miterSide = strokeWidth2 / dot;\r\n\t\t\t\t\ttempV2_3.multiplyScalar( - miterSide );\r\n\t\t\t\t\ttempV2_4.subVectors( currentPoint, previousPoint );\r\n\t\t\t\t\ttempV2_5.copy( tempV2_4 ).setLength( miterSide ).add( tempV2_3 );\r\n\t\t\t\t\tinnerPoint.copy( tempV2_5 ).negate();\r\n\t\t\t\t\tvar miterLength2 = tempV2_5.length();\r\n\t\t\t\t\tvar segmentLengthPrev = tempV2_4.length();\r\n\t\t\t\t\ttempV2_4.divideScalar( segmentLengthPrev );\r\n\t\t\t\t\ttempV2_6.subVectors( nextPoint, currentPoint );\r\n\t\t\t\t\tvar segmentLengthNext = tempV2_6.length();\r\n\t\t\t\t\ttempV2_6.divideScalar( segmentLengthNext );\r\n\t\t\t\t\t// Check that previous and next segments doesn't overlap with the innerPoint of intersection\r\n\t\t\t\t\tif ( tempV2_4.dot( innerPoint ) < segmentLengthPrev && tempV2_6.dot( innerPoint ) < segmentLengthNext ) {\r\n\r\n\t\t\t\t\t\tinnerSideModified = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\touterPoint.copy( tempV2_5 ).add( currentPoint );\r\n\t\t\t\t\tinnerPoint.add( currentPoint );\r\n\r\n\t\t\t\t\tisMiter = false;\r\n\r\n\t\t\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\tnextPointR.copy( innerPoint );\r\n\t\t\t\t\t\t\tcurrentPointR.copy( innerPoint );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tnextPointL.copy( innerPoint );\r\n\t\t\t\t\t\t\tcurrentPointL.copy( innerPoint );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// The segment triangles are generated here if there was overlapping\r\n\r\n\t\t\t\t\t\tmakeSegmentTriangles();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tswitch ( style.strokeLineJoin ) {\r\n\r\n\t\t\t\t\t\tcase 'bevel':\r\n\r\n\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'round':\r\n\r\n\t\t\t\t\t\t\t// Segment triangles\r\n\r\n\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\r\n\r\n\t\t\t\t\t\t\t// Join triangles\r\n\r\n\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, currentPointL, nextPointL, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tmakeCircularSector( currentPoint, nextPointR, currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'miter':\r\n\t\t\t\t\t\tcase 'miter-clip':\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tvar miterFraction = ( strokeWidth2 * style.strokeMiterLimit ) / miterLength2;\r\n\r\n\t\t\t\t\t\t\tif ( miterFraction < 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// The join miter length exceeds the miter limit\r\n\r\n\t\t\t\t\t\t\t\tif ( style.strokeLineJoin !== 'miter-clip' ) {\r\n\r\n\t\t\t\t\t\t\t\t\tmakeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u1 );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t// Segment triangles\r\n\r\n\t\t\t\t\t\t\t\t\tcreateSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified );\r\n\r\n\t\t\t\t\t\t\t\t\t// Miter-clip join triangles\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointL ).multiplyScalar( miterFraction ).add( currentPointL );\r\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointL ).multiplyScalar( miterFraction ).add( nextPointL );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\ttempV2_6.subVectors( outerPoint, currentPointR ).multiplyScalar( miterFraction ).add( currentPointR );\r\n\t\t\t\t\t\t\t\t\t\ttempV2_7.subVectors( outerPoint, nextPointR ).multiplyScalar( miterFraction ).add( nextPointR );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_6, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( tempV2_7, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// Miter join segment triangles\r\n\r\n\t\t\t\t\t\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\t\t\t\t\t\t// Optimized segment + join triangles\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tnextPointL.copy( outerPoint );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tnextPointR.copy( outerPoint );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t// Add extra miter join triangles\r\n\r\n\t\t\t\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 0 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointL, u1, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\t\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( outerPoint, u1, 1 );\r\n\t\t\t\t\t\t\t\t\t\taddVertex( nextPointR, u1, 1 );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tisMiter = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// The segment triangles are generated here when two consecutive points are collinear\r\n\r\n\t\t\t\t\tmakeSegmentTriangles();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// The segment triangles are generated here if it is the ending segment\r\n\r\n\t\t\t\tmakeSegmentTriangles();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! isClosed && iPoint === numPoints - 1 ) {\r\n\r\n\t\t\t\t// Start line endcap\r\n\t\t\t\taddCapGeometry( points[ 0 ], point0L, point0R, joinIsOnLeftSide, true, u0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Increment loop variables\r\n\r\n\t\t\tu0 = u1;\r\n\r\n\t\t\tpreviousPoint = currentPoint;\r\n\r\n\t\t\tlastPointL.copy( nextPointL );\r\n\t\t\tlastPointR.copy( nextPointR );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! isClosed ) {\r\n\r\n\t\t\t// Ending line endcap\r\n\t\t\taddCapGeometry( currentPoint, currentPointL, currentPointR, joinIsOnLeftSide, false, u1 );\r\n\r\n\t\t} else if ( innerSideModified && vertices ) {\r\n\r\n\t\t\t// Modify path first segment vertices to adjust to the segments inner and outer intersections\r\n\r\n\t\t\tvar lastOuter = outerPoint;\r\n\t\t\tvar lastInner = innerPoint;\r\n\r\n\t\t\tif ( initialJoinIsOnLeftSide !== joinIsOnLeftSide ) {\r\n\r\n\t\t\t\tlastOuter = innerPoint;\r\n\t\t\t\tlastInner = outerPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\tif ( isMiter || initialJoinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\tlastInner.toArray( vertices, 0 * 3 );\r\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\r\n\r\n\t\t\t\t\tif ( isMiter ) {\r\n\r\n\t\t\t\t\t\tlastOuter.toArray( vertices, 1 * 3 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( isMiter || ! initialJoinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\tlastInner.toArray( vertices, 1 * 3 );\r\n\t\t\t\t\tlastInner.toArray( vertices, 3 * 3 );\r\n\r\n\t\t\t\t\tif ( isMiter ) {\r\n\r\n\t\t\t\t\t\tlastOuter.toArray( vertices, 0 * 3 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn numVertices;\r\n\r\n\t\t// -- End of algorithm\r\n\r\n\t\t// -- Functions\r\n\r\n\t\tfunction getNormal( p1, p2, result ) {\r\n\r\n\t\t\tresult.subVectors( p2, p1 );\r\n\t\t\treturn result.set( - result.y, result.x ).normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfunction addVertex( position, u, v ) {\r\n\r\n\t\t\tif ( vertices ) {\r\n\r\n\t\t\t\tvertices[ currentCoordinate ] = position.x;\r\n\t\t\t\tvertices[ currentCoordinate + 1 ] = position.y;\r\n\t\t\t\tvertices[ currentCoordinate + 2 ] = 0;\r\n\r\n\t\t\t\tif ( normals ) {\r\n\r\n\t\t\t\t\tnormals[ currentCoordinate ] = 0;\r\n\t\t\t\t\tnormals[ currentCoordinate + 1 ] = 0;\r\n\t\t\t\t\tnormals[ currentCoordinate + 2 ] = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentCoordinate += 3;\r\n\r\n\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\tuvs[ currentCoordinateUV ] = u;\r\n\t\t\t\t\tuvs[ currentCoordinateUV + 1 ] = v;\r\n\r\n\t\t\t\t\tcurrentCoordinateUV += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnumVertices += 3;\r\n\r\n\t\t}\r\n\r\n\t\tfunction makeCircularSector( center, p1, p2, u, v ) {\r\n\r\n\t\t\t// param p1, p2: Points in the circle arc.\r\n\t\t\t// p1 and p2 are in clockwise direction.\r\n\r\n\t\t\ttempV2_1.copy( p1 ).sub( center ).normalize();\r\n\t\t\ttempV2_2.copy( p2 ).sub( center ).normalize();\r\n\r\n\t\t\tvar angle = Math.PI;\r\n\t\t\tvar dot = tempV2_1.dot( tempV2_2 );\r\n\t\t\tif ( Math.abs( dot ) < 1 ) angle = Math.abs( Math.acos( dot ) );\r\n\r\n\t\t\tangle /= arcDivisions;\r\n\r\n\t\t\ttempV2_3.copy( p1 );\r\n\r\n\t\t\tfor ( var i = 0, il = arcDivisions - 1; i < il; i ++ ) {\r\n\r\n\t\t\t\ttempV2_4.copy( tempV2_3 ).rotateAround( center, angle );\r\n\r\n\t\t\t\taddVertex( tempV2_3, u, v );\r\n\t\t\t\taddVertex( tempV2_4, u, v );\r\n\t\t\t\taddVertex( center, u, 0.5 );\r\n\r\n\t\t\t\ttempV2_3.copy( tempV2_4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\taddVertex( tempV2_4, u, v );\r\n\t\t\taddVertex( p2, u, v );\r\n\t\t\taddVertex( center, u, 0.5 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction makeSegmentTriangles() {\r\n\r\n\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\taddVertex( currentPointL, u1, 0 );\r\n\r\n\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\taddVertex( currentPointL, u1, 1 );\r\n\t\t\taddVertex( currentPointR, u1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction makeSegmentWithBevelJoin( joinIsOnLeftSide, innerSideModified, u ) {\r\n\r\n\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\t// Optimized segment + bevel triangles\r\n\r\n\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t// Path segments triangles\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\t// Bevel join triangle\r\n\r\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\r\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Path segments triangles\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\t// Bevel join triangle\r\n\r\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\r\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u, 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Bevel join triangle. The segment triangles are done in the main loop\r\n\r\n\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\taddVertex( currentPointL, u, 0 );\r\n\t\t\t\t\taddVertex( nextPointL, u, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\taddVertex( currentPointR, u, 1 );\r\n\t\t\t\t\taddVertex( nextPointR, u, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u, 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction createSegmentTrianglesWithMiddleSection( joinIsOnLeftSide, innerSideModified ) {\r\n\r\n\t\t\tif ( innerSideModified ) {\r\n\r\n\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( currentPointL, u1, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( currentPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\taddVertex( nextPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 1 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\taddVertex( lastPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( lastPointL, u0, 0 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( currentPointR, u1, 1 );\r\n\r\n\t\t\t\t\taddVertex( currentPointR, u0, 1 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\r\n\t\t\t\t\taddVertex( currentPoint, u1, 0.5 );\r\n\t\t\t\t\taddVertex( innerPoint, u1, 0 );\r\n\t\t\t\t\taddVertex( nextPointR, u0, 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction addCapGeometry( center, p1, p2, joinIsOnLeftSide, start, u ) {\r\n\r\n\t\t\t// param center: End point of the path\r\n\t\t\t// param p1, p2: Left and right cap points\r\n\r\n\t\t\tswitch ( style.strokeLineCap ) {\r\n\r\n\t\t\t\tcase 'round':\r\n\r\n\t\t\t\t\tif ( start ) {\r\n\r\n\t\t\t\t\t\tmakeCircularSector( center, p2, p1, u, 0.5 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmakeCircularSector( center, p1, p2, u, 0.5 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'square':\r\n\r\n\t\t\t\t\tif ( start ) {\r\n\r\n\t\t\t\t\t\ttempV2_1.subVectors( p1, center );\r\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\r\n\r\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\r\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\r\n\r\n\t\t\t\t\t\t// Modify already existing vertices\r\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 3 * 3 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, 3 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, 0 * 3 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttempV2_1.subVectors( p2, center );\r\n\t\t\t\t\t\ttempV2_2.set( tempV2_1.y, - tempV2_1.x );\r\n\r\n\t\t\t\t\t\ttempV2_3.addVectors( tempV2_1, tempV2_2 ).add( center );\r\n\t\t\t\t\t\ttempV2_4.subVectors( tempV2_2, tempV2_1 ).add( center );\r\n\r\n\t\t\t\t\t\tvar vl = vertices.length;\r\n\r\n\t\t\t\t\t\t// Modify already existing vertices\r\n\t\t\t\t\t\tif ( joinIsOnLeftSide ) {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 2 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttempV2_3.toArray( vertices, vl - 2 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 1 * 3 );\r\n\t\t\t\t\t\t\ttempV2_4.toArray( vertices, vl - 4 * 3 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'butt':\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t// Nothing to do here\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction removeDuplicatedPoints( points ) {\r\n\r\n\t\t\t// Creates a new array if necessary with duplicated points removed.\r\n\t\t\t// This does not remove duplicated initial and ending points of a closed path.\r\n\r\n\t\t\tvar dupPoints = false;\r\n\t\t\tfor ( var i = 1, n = points.length - 1; i < n; i ++ ) {\r\n\r\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) < minDistance ) {\r\n\r\n\t\t\t\t\tdupPoints = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! dupPoints ) return points;\r\n\r\n\t\t\tvar newPoints = [];\r\n\t\t\tnewPoints.push( points[ 0 ] );\r\n\r\n\t\t\tfor ( var i = 1, n = points.length - 1; i < n; i ++ ) {\r\n\r\n\t\t\t\tif ( points[ i ].distanceTo( points[ i + 1 ] ) >= minDistance ) {\r\n\r\n\t\t\t\t\tnewPoints.push( points[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewPoints.push( points[ points.length - 1 ] );\r\n\r\n\t\t\treturn newPoints;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nexport { SVGLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/SVGLoader.js","<template>\r\n    <div class=\"webglGeometryTextStroke-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://this.$threejs.org\" target=\"_blank\" rel=\"noopener\">this.$three.js</a> webgl - simple text from json fonts\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { SVGLoader } from '@/components/jsm/loaders/SVGLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: '',\r\n            scene: '',\r\n            renderer: '',\r\n            loader: '',\r\n            geometry: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, (this.$webglInnerWidth) / window.innerHeight, 1, 10000)\r\n            this.camera.position.set(0, - 400, 600)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xf0f0f0)\r\n            this.loader = new this.$THREE.FontLoader()\r\n            var that = this\r\n            this.loader.load('static/fonts/helvetiker_regular.typeface.json', function (font) {\r\n                var color = new that.$THREE.Color(0x006699)\r\n                var matDark = new that.$THREE.MeshBasicMaterial({\r\n                    color: color,\r\n                    side: that.$THREE.DoubleSide\r\n                })\r\n                var matLite = new that.$THREE.MeshBasicMaterial({\r\n                    color: color,\r\n                    transparent: true,\r\n                    opacity: 0.4,\r\n                    side: that.$THREE.DoubleSide\r\n                })\r\n                var message = \"   this.$Three.js\\nStroke text.\"\r\n                var shapes = font.generateShapes(message, 100)\r\n                that.geometry = new that.$THREE.ShapeBufferGeometry(shapes)\r\n                that.geometry.computeBoundingBox()\r\n                var xMid = - 0.5 * (that.geometry.boundingBox.max.x - that.geometry.boundingBox.min.x)\r\n                that.geometry.translate(xMid, 0, 0)\r\n                // make shape ( N.B. edge view not visible )\r\n                var text = new that.$THREE.Mesh(that.geometry, matLite)\r\n                text.position.z =- 150\r\n                that.scene.add(text)\r\n                // make line shape ( N.B. edge view remains visible )\r\n                var holeShapes = []\r\n                for (var i = 0; i < shapes.length; i ++) {\r\n                    var shape = shapes[i]\r\n                    if (shape.holes && shape.holes.length > 0) {\r\n                        for (var j = 0; j < shape.holes.length; j ++) {\r\n                            var hole = shape.holes[j]\r\n                            holeShapes.push(hole)\r\n                        }\r\n                    }\r\n                }\r\n                shapes.push.apply(shapes, holeShapes)\r\n                var style = SVGLoader.getStrokeStyle(5, color.getStyle())\r\n                var strokeText = new that.$THREE.Group()\r\n                for (var i = 0; i < shapes.length; i ++) {\r\n                    var shape = shapes[i]\r\n                    var points = shape.getPoints()\r\n                    var geometry = SVGLoader.pointsToStroke(points, style)\r\n                    geometry.translate(xMid, 0, 0)\r\n                    var strokeMesh = new that.$THREE.Mesh(geometry, matDark)\r\n                    strokeText.add(strokeMesh)\r\n                }\r\n                that.scene.add(strokeText)\r\n            }) //end load function\r\n            this.renderer = new this.$THREE.WebGLRenderer({antialias: true})\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglGeometryTextStroke-container')[0].appendChild(this.renderer.domElement)\r\n            // document.body.appendChild(this.renderer.domElement)\r\n            const controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.target.set( 0, 0, 0 )\r\n            controls.update()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n\t\t\tthis.render()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometryTextStroke-container {\r\n    background-color: #f0f0f0;\r\n\tcolor: #444;\r\n}\r\n#info {\r\n    color: #000;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometryTextStroke.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometryTextStroke-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://this.$threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"this.$three.js\")]),_vm._v(\" webgl - simple text from json fonts\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3114493a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometryTextStroke.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3114493a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometryTextStroke.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryTextStroke.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryTextStroke.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3114493a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometryTextStroke.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3114493a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometryTextStroke.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}