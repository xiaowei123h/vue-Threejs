{"version":3,"sources":["webpack:///./src/components/jsm/controls/TransformControls.js","webpack:///src/views/geometries/webglGeometrySplineEditor.vue","webpack:///./src/views/geometries/webglGeometrySplineEditor.vue?f148","webpack:///./src/views/geometries/webglGeometrySplineEditor.vue","webpack:///./src/utils/geometrySplineEditor.js"],"names":["TransformControls","camera","domElement","undefined","console","warn","document","Object3D","call","this","visible","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","type","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","raycaster","Raycaster","intersectObjectWithRay","object","includeInvisible","allIntersections","intersectObject","i","length","_tempVector","Vector3","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","getPointer","event","ownerDocument","pointerLockElement","x","y","button","pointer","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","onPointerHover","enabled","pointerType","pointerHover","onPointerDown","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","onPointerUp","removeEventListener","pointerUp","dispose","traverse","child","geometry","material","attach","detach","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","prototype","dragging","setFromCamera","intersect","picker","name","planeIntersect","space","snap","rotationSnap","rotation","Math","round","z","position","quaternion","scale","point","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","assign","create","constructor","isTransformControls","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","transparent","side","DoubleSide","fog","toneMapped","gizmoLineMaterial","LineBasicMaterial","linewidth","matInvisible","clone","opacity","matHelper","matRed","color","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderBufferGeometry","scaleHandleGeometry","BoxBufferGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","CircleGeometry","radius","arc","vertices","push","cos","PI","sin","gizmoTranslate","Mesh","Line","XYZ","OctahedronBufferGeometry","XY","PlaneBufferGeometry","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusBufferGeometry","SphereBufferGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","tempVector","tempEuler","Euler","alignVector","zeroVector","lookAtMatrix","Matrix4","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","concat","children","factor","handle","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","lerp","Color","split","some","a","setFromEuler","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane","webglGeometrySplineEditor","data","container","stats","scene","renderer","splineHelperObjects","splinePointsLength","positions","onUpPosition","onDownPosition","transformControl","ARC_SEGMENTS","splines","params","gui","mounted","$THREE","Vector2","uniform","tension","centripetal","chordal","addPoint","removePoint","exportSpline","init","animate","beforeDestroy","hide","methods","_this","getElementById","Scene","background","PerspectiveCamera","$webglInnerWidth","window","innerHeight","AmbientLight","light","SpotLight","angle","castShadow","shadow","near","far","bias","mapSize","planeGeometry","rotateX","planeMaterial","ShadowMaterial","plane","receiveShadow","GridHelper","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","shadowMap","appendChild","$Stats","dom","dat_gui_module","step","onChange","updateSplineOutline","open","controls","OrbitControls","damping","render","TransformControls_TransformControls","addSplineObject","BufferAttribute","Float32Array","curve","CatmullRomCurve3","k","curveType","mesh","spline","load","onWindowResize","$onWindowResize","MeshLambertMaterial","random","pop","remove","attributes","t","getPoint","setXYZ","needsUpdate","strplace","p","format","log","join","code","prompt","new_positions","requestAnimationFrame","innerWidth","intersects","intersectObjects","geometries_webglGeometrySplineEditor","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","String","str","myArguments","replace"],"mappings":"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","file":"static/js/5.7cbfe20fd41f0e0e2581.js","sourcesContent":["import {\r\n\tBoxBufferGeometry,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tCylinderBufferGeometry,\r\n\tDoubleSide,\r\n\tEuler,\r\n\tFloat32BufferAttribute,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tObject3D,\r\n\tOctahedronBufferGeometry,\r\n\tPlaneBufferGeometry,\r\n\tQuaternion,\r\n\tRaycaster,\r\n\tSphereBufferGeometry,\r\n\tTorusBufferGeometry,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar TransformControls = function ( camera, domElement ) {\r\n\r\n\tif ( domElement === undefined ) {\r\n\r\n\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\r\n\t\tdomElement = document;\r\n\r\n\t}\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.visible = false;\r\n\tthis.domElement = domElement;\r\n\r\n\tvar _gizmo = new TransformControlsGizmo();\r\n\tthis.add( _gizmo );\r\n\r\n\tvar _plane = new TransformControlsPlane();\r\n\tthis.add( _plane );\r\n\r\n\tvar scope = this;\r\n\r\n\t// Define properties with getters/setter\r\n\t// Setting the defined property will automatically trigger change event\r\n\t// Defined properties are passed down to gizmo and plane\r\n\r\n\tdefineProperty( \"camera\", camera );\r\n\tdefineProperty( \"object\", undefined );\r\n\tdefineProperty( \"enabled\", true );\r\n\tdefineProperty( \"axis\", null );\r\n\tdefineProperty( \"mode\", \"translate\" );\r\n\tdefineProperty( \"translationSnap\", null );\r\n\tdefineProperty( \"rotationSnap\", null );\r\n\tdefineProperty( \"scaleSnap\", null );\r\n\tdefineProperty( \"space\", \"world\" );\r\n\tdefineProperty( \"size\", 1 );\r\n\tdefineProperty( \"dragging\", false );\r\n\tdefineProperty( \"showX\", true );\r\n\tdefineProperty( \"showY\", true );\r\n\tdefineProperty( \"showZ\", true );\r\n\r\n\tvar changeEvent = { type: \"change\" };\r\n\tvar mouseDownEvent = { type: \"mouseDown\" };\r\n\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\r\n\tvar objectChangeEvent = { type: \"objectChange\" };\r\n\r\n\t// Reusable utility variables\r\n\r\n\tvar raycaster = new Raycaster();\r\n\r\n\tfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\r\n\r\n\t\tvar allIntersections = raycaster.intersectObject( object, true );\r\n\r\n\t\tfor ( var i = 0; i < allIntersections.length; i ++ ) {\r\n\r\n\t\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\r\n\r\n\t\t\t\treturn allIntersections[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tvar _tempVector = new Vector3();\r\n\tvar _tempVector2 = new Vector3();\r\n\tvar _tempQuaternion = new Quaternion();\r\n\tvar _unit = {\r\n\t\tX: new Vector3( 1, 0, 0 ),\r\n\t\tY: new Vector3( 0, 1, 0 ),\r\n\t\tZ: new Vector3( 0, 0, 1 )\r\n\t};\r\n\r\n\tvar pointStart = new Vector3();\r\n\tvar pointEnd = new Vector3();\r\n\tvar offset = new Vector3();\r\n\tvar rotationAxis = new Vector3();\r\n\tvar startNorm = new Vector3();\r\n\tvar endNorm = new Vector3();\r\n\tvar rotationAngle = 0;\r\n\r\n\tvar cameraPosition = new Vector3();\r\n\tvar cameraQuaternion = new Quaternion();\r\n\tvar cameraScale = new Vector3();\r\n\r\n\tvar parentPosition = new Vector3();\r\n\tvar parentQuaternion = new Quaternion();\r\n\tvar parentQuaternionInv = new Quaternion();\r\n\tvar parentScale = new Vector3();\r\n\r\n\tvar worldPositionStart = new Vector3();\r\n\tvar worldQuaternionStart = new Quaternion();\r\n\tvar worldScaleStart = new Vector3();\r\n\r\n\tvar worldPosition = new Vector3();\r\n\tvar worldQuaternion = new Quaternion();\r\n\tvar worldQuaternionInv = new Quaternion();\r\n\tvar worldScale = new Vector3();\r\n\r\n\tvar eye = new Vector3();\r\n\r\n\tvar positionStart = new Vector3();\r\n\tvar quaternionStart = new Quaternion();\r\n\tvar scaleStart = new Vector3();\r\n\r\n\t// TODO: remove properties unused in plane and gizmo\r\n\r\n\tdefineProperty( \"worldPosition\", worldPosition );\r\n\tdefineProperty( \"worldPositionStart\", worldPositionStart );\r\n\tdefineProperty( \"worldQuaternion\", worldQuaternion );\r\n\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\r\n\tdefineProperty( \"cameraPosition\", cameraPosition );\r\n\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\r\n\tdefineProperty( \"pointStart\", pointStart );\r\n\tdefineProperty( \"pointEnd\", pointEnd );\r\n\tdefineProperty( \"rotationAxis\", rotationAxis );\r\n\tdefineProperty( \"rotationAngle\", rotationAngle );\r\n\tdefineProperty( \"eye\", eye );\r\n\r\n\t{\r\n\r\n\t\tdomElement.addEventListener( \"pointerdown\", onPointerDown, false );\r\n\t\tdomElement.addEventListener( \"pointermove\", onPointerHover, false );\r\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointerup\", onPointerUp, false );\r\n\r\n\t}\r\n\r\n\tthis.dispose = function () {\r\n\r\n\t\tdomElement.removeEventListener( \"pointerdown\", onPointerDown );\r\n\t\tdomElement.removeEventListener( \"pointermove\", onPointerHover );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointerup\", onPointerUp );\r\n\r\n\t\tthis.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.geometry ) child.geometry.dispose();\r\n\t\t\tif ( child.material ) child.material.dispose();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t// Set current object\r\n\tthis.attach = function ( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.visible = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t// Detatch from object\r\n\tthis.detach = function () {\r\n\r\n\t\tthis.object = undefined;\r\n\t\tthis.visible = false;\r\n\t\tthis.axis = null;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t// Defined getter, setter and store for a property\r\n\tfunction defineProperty( propName, defaultValue ) {\r\n\r\n\t\tvar propValue = defaultValue;\r\n\r\n\t\tObject.defineProperty( scope, propName, {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tif ( propValue !== value ) {\r\n\r\n\t\t\t\t\tpropValue = value;\r\n\t\t\t\t\t_plane[ propName ] = value;\r\n\t\t\t\t\t_gizmo[ propName ] = value;\r\n\r\n\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\r\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tscope[ propName ] = defaultValue;\r\n\t\t_plane[ propName ] = defaultValue;\r\n\t\t_gizmo[ propName ] = defaultValue;\r\n\r\n\t}\r\n\r\n\t// updateMatrixWorld  updates key transformation variables\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\tthis.object.updateMatrixWorld();\r\n\r\n\t\t\tif ( this.object.parent === null ) {\r\n\r\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\r\n\r\n\t\t\tparentQuaternionInv.copy( parentQuaternion ).invert();\r\n\t\t\tworldQuaternionInv.copy( worldQuaternion ).invert();\r\n\r\n\t\t}\r\n\r\n\t\tthis.camera.updateMatrixWorld();\r\n\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\r\n\r\n\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n\tthis.pointerHover = function ( pointer ) {\r\n\r\n\t\tif ( this.object === undefined || this.dragging === true ) return;\r\n\r\n\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\tvar intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\r\n\r\n\t\tif ( intersect ) {\r\n\r\n\t\t\tthis.axis = intersect.object.name;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.axis = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.pointerDown = function ( pointer ) {\r\n\r\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\r\n\r\n\t\tif ( this.axis !== null ) {\r\n\r\n\t\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\r\n\r\n\t\t\tif ( planeIntersect ) {\r\n\r\n\t\t\t\tvar space = this.space;\r\n\r\n\t\t\t\tif ( this.mode === 'scale' ) {\r\n\r\n\t\t\t\t\tspace = 'local';\r\n\r\n\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\r\n\r\n\t\t\t\t\tspace = 'world';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\r\n\r\n\t\t\t\t\tvar snap = this.rotationSnap;\r\n\r\n\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\r\n\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\r\n\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.object.updateMatrixWorld();\r\n\t\t\t\tthis.object.parent.updateMatrixWorld();\r\n\r\n\t\t\t\tpositionStart.copy( this.object.position );\r\n\t\t\t\tquaternionStart.copy( this.object.quaternion );\r\n\t\t\t\tscaleStart.copy( this.object.scale );\r\n\r\n\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\r\n\r\n\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dragging = true;\r\n\t\t\tmouseDownEvent.mode = this.mode;\r\n\t\t\tthis.dispatchEvent( mouseDownEvent );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.pointerMove = function ( pointer ) {\r\n\r\n\t\tvar axis = this.axis;\r\n\t\tvar mode = this.mode;\r\n\t\tvar object = this.object;\r\n\t\tvar space = this.space;\r\n\r\n\t\tif ( mode === 'scale' ) {\r\n\r\n\t\t\tspace = 'local';\r\n\r\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\r\n\r\n\t\t\tspace = 'world';\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\r\n\r\n\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\r\n\r\n\t\tif ( ! planeIntersect ) return;\r\n\r\n\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\r\n\r\n\t\tif ( mode === 'translate' ) {\r\n\r\n\t\t\t// Apply translate\r\n\r\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\r\n\r\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\r\n\r\n\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\r\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\r\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\r\n\r\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\r\n\r\n\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.position.copy( offset ).add( positionStart );\r\n\r\n\t\t\t// Apply translation snap\r\n\r\n\t\t\tif ( this.translationSnap ) {\r\n\r\n\t\t\t\tif ( space === 'local' ) {\r\n\r\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).invert() );\r\n\r\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( space === 'world' ) {\r\n\r\n\t\t\t\t\tif ( object.parent ) {\r\n\r\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( object.parent ) {\r\n\r\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( mode === 'scale' ) {\r\n\r\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\r\n\r\n\t\t\t\tvar d = pointEnd.length() / pointStart.length();\r\n\r\n\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\r\n\r\n\t\t\t\t_tempVector2.set( d, d, d );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_tempVector.copy( pointStart );\r\n\t\t\t\t_tempVector2.copy( pointEnd );\r\n\r\n\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\r\n\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\r\n\r\n\t\t\t\t_tempVector2.divide( _tempVector );\r\n\r\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.x = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.y = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.z = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply scale\r\n\r\n\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\r\n\r\n\t\t\tif ( this.scaleSnap ) {\r\n\r\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( mode === 'rotate' ) {\r\n\r\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\r\n\r\n\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\r\n\r\n\t\t\tif ( axis === 'E' ) {\r\n\r\n\t\t\t\trotationAxis.copy( eye );\r\n\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\r\n\r\n\t\t\t\tstartNorm.copy( pointStart ).normalize();\r\n\t\t\t\tendNorm.copy( pointEnd ).normalize();\r\n\r\n\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\r\n\r\n\t\t\t} else if ( axis === 'XYZE' ) {\r\n\r\n\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\r\n\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\r\n\r\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\r\n\r\n\t\t\t\trotationAxis.copy( _unit[ axis ] );\r\n\r\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\r\n\r\n\t\t\t\tif ( space === 'local' ) {\r\n\r\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply rotation snap\r\n\r\n\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\r\n\r\n\t\t\tthis.rotationAngle = rotationAngle;\r\n\r\n\t\t\t// Apply rotate\r\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\r\n\r\n\t\t\t\tobject.quaternion.copy( quaternionStart );\r\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\r\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\r\n\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent( changeEvent );\r\n\t\tthis.dispatchEvent( objectChangeEvent );\r\n\r\n\t};\r\n\r\n\tthis.pointerUp = function ( pointer ) {\r\n\r\n\t\tif ( pointer.button !== 0 ) return;\r\n\r\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\r\n\r\n\t\t\tmouseUpEvent.mode = this.mode;\r\n\t\t\tthis.dispatchEvent( mouseUpEvent );\r\n\r\n\t\t}\r\n\r\n\t\tthis.dragging = false;\r\n\t\tthis.axis = null;\r\n\r\n\t};\r\n\r\n\t// normalize mouse / touch pointer and remap {x,y} to view space.\r\n\r\n\tfunction getPointer( event ) {\r\n\r\n\t\tif ( scope.domElement.ownerDocument.pointerLockElement ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\tbutton: event.button\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\r\n\r\n\t\t\tvar rect = domElement.getBoundingClientRect();\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\r\n\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\r\n\t\t\t\tbutton: event.button\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// mouse / touch event handlers\r\n\r\n\tfunction onPointerHover( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tscope.pointerHover( getPointer( event ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerDown( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointermove\", onPointerMove, false );\r\n\r\n\t\tscope.pointerHover( getPointer( event ) );\r\n\t\tscope.pointerDown( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\tfunction onPointerMove( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.pointerMove( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\tfunction onPointerUp( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.domElement.style.touchAction = '';\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove, false );\r\n\r\n\t\tscope.pointerUp( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\t// TODO: deprecate\r\n\r\n\tthis.getMode = function () {\r\n\r\n\t\treturn scope.mode;\r\n\r\n\t};\r\n\r\n\tthis.setMode = function ( mode ) {\r\n\r\n\t\tscope.mode = mode;\r\n\r\n\t};\r\n\r\n\tthis.setTranslationSnap = function ( translationSnap ) {\r\n\r\n\t\tscope.translationSnap = translationSnap;\r\n\r\n\t};\r\n\r\n\tthis.setRotationSnap = function ( rotationSnap ) {\r\n\r\n\t\tscope.rotationSnap = rotationSnap;\r\n\r\n\t};\r\n\r\n\tthis.setScaleSnap = function ( scaleSnap ) {\r\n\r\n\t\tscope.scaleSnap = scaleSnap;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( size ) {\r\n\r\n\t\tscope.size = size;\r\n\r\n\t};\r\n\r\n\tthis.setSpace = function ( space ) {\r\n\r\n\t\tscope.space = space;\r\n\r\n\t};\r\n\r\n\tthis.update = function () {\r\n\r\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\tconstructor: TransformControls,\r\n\r\n\tisTransformControls: true\r\n\r\n} );\r\n\r\n\r\nvar TransformControlsGizmo = function () {\r\n\r\n\t'use strict';\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.type = 'TransformControlsGizmo';\r\n\r\n\t// shared materials\r\n\r\n\tvar gizmoMaterial = new MeshBasicMaterial( {\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true,\r\n\t\tside: DoubleSide,\r\n\t\tfog: false,\r\n\t\ttoneMapped: false\r\n\t} );\r\n\r\n\tvar gizmoLineMaterial = new LineBasicMaterial( {\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true,\r\n\t\tlinewidth: 1,\r\n\t\tfog: false,\r\n\t\ttoneMapped: false\r\n\t} );\r\n\r\n\t// Make unique material for each axis/color\r\n\r\n\tvar matInvisible = gizmoMaterial.clone();\r\n\tmatInvisible.opacity = 0.15;\r\n\r\n\tvar matHelper = gizmoMaterial.clone();\r\n\tmatHelper.opacity = 0.33;\r\n\r\n\tvar matRed = gizmoMaterial.clone();\r\n\tmatRed.color.set( 0xff0000 );\r\n\r\n\tvar matGreen = gizmoMaterial.clone();\r\n\tmatGreen.color.set( 0x00ff00 );\r\n\r\n\tvar matBlue = gizmoMaterial.clone();\r\n\tmatBlue.color.set( 0x0000ff );\r\n\r\n\tvar matWhiteTransparent = gizmoMaterial.clone();\r\n\tmatWhiteTransparent.opacity = 0.25;\r\n\r\n\tvar matYellowTransparent = matWhiteTransparent.clone();\r\n\tmatYellowTransparent.color.set( 0xffff00 );\r\n\r\n\tvar matCyanTransparent = matWhiteTransparent.clone();\r\n\tmatCyanTransparent.color.set( 0x00ffff );\r\n\r\n\tvar matMagentaTransparent = matWhiteTransparent.clone();\r\n\tmatMagentaTransparent.color.set( 0xff00ff );\r\n\r\n\tvar matYellow = gizmoMaterial.clone();\r\n\tmatYellow.color.set( 0xffff00 );\r\n\r\n\tvar matLineRed = gizmoLineMaterial.clone();\r\n\tmatLineRed.color.set( 0xff0000 );\r\n\r\n\tvar matLineGreen = gizmoLineMaterial.clone();\r\n\tmatLineGreen.color.set( 0x00ff00 );\r\n\r\n\tvar matLineBlue = gizmoLineMaterial.clone();\r\n\tmatLineBlue.color.set( 0x0000ff );\r\n\r\n\tvar matLineCyan = gizmoLineMaterial.clone();\r\n\tmatLineCyan.color.set( 0x00ffff );\r\n\r\n\tvar matLineMagenta = gizmoLineMaterial.clone();\r\n\tmatLineMagenta.color.set( 0xff00ff );\r\n\r\n\tvar matLineYellow = gizmoLineMaterial.clone();\r\n\tmatLineYellow.color.set( 0xffff00 );\r\n\r\n\tvar matLineGray = gizmoLineMaterial.clone();\r\n\tmatLineGray.color.set( 0x787878 );\r\n\r\n\tvar matLineYellowTransparent = matLineYellow.clone();\r\n\tmatLineYellowTransparent.opacity = 0.25;\r\n\r\n\t// reusable geometry\r\n\r\n\tvar arrowGeometry = new CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\r\n\r\n\tvar scaleHandleGeometry = new BoxBufferGeometry( 0.125, 0.125, 0.125 );\r\n\r\n\tvar lineGeometry = new BufferGeometry();\r\n\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\r\n\r\n\tvar CircleGeometry = function ( radius, arc ) {\r\n\r\n\t\tvar geometry = new BufferGeometry( );\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\r\n\r\n\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t};\r\n\r\n\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\r\n\r\n\tvar TranslateHelperGeometry = function () {\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t};\r\n\r\n\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\r\n\r\n\tvar gizmoTranslate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineRed ) ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\r\n\t\t],\r\n\t\tXYZ: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerTranslate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\r\n\t\t],\r\n\t\tXYZ: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperTranslate = {\r\n\t\tSTART: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tEND: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tDELTA: [\r\n\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tX: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar gizmoRotate = {\r\n\t\tX: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\r\n\t\t],\r\n\t\tE: [\r\n\t\t\t[ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\r\n\t\t],\r\n\t\tXYZE: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperRotate = {\r\n\t\tAXIS: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerRotate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\r\n\t\t],\r\n\t\tE: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\r\n\t\t],\r\n\t\tXYZE: [\r\n\t\t\t[ new Mesh( new SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar gizmoScale = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXYZX: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\r\n\t\t],\r\n\t\tXYZY: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\r\n\t\t],\r\n\t\tXYZZ: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerScale = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\r\n\t\t],\r\n\t\tXYZX: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\r\n\t\t],\r\n\t\tXYZY: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\r\n\t\t],\r\n\t\tXYZZ: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperScale = {\r\n\t\tX: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\t// Creates an Object3D with gizmos described in custom hierarchy definition.\r\n\r\n\tvar setupGizmo = function ( gizmoMap ) {\r\n\r\n\t\tvar gizmo = new Object3D();\r\n\r\n\t\tfor ( var name in gizmoMap ) {\r\n\r\n\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\r\n\r\n\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\r\n\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\r\n\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\r\n\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\r\n\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\r\n\r\n\t\t\t\t// name and tag properties are essential for picking and updating logic.\r\n\t\t\t\tobject.name = name;\r\n\t\t\t\tobject.tag = tag;\r\n\r\n\t\t\t\tif ( position ) {\r\n\r\n\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( rotation ) {\r\n\r\n\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scale ) {\r\n\r\n\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.updateMatrix();\r\n\r\n\t\t\t\tvar tempGeometry = object.geometry.clone();\r\n\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\r\n\t\t\t\tobject.geometry = tempGeometry;\r\n\t\t\t\tobject.renderOrder = Infinity;\r\n\r\n\t\t\t\tobject.position.set( 0, 0, 0 );\r\n\t\t\t\tobject.rotation.set( 0, 0, 0 );\r\n\t\t\t\tobject.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t\tgizmo.add( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn gizmo;\r\n\r\n\t};\r\n\r\n\t// Reusable utility variables\r\n\r\n\tvar tempVector = new Vector3( 0, 0, 0 );\r\n\tvar tempEuler = new Euler();\r\n\tvar alignVector = new Vector3( 0, 1, 0 );\r\n\tvar zeroVector = new Vector3( 0, 0, 0 );\r\n\tvar lookAtMatrix = new Matrix4();\r\n\tvar tempQuaternion = new Quaternion();\r\n\tvar tempQuaternion2 = new Quaternion();\r\n\tvar identityQuaternion = new Quaternion();\r\n\r\n\tvar unitX = new Vector3( 1, 0, 0 );\r\n\tvar unitY = new Vector3( 0, 1, 0 );\r\n\tvar unitZ = new Vector3( 0, 0, 1 );\r\n\r\n\t// Gizmo creation\r\n\r\n\tthis.gizmo = {};\r\n\tthis.picker = {};\r\n\tthis.helper = {};\r\n\r\n\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\r\n\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\r\n\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\r\n\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\r\n\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\r\n\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\r\n\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\r\n\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\r\n\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\r\n\r\n\t// Pickers should be hidden always\r\n\r\n\tthis.picker[ \"translate\" ].visible = false;\r\n\tthis.picker[ \"rotate\" ].visible = false;\r\n\tthis.picker[ \"scale\" ].visible = false;\r\n\r\n\t// updateMatrixWorld will update transformations and appearance of individual handles\r\n\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tvar space = this.space;\r\n\r\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\r\n\r\n\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\r\n\r\n\t\t// Show only gizmos for current transform mode\r\n\r\n\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\r\n\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\r\n\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\r\n\r\n\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\r\n\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\r\n\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\r\n\r\n\r\n\t\tvar handles = [];\r\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\r\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\r\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\r\n\r\n\t\tfor ( var i = 0; i < handles.length; i ++ ) {\r\n\r\n\t\t\tvar handle = handles[ i ];\r\n\r\n\t\t\t// hide aligned to camera\r\n\r\n\t\t\thandle.visible = true;\r\n\t\t\thandle.rotation.set( 0, 0, 0 );\r\n\t\t\thandle.position.copy( this.worldPosition );\r\n\r\n\t\t\tvar factor;\r\n\r\n\t\t\tif ( this.camera.isOrthographicCamera ) {\r\n\r\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\r\n\r\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\r\n\r\n\t\t\tif ( handle.tag === 'helper' ) {\r\n\r\n\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\tif ( handle.name === 'AXIS' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.visible = !! this.axis;\r\n\r\n\t\t\t\t\tif ( this.axis === 'X' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'Y' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'Z' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\r\n\t\t\t\t\t\talignVector.copy( this.rotationAxis );\r\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\r\n\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\r\n\t\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'E' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t} else if ( handle.name === 'START' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else if ( handle.name === 'END' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPosition );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\r\n\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\r\n\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\r\n\t\t\t\t\thandle.scale.copy( tempVector );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thandle.quaternion.copy( quaternion );\r\n\r\n\t\t\t\t\tif ( this.dragging ) {\r\n\r\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis ) {\r\n\r\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If updating helper, skip rest of the loop\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Align handles to current local or world rotation\r\n\r\n\t\t\thandle.quaternion.copy( quaternion );\r\n\r\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\r\n\r\n\t\t\t\t// Hide translate and scale axis facing the camera\r\n\r\n\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\r\n\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\r\n\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\r\n\r\n\r\n\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'XY' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'YZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'XZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Flip translate and scale axis ocluded behind another axis\r\n\r\n\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.x *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.y *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.z *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( this.mode === 'rotate' ) {\r\n\r\n\t\t\t\t// Align handles to current local or world rotation\r\n\r\n\t\t\t\ttempQuaternion2.copy( quaternion );\r\n\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).invert() );\r\n\r\n\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\r\n\r\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'X' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Y' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Z' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Hide disabled axes\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\r\n\r\n\t\t\t// highlight selected axis\r\n\r\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\r\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\r\n\r\n\t\t\thandle.material.color.copy( handle.material._color );\r\n\t\t\thandle.material.opacity = handle.material._opacity;\r\n\r\n\t\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t\thandle.material.opacity *= 0.5;\r\n\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t} else if ( this.axis ) {\r\n\r\n\t\t\t\tif ( handle.name === this.axis ) {\r\n\r\n\t\t\t\t\thandle.material.opacity = 1.0;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\r\n\r\n\t\t\t\t\treturn handle.name === a;\r\n\r\n\t\t\t\t} ) ) {\r\n\r\n\t\t\t\t\thandle.material.opacity = 1.0;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thandle.material.opacity *= 0.25;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\tconstructor: TransformControlsGizmo,\r\n\r\n\tisTransformControlsGizmo: true\r\n\r\n} );\r\n\r\n\r\nvar TransformControlsPlane = function () {\r\n\r\n\t'use strict';\r\n\r\n\tMesh.call( this,\r\n\t\tnew PlaneBufferGeometry( 100000, 100000, 2, 2 ),\r\n\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\r\n\t);\r\n\r\n\tthis.type = 'TransformControlsPlane';\r\n\r\n\tvar unitX = new Vector3( 1, 0, 0 );\r\n\tvar unitY = new Vector3( 0, 1, 0 );\r\n\tvar unitZ = new Vector3( 0, 0, 1 );\r\n\r\n\tvar tempVector = new Vector3();\r\n\tvar dirVector = new Vector3();\r\n\tvar alignVector = new Vector3();\r\n\tvar tempMatrix = new Matrix4();\r\n\tvar identityQuaternion = new Quaternion();\r\n\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tvar space = this.space;\r\n\r\n\t\tthis.position.copy( this.worldPosition );\r\n\r\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\r\n\r\n\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\r\n\t\t// Align the plane for current transform mode, axis and space.\r\n\r\n\t\talignVector.copy( unitY );\r\n\r\n\t\tswitch ( this.mode ) {\r\n\r\n\t\t\tcase 'translate':\r\n\t\t\tcase 'scale':\r\n\t\t\t\tswitch ( this.axis ) {\r\n\r\n\t\t\t\t\tcase 'X':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\r\n\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Y':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\r\n\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Z':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\r\n\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XY':\r\n\t\t\t\t\t\tdirVector.copy( unitZ );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'YZ':\r\n\t\t\t\t\t\tdirVector.copy( unitX );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XZ':\r\n\t\t\t\t\t\talignVector.copy( unitZ );\r\n\t\t\t\t\t\tdirVector.copy( unitY );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tcase 'E':\r\n\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rotate':\r\n\t\t\tdefault:\r\n\t\t\t\t// special case for rotate\r\n\t\t\t\tdirVector.set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirVector.length() === 0 ) {\r\n\r\n\t\t\t// If in rotate mode, make the plane parallel to camera\r\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\tconstructor: TransformControlsPlane,\r\n\r\n\tisTransformControlsPlane: true\r\n\r\n} );\r\n\r\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/controls/TransformControls.js","<template>\r\n    <div class=\"webglGeometrySplineEditor-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - geometry - catmull spline editor\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { TransformControls } from '@/components/jsm/controls/TransformControls.js'\r\nimport '@/utils/geometrySplineEditor.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tsplineHelperObjects: [],\r\n\t\t\tsplinePointsLength: 4,\r\n\t\t\tpositions: [],\r\n\t\t\tpoint: null,\r\n\t\t\traycaster: null,\r\n\t\t\tpointer: null,\r\n\t\t\tonUpPosition: null,\r\n\t\t\tonDownPosition: null,\r\n\t\t\tgeometry: null,\r\n\t\t\ttransformControl: null,\r\n\t\t\tARC_SEGMENTS: 200,\r\n\t\t\tsplines: {},\r\n            params: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.point = new this.$THREE.Vector3()\r\n        this.raycaster = new this.$THREE.Raycaster()\r\n        this.pointer = new this.$THREE.Vector2()\r\n        this.onUpPosition = new this.$THREE.Vector2()\r\n        this.onDownPosition = new this.$THREE.Vector2()\r\n        this.geometry = new this.$THREE.BoxBufferGeometry(20, 20, 20)\r\n        this.ARC_SEGMENTS = 200\r\n        this.splines = {}\r\n        this.params = {\r\n            uniform: true,\r\n            tension: 0.5,\r\n            centripetal: true,\r\n            chordal: true,\r\n            addPoint: this.addPoint,\r\n            removePoint: this.removePoint,\r\n            exportSpline: this.exportSpline\r\n        }\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.getElementById('container')\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xf0f0f0)\r\n            this.camera = new this.$THREE.PerspectiveCamera(70, this.$webglInnerWidth / window.innerHeight, 1, 10000)\r\n            this.camera.position.set(0, 250, 1000)\r\n            this.scene.add(this.camera)\r\n            this.scene.add(new this.$THREE.AmbientLight(0xf0f0f0))\r\n            var light = new this.$THREE.SpotLight(0xffffff, 1.5)\r\n            light.position.set(0, 1500, 200)\r\n            light.angle = Math.PI * 0.2\r\n            light.castShadow = true\r\n            light.shadow.camera.near = 200\r\n            light.shadow.camera.far = 2000\r\n            light.shadow.bias = - 0.000222\r\n            light.shadow.mapSize.width = 1024\r\n            light.shadow.mapSize.height = 1024\r\n            this.scene.add(light)\r\n            var planeGeometry = new this.$THREE.PlaneBufferGeometry(2000, 2000)\r\n            planeGeometry.rotateX(- Math.PI / 2)\r\n            var planeMaterial = new this.$THREE.ShadowMaterial({ opacity: 0.2 })\r\n            var plane = new this.$THREE.Mesh(planeGeometry, planeMaterial)\r\n            plane.position.y = - 200\r\n            plane.receiveShadow = true\r\n            this.scene.add(plane)\r\n            var helper = new this.$THREE.GridHelper(2000, 100)\r\n            helper.position.y = - 199\r\n            helper.material.opacity = 0.25\r\n            helper.material.transparent = true\r\n            this.scene.add(helper)\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.shadowMap.enabled = true\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'uniform')\r\n            this.gui.add(this.params, 'tension', 0, 1).step(0.01).onChange((value) => {\r\n                this.splines.uniform.tension = value\r\n                this.updateSplineOutline()\r\n            })\r\n            this.gui.add(this.params, 'centripetal')\r\n            this.gui.add(this.params, 'chordal')\r\n            this.gui.add(this.params, 'addPoint')\r\n            this.gui.add(this.params, 'removePoint')\r\n            this.gui.add(this.params, 'exportSpline')\r\n            this.gui.open()\r\n            // Controls\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.damping = 0.2\r\n            controls.addEventListener('change', this.render)\r\n            this.transformControl = new TransformControls(this.camera, this.renderer.domElement)\r\n            this.transformControl.addEventListener('change', this.render)\r\n            this.transformControl.addEventListener('dragging-changed', (event) => {\r\n                controls.enabled = ! event.value\r\n            })\r\n            this.scene.add(this.transformControl)\r\n            this.transformControl.addEventListener('objectChange', () => {\r\n                this.updateSplineOutline()\r\n            })\r\n            document.addEventListener('pointerdown', this.onPointerDown, false)\r\n            document.addEventListener('pointerup', this.onPointerUp, false)\r\n            document.addEventListener('pointermove', this.onPointerMove, false)\r\n            /*******\r\n             * Curves\r\n             *********/\r\n            for (var i = 0; i < this.splinePointsLength; i ++) {\r\n                this.addSplineObject(this.positions[ i ])\r\n            }\r\n            this.positions.length = 0\r\n            for (var i = 0; i < this.splinePointsLength; i ++) {\r\n                this.positions.push(this.splineHelperObjects[ i ].position)\r\n            }\r\n            var geometry = new this.$THREE.BufferGeometry()\r\n            geometry.setAttribute('position', new this.$THREE.BufferAttribute(new Float32Array(this.ARC_SEGMENTS * 3), 3))\r\n            var curve = new this.$THREE.CatmullRomCurve3(this.positions)\r\n            curve.curveType = 'catmullrom'\r\n            curve.mesh = new this.$THREE.Line(geometry.clone(), new this.$THREE.LineBasicMaterial({\r\n                color: 0xff0000,\r\n                opacity: 0.35\r\n            }))\r\n            curve.mesh.castShadow = true\r\n            this.splines.uniform = curve\r\n            curve = new this.$THREE.CatmullRomCurve3(this.positions)\r\n            curve.curveType = 'centripetal'\r\n            curve.mesh = new this.$THREE.Line(geometry.clone(), new this.$THREE.LineBasicMaterial({\r\n                color: 0x00ff00,\r\n                opacity: 0.35\r\n            }))\r\n            curve.mesh.castShadow = true\r\n            this.splines.centripetal = curve\r\n            curve = new this.$THREE.CatmullRomCurve3(this.positions)\r\n            curve.curveType = 'chordal'\r\n            curve.mesh = new this.$THREE.Line(geometry.clone(), new this.$THREE.LineBasicMaterial({\r\n                color: 0x0000ff,\r\n                opacity: 0.35\r\n            }))\r\n            curve.mesh.castShadow = true\r\n            this.splines.chordal = curve\r\n            for (var k in this.splines) {\r\n                var spline = this.splines[ k ]\r\n                this.scene.add(spline.mesh)\r\n            }\r\n            this.load([ new this.$THREE.Vector3(289.76843686945404, 452.51481137238443, 56.10018915737797),\r\n                new this.$THREE.Vector3(- 53.56300074753207, 171.49711742836848, - 14.495472686253045),\r\n                new this.$THREE.Vector3(- 91.40118730204415, 176.4306956436485, - 6.958271935582161),\r\n                new this.$THREE.Vector3(- 383.785318791128, 491.1365363371675, 47.869296953772746) ])\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        addSplineObject(position) {\r\n            var material = new this.$THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff })\r\n            var object = new this.$THREE.Mesh(this.geometry, material)\r\n            if (position) {\r\n                object.position.copy(position)\r\n            } else {\r\n                object.position.x = Math.random() * 1000 - 500\r\n                object.position.y = Math.random() * 600\r\n                object.position.z = Math.random() * 800 - 400\r\n            }\r\n            object.castShadow = true\r\n            object.receiveShadow = true\r\n            this.scene.add(object)\r\n            this.splineHelperObjects.push(object)\r\n            return object\r\n        },\r\n        addPoint() {\r\n            this.splinePointsLength ++\r\n            this.positions.push(this.addSplineObject().position)\r\n            this.updateSplineOutline()\r\n        },\r\n        removePoint() {\r\n            if (this.splinePointsLength <= 4) {\r\n                return\r\n            }\r\n            var point = this.splineHelperObjects.pop()\r\n            this.splinePointsLength --\r\n            this.positions.pop()\r\n            if (this.transformControl.object === point) this.transformControl.detach()\r\n            this.scene.remove(point)\r\n            this.updateSplineOutline()\r\n        },\r\n        updateSplineOutline() {\r\n            for (var k in this.splines) {\r\n                var spline = this.splines[ k ]\r\n                var splineMesh = spline.mesh\r\n                var position = splineMesh.geometry.attributes.position\r\n                for (var i = 0; i < this.ARC_SEGMENTS; i ++) {\r\n                    var t = i / (this.ARC_SEGMENTS - 1)\r\n                    spline.getPoint(t, this.point)\r\n                    position.setXYZ(i, this.point.x, this.point.y, this.point.z)\r\n                }\r\n                position.needsUpdate = true\r\n            }\r\n        },\r\n        exportSpline() {\r\n            var strplace = []\r\n            for (var i = 0; i < this.splinePointsLength; i ++) {\r\n                var p = this.splineHelperObjects[ i ].position\r\n                strplace.push('new this.$THREE.Vector3({0}, {1}, {2})'.format('new this.$THREE.Vector3({0}, {1}, {2})', p.x, p.y, p.z))\r\n            }\r\n            console.log(strplace.join(',\\n'))\r\n            var code = '[' + (strplace.join(',\\n\\t')) + ']'\r\n            prompt('copy and paste code', code)\r\n        },\r\n        load(new_positions) {\r\n            while (new_positions.length > this.positions.length) {\r\n                this.addPoint()\r\n            }\r\n            while (new_positions.length < this.positions.length) {\r\n                this.removePoint()\r\n            }\r\n            for (var i = 0; i < this.positions.length; i ++) {\r\n                this.positions[ i ].copy(new_positions[ i ])\r\n            }\r\n            this.updateSplineOutline()\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            this.splines.uniform.mesh.visible = this.params.uniform\r\n            this.splines.centripetal.mesh.visible = this.params.centripetal\r\n            this.splines.chordal.mesh.visible = this.params.chordal\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        onPointerDown(event) {\r\n            this.onDownPosition.x = event.clientX\r\n            this.onDownPosition.y = event.clientY\r\n        },\r\n        onPointerUp() {\r\n            this.onUpPosition.x = event.clientX\r\n            this.onUpPosition.y = event.clientY\r\n            if (this.onDownPosition.distanceTo(this.onUpPosition) === 0) this.transformControl.detach()\r\n        },\r\n        onPointerMove(event) {\r\n            this.pointer.x = (event.clientX / window.innerWidth - 281) * 2 - 1\r\n            this.pointer.y = - (event.clientY / window.innerHeight) * 2 + 1\r\n            this.raycaster.setFromCamera(this.pointer, this.camera)\r\n            var intersects = this.raycaster.intersectObjects(this.splineHelperObjects)\r\n            if (intersects.length > 0) {\r\n                var object = intersects[ 0 ].object\r\n                if (object !== this.transformControl.object) {\r\n                    this.transformControl.attach(object)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometrySplineEditor-container {\r\n    width: 100%;\r\n    background-color: #f0f0f0;\r\n}\r\n#info {\t\t\t\r\n    color: #444;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometrySplineEditor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometrySplineEditor-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - geometry - catmull spline editor\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b03110a6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometrySplineEditor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b03110a6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometrySplineEditor.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometrySplineEditor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometrySplineEditor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b03110a6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometrySplineEditor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b03110a6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometrySplineEditor.vue\n// module id = null\n// module chunks = ","String.prototype.format = (str, x, y, z) => {\r\n    var str = str\r\n    var myArguments = [x, y, z]\r\n    for (var i = 0; i < myArguments.length; i ++) {\r\n        str = str.replace('{' + i + '}', myArguments[i])\r\n    }\r\n    return str\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geometrySplineEditor.js"],"sourceRoot":""}