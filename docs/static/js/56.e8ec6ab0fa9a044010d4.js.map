{"version":3,"sources":["webpack:///src/views/loader/webglLoader3mfMaterials.vue","webpack:///./src/views/loader/webglLoader3mfMaterials.vue?4abe","webpack:///./src/views/loader/webglLoader3mfMaterials.vue","webpack:///./src/components/jsm/loaders/3MFLoader.js"],"names":["webglLoader3mfMaterials","data","camera","scene","renderer","mounted","this","init","methods","_this","$THREE","Scene","background","Color","fog","Fog","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","add","hemiLight","HemisphereLight","dirLight","DirectionalLight","castShadow","shadow","top","bottom","left","right","near","far","mapSize","manager","LoadingManager","_MFLoader","load","object","quaternion","setFromEuler","Euler","Math","PI","traverse","child","onLoad","render","ground","Mesh","PlaneBufferGeometry","MeshPhongMaterial","color","depthWrite","rotation","x","y","receiveShadow","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","shadowMap","enabled","type","PCFSoftShadowMap","document","getElementsByClassName","appendChild","domElement","controls","OrbitControls","addEventListener","minDistance","maxDistance","enablePan","target","update","onWindowResize","$onWindowResize","loader_webglLoader3mfMaterials","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","d","ThreeMFLoader","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","__WEBPACK_IMPORTED_MODULE_1__libs_jszip_module_min_js__","Loader","call","availableExtensions","prototype","Object","assign","create","constructor","url","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","textureLoader","TextureLoader","parseRelsXml","relsFileText","relationships","relsNodes","DOMParser","parseFromString","querySelectorAll","i","length","relsNode","relationship","getAttribute","push","parseBasematerialsNode","basematerialsNode","basematerialsData","basematerials","basematerialNodes","basematerialData","parseBasematerialNode","index","parseTextures2DGroupNode","texture2DGroupNode","texture2DGroupData","texid","displaypropertiesid","tex2coordNodes","uvs","tex2coordNode","u","v","parseFloat","Float32Array","parseColorGroupNode","colorGroupNode","colorGroupData","colorNodes","colors","colorObject","setStyle","substring","convertSRGBToLinear","r","g","b","parseMetallicDisplaypropertiesNode","metallicDisplaypropetiesNode","metallicDisplaypropertiesData","metallicNodes","metallicData","metallicNode","name","metallicness","roughness","basematerialNode","parseComponentNode","componentNode","componentData","transform","parseTransform","t","split","forEach","s","matrix","Matrix4","parseObjectNode","objectNode","objectData","pid","pindex","thumbnail","partnumber","meshNode","querySelector","meshData","vertices","vertexNodes","vertexNode","z","triangleProperties","triangles","triangleNodes","triangleNode","v1","v2","v3","p1","p2","p3","triangleProperty","parseInt","keys","Uint32Array","parseMeshNode","componentsNode","components","componentNodes","parseComponentsNode","parseModelNode","modelNode","modelData","unit","metadataNodes","metadataData","metadataNode","indexOf","textContent","parseMetadataNodes","resourcesNode","resourcesData","basematerialsNodes","texture2DNode","textures2DNodes","textures2DNode","texture2DData","contenttype","tilestyleu","tilestylev","filter","colorGroupNodes","pbmetallicdisplaypropertiesNodes","pbmetallicdisplaypropertiesData","textures2DGroupNodes","textures2DGroupData","objectNodes","parseResourcesNode","buildNode","buildData","itemNodes","itemNode","buildItem","objectId","parseBuildNode","buildTexture","texture2dgroup","objects","textureData","texture2d","resources","blob","Blob","sourceURI","URL","createObjectURL","texture","revokeObjectURL","encoding","wrapS","RepeatWrapping","MirroredRepeatWrapping","ClampToEdgeWrapping","wrapT","magFilter","LinearFilter","minFilter","LinearMipmapLinearFilter","NearestFilter","buildBasematerialsMeshes","objectPindex","materialMap","l","undefined","meshes","materialIndex","trianglePropertiesProps","material","getBuild","buildBasematerial","geometry","BufferGeometry","positionData","j","jl","setAttribute","Float32BufferAttribute","mesh","buildTexturedMesh","uvData","map","flatShading","buildVertexColorMesh","colorgroup","colorData","vertexColors","buildDefaultMesh","setIndex","BufferAttribute","getResourceType","buildGroup","group","Group","resourceMap","il","resourceId","newMeshes","buildMeshes","objectPid","analyzeObject","builder","build","materialData","pbmetallicdisplayproperties","MeshStandardMaterial","metalness","displaycolor","opacity","charAt","buildComposite","compositeData","composite","component","buildObject","object3D","clone","applyMatrix4","extensions","modelXml","ns","extension","apply","applyExtensions","data3mf","relsName","modelRelsName","rels","modelRels","zip","file","modelPartNames","printTicketPartNames","texturesPartNames","otherPartNames","modelParts","texturesParts","JSZip","ReferenceError","files","match","relsView","Uint8Array","asArrayBuffer","LoaderUtils","decodeText","modelPart","view","fileText","xmlData","documentElement","nodeName","toLowerCase","attributes","attr","value","RegExp","$1","texturesPartName","model","printTicket","other","loadDocument","modelsData","modelsKeys","modelRel","textureKey","objectIds","buildObjects","addExtension"],"mappings":"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","file":"static/js/56.e8ec6ab0fa9a044010d4.js","sourcesContent":["<template>\r\n    <div class=\"webglLoader3mfMaterials-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> -\r\n\t\t\t<a href=\"http://3mf.io\" target=\"_blank\" rel=\"noopener\">3MF</a> file with materials\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js';\r\nimport { ThreeMFLoader } from '@/components/jsm/loaders/3MFLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xa0a0a0)\r\n            this.scene.fog = new this.$THREE.Fog(0xa0a0a0, 10, 500)\r\n            this.camera = new this.$THREE.PerspectiveCamera(35, this.$webglInnerWidth / window.innerHeight, 1, 500)\r\n            this.camera.position.set(- 50, 40, 50)\r\n            this.scene.add(this.camera)\r\n            //\r\n            var hemiLight = new this.$THREE.HemisphereLight(0xffffff, 0x444444)\r\n            hemiLight.position.set(0, 100, 0)\r\n            this.scene.add(hemiLight)\r\n            var dirLight = new this.$THREE.DirectionalLight(0xffffff)\r\n            dirLight.position.set(- 0, 40, 50)\r\n            dirLight.castShadow = true\r\n            dirLight.shadow.camera.top = 50\r\n            dirLight.shadow.camera.bottom = - 25\r\n            dirLight.shadow.camera.left = - 25\r\n            dirLight.shadow.camera.right = 25\r\n            dirLight.shadow.camera.near = 0.1\r\n            dirLight.shadow.camera.far = 200\r\n            dirLight.shadow.mapSize.set(1024, 1024)\r\n            this.scene.add(dirLight)\r\n            // this.scene.add(new this.$THREE.CameraHelper(dirLight.shadow.camera))\r\n            //\r\n            var manager = new this.$THREE.LoadingManager()\r\n            var loader = new ThreeMFLoader(manager)\r\n            loader.load('static/models/3mf/truck.3mf', (object) => {\r\n                object.quaternion.setFromEuler(new this.$THREE.Euler(- Math.PI / 2, 0, 0)) \t// z-up conversion\r\n                object.traverse((child) => {\r\n                    child.castShadow = true\r\n                })\r\n                this.scene.add(object)\r\n            })\r\n            //\r\n            manager.onLoad = () => {\r\n                this.render()\r\n            }\r\n            //\r\n            var ground = new this.$THREE.Mesh(new this.$THREE.PlaneBufferGeometry(1000, 1000), new this.$THREE.MeshPhongMaterial({ color: 0x999999, depthWrite: false }))\r\n            ground.rotation.x = - Math.PI / 2\r\n            ground.position.y = 11\r\n            ground.receiveShadow = true\r\n            this.scene.add(ground)\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.shadowMap.enabled = true\r\n            this.renderer.shadowMap.type = this.$THREE.PCFSoftShadowMap\r\n            document.getElementsByClassName('webglLoader3mfMaterials-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.addEventListener('change', this.render)\r\n            controls.minDistance = 50\r\n            controls.maxDistance = 200\r\n            controls.enablePan = false\r\n            controls.target.set(0, 20, 0)\r\n            controls.update()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            this.render()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.render()\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglLoader3mfMaterials-container {\r\n    width: 100%;\r\n    background-color: #a0a0a0;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/loader/webglLoader3mfMaterials.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglLoader3mfMaterials-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" -\\n\\t\\t\\t\"),_c('a',{attrs:{\"href\":\"http://3mf.io\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"3MF\")]),_vm._v(\" file with materials\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0b5787d7\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/loader/webglLoader3mfMaterials.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0b5787d7\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglLoader3mfMaterials.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoader3mfMaterials.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglLoader3mfMaterials.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0b5787d7\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglLoader3mfMaterials.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0b5787d7\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/loader/webglLoader3mfMaterials.vue\n// module id = null\n// module chunks = ","import {\r\n\tBufferAttribute,\r\n\tBufferGeometry,\r\n\tClampToEdgeWrapping,\r\n\tColor,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLinearFilter,\r\n\tLinearMipmapLinearFilter,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshPhongMaterial,\r\n\tMeshStandardMaterial,\r\n\tMirroredRepeatWrapping,\r\n\tNearestFilter,\r\n\tRepeatWrapping,\r\n\tTextureLoader,\r\n\tsRGBEncoding\r\n} from \"@/components/build/three.module.js\";\r\nimport { JSZip } from \"../libs/jszip.module.min.js\";\r\n\r\n/**\r\n *\r\n * 3D Manufacturing Format (3MF) specification: https://3mf.io/specification/\r\n *\r\n * The following features from the core specification are supported:\r\n *\r\n * - 3D Models\r\n * - Object Resources (Meshes and Components)\r\n * - Material Resources (Base Materials)\r\n *\r\n * 3MF Materials and Properties Extension are only partially supported.\r\n *\r\n * - Texture 2D\r\n * - Texture 2D Groups\r\n * - Color Groups (Vertex Colors)\r\n * - Metallic Display Properties (PBR)\r\n */\r\n\r\nvar ThreeMFLoader = function ( manager ) {\r\n\r\n\tLoader.call( this, manager );\r\n\r\n\tthis.availableExtensions = [];\r\n\r\n};\r\n\r\nThreeMFLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\tconstructor: ThreeMFLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( buffer ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( data ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar textureLoader = new TextureLoader( this.manager );\r\n\r\n\t\tfunction loadDocument( data ) {\r\n\r\n\t\t\tvar zip = null;\r\n\t\t\tvar file = null;\r\n\r\n\t\t\tvar relsName;\r\n\t\t\tvar modelRelsName;\r\n\t\t\tvar modelPartNames = [];\r\n\t\t\tvar printTicketPartNames = [];\r\n\t\t\tvar texturesPartNames = [];\r\n\t\t\tvar otherPartNames = [];\r\n\r\n\t\t\tvar rels;\r\n\t\t\tvar modelRels;\r\n\t\t\tvar modelParts = {};\r\n\t\t\tvar printTicketParts = {};\r\n\t\t\tvar texturesParts = {};\r\n\t\t\tvar otherParts = {};\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tzip = new JSZip( data ); // eslint-disable-line no-undef\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( e instanceof ReferenceError ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.3MFLoader: jszip missing and file is compressed.' );\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( file in zip.files ) {\r\n\r\n\t\t\t\tif ( file.match( /\\_rels\\/.rels$/ ) ) {\r\n\r\n\t\t\t\t\trelsName = file;\r\n\r\n\t\t\t\t} else if ( file.match( /3D\\/_rels\\/.*\\.model\\.rels$/ ) ) {\r\n\r\n\t\t\t\t\tmodelRelsName = file;\r\n\r\n\t\t\t\t} else if ( file.match( /^3D\\/.*\\.model$/ ) ) {\r\n\r\n\t\t\t\t\tmodelPartNames.push( file );\r\n\r\n\t\t\t\t} else if ( file.match( /^3D\\/Metadata\\/.*\\.xml$/ ) ) {\r\n\r\n\t\t\t\t\tprintTicketPartNames.push( file );\r\n\r\n\t\t\t\t} else if ( file.match( /^3D\\/Textures?\\/.*/ ) ) {\r\n\r\n\t\t\t\t\ttexturesPartNames.push( file );\r\n\r\n\t\t\t\t} else if ( file.match( /^3D\\/Other\\/.*/ ) ) {\r\n\r\n\t\t\t\t\totherPartNames.push( file );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar relsView = new Uint8Array( zip.file( relsName ).asArrayBuffer() );\r\n\t\t\tvar relsFileText = LoaderUtils.decodeText( relsView );\r\n\t\t\trels = parseRelsXml( relsFileText );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( modelRelsName ) {\r\n\r\n\t\t\t\tvar relsView = new Uint8Array( zip.file( modelRelsName ).asArrayBuffer() );\r\n\t\t\t\tvar relsFileText = LoaderUtils.decodeText( relsView );\r\n\t\t\t\tmodelRels = parseRelsXml( relsFileText );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < modelPartNames.length; i ++ ) {\r\n\r\n\t\t\t\tvar modelPart = modelPartNames[ i ];\r\n\t\t\t\tvar view = new Uint8Array( zip.file( modelPart ).asArrayBuffer() );\r\n\r\n\t\t\t\tvar fileText = LoaderUtils.decodeText( view );\r\n\t\t\t\tvar xmlData = new DOMParser().parseFromString( fileText, 'application/xml' );\r\n\r\n\t\t\t\tif ( xmlData.documentElement.nodeName.toLowerCase() !== 'model' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.3MFLoader: Error loading 3MF - no 3MF document found: ', modelPart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar modelNode = xmlData.querySelector( 'model' );\r\n\t\t\t\tvar extensions = {};\r\n\r\n\t\t\t\tfor ( var i = 0; i < modelNode.attributes.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar attr = modelNode.attributes[ i ];\r\n\t\t\t\t\tif ( attr.name.match( /^xmlns:(.+)$/ ) ) {\r\n\r\n\t\t\t\t\t\textensions[ attr.value ] = RegExp.$1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar modelData = parseModelNode( modelNode );\r\n\t\t\t\tmodelData[ 'xml' ] = modelNode;\r\n\r\n\t\t\t\tif ( 0 < Object.keys( extensions ).length ) {\r\n\r\n\t\t\t\t\tmodelData[ 'extensions' ] = extensions;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodelParts[ modelPart ] = modelData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( var i = 0; i < texturesPartNames.length; i ++ ) {\r\n\r\n\t\t\t\tvar texturesPartName = texturesPartNames[ i ];\r\n\t\t\t\ttexturesParts[ texturesPartName ] = zip.file( texturesPartName ).asArrayBuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\trels: rels,\r\n\t\t\t\tmodelRels: modelRels,\r\n\t\t\t\tmodel: modelParts,\r\n\t\t\t\tprintTicket: printTicketParts,\r\n\t\t\t\ttexture: texturesParts,\r\n\t\t\t\tother: otherParts\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseRelsXml( relsFileText ) {\r\n\r\n\t\t\tvar relationships = [];\r\n\r\n\t\t\tvar relsXmlData = new DOMParser().parseFromString( relsFileText, 'application/xml' );\r\n\r\n\t\t\tvar relsNodes = relsXmlData.querySelectorAll( 'Relationship' );\r\n\r\n\t\t\tfor ( var i = 0; i < relsNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar relsNode = relsNodes[ i ];\r\n\r\n\t\t\t\tvar relationship = {\r\n\t\t\t\t\ttarget: relsNode.getAttribute( 'Target' ), //required\r\n\t\t\t\t\tid: relsNode.getAttribute( 'Id' ), //required\r\n\t\t\t\t\ttype: relsNode.getAttribute( 'Type' ) //required\r\n\t\t\t\t};\r\n\r\n\t\t\t\trelationships.push( relationship );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn relationships;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseMetadataNodes( metadataNodes ) {\r\n\r\n\t\t\tvar metadataData = {};\r\n\r\n\t\t\tfor ( var i = 0; i < metadataNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar metadataNode = metadataNodes[ i ];\r\n\t\t\t\tvar name = metadataNode.getAttribute( 'name' );\r\n\t\t\t\tvar validNames = [\r\n\t\t\t\t\t'Title',\r\n\t\t\t\t\t'Designer',\r\n\t\t\t\t\t'Description',\r\n\t\t\t\t\t'Copyright',\r\n\t\t\t\t\t'LicenseTerms',\r\n\t\t\t\t\t'Rating',\r\n\t\t\t\t\t'CreationDate',\r\n\t\t\t\t\t'ModificationDate'\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif ( 0 <= validNames.indexOf( name ) ) {\r\n\r\n\t\t\t\t\tmetadataData[ name ] = metadataNode.textContent;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn metadataData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBasematerialsNode( basematerialsNode ) {\r\n\r\n\t\t\tvar basematerialsData = {\r\n\t\t\t\tid: basematerialsNode.getAttribute( 'id' ), // required\r\n\t\t\t\tbasematerials: []\r\n\t\t\t};\r\n\r\n\t\t\tvar basematerialNodes = basematerialsNode.querySelectorAll( 'base' );\r\n\r\n\t\t\tfor ( var i = 0; i < basematerialNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar basematerialNode = basematerialNodes[ i ];\r\n\t\t\t\tvar basematerialData = parseBasematerialNode( basematerialNode );\r\n\t\t\t\tbasematerialData.index = i; // the order and count of the material nodes form an implicit 0-based index\r\n\t\t\t\tbasematerialsData.basematerials.push( basematerialData );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn basematerialsData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseTexture2DNode( texture2DNode ) {\r\n\r\n\t\t\tvar texture2dData = {\r\n\t\t\t\tid: texture2DNode.getAttribute( 'id' ), // required\r\n\t\t\t\tpath: texture2DNode.getAttribute( 'path' ), // required\r\n\t\t\t\tcontenttype: texture2DNode.getAttribute( 'contenttype' ), // required\r\n\t\t\t\ttilestyleu: texture2DNode.getAttribute( 'tilestyleu' ),\r\n\t\t\t\ttilestylev: texture2DNode.getAttribute( 'tilestylev' ),\r\n\t\t\t\tfilter: texture2DNode.getAttribute( 'filter' ),\r\n\t\t\t};\r\n\r\n\t\t\treturn texture2dData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseTextures2DGroupNode( texture2DGroupNode ) {\r\n\r\n\t\t\tvar texture2DGroupData = {\r\n\t\t\t\tid: texture2DGroupNode.getAttribute( 'id' ), // required\r\n\t\t\t\ttexid: texture2DGroupNode.getAttribute( 'texid' ), // required\r\n\t\t\t\tdisplaypropertiesid: texture2DGroupNode.getAttribute( 'displaypropertiesid' )\r\n\t\t\t};\r\n\r\n\t\t\tvar tex2coordNodes = texture2DGroupNode.querySelectorAll( 'tex2coord' );\r\n\r\n\t\t\tvar uvs = [];\r\n\r\n\t\t\tfor ( var i = 0; i < tex2coordNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar tex2coordNode = tex2coordNodes[ i ];\r\n\t\t\t\tvar u = tex2coordNode.getAttribute( 'u' );\r\n\t\t\t\tvar v = tex2coordNode.getAttribute( 'v' );\r\n\r\n\t\t\t\tuvs.push( parseFloat( u ), parseFloat( v ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture2DGroupData[ 'uvs' ] = new Float32Array( uvs );\r\n\r\n\t\t\treturn texture2DGroupData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseColorGroupNode( colorGroupNode ) {\r\n\r\n\t\t\tvar colorGroupData = {\r\n\t\t\t\tid: colorGroupNode.getAttribute( 'id' ), // required\r\n\t\t\t\tdisplaypropertiesid: colorGroupNode.getAttribute( 'displaypropertiesid' )\r\n\t\t\t};\r\n\r\n\t\t\tvar colorNodes = colorGroupNode.querySelectorAll( 'color' );\r\n\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorObject = new Color();\r\n\r\n\t\t\tfor ( var i = 0; i < colorNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar colorNode = colorNodes[ i ];\r\n\t\t\t\tvar color = colorNode.getAttribute( 'color' );\r\n\r\n\t\t\t\tcolorObject.setStyle( color.substring( 0, 7 ) );\r\n\t\t\t\tcolorObject.convertSRGBToLinear(); // color is in sRGB\r\n\r\n\t\t\t\tcolors.push( colorObject.r, colorObject.g, colorObject.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorGroupData[ 'colors' ] = new Float32Array( colors );\r\n\r\n\t\t\treturn colorGroupData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseMetallicDisplaypropertiesNode( metallicDisplaypropetiesNode ) {\r\n\r\n\t\t\tvar metallicDisplaypropertiesData = {\r\n\t\t\t\tid: metallicDisplaypropetiesNode.getAttribute( 'id' ) // required\r\n\t\t\t};\r\n\r\n\t\t\tvar metallicNodes = metallicDisplaypropetiesNode.querySelectorAll( 'pbmetallic' );\r\n\r\n\t\t\tvar metallicData = [];\r\n\r\n\t\t\tfor ( var i = 0; i < metallicNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar metallicNode = metallicNodes[ i ];\r\n\r\n\t\t\t\tmetallicData.push( {\r\n\t\t\t\t\tname: metallicNode.getAttribute( 'name' ), // required\r\n\t\t\t\t\tmetallicness: parseFloat( metallicNode.getAttribute( 'metallicness' ) ), // required\r\n\t\t\t\t\troughness: parseFloat( metallicNode.getAttribute( 'roughness' ) ) // required\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmetallicDisplaypropertiesData.data = metallicData;\r\n\r\n\t\t\treturn metallicDisplaypropertiesData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBasematerialNode( basematerialNode ) {\r\n\r\n\t\t\tvar basematerialData = {};\r\n\r\n\t\t\tbasematerialData[ 'name' ] = basematerialNode.getAttribute( 'name' ); // required\r\n\t\t\tbasematerialData[ 'displaycolor' ] = basematerialNode.getAttribute( 'displaycolor' ); // required\r\n\t\t\tbasematerialData[ 'displaypropertiesid' ] = basematerialNode.getAttribute( 'displaypropertiesid' );\r\n\r\n\t\t\treturn basematerialData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseMeshNode( meshNode ) {\r\n\r\n\t\t\tvar meshData = {};\r\n\r\n\t\t\tvar vertices = [];\r\n\t\t\tvar vertexNodes = meshNode.querySelectorAll( 'vertices vertex' );\r\n\r\n\t\t\tfor ( var i = 0; i < vertexNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar vertexNode = vertexNodes[ i ];\r\n\t\t\t\tvar x = vertexNode.getAttribute( 'x' );\r\n\t\t\t\tvar y = vertexNode.getAttribute( 'y' );\r\n\t\t\t\tvar z = vertexNode.getAttribute( 'z' );\r\n\r\n\t\t\t\tvertices.push( parseFloat( x ), parseFloat( y ), parseFloat( z ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmeshData[ 'vertices' ] = new Float32Array( vertices );\r\n\r\n\t\t\tvar triangleProperties = [];\r\n\t\t\tvar triangles = [];\r\n\t\t\tvar triangleNodes = meshNode.querySelectorAll( 'triangles triangle' );\r\n\r\n\t\t\tfor ( var i = 0; i < triangleNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar triangleNode = triangleNodes[ i ];\r\n\t\t\t\tvar v1 = triangleNode.getAttribute( 'v1' );\r\n\t\t\t\tvar v2 = triangleNode.getAttribute( 'v2' );\r\n\t\t\t\tvar v3 = triangleNode.getAttribute( 'v3' );\r\n\t\t\t\tvar p1 = triangleNode.getAttribute( 'p1' );\r\n\t\t\t\tvar p2 = triangleNode.getAttribute( 'p2' );\r\n\t\t\t\tvar p3 = triangleNode.getAttribute( 'p3' );\r\n\t\t\t\tvar pid = triangleNode.getAttribute( 'pid' );\r\n\r\n\t\t\t\tvar triangleProperty = {};\r\n\r\n\t\t\t\ttriangleProperty[ 'v1' ] = parseInt( v1, 10 );\r\n\t\t\t\ttriangleProperty[ 'v2' ] = parseInt( v2, 10 );\r\n\t\t\t\ttriangleProperty[ 'v3' ] = parseInt( v3, 10 );\r\n\r\n\t\t\t\ttriangles.push( triangleProperty[ 'v1' ], triangleProperty[ 'v2' ], triangleProperty[ 'v3' ] );\r\n\r\n\t\t\t\t// optional\r\n\r\n\t\t\t\tif ( p1 ) {\r\n\r\n\t\t\t\t\ttriangleProperty[ 'p1' ] = parseInt( p1, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p2 ) {\r\n\r\n\t\t\t\t\ttriangleProperty[ 'p2' ] = parseInt( p2, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p3 ) {\r\n\r\n\t\t\t\t\ttriangleProperty[ 'p3' ] = parseInt( p3, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( pid ) {\r\n\r\n\t\t\t\t\ttriangleProperty[ 'pid' ] = pid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 0 < Object.keys( triangleProperty ).length ) {\r\n\r\n\t\t\t\t\ttriangleProperties.push( triangleProperty );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmeshData[ 'triangleProperties' ] = triangleProperties;\r\n\t\t\tmeshData[ 'triangles' ] = new Uint32Array( triangles );\r\n\r\n\t\t\treturn meshData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseComponentsNode( componentsNode ) {\r\n\r\n\t\t\tvar components = [];\r\n\r\n\t\t\tvar componentNodes = componentsNode.querySelectorAll( 'component' );\r\n\r\n\t\t\tfor ( var i = 0; i < componentNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar componentNode = componentNodes[ i ];\r\n\t\t\t\tvar componentData = parseComponentNode( componentNode );\r\n\t\t\t\tcomponents.push( componentData );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn components;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseComponentNode( componentNode ) {\r\n\r\n\t\t\tvar componentData = {};\r\n\r\n\t\t\tcomponentData[ 'objectId' ] = componentNode.getAttribute( 'objectid' ); // required\r\n\r\n\t\t\tvar transform = componentNode.getAttribute( 'transform' );\r\n\r\n\t\t\tif ( transform ) {\r\n\r\n\t\t\t\tcomponentData[ 'transform' ] = parseTransform( transform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn componentData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseTransform( transform ) {\r\n\r\n\t\t\tvar t = [];\r\n\t\t\ttransform.split( ' ' ).forEach( function ( s ) {\r\n\r\n\t\t\t\tt.push( parseFloat( s ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar matrix = new Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\tt[ 0 ], t[ 3 ], t[ 6 ], t[ 9 ],\r\n\t\t\t\tt[ 1 ], t[ 4 ], t[ 7 ], t[ 10 ],\r\n\t\t\t\tt[ 2 ], t[ 5 ], t[ 8 ], t[ 11 ],\r\n\t\t\t\t 0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\treturn matrix;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseObjectNode( objectNode ) {\r\n\r\n\t\t\tvar objectData = {\r\n\t\t\t\ttype: objectNode.getAttribute( 'type' )\r\n\t\t\t};\r\n\r\n\t\t\tvar id = objectNode.getAttribute( 'id' );\r\n\r\n\t\t\tif ( id ) {\r\n\r\n\t\t\t\tobjectData[ 'id' ] = id;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar pid = objectNode.getAttribute( 'pid' );\r\n\r\n\t\t\tif ( pid ) {\r\n\r\n\t\t\t\tobjectData[ 'pid' ] = pid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar pindex = objectNode.getAttribute( 'pindex' );\r\n\r\n\t\t\tif ( pindex ) {\r\n\r\n\t\t\t\tobjectData[ 'pindex' ] = pindex;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar thumbnail = objectNode.getAttribute( 'thumbnail' );\r\n\r\n\t\t\tif ( thumbnail ) {\r\n\r\n\t\t\t\tobjectData[ 'thumbnail' ] = thumbnail;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar partnumber = objectNode.getAttribute( 'partnumber' );\r\n\r\n\t\t\tif ( partnumber ) {\r\n\r\n\t\t\t\tobjectData[ 'partnumber' ] = partnumber;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = objectNode.getAttribute( 'name' );\r\n\r\n\t\t\tif ( name ) {\r\n\r\n\t\t\t\tobjectData[ 'name' ] = name;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar meshNode = objectNode.querySelector( 'mesh' );\r\n\r\n\t\t\tif ( meshNode ) {\r\n\r\n\t\t\t\tobjectData[ 'mesh' ] = parseMeshNode( meshNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar componentsNode = objectNode.querySelector( 'components' );\r\n\r\n\t\t\tif ( componentsNode ) {\r\n\r\n\t\t\t\tobjectData[ 'components' ] = parseComponentsNode( componentsNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn objectData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseResourcesNode( resourcesNode ) {\r\n\r\n\t\t\tvar resourcesData = {};\r\n\r\n\t\t\tresourcesData[ 'basematerials' ] = {};\r\n\t\t\tvar basematerialsNodes = resourcesNode.querySelectorAll( 'basematerials' );\r\n\r\n\t\t\tfor ( var i = 0; i < basematerialsNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar basematerialsNode = basematerialsNodes[ i ];\r\n\t\t\t\tvar basematerialsData = parseBasematerialsNode( basematerialsNode );\r\n\t\t\t\tresourcesData[ 'basematerials' ][ basematerialsData[ 'id' ] ] = basematerialsData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tresourcesData[ 'texture2d' ] = {};\r\n\t\t\tvar textures2DNodes = resourcesNode.querySelectorAll( 'texture2d' );\r\n\r\n\t\t\tfor ( var i = 0; i < textures2DNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar textures2DNode = textures2DNodes[ i ];\r\n\t\t\t\tvar texture2DData = parseTexture2DNode( textures2DNode );\r\n\t\t\t\tresourcesData[ 'texture2d' ][ texture2DData[ 'id' ] ] = texture2DData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tresourcesData[ 'colorgroup' ] = {};\r\n\t\t\tvar colorGroupNodes = resourcesNode.querySelectorAll( 'colorgroup' );\r\n\r\n\t\t\tfor ( var i = 0; i < colorGroupNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar colorGroupNode = colorGroupNodes[ i ];\r\n\t\t\t\tvar colorGroupData = parseColorGroupNode( colorGroupNode );\r\n\t\t\t\tresourcesData[ 'colorgroup' ][ colorGroupData[ 'id' ] ] = colorGroupData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tresourcesData[ 'pbmetallicdisplayproperties' ] = {};\r\n\t\t\tvar pbmetallicdisplaypropertiesNodes = resourcesNode.querySelectorAll( 'pbmetallicdisplayproperties' );\r\n\r\n\t\t\tfor ( var i = 0; i < pbmetallicdisplaypropertiesNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar pbmetallicdisplaypropertiesNode = pbmetallicdisplaypropertiesNodes[ i ];\r\n\t\t\t\tvar pbmetallicdisplaypropertiesData = parseMetallicDisplaypropertiesNode( pbmetallicdisplaypropertiesNode );\r\n\t\t\t\tresourcesData[ 'pbmetallicdisplayproperties' ][ pbmetallicdisplaypropertiesData[ 'id' ] ] = pbmetallicdisplaypropertiesData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tresourcesData[ 'texture2dgroup' ] = {};\r\n\t\t\tvar textures2DGroupNodes = resourcesNode.querySelectorAll( 'texture2dgroup' );\r\n\r\n\t\t\tfor ( var i = 0; i < textures2DGroupNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar textures2DGroupNode = textures2DGroupNodes[ i ];\r\n\t\t\t\tvar textures2DGroupData = parseTextures2DGroupNode( textures2DGroupNode );\r\n\t\t\t\tresourcesData[ 'texture2dgroup' ][ textures2DGroupData[ 'id' ] ] = textures2DGroupData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tresourcesData[ 'object' ] = {};\r\n\t\t\tvar objectNodes = resourcesNode.querySelectorAll( 'object' );\r\n\r\n\t\t\tfor ( var i = 0; i < objectNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar objectNode = objectNodes[ i ];\r\n\t\t\t\tvar objectData = parseObjectNode( objectNode );\r\n\t\t\t\tresourcesData[ 'object' ][ objectData[ 'id' ] ] = objectData;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn resourcesData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBuildNode( buildNode ) {\r\n\r\n\t\t\tvar buildData = [];\r\n\t\t\tvar itemNodes = buildNode.querySelectorAll( 'item' );\r\n\r\n\t\t\tfor ( var i = 0; i < itemNodes.length; i ++ ) {\r\n\r\n\t\t\t\tvar itemNode = itemNodes[ i ];\r\n\t\t\t\tvar buildItem = {\r\n\t\t\t\t\tobjectId: itemNode.getAttribute( 'objectid' )\r\n\t\t\t\t};\r\n\t\t\t\tvar transform = itemNode.getAttribute( 'transform' );\r\n\r\n\t\t\t\tif ( transform ) {\r\n\r\n\t\t\t\t\tbuildItem[ 'transform' ] = parseTransform( transform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuildData.push( buildItem );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buildData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseModelNode( modelNode ) {\r\n\r\n\t\t\tvar modelData = { unit: modelNode.getAttribute( 'unit' ) || 'millimeter' };\r\n\t\t\tvar metadataNodes = modelNode.querySelectorAll( 'metadata' );\r\n\r\n\t\t\tif ( metadataNodes ) {\r\n\r\n\t\t\t\tmodelData[ 'metadata' ] = parseMetadataNodes( metadataNodes );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar resourcesNode = modelNode.querySelector( 'resources' );\r\n\r\n\t\t\tif ( resourcesNode ) {\r\n\r\n\t\t\t\tmodelData[ 'resources' ] = parseResourcesNode( resourcesNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar buildNode = modelNode.querySelector( 'build' );\r\n\r\n\t\t\tif ( buildNode ) {\r\n\r\n\t\t\t\tmodelData[ 'build' ] = parseBuildNode( buildNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn modelData;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildTexture( texture2dgroup, objects, modelData, textureData ) {\r\n\r\n\t\t\tvar texid = texture2dgroup.texid;\r\n\t\t\tvar texture2ds = modelData.resources.texture2d;\r\n\t\t\tvar texture2d = texture2ds[ texid ];\r\n\r\n\t\t\tif ( texture2d ) {\r\n\r\n\t\t\t\tvar data = textureData[ texture2d.path ];\r\n\t\t\t\tvar type = texture2d.contenttype;\r\n\r\n\t\t\t\tvar blob = new Blob( [ data ], { type: type } );\r\n\t\t\t\tvar sourceURI = URL.createObjectURL( blob );\r\n\r\n\t\t\t\tvar texture = textureLoader.load( sourceURI, function () {\r\n\r\n\t\t\t\t\tURL.revokeObjectURL( sourceURI );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\ttexture.encoding = sRGBEncoding;\r\n\r\n\t\t\t\t// texture parameters\r\n\r\n\t\t\t\tswitch ( texture2d.tilestyleu ) {\r\n\r\n\t\t\t\t\tcase 'wrap':\r\n\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'mirror':\r\n\t\t\t\t\t\ttexture.wrapS = MirroredRepeatWrapping;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'none':\r\n\t\t\t\t\tcase 'clamp':\r\n\t\t\t\t\t\ttexture.wrapS = ClampToEdgeWrapping;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch ( texture2d.tilestylev ) {\r\n\r\n\t\t\t\t\tcase 'wrap':\r\n\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'mirror':\r\n\t\t\t\t\t\ttexture.wrapT = MirroredRepeatWrapping;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'none':\r\n\t\t\t\t\tcase 'clamp':\r\n\t\t\t\t\t\ttexture.wrapT = ClampToEdgeWrapping;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch ( texture2d.filter ) {\r\n\r\n\t\t\t\t\tcase 'auto':\r\n\t\t\t\t\t\ttexture.magFilter = LinearFilter;\r\n\t\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'linear':\r\n\t\t\t\t\t\ttexture.magFilter = LinearFilter;\r\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'nearest':\r\n\t\t\t\t\t\ttexture.magFilter = NearestFilter;\r\n\t\t\t\t\t\ttexture.minFilter = NearestFilter;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttexture.magFilter = LinearFilter;\r\n\t\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn texture;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildBasematerialsMeshes( basematerials, triangleProperties, modelData, meshData, textureData, objectData ) {\r\n\r\n\t\t\tvar objectPindex = objectData.pindex;\r\n\r\n\t\t\tvar materialMap = {};\r\n\r\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\r\n\t\t\t\tvar pindex = ( triangleProperty.p1 !== undefined ) ? triangleProperty.p1 : objectPindex;\r\n\r\n\t\t\t\tif ( materialMap[ pindex ] === undefined ) materialMap[ pindex ] = [];\r\n\r\n\t\t\t\tmaterialMap[ pindex ].push( triangleProperty );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar keys = Object.keys( materialMap );\r\n\t\t\tvar meshes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = keys.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar materialIndex = keys[ i ];\r\n\t\t\t\tvar trianglePropertiesProps = materialMap[ materialIndex ];\r\n\t\t\t\tvar basematerialData = basematerials.basematerials[ materialIndex ];\r\n\t\t\t\tvar material = getBuild( basematerialData, objects, modelData, textureData, objectData, buildBasematerial );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\t\tvar positionData = [];\r\n\r\n\t\t\t\tvar vertices = meshData.vertices;\r\n\r\n\t\t\t\tfor ( var j = 0, jl = trianglePropertiesProps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar triangleProperty = trianglePropertiesProps[ j ];\r\n\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 0 ] );\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 1 ] );\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 2 ] );\r\n\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 0 ] );\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 1 ] );\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 2 ] );\r\n\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 0 ] );\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 1 ] );\r\n\t\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 2 ] );\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positionData, 3 ) );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar mesh = new Mesh( geometry, material );\r\n\t\t\t\tmeshes.push( mesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn meshes;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildTexturedMesh( texture2dgroup, triangleProperties, modelData, meshData, textureData, objectData ) {\r\n\r\n\t\t\t// geometry\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\tvar positionData = [];\r\n\t\t\tvar uvData = [];\r\n\r\n\t\t\tvar vertices = meshData.vertices;\r\n\t\t\tvar uvs = texture2dgroup.uvs;\r\n\r\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\r\n\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 0 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 1 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v1 * 3 ) + 2 ] );\r\n\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 0 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 1 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v2 * 3 ) + 2 ] );\r\n\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 0 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 1 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( triangleProperty.v3 * 3 ) + 2 ] );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p1 * 2 ) + 0 ] );\r\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p1 * 2 ) + 1 ] );\r\n\r\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p2 * 2 ) + 0 ] );\r\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p2 * 2 ) + 1 ] );\r\n\r\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p3 * 2 ) + 0 ] );\r\n\t\t\t\tuvData.push( uvs[ ( triangleProperty.p3 * 2 ) + 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positionData, 3 ) );\r\n\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( uvData, 2 ) );\r\n\r\n\t\t\t// material\r\n\r\n\t\t\tvar texture = getBuild( texture2dgroup, objects, modelData, textureData, objectData, buildTexture );\r\n\r\n\t\t\tvar material = new MeshPhongMaterial( { map: texture, flatShading: true } );\r\n\r\n\t\t\t// mesh\r\n\r\n\t\t\tvar mesh = new Mesh( geometry, material );\r\n\r\n\t\t\treturn mesh;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildVertexColorMesh( colorgroup, triangleProperties, modelData, meshData, objectData ) {\r\n\r\n\t\t\t// geometry\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\t\tvar positionData = [];\r\n\t\t\tvar colorData = [];\r\n\r\n\t\t\tvar vertices = meshData.vertices;\r\n\t\t\tvar colors = colorgroup.colors;\r\n\r\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\r\n\r\n\t\t\t\tvar v1 = triangleProperty.v1;\r\n\t\t\t\tvar v2 = triangleProperty.v2;\r\n\t\t\t\tvar v3 = triangleProperty.v3;\r\n\r\n\t\t\t\tpositionData.push( vertices[ ( v1 * 3 ) + 0 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( v1 * 3 ) + 1 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( v1 * 3 ) + 2 ] );\r\n\r\n\t\t\t\tpositionData.push( vertices[ ( v2 * 3 ) + 0 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( v2 * 3 ) + 1 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( v2 * 3 ) + 2 ] );\r\n\r\n\t\t\t\tpositionData.push( vertices[ ( v3 * 3 ) + 0 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( v3 * 3 ) + 1 ] );\r\n\t\t\t\tpositionData.push( vertices[ ( v3 * 3 ) + 2 ] );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tvar p1 = ( triangleProperty.p1 !== undefined ) ? triangleProperty.p1 : objectData.pindex;\r\n\t\t\t\tvar p2 = ( triangleProperty.p2 !== undefined ) ? triangleProperty.p2 : p1;\r\n\t\t\t\tvar p3 = ( triangleProperty.p3 !== undefined ) ? triangleProperty.p3 : p1;\r\n\r\n\t\t\t\tcolorData.push( colors[ ( p1 * 3 ) + 0 ] );\r\n\t\t\t\tcolorData.push( colors[ ( p1 * 3 ) + 1 ] );\r\n\t\t\t\tcolorData.push( colors[ ( p1 * 3 ) + 2 ] );\r\n\r\n\t\t\t\tcolorData.push( colors[ ( p2 * 3 ) + 0 ] );\r\n\t\t\t\tcolorData.push( colors[ ( p2 * 3 ) + 1 ] );\r\n\t\t\t\tcolorData.push( colors[ ( p2 * 3 ) + 2 ] );\r\n\r\n\t\t\t\tcolorData.push( colors[ ( p3 * 3 ) + 0 ] );\r\n\t\t\t\tcolorData.push( colors[ ( p3 * 3 ) + 1 ] );\r\n\t\t\t\tcolorData.push( colors[ ( p3 * 3 ) + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positionData, 3 ) );\r\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colorData, 3 ) );\r\n\r\n\t\t\t// material\r\n\r\n\t\t\tvar material = new MeshPhongMaterial( { vertexColors: true, flatShading: true } );\r\n\r\n\t\t\t// mesh\r\n\r\n\t\t\tvar mesh = new Mesh( geometry, material );\r\n\r\n\t\t\treturn mesh;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildDefaultMesh( meshData ) {\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\t\t\tgeometry.setIndex( new BufferAttribute( meshData[ 'triangles' ], 1 ) );\r\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( meshData[ 'vertices' ], 3 ) );\r\n\r\n\t\t\tvar material = new MeshPhongMaterial( { color: 0xaaaaff, flatShading: true } );\r\n\r\n\t\t\tvar mesh = new Mesh( geometry, material );\r\n\r\n\t\t\treturn mesh;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildMeshes( resourceMap, modelData, meshData, textureData, objectData ) {\r\n\r\n\t\t\tvar keys = Object.keys( resourceMap );\r\n\t\t\tvar meshes = [];\r\n\r\n\t\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar resourceId = keys[ i ];\r\n\t\t\t\tvar triangleProperties = resourceMap[ resourceId ];\r\n\t\t\t\tvar resourceType = getResourceType( resourceId, modelData );\r\n\r\n\t\t\t\tswitch ( resourceType ) {\r\n\r\n\t\t\t\t\tcase 'material':\r\n\t\t\t\t\t\tvar basematerials = modelData.resources.basematerials[ resourceId ];\r\n\t\t\t\t\t\tvar newMeshes = buildBasematerialsMeshes( basematerials, triangleProperties, modelData, meshData, textureData, objectData );\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = newMeshes.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmeshes.push( newMeshes[ j ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'texture':\r\n\t\t\t\t\t\tvar texture2dgroup = modelData.resources.texture2dgroup[ resourceId ];\r\n\t\t\t\t\t\tmeshes.push( buildTexturedMesh( texture2dgroup, triangleProperties, modelData, meshData, textureData, objectData ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\tvar colorgroup = modelData.resources.colorgroup[ resourceId ];\r\n\t\t\t\t\t\tmeshes.push( buildVertexColorMesh( colorgroup, triangleProperties, modelData, meshData, objectData ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'default':\r\n\t\t\t\t\t\tmeshes.push( buildDefaultMesh( meshData ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error( 'THREE.3MFLoader: Unsupported resource type.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn meshes;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getResourceType( pid, modelData ) {\r\n\r\n\t\t\tif ( modelData.resources.texture2dgroup[ pid ] !== undefined ) {\r\n\r\n\t\t\t\treturn 'texture';\r\n\r\n\t\t\t} else if ( modelData.resources.basematerials[ pid ] !== undefined ) {\r\n\r\n\t\t\t\treturn 'material';\r\n\r\n\t\t\t} else if ( modelData.resources.colorgroup[ pid ] !== undefined ) {\r\n\r\n\t\t\t\treturn 'vertexColors';\r\n\r\n\t\t\t} else if ( pid === 'default' ) {\r\n\r\n\t\t\t\treturn 'default';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction analyzeObject( modelData, meshData, objectData ) {\r\n\r\n\t\t\tvar resourceMap = {};\r\n\r\n\t\t\tvar triangleProperties = meshData[ 'triangleProperties' ];\r\n\r\n\t\t\tvar objectPid = objectData.pid;\r\n\r\n\t\t\tfor ( var i = 0, l = triangleProperties.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar triangleProperty = triangleProperties[ i ];\r\n\t\t\t\tvar pid = ( triangleProperty.pid !== undefined ) ? triangleProperty.pid : objectPid;\r\n\r\n\t\t\t\tif ( pid === undefined ) pid = 'default';\r\n\r\n\t\t\t\tif ( resourceMap[ pid ] === undefined ) resourceMap[ pid ] = [];\r\n\r\n\t\t\t\tresourceMap[ pid ].push( triangleProperty );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn resourceMap;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildGroup( meshData, objects, modelData, textureData, objectData ) {\r\n\r\n\t\t\tvar group = new Group();\r\n\r\n\t\t\tvar resourceMap = analyzeObject( modelData, meshData, objectData );\r\n\t\t\tvar meshes = buildMeshes( resourceMap, modelData, meshData, textureData, objectData );\r\n\r\n\t\t\tfor ( var i = 0, l = meshes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgroup.add( meshes[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn group;\r\n\r\n\t\t}\r\n\r\n\t\tfunction applyExtensions( extensions, meshData, modelXml ) {\r\n\r\n\t\t\tif ( ! extensions ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar availableExtensions = [];\r\n\t\t\tvar keys = Object.keys( extensions );\r\n\r\n\t\t\tfor ( var i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\t\tvar ns = keys[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0; j < scope.availableExtensions.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar extension = scope.availableExtensions[ j ];\r\n\r\n\t\t\t\t\tif ( extension.ns === ns ) {\r\n\r\n\t\t\t\t\t\tavailableExtensions.push( extension );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < availableExtensions.length; i ++ ) {\r\n\r\n\t\t\t\tvar extension = availableExtensions[ i ];\r\n\t\t\t\textension.apply( modelXml, extensions[ extension[ 'ns' ] ], meshData );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getBuild( data, objects, modelData, textureData, objectData, builder ) {\r\n\r\n\t\t\tif ( data.build !== undefined ) return data.build;\r\n\r\n\t\t\tdata.build = builder( data, objects, modelData, textureData, objectData );\r\n\r\n\t\t\treturn data.build;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildBasematerial( materialData, objects, modelData ) {\r\n\r\n\t\t\tvar material;\r\n\r\n\t\t\tvar displaypropertiesid = materialData.displaypropertiesid;\r\n\t\t\tvar pbmetallicdisplayproperties = modelData.resources.pbmetallicdisplayproperties;\r\n\r\n\t\t\tif ( displaypropertiesid !== null && pbmetallicdisplayproperties[ displaypropertiesid ] !== undefined ) {\r\n\r\n\t\t\t\t// metallic display property, use StandardMaterial\r\n\r\n\t\t\t\tvar pbmetallicdisplayproperty = pbmetallicdisplayproperties[ displaypropertiesid ];\r\n\t\t\t\tvar metallicData = pbmetallicdisplayproperty.data[ materialData.index ];\r\n\r\n\t\t\t\tmaterial = new MeshStandardMaterial( { flatShading: true, roughness: metallicData.roughness, metalness: metallicData.metallicness } );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// otherwise use PhongMaterial\r\n\r\n\t\t\t\tmaterial = new MeshPhongMaterial( { flatShading: true } );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.name = materialData.name;\r\n\r\n\t\t\t// displaycolor MUST be specified with a value of a 6 or 8 digit hexadecimal number, e.g. \"#RRGGBB\" or \"#RRGGBBAA\"\r\n\r\n\t\t\tvar displaycolor = materialData.displaycolor;\r\n\r\n\t\t\tvar color = displaycolor.substring( 0, 7 );\r\n\t\t\tmaterial.color.setStyle( color );\r\n\t\t\tmaterial.color.convertSRGBToLinear(); // displaycolor is in sRGB\r\n\r\n\t\t\t// process alpha if set\r\n\r\n\t\t\tif ( displaycolor.length === 9 ) {\r\n\r\n\t\t\t\tmaterial.opacity = parseInt( displaycolor.charAt( 7 ) + displaycolor.charAt( 8 ), 16 ) / 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildComposite( compositeData, objects, modelData, textureData ) {\r\n\r\n\t\t\tvar composite = new Group();\r\n\r\n\t\t\tfor ( var j = 0; j < compositeData.length; j ++ ) {\r\n\r\n\t\t\t\tvar component = compositeData[ j ];\r\n\t\t\t\tvar build = objects[ component.objectId ];\r\n\r\n\t\t\t\tif ( build === undefined ) {\r\n\r\n\t\t\t\t\tbuildObject( component.objectId, objects, modelData, textureData );\r\n\t\t\t\t\tbuild = objects[ component.objectId ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar object3D = build.clone();\r\n\r\n\t\t\t\t// apply component transform\r\n\r\n\t\t\t\tvar transform = component.transform;\r\n\r\n\t\t\t\tif ( transform ) {\r\n\r\n\t\t\t\t\tobject3D.applyMatrix4( transform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcomposite.add( object3D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn composite;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildObject( objectId, objects, modelData, textureData ) {\r\n\r\n\t\t\tvar objectData = modelData[ 'resources' ][ 'object' ][ objectId ];\r\n\r\n\t\t\tif ( objectData[ 'mesh' ] ) {\r\n\r\n\t\t\t\tvar meshData = objectData[ 'mesh' ];\r\n\r\n\t\t\t\tvar extensions = modelData[ 'extensions' ];\r\n\t\t\t\tvar modelXml = modelData[ 'xml' ];\r\n\r\n\t\t\t\tapplyExtensions( extensions, meshData, modelXml );\r\n\r\n\t\t\t\tobjects[ objectData.id ] = getBuild( meshData, objects, modelData, textureData, objectData, buildGroup );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar compositeData = objectData[ 'components' ];\r\n\r\n\t\t\t\tobjects[ objectData.id ] = getBuild( compositeData, objects, modelData, textureData, objectData, buildComposite );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildObjects( data3mf ) {\r\n\r\n\t\t\tvar modelsData = data3mf.model;\r\n\t\t\tvar modelRels = data3mf.modelRels;\r\n\t\t\tvar objects = {};\r\n\t\t\tvar modelsKeys = Object.keys( modelsData );\r\n\t\t\tvar textureData = {};\r\n\r\n\t\t\t// evaluate model relationships to textures\r\n\r\n\t\t\tif ( modelRels ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = modelRels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar modelRel = modelRels[ i ];\r\n\t\t\t\t\tvar textureKey = modelRel.target.substring( 1 );\r\n\r\n\t\t\t\t\tif ( data3mf.texture[ textureKey ] ) {\r\n\r\n\t\t\t\t\t\ttextureData[ modelRel.target ] = data3mf.texture[ textureKey ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// start build\r\n\r\n\t\t\tfor ( var i = 0; i < modelsKeys.length; i ++ ) {\r\n\r\n\t\t\t\tvar modelsKey = modelsKeys[ i ];\r\n\t\t\t\tvar modelData = modelsData[ modelsKey ];\r\n\r\n\t\t\t\tvar objectIds = Object.keys( modelData[ 'resources' ][ 'object' ] );\r\n\r\n\t\t\t\tfor ( var j = 0; j < objectIds.length; j ++ ) {\r\n\r\n\t\t\t\t\tvar objectId = objectIds[ j ];\r\n\r\n\t\t\t\t\tbuildObject( objectId, objects, modelData, textureData );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn objects;\r\n\r\n\t\t}\r\n\r\n\t\tfunction build( objects, data3mf ) {\r\n\r\n\t\t\tvar group = new Group();\r\n\r\n\t\t\tvar relationship = data3mf[ 'rels' ][ 0 ];\r\n\t\t\tvar buildData = data3mf.model[ relationship[ 'target' ].substring( 1 ) ][ 'build' ];\r\n\r\n\t\t\tfor ( var i = 0; i < buildData.length; i ++ ) {\r\n\r\n\t\t\t\tvar buildItem = buildData[ i ];\r\n\t\t\t\tvar object3D = objects[ buildItem[ 'objectId' ] ];\r\n\r\n\t\t\t\t// apply transform\r\n\r\n\t\t\t\tvar transform = buildItem[ 'transform' ];\r\n\r\n\t\t\t\tif ( transform ) {\r\n\r\n\t\t\t\t\tobject3D.applyMatrix4( transform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.add( object3D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn group;\r\n\r\n\t\t}\r\n\r\n\t\tvar data3mf = loadDocument( data );\r\n\t\tvar objects = buildObjects( data3mf );\r\n\r\n\t\treturn build( objects, data3mf );\r\n\r\n\t},\r\n\r\n\taddExtension: function ( extension ) {\r\n\r\n\t\tthis.availableExtensions.push( extension );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nexport { ThreeMFLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/3MFLoader.js"],"sourceRoot":""}