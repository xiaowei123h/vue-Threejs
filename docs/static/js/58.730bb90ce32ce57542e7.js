webpackJsonp([58],{"6cZq":function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n={data:function(){return{vertexshader:null,fragmentshader:null,renderer:null,scene:null,camera:null,stats:null,sphere:null,uniforms:null,displacement:null,noise:null}},mounted:function(){this.vertexshader="\n            uniform float amplitude;\n\n\t\t\tattribute float displacement;\n\n\t\t\tvarying vec3 vNormal;\n\t\t\tvarying vec2 vUv;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvNormal = normal;\n\t\t\t\tvUv = ( 0.5 + amplitude ) * uv + vec2( amplitude );\n\n\t\t\t\tvec3 newPosition = position + amplitude * normal * vec3( displacement );\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n\n\t\t\t}",this.fragmentshader="\n            varying vec3 vNormal;\n\t\t\tvarying vec2 vUv;\n\n\t\t\tuniform vec3 color;\n\t\t\tuniform sampler2D colorTexture;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 light = vec3( 0.5, 0.2, 1.0 );\n\t\t\t\tlight = normalize( light );\n\n\t\t\t\tfloat dProd = dot( vNormal, light ) * 0.5 + 0.5;\n\n\t\t\t\tvec4 tcolor = texture2D( colorTexture, vUv );\n\t\t\t\tvec4 gray = vec4( vec3( tcolor.r * 0.3 + tcolor.g * 0.59 + tcolor.b * 0.11 ), 1.0 );\n\n\t\t\t\tgl_FragColor = gray * vec4( vec3( dProd ) * vec3( color ), 1.0 );\n\n\t\t\t}",this.init(),this.animate()},methods:{init:function(){this.camera=new this.$THREE.PerspectiveCamera(30,this.$webglInnerWidth/window.innerHeight,1,1e4),this.camera.position.z=300,this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(328965),this.uniforms={amplitude:{value:1},color:{value:new this.$THREE.Color(16720384)},colorTexture:{value:(new this.$THREE.TextureLoader).load("static/textures/water.jpg")}},this.uniforms.colorTexture.value.wrapS=this.uniforms.colorTexture.value.wrapT=this.$THREE.RepeatWrapping;var t=new this.$THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:this.vertexshader,fragmentShader:this.fragmentshader}),e=new this.$THREE.SphereBufferGeometry(50,128,64);this.displacement=new Float32Array(e.attributes.position.count),this.noise=new Float32Array(e.attributes.position.count);for(var i=0;i<this.displacement.length;i++)this.noise[i]=5*Math.random();e.setAttribute("displacement",new this.$THREE.BufferAttribute(this.displacement,1)),this.sphere=new this.$THREE.Mesh(e,t),this.scene.add(this.sphere),this.renderer=new this.$THREE.WebGLRenderer,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight);var n=document.getElementById("container");n.appendChild(this.renderer.domElement),this.stats=new this.$Stats,this.stats.dom.style.left="280px",n.appendChild(this.stats.dom),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){var t=.01*Date.now();this.sphere.rotation.y=this.sphere.rotation.z=.01*t,this.uniforms.amplitude.value=2.5*Math.sin(.125*this.sphere.rotation.y),this.uniforms.color.value.offsetHSL(5e-4,0,0);for(var e=0;e<this.displacement.length;e++)this.displacement[e]=Math.sin(.1*e+t),this.noise[e]+=.5*(.5-Math.random()),this.noise[e]=this.$THREE.MathUtils.clamp(this.noise[e],-5,5),this.displacement[e]+=this.noise[e];this.sphere.geometry.attributes.displacement.needsUpdate=!0,this.renderer.render(this.scene,this.camera)}}},r={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglCustomAttributes-container"},[e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" - custom attributes example")]),this._v(" "),e("div",{attrs:{id:"container"}})])}]};var s=i("VU/8")(n,r,!1,function(t){i("FbDj")},"data-v-4d3125af",null);e.default=s.exports},FbDj:function(t,e){}});
//# sourceMappingURL=58.730bb90ce32ce57542e7.js.map