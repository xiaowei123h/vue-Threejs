webpackJsonp([60],{oReD:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i("QEtz"),n=i("wIBv"),s=i("6+nK"),a=function(t,e){return this.lut=[],this.setColorMap(t,e),this};a.prototype={constructor:a,lut:[],map:[],n:256,minV:0,maxV:1,set:function(t){return t instanceof a&&this.copy(t),this},setMin:function(t){return this.minV=t,this},setMax:function(t){return this.maxV=t,this},setColorMap:function(t,e){this.map=o[t]||o.rainbow,this.n=e||32;var i=1/this.n;this.lut.length=0;for(var r=0;r<=1;r+=i)for(var n=0;n<this.map.length-1;n++)if(r>=this.map[n][0]&&r<this.map[n+1][0]){var a=this.map[n][0],h=this.map[n+1][0],l=new s.o(this.map[n][1]),u=new s.o(this.map[n+1][1]),d=l.lerp(u,(r-a)/(h-a));this.lut.push(d)}return this},copy:function(t){return this.lut=t.lut,this.map=t.map,this.n=t.n,this.minV=t.minV,this.maxV=t.maxV,this},getColor:function(t){t<=this.minV?t=this.minV:t>=this.maxV&&(t=this.maxV),t=(t-this.minV)/(this.maxV-this.minV);var e=Math.round(t*this.n);return e==this.n&&(e-=1),this.lut[e]},addColorMap:function(t,e){o[t]=e},createCanvas:function(){var t=document.createElement("canvas");return t.width=1,t.height=this.n,this.updateCanvas(t),t},updateCanvas:function(t){for(var e=t.getContext("2d",{alpha:!1}),i=e.getImageData(0,0,1,this.n),r=i.data,n=0,a=1/this.n,o=1;o>=0;o-=a)for(var h=this.map.length-1;h>=0;h--)if(o<this.map[h][0]&&o>=this.map[h-1][0]){var l=this.map[h-1][0],u=this.map[h][0],d=new s.o(this.map[h-1][1]),p=new s.o(this.map[h][1]),c=d.lerp(p,(o-l)/(u-l));r[4*n]=Math.round(255*c.r),r[4*n+1]=Math.round(255*c.g),r[4*n+2]=Math.round(255*c.b),r[4*n+3]=255,n+=1}return e.putImageData(i,0,0),t}};var o={rainbow:[[0,255],[.2,65535],[.5,65280],[.8,16776960],[1,16711680]],cooltowarm:[[0,3952322],[.2,10206463],[.5,14474460],[.8,16163717],[1,11797542]],blackbody:[[0,0],[.2,7864320],[.5,15086080],[.8,16776960],[1,16777215]],grayscale:[[0,0],[.2,4210752],[.5,8355712],[.8,12566463],[1,16777215]]},h={data:function(){return{container:null,perpCamera:null,orthoCamera:null,renderer:null,lut:null,mesh:null,sprite:null,scene:null,uiScene:null,params:null,gui:null}},mounted:function(){this.init()},beforeDestroy:function(){this.gui.hide()},methods:{init:function(){var t=this;this.container=document.getElementById("container"),this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(16777215),this.uiScene=new this.$THREE.Scene,this.lut=new a;var e=this.$webglInnerWidth,i=window.innerHeight;this.perpCamera=new this.$THREE.PerspectiveCamera(60,e/i,1,100),this.perpCamera.position.set(0,0,10),this.scene.add(this.perpCamera),this.orthoCamera=new this.$THREE.OrthographicCamera(-1,1,1,-1,1,2),this.orthoCamera.position.set(.5,0,1),this.sprite=new this.$THREE.Sprite(new this.$THREE.SpriteMaterial({map:new this.$THREE.CanvasTexture(this.lut.createCanvas())})),this.sprite.scale.x=.125,this.uiScene.add(this.sprite),this.mesh=new this.$THREE.Mesh(void 0,new this.$THREE.MeshLambertMaterial({side:this.$THREE.DoubleSide,color:16119285,vertexColors:!0})),this.scene.add(this.mesh),this.params={colorMap:"rainbow"},this.loadModel();var s=new this.$THREE.PointLight(16777215,1);this.perpCamera.add(s),this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.autoClear=!1,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(e,i),this.container.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize,!1),new n.a(this.perpCamera,this.renderer.domElement).addEventListener("change",this.render),this.gui=new r.a,this.gui.add(this.params,"colorMap",["rainbow","cooltowarm","blackbody","grayscale"]).onChange(function(){t.updateColors(),t.render()})},onWindowResize:function(){var t=window.innerWidth-281,e=window.innerHeight;this.perpCamera.aspect=t/e,this.perpCamera.updateProjectionMatrix(),this.renderer.setSize(t,e),this.render()},render:function(){this.renderer.clear(),this.renderer.render(this.scene,this.perpCamera),this.renderer.render(this.uiScene,this.orthoCamera)},loadModel:function(){var t=this;(new this.$THREE.BufferGeometryLoader).load("static/models/json/pressure.json",function(e){e.center(),e.computeVertexNormals();for(var i=[],r=0,n=e.attributes.position.count;r<n;++r)i.push(1,1,1);e.setAttribute("color",new t.$THREE.Float32BufferAttribute(i,3)),t.mesh.geometry=e,t.updateColors(),t.render()})},updateColors:function(){this.lut.setColorMap(this.params.colorMap),this.lut.setMax(2e3),this.lut.setMin(0);for(var t=this.mesh.geometry,e=t.attributes.pressure,i=t.attributes.color,r=0;r<e.array.length;r++){var n=e.array[r],s=this.lut.getColor(n);void 0===s?console.log("Unable to determine color for value:",n):i.setXYZ(r,s.r,s.g,s.b)}i.needsUpdate=!0;var a=this.sprite.material.map;this.lut.updateCanvas(a.image),a.needsUpdate=!0}}},l={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglGeometryColorsLookuptable-container"},[e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" webgl - lookup table"),e("br"),this._v("\n\t\t\tvertex color values from a range of data values\n\t\t")]),this._v(" "),e("div",{attrs:{id:"container"}})])}]};var u=i("VU/8")(h,l,!1,function(t){i("pIlT")},"data-v-45249599",null);e.default=u.exports},pIlT:function(t,e){}});
//# sourceMappingURL=60.8496aa194b4da911628f.js.map