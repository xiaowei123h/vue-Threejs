{"version":3,"sources":["webpack:///src/views/geometries/webglGeometryColors.vue","webpack:///./src/views/geometries/webglGeometryColors.vue?167c","webpack:///./src/views/geometries/webglGeometryColors.vue"],"names":["webglGeometryColors","data","container","stats","camera","scene","renderer","mouseX","mouseY","windowHalfX","windowHalfY","mounted","this","$webglInnerWidth","window","innerHeight","init","animate","methods","document","getElementById","$THREE","PerspectiveCamera","position","z","Scene","background","Color","light","DirectionalLight","set","add","canvas","createElement","width","height","context","getContext","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","shadowMesh","shadowTexture","CanvasTexture","shadowMaterial","MeshBasicMaterial","map","shadowGeo","PlaneBufferGeometry","Mesh","y","rotation","x","Math","PI","geometry1","IcosahedronBufferGeometry","count","attributes","setAttribute","BufferAttribute","Float32Array","geometry2","clone","geometry3","color","positions1","positions2","positions3","colors1","colors2","colors3","i","setHSL","getY","setXYZ","r","g","b","setRGB","material","MeshPhongMaterial","flatShading","vertexColors","shininess","wireframeMaterial","wireframe","transparent","mesh","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","$Stats","dom","style","left","addEventListener","onDocumentMouseMove","onWindowResize","innerWidth","$onWindowResize","event","clientX","clientY","requestAnimationFrame","render","update","lookAt","geometries_webglGeometryColors","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/61.bc96e714a36966e47763.js","sourcesContent":["<template>\r\n    <div class=\"webglGeometryColors-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - vertex colors</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            mouseX: 0,\r\n            mouseY: 0,\r\n\t\t\twindowHalfX: null,\r\n\t\t\twindowHalfY: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.windowHalfX = this.$webglInnerWidth/ 2\r\n        this.windowHalfY = window.innerHeight / 2\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.getElementById('container')\r\n            this.camera = new this.$THREE.PerspectiveCamera(20, this.$webglInnerWidth / window.innerHeight, 1, 10000)\r\n            this.camera.position.z = 1800\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xffffff)\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(0, 0, 1)\r\n            this.scene.add(light)\r\n            // shadow\r\n            var canvas = document.createElement('canvas')\r\n            canvas.width = 128\r\n            canvas.height = 128\r\n            var context = canvas.getContext('2d')\r\n            var gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2)\r\n            gradient.addColorStop(0.1, 'rgba(210,210,210,1)')\r\n            gradient.addColorStop(1, 'rgba(255,255,255,1)')\r\n            context.fillStyle = gradient\r\n            context.fillRect(0, 0, canvas.width, canvas.height)\r\n            var shadowTexture = new this.$THREE.CanvasTexture(canvas)\r\n            var shadowMaterial = new this.$THREE.MeshBasicMaterial({ map: shadowTexture })\r\n            var shadowGeo = new this.$THREE.PlaneBufferGeometry(300, 300, 1, 1)\r\n            var shadowMesh\r\n            shadowMesh = new this.$THREE.Mesh(shadowGeo, shadowMaterial)\r\n            shadowMesh.position.y = - 250\r\n            shadowMesh.rotation.x = - Math.PI / 2\r\n            this.scene.add(shadowMesh)\r\n            shadowMesh = new this.$THREE.Mesh(shadowGeo, shadowMaterial)\r\n            shadowMesh.position.y = - 250\r\n            shadowMesh.position.x = - 400\r\n            shadowMesh.rotation.x = - Math.PI / 2\r\n            this.scene.add(shadowMesh)\r\n            shadowMesh = new this.$THREE.Mesh(shadowGeo, shadowMaterial)\r\n            shadowMesh.position.y = - 250\r\n            shadowMesh.position.x = 400\r\n            shadowMesh.rotation.x = - Math.PI / 2\r\n            this.scene.add(shadowMesh)\r\n            var radius = 200\r\n            var geometry1 = new this.$THREE.IcosahedronBufferGeometry(radius, 1)\r\n            var count = geometry1.attributes.position.count\r\n            geometry1.setAttribute('color', new this.$THREE.BufferAttribute(new Float32Array(count * 3), 3))\r\n            var geometry2 = geometry1.clone()\r\n            var geometry3 = geometry1.clone()\r\n            var color = new this.$THREE.Color()\r\n            var positions1 = geometry1.attributes.position\r\n            var positions2 = geometry2.attributes.position\r\n            var positions3 = geometry3.attributes.position\r\n            var colors1 = geometry1.attributes.color\r\n            var colors2 = geometry2.attributes.color\r\n            var colors3 = geometry3.attributes.color\r\n            for (var i = 0; i < count; i ++) {\r\n                color.setHSL((positions1.getY(i) / radius + 1) / 2, 1.0, 0.5)\r\n                colors1.setXYZ(i, color.r, color.g, color.b)\r\n                color.setHSL(0, (positions2.getY(i) / radius + 1) / 2, 0.5)\r\n                colors2.setXYZ(i, color.r, color.g, color.b)\r\n                color.setRGB(1, 0.8 - (positions3.getY(i) / radius + 1) / 2, 0)\r\n                colors3.setXYZ(i, color.r, color.g, color.b)\r\n            }\r\n            var material = new this.$THREE.MeshPhongMaterial({\r\n                color: 0xffffff,\r\n                flatShading: true,\r\n                vertexColors: true,\r\n                shininess: 0\r\n            })\r\n            var wireframeMaterial = new this.$THREE.MeshBasicMaterial({ color: 0x000000, wireframe: true, transparent: true })\r\n            var mesh = new this.$THREE.Mesh(geometry1, material)\r\n            var wireframe = new this.$THREE.Mesh(geometry1, wireframeMaterial)\r\n            mesh.add(wireframe)\r\n            mesh.position.x = - 400\r\n            mesh.rotation.x = - 1.87\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry2, material)\r\n            wireframe = new this.$THREE.Mesh(geometry2, wireframeMaterial)\r\n            mesh.add(wireframe)\r\n            mesh.position.x = 400\r\n            this.scene.add(mesh)\r\n            mesh = new this.$THREE.Mesh(geometry3, material)\r\n            wireframe = new this.$THREE.Mesh(geometry3, wireframeMaterial)\r\n            mesh.add(wireframe)\r\n            this.scene.add(mesh)\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            document.addEventListener('mousemove', this.onDocumentMouseMove, false)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.windowHalfX = window.innerWidth / 2\r\n            this.windowHalfY = window.innerHeight / 2\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        onDocumentMouseMove(event) {\r\n            this.mouseX = (event.clientX - this.windowHalfX)\r\n            this.mouseY = (event.clientY - this.windowHalfY)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            this.camera.position.x += (this.mouseX - this.camera.position.x) * 0.05\r\n            this.camera.position.y += (- this.mouseY - this.camera.position.y) * 0.05\r\n            this.camera.lookAt(this.scene.position)\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometryColors-container {\r\n    width: 100%;\r\n    background-color: #fff;\r\n\tcolor: #444;\r\n}\r\n.webglGeometryColors-container a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometryColors.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometryColors-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - vertex colors\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7915555a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometryColors.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7915555a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometryColors.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryColors.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryColors.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7915555a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometryColors.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7915555a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometryColors.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}