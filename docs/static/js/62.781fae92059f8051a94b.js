webpackJsonp([62],{MV4y:function(t,e){},qKVE:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n={data:function(){return{vertexshader:null,fragmentshader:null,SEPARATION:100,AMOUNTX:50,AMOUNTY:50,container:null,stats:null,camera:null,scene:null,renderer:null,particles:null,count:0,mouseX:0,mouseY:0,windowHalfX:null,windowHalfY:null}},mounted:function(){this.vertexshader="\n            attribute float scale;\n\t\t\tvoid main() {\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\t\t\t\tgl_PointSize = scale * (300.0 / - mvPosition.z);\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n            }",this.fragmentshader="\n            uniform vec3 color;\n\t\t\tvoid main() {\n\t\t\t\tif (length(gl_PointCoord - vec2(0.5, 0.5)) > 0.475) discard;\n\t\t\t\tgl_FragColor = vec4(color, 1.0);\n            }",this.windowHalfX=this.$webglInnerWidth/2,this.windowHalfY=window.innerHeight/2,this.init(),this.animate()},methods:{init:function(){this.container=document.createElement("div"),document.getElementsByClassName("webglPointsWaves-container")[0].appendChild(this.container),this.camera=new this.$THREE.PerspectiveCamera(75,this.$webglInnerWidth/window.innerHeight,1,1e4),this.camera.position.z=1e3,this.scene=new this.$THREE.Scene;for(var t=this.AMOUNTX*this.AMOUNTY,e=new Float32Array(3*t),i=new Float32Array(t),n=0,s=0,r=0;r<this.AMOUNTX;r++)for(var a=0;a<this.AMOUNTY;a++)e[n]=r*this.SEPARATION-this.AMOUNTX*this.SEPARATION/2,e[n+1]=0,e[n+2]=a*this.SEPARATION-this.AMOUNTY*this.SEPARATION/2,i[s]=1,n+=3,s++;var o=new this.$THREE.BufferGeometry;o.setAttribute("position",new this.$THREE.BufferAttribute(e,3)),o.setAttribute("scale",new this.$THREE.BufferAttribute(i,1));var h=new this.$THREE.ShaderMaterial({uniforms:{color:{value:new this.$THREE.Color(16777215)}},vertexShader:this.vertexshader,fragmentShader:this.fragmentshader});this.particles=new this.$THREE.Points(o,h),this.scene.add(this.particles),this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement),this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom),this.container.style.touchAction="none",this.container.addEventListener("pointermove",this.onPointerMove,!1),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.windowHalfX=(window.innerWidth-281)/2,this.windowHalfY=window.innerHeight/2,this.$onWindowResize(this.camera,this.renderer)},onPointerMove:function(t){!1!==t.isPrimary&&(this.mouseX=t.clientX-this.windowHalfX,this.mouseY=t.clientY-this.windowHalfY)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){this.camera.position.x+=.05*(this.mouseX-this.camera.position.x),this.camera.position.y+=.05*(-this.mouseY-this.camera.position.y),this.camera.lookAt(this.scene.position);for(var t=this.particles.geometry.attributes.position.array,e=this.particles.geometry.attributes.scale.array,i=0,n=0,s=0;s<this.AMOUNTX;s++)for(var r=0;r<this.AMOUNTY;r++)t[i+1]=50*Math.sin(.3*(s+this.count))+50*Math.sin(.5*(r+this.count)),e[n]=20*(Math.sin(.3*(s+this.count))+1)+20*(Math.sin(.5*(r+this.count))+1),i+=3,n++;this.particles.geometry.attributes.position.needsUpdate=!0,this.particles.geometry.attributes.scale.needsUpdate=!0,this.renderer.render(this.scene,this.camera),this.count+=.1}}},s={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglPointsWaves-container"},[e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" - webgl particles waves example\n\t\t")])])}]};var r=i("VU/8")(n,s,!1,function(t){i("MV4y")},"data-v-d7144b92",null);e.default=r.exports}});
//# sourceMappingURL=62.781fae92059f8051a94b.js.map