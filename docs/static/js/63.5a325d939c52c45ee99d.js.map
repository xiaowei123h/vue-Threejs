{"version":3,"sources":["webpack:///./src/components/jsm/effects/OutlineEffect.js","webpack:///src/views/materials/webglMaterialsVariationsToon.vue","webpack:///./src/views/materials/webglMaterialsVariationsToon.vue?7fdc","webpack:///./src/views/materials/webglMaterialsVariationsToon.vue"],"names":["OutlineEffect","renderer","parameters","this","enabled","defaultThickness","undefined","defaultColor","Color","fromArray","defaultAlpha","defaultKeepAlive","cache","removeThresholdCount","originalMaterials","originalOnBeforeRenders","uniformsOutline","outlineThickness","value","outlineColor","outlineAlpha","vertexShader","join","fragmentShader","getOutlineMaterialFromCache","originalMaterial","data","uuid","material","ShaderMaterial","type","uniforms","UniformsUtils","merge","UniformsLib","side","BackSide","used","keepAlive","count","getOutlineMaterial","outlineMaterial","name","outlineParameters","userData","skinning","morphTargets","morphNormals","fog","toneMapped","premultipliedAlpha","displacementMap","visible","transparent","alpha","wireframe","depthTest","clippingPlanes","clipping","clipIntersection","clipShadows","version","updateOutlineMaterial","isCompatible","object","geometry","hasNormals","isBufferGeometry","attributes","normal","isMesh","setOutlineMaterial","Array","isArray","i","il","length","onBeforeRender","restoreOriginalMaterial","scene","camera","opacity","thickness","color","displacementScale","displacementBias","updateUniforms","render","renderTarget","forceClear","arguments","console","warn","setRenderTarget","clear","currentAutoClear","autoClear","renderOutline","currentSceneAutoUpdate","autoUpdate","currentSceneBackground","background","currentShadowMapEnabled","shadowMap","traverse","keys","Object","key","cleanupCache","domElement","depth","stencil","getPixelRatio","setPixelRatio","getSize","target","setSize","width","height","updateStyle","setViewport","x","y","setScissor","setScissorTest","boolean","webglMaterialsVariationsToon","container","stats","effect","particleLight","loader","mounted","_this","$THREE","FontLoader","load","font","init","animate","methods","document","createElement","getElementsByClassName","appendChild","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","SphereBufferGeometry","cubeWidth","alphaIndex","colors","Uint8Array","c","gradientMap","DataTexture","LuminanceFormat","minFilter","NearestFilter","magFilter","generateMipmaps","beta","gamma","diffuseColor","setHSL","multiplyScalar","MeshToonMaterial","mesh","Mesh","z","add","that","addLabel","location","textGeo","TextBufferGeometry","size","curveSegments","textMaterial","MeshBasicMaterial","textMesh","copy","Vector3","AmbientLight","pointLight","PointLight","WebGLRenderer","antialias","devicePixelRatio","outputEncoding","sRGBEncoding","OutlineEffect_OutlineEffect","$Stats","dom","style","left","controls","OrbitControls","minDistance","maxDistance","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","begin","end","timer","Date","now","Math","sin","cos","materials_webglMaterialsVariationsToon","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/63.5a325d939c52c45ee99d.js","sourcesContent":["import {\r\n\tBackSide,\r\n\tColor,\r\n\tShaderMaterial,\r\n\tUniformsLib,\r\n\tUniformsUtils\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * Reference: https://en.wikipedia.org/wiki/Cel_shading\r\n *\r\n * API\r\n *\r\n * 1. Traditional\r\n *\r\n * var effect = new OutlineEffect( renderer );\r\n *\r\n * function render() {\r\n *\r\n * \teffect.render( scene, camera );\r\n *\r\n * }\r\n *\r\n * 2. VR compatible\r\n *\r\n * var effect = new OutlineEffect( renderer );\r\n * var renderingOutline = false;\r\n *\r\n * scene.onAfterRender = function () {\r\n *\r\n * \tif ( renderingOutline ) return;\r\n *\r\n * \trenderingOutline = true;\r\n *\r\n * \teffect.renderOutline( scene, camera );\r\n *\r\n * \trenderingOutline = false;\r\n *\r\n * };\r\n *\r\n * function render() {\r\n *\r\n * \trenderer.render( scene, camera );\r\n *\r\n * }\r\n *\r\n * // How to set default outline parameters\r\n * new OutlineEffect( renderer, {\r\n * \tdefaultThickness: 0.01,\r\n * \tdefaultColor: [ 0, 0, 0 ],\r\n * \tdefaultAlpha: 0.8,\r\n * \tdefaultKeepAlive: true // keeps outline material in cache even if material is removed from scene\r\n * } );\r\n *\r\n * // How to set outline parameters for each material\r\n * material.userData.outlineParameters = {\r\n * \tthickness: 0.01,\r\n * \tcolor: [ 0, 0, 0 ]\r\n * \talpha: 0.8,\r\n * \tvisible: true,\r\n * \tkeepAlive: true\r\n * };\r\n */\r\n\r\nvar OutlineEffect = function ( renderer, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tthis.enabled = true;\r\n\r\n\tvar defaultThickness = parameters.defaultThickness !== undefined ? parameters.defaultThickness : 0.003;\r\n\tvar defaultColor = new Color().fromArray( parameters.defaultColor !== undefined ? parameters.defaultColor : [ 0, 0, 0 ] );\r\n\tvar defaultAlpha = parameters.defaultAlpha !== undefined ? parameters.defaultAlpha : 1.0;\r\n\tvar defaultKeepAlive = parameters.defaultKeepAlive !== undefined ? parameters.defaultKeepAlive : false;\r\n\r\n\t// object.material.uuid -> outlineMaterial or\r\n\t// object.material[ n ].uuid -> outlineMaterial\r\n\t// save at the outline material creation and release\r\n\t// if it's unused removeThresholdCount frames\r\n\t// unless keepAlive is true.\r\n\tvar cache = {};\r\n\r\n\tvar removeThresholdCount = 60;\r\n\r\n\t// outlineMaterial.uuid -> object.material or\r\n\t// outlineMaterial.uuid -> object.material[ n ]\r\n\t// save before render and release after render.\r\n\tvar originalMaterials = {};\r\n\r\n\t// object.uuid -> originalOnBeforeRender\r\n\t// save before render and release after render.\r\n\tvar originalOnBeforeRenders = {};\r\n\r\n\t//this.cache = cache;  // for debug\r\n\r\n\tvar uniformsOutline = {\r\n\t\toutlineThickness: { value: defaultThickness },\r\n\t\toutlineColor: { value: defaultColor },\r\n\t\toutlineAlpha: { value: defaultAlpha }\r\n\t};\r\n\r\n\tvar vertexShader = [\r\n\t\t\"#include <common>\",\r\n\t\t\"#include <uv_pars_vertex>\",\r\n\t\t\"#include <displacementmap_pars_vertex>\",\r\n\t\t\"#include <fog_pars_vertex>\",\r\n\t\t\"#include <morphtarget_pars_vertex>\",\r\n\t\t\"#include <skinning_pars_vertex>\",\r\n\t\t\"#include <logdepthbuf_pars_vertex>\",\r\n\t\t\"#include <clipping_planes_pars_vertex>\",\r\n\r\n\t\t\"uniform float outlineThickness;\",\r\n\r\n\t\t\"vec4 calculateOutline( vec4 pos, vec3 normal, vec4 skinned ) {\",\r\n\t\t\"\tfloat thickness = outlineThickness;\",\r\n\t\t\"\tconst float ratio = 1.0;\", // TODO: support outline thickness ratio for each vertex\r\n\t\t\"\tvec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + normal, 1.0 );\",\r\n\t\t// NOTE: subtract pos2 from pos because BackSide objectNormal is negative\r\n\t\t\"\tvec4 norm = normalize( pos - pos2 );\",\r\n\t\t\"\treturn pos + norm * thickness * pos.w * ratio;\",\r\n\t\t\"}\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\t#include <uv_vertex>\",\r\n\r\n\t\t\"\t#include <beginnormal_vertex>\",\r\n\t\t\"\t#include <morphnormal_vertex>\",\r\n\t\t\"\t#include <skinbase_vertex>\",\r\n\t\t\"\t#include <skinnormal_vertex>\",\r\n\r\n\t\t\"\t#include <begin_vertex>\",\r\n\t\t\"\t#include <morphtarget_vertex>\",\r\n\t\t\"\t#include <skinning_vertex>\",\r\n\t\t\"\t#include <displacementmap_vertex>\",\r\n\t\t\"\t#include <project_vertex>\",\r\n\r\n\t\t\"\tvec3 outlineNormal = - objectNormal;\", // the outline material is always rendered with BackSide\r\n\r\n\t\t\"\tgl_Position = calculateOutline( gl_Position, outlineNormal, vec4( transformed, 1.0 ) );\",\r\n\r\n\t\t\"\t#include <logdepthbuf_vertex>\",\r\n\t\t\"\t#include <clipping_planes_vertex>\",\r\n\t\t\"\t#include <fog_vertex>\",\r\n\r\n\t\t\"}\",\r\n\r\n\t].join( \"\\n\" );\r\n\r\n\tvar fragmentShader = [\r\n\r\n\t\t\"#include <common>\",\r\n\t\t\"#include <fog_pars_fragment>\",\r\n\t\t\"#include <logdepthbuf_pars_fragment>\",\r\n\t\t\"#include <clipping_planes_pars_fragment>\",\r\n\r\n\t\t\"uniform vec3 outlineColor;\",\r\n\t\t\"uniform float outlineAlpha;\",\r\n\r\n\t\t\"void main() {\",\r\n\r\n\t\t\"\t#include <clipping_planes_fragment>\",\r\n\t\t\"\t#include <logdepthbuf_fragment>\",\r\n\r\n\t\t\"\tgl_FragColor = vec4( outlineColor, outlineAlpha );\",\r\n\r\n\t\t\"\t#include <tonemapping_fragment>\",\r\n\t\t\"\t#include <encodings_fragment>\",\r\n\t\t\"\t#include <fog_fragment>\",\r\n\t\t\"\t#include <premultiplied_alpha_fragment>\",\r\n\r\n\t\t\"}\"\r\n\r\n\t].join( \"\\n\" );\r\n\r\n\tfunction createMaterial() {\r\n\r\n\t\treturn new ShaderMaterial( {\r\n\t\t\ttype: 'OutlineEffect',\r\n\t\t\tuniforms: UniformsUtils.merge( [\r\n\t\t\t\tUniformsLib[ 'fog' ],\r\n\t\t\t\tUniformsLib[ 'displacementmap' ],\r\n\t\t\t\tuniformsOutline\r\n\t\t\t] ),\r\n\t\t\tvertexShader: vertexShader,\r\n\t\t\tfragmentShader: fragmentShader,\r\n\t\t\tside: BackSide\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tfunction getOutlineMaterialFromCache( originalMaterial ) {\r\n\r\n\t\tvar data = cache[ originalMaterial.uuid ];\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tdata = {\r\n\t\t\t\tmaterial: createMaterial(),\r\n\t\t\t\tused: true,\r\n\t\t\t\tkeepAlive: defaultKeepAlive,\r\n\t\t\t\tcount: 0\r\n\t\t\t};\r\n\r\n\t\t\tcache[ originalMaterial.uuid ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.used = true;\r\n\r\n\t\treturn data.material;\r\n\r\n\t}\r\n\r\n\tfunction getOutlineMaterial( originalMaterial ) {\r\n\r\n\t\tvar outlineMaterial = getOutlineMaterialFromCache( originalMaterial );\r\n\r\n\t\toriginalMaterials[ outlineMaterial.uuid ] = originalMaterial;\r\n\r\n\t\tupdateOutlineMaterial( outlineMaterial, originalMaterial );\r\n\r\n\t\treturn outlineMaterial;\r\n\r\n\t}\r\n\r\n\tfunction isCompatible( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar hasNormals = false;\r\n\r\n\t\tif ( object.geometry !== undefined ) {\r\n\r\n\t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n\t\t\t\thasNormals = geometry.attributes.normal !== undefined;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thasNormals = true; // the renderer always produces a normal attribute for Geometry\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn ( object.isMesh === true && object.material !== undefined && hasNormals === true );\r\n\r\n\t}\r\n\r\n\tfunction setOutlineMaterial( object ) {\r\n\r\n\t\tif ( isCompatible( object ) === false ) return;\r\n\r\n\t\tif ( Array.isArray( object.material ) ) {\r\n\r\n\t\t\tfor ( var i = 0, il = object.material.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tobject.material[ i ] = getOutlineMaterial( object.material[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobject.material = getOutlineMaterial( object.material );\r\n\r\n\t\t}\r\n\r\n\t\toriginalOnBeforeRenders[ object.uuid ] = object.onBeforeRender;\r\n\t\tobject.onBeforeRender = onBeforeRender;\r\n\r\n\t}\r\n\r\n\tfunction restoreOriginalMaterial( object ) {\r\n\r\n\t\tif ( isCompatible( object ) === false ) return;\r\n\r\n\t\tif ( Array.isArray( object.material ) ) {\r\n\r\n\t\t\tfor ( var i = 0, il = object.material.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tobject.material[ i ] = originalMaterials[ object.material[ i ].uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobject.material = originalMaterials[ object.material.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tobject.onBeforeRender = originalOnBeforeRenders[ object.uuid ];\r\n\r\n\t}\r\n\r\n\tfunction onBeforeRender( renderer, scene, camera, geometry, material ) {\r\n\r\n\t\tvar originalMaterial = originalMaterials[ material.uuid ];\r\n\r\n\t\t// just in case\r\n\t\tif ( originalMaterial === undefined ) return;\r\n\r\n\t\tupdateUniforms( material, originalMaterial );\r\n\r\n\t}\r\n\r\n\tfunction updateUniforms( material, originalMaterial ) {\r\n\r\n\t\tvar outlineParameters = originalMaterial.userData.outlineParameters;\r\n\r\n\t\tmaterial.uniforms.outlineAlpha.value = originalMaterial.opacity;\r\n\r\n\t\tif ( outlineParameters !== undefined ) {\r\n\r\n\t\t\tif ( outlineParameters.thickness !== undefined ) material.uniforms.outlineThickness.value = outlineParameters.thickness;\r\n\t\t\tif ( outlineParameters.color !== undefined ) material.uniforms.outlineColor.value.fromArray( outlineParameters.color );\r\n\t\t\tif ( outlineParameters.alpha !== undefined ) material.uniforms.outlineAlpha.value = outlineParameters.alpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( originalMaterial.displacementMap ) {\r\n\r\n\t\t\tmaterial.uniforms.displacementMap.value = originalMaterial.displacementMap;\r\n\t\t\tmaterial.uniforms.displacementScale.value = originalMaterial.displacementScale;\r\n\t\t\tmaterial.uniforms.displacementBias.value = originalMaterial.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateOutlineMaterial( material, originalMaterial ) {\r\n\r\n\t\tif ( material.name === 'invisible' ) return;\r\n\r\n\t\tvar outlineParameters = originalMaterial.userData.outlineParameters;\r\n\r\n\t\tmaterial.skinning = originalMaterial.skinning;\r\n\t\tmaterial.morphTargets = originalMaterial.morphTargets;\r\n\t\tmaterial.morphNormals = originalMaterial.morphNormals;\r\n\t\tmaterial.fog = originalMaterial.fog;\r\n\t\tmaterial.toneMapped = originalMaterial.toneMapped;\r\n\t\tmaterial.premultipliedAlpha = originalMaterial.premultipliedAlpha;\r\n\t\tmaterial.displacementMap = originalMaterial.displacementMap;\r\n\r\n\t\tif ( outlineParameters !== undefined ) {\r\n\r\n\t\t\tif ( originalMaterial.visible === false ) {\r\n\r\n\t\t\t\tmaterial.visible = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial.visible = ( outlineParameters.visible !== undefined ) ? outlineParameters.visible : true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.transparent = ( outlineParameters.alpha !== undefined && outlineParameters.alpha < 1.0 ) ? true : originalMaterial.transparent;\r\n\r\n\t\t\tif ( outlineParameters.keepAlive !== undefined ) cache[ originalMaterial.uuid ].keepAlive = outlineParameters.keepAlive;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterial.transparent = originalMaterial.transparent;\r\n\t\t\tmaterial.visible = originalMaterial.visible;\r\n\r\n\t\t}\r\n\r\n\t\tif ( originalMaterial.wireframe === true || originalMaterial.depthTest === false ) material.visible = false;\r\n\r\n\t\tif ( originalMaterial.clippingPlanes ) {\r\n\r\n\t\t\tmaterial.clipping = true;\r\n\r\n\t\t\tmaterial.clippingPlanes = originalMaterial.clippingPlanes;\r\n\t\t\tmaterial.clipIntersection = originalMaterial.clipIntersection;\r\n\t\t\tmaterial.clipShadows = originalMaterial.clipShadows;\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.version = originalMaterial.version; // update outline material if necessary\r\n\r\n\t}\r\n\r\n\tfunction cleanupCache() {\r\n\r\n\t\tvar keys;\r\n\r\n\t\t// clear originialMaterials\r\n\t\tkeys = Object.keys( originalMaterials );\r\n\r\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\r\n\r\n\t\t\toriginalMaterials[ keys[ i ] ] = undefined;\r\n\r\n\t\t}\r\n\r\n\t\t// clear originalOnBeforeRenders\r\n\t\tkeys = Object.keys( originalOnBeforeRenders );\r\n\r\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\r\n\r\n\t\t\toriginalOnBeforeRenders[ keys[ i ] ] = undefined;\r\n\r\n\t\t}\r\n\r\n\t\t// remove unused outlineMaterial from cache\r\n\t\tkeys = Object.keys( cache );\r\n\r\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar key = keys[ i ];\r\n\r\n\t\t\tif ( cache[ key ].used === false ) {\r\n\r\n\t\t\t\tcache[ key ].count ++;\r\n\r\n\t\t\t\tif ( cache[ key ].keepAlive === false && cache[ key ].count > removeThresholdCount ) {\r\n\r\n\t\t\t\t\tdelete cache[ key ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcache[ key ].used = false;\r\n\t\t\t\tcache[ key ].count = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tvar renderTarget;\r\n\t\tvar forceClear = false;\r\n\r\n\t\tif ( arguments[ 2 ] !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.OutlineEffect.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\r\n\t\t\trenderTarget = arguments[ 2 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( arguments[ 3 ] !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.OutlineEffect.render(): the forceClear argument has been removed. Use .clear() instead.' );\r\n\t\t\tforceClear = arguments[ 3 ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget !== undefined ) renderer.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( forceClear ) renderer.clear();\r\n\r\n\t\tif ( this.enabled === false ) {\r\n\r\n\t\t\trenderer.render( scene, camera );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar currentAutoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = this.autoClear;\r\n\r\n\t\trenderer.render( scene, camera );\r\n\r\n\t\trenderer.autoClear = currentAutoClear;\r\n\r\n\t\tthis.renderOutline( scene, camera );\r\n\r\n\t};\r\n\r\n\tthis.renderOutline = function ( scene, camera ) {\r\n\r\n\t\tvar currentAutoClear = renderer.autoClear;\r\n\t\tvar currentSceneAutoUpdate = scene.autoUpdate;\r\n\t\tvar currentSceneBackground = scene.background;\r\n\t\tvar currentShadowMapEnabled = renderer.shadowMap.enabled;\r\n\r\n\t\tscene.autoUpdate = false;\r\n\t\tscene.background = null;\r\n\t\trenderer.autoClear = false;\r\n\t\trenderer.shadowMap.enabled = false;\r\n\r\n\t\tscene.traverse( setOutlineMaterial );\r\n\r\n\t\trenderer.render( scene, camera );\r\n\r\n\t\tscene.traverse( restoreOriginalMaterial );\r\n\r\n\t\tcleanupCache();\r\n\r\n\t\tscene.autoUpdate = currentSceneAutoUpdate;\r\n\t\tscene.background = currentSceneBackground;\r\n\t\trenderer.autoClear = currentAutoClear;\r\n\t\trenderer.shadowMap.enabled = currentShadowMapEnabled;\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * See #9918\r\n\t *\r\n\t * The following property copies and wrapper methods enable\r\n\t * OutlineEffect to be called from other *Effect, like\r\n\t *\r\n\t * effect = new StereoEffect( new OutlineEffect( renderer ) );\r\n\t *\r\n\t * function render () {\r\n\t *\r\n \t * \teffect.render( scene, camera );\r\n\t *\r\n\t * }\r\n\t */\r\n\tthis.autoClear = renderer.autoClear;\r\n\tthis.domElement = renderer.domElement;\r\n\tthis.shadowMap = renderer.shadowMap;\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn renderer.getPixelRatio();\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\trenderer.setPixelRatio( value );\r\n\r\n\t};\r\n\r\n\tthis.getSize = function ( target ) {\r\n\r\n\t\treturn renderer.getSize( target );\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\trenderer.setSize( width, height, updateStyle );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\trenderer.setViewport( x, y, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\trenderer.setScissor( x, y, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\trenderer.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\trenderer.setRenderTarget( renderTarget );\r\n\r\n\t};\r\n\r\n};\r\n\r\nexport { OutlineEffect };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/effects/OutlineEffect.js","<template>\r\n    <div class=\"webglMaterialsVariationsToon-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - Toon Material Variantions with OutlineEffect</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { OutlineEffect } from '@/components/jsm/effects/OutlineEffect.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            effect: null,\r\n\t\t\tparticleLight: null,\r\n\t\t\tloader: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.loader = new this.$THREE.FontLoader()\r\n        this.loader.load('static/fonts/gentilis_regular.typeface.json', (font) => {\r\n            this.init(font)\r\n            this.animate()\r\n        })\r\n    },\r\n    methods: {\r\n        init(font) {\r\n            this.container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsVariationsToon-container')[0].appendChild(this.container)\r\n            this.camera = new this.$THREE.PerspectiveCamera(40, this.$webglInnerWidth / window.innerHeight, 1, 2500)\r\n            this.camera.position.set(0.0, 400, 400 * 3.5)\r\n            //\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x444488)\r\n            // Materials\r\n            var cubeWidth = 400\r\n            var numberOfSphersPerSide = 5\r\n            var sphereRadius = (cubeWidth / numberOfSphersPerSide) * 0.8 * 0.5\r\n            var stepSize = 1.0 / numberOfSphersPerSide\r\n            var geometry = new this.$THREE.SphereBufferGeometry(sphereRadius, 32, 16)\r\n            for (var alpha = 0, alphaIndex = 0; alpha <= 1.0; alpha += stepSize, alphaIndex ++) {\r\n                var colors = new Uint8Array(alphaIndex + 2)\r\n                for (var c = 0; c <= colors.length; c ++) {\r\n                    colors[ c ] = (c / colors.length) * 256\r\n                }\r\n                var gradientMap = new this.$THREE.DataTexture(colors, colors.length, 1, this.$THREE.LuminanceFormat)\r\n                gradientMap.minFilter = this.$THREE.NearestFilter\r\n                gradientMap.magFilter = this.$THREE.NearestFilter\r\n                gradientMap.generateMipmaps = false\r\n                for (var beta = 0; beta <= 1.0; beta += stepSize) {\r\n                    for (var gamma = 0; gamma <= 1.0; gamma += stepSize) {\r\n                        // basic monochromatic energy preservation\r\n                        var diffuseColor = new this.$THREE.Color().setHSL(alpha, 0.5, gamma * 0.5 + 0.1).multiplyScalar(1 - beta * 0.2)\r\n                        var material = new this.$THREE.MeshToonMaterial({\r\n                            color: diffuseColor,\r\n                            gradientMap: gradientMap\r\n                        })\r\n                        var mesh = new this.$THREE.Mesh(geometry, material)\r\n                        mesh.position.x = alpha * 400 - 200\r\n                        mesh.position.y = beta * 400 - 200\r\n                        mesh.position.z = gamma * 400 - 200\r\n                        this.scene.add(mesh)\r\n                    }\r\n                }\r\n            }\r\n            var that = this\r\n            function addLabel(name, location) {\r\n                var textGeo = new that.$THREE.TextBufferGeometry(name, {\r\n                    font: font,\r\n                    size: 20,\r\n                    height: 1,\r\n                    curveSegments: 1\r\n                })\r\n                var textMaterial = new that.$THREE.MeshBasicMaterial()\r\n                var textMesh = new that.$THREE.Mesh(textGeo, textMaterial)\r\n                textMesh.position.copy(location)\r\n                that.scene.add(textMesh)\r\n            }\r\n            addLabel(\"-gradientMap\", new this.$THREE.Vector3(- 350, 0, 0))\r\n            addLabel(\"+gradientMap\", new this.$THREE.Vector3(350, 0, 0))\r\n            addLabel(\"-diffuse\", new this.$THREE.Vector3(0, 0, - 300))\r\n            addLabel(\"+diffuse\", new this.$THREE.Vector3(0, 0, 300))\r\n            this.particleLight = new this.$THREE.Mesh(\r\n                new this.$THREE.SphereBufferGeometry(4, 8, 8),\r\n                new this.$THREE.MeshBasicMaterial({ color: 0xffffff })\r\n            )\r\n            this.scene.add(this.particleLight)\r\n            // Lights\r\n            this.scene.add(new this.$THREE.AmbientLight(0x888888))\r\n            var pointLight = new this.$THREE.PointLight(0xffffff, 2, 800)\r\n            this.particleLight.add(pointLight)\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.effect = new OutlineEffect(this.renderer)\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.minDistance = 200\r\n            controls.maxDistance = 2000\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.stats.begin()\r\n            this.render()\r\n            this.stats.end()\r\n        },\r\n        render() {\r\n            var timer = Date.now() * 0.00025\r\n            this.particleLight.position.x = Math.sin(timer * 7) * 300\r\n            this.particleLight.position.y = Math.cos(timer * 5) * 400\r\n            this.particleLight.position.z = Math.cos(timer * 3) * 300\r\n            this.effect.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsVariationsToon-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsVariationsToon.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsVariationsToon-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - Toon Material Variantions with OutlineEffect\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-76adb701\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsVariationsToon.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-76adb701\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsVariationsToon.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsVariationsToon.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsVariationsToon.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-76adb701\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsVariationsToon.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-76adb701\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsVariationsToon.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}