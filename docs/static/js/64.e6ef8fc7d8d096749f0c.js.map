{"version":3,"sources":["webpack:///./src/components/jsm/geometries/BoxLineGeometry.js","webpack:///src/views/vr/webxrVrBallshooter.vue","webpack:///./src/views/vr/webxrVrBallshooter.vue?3f81","webpack:///./src/views/vr/webxrVrBallshooter.vue"],"names":["__webpack_require__","d","__webpack_exports__","BoxLineGeometry","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","width","height","depth","widthSegments","heightSegments","depthSegments","BufferGeometry","call","this","widthHalf","heightHalf","depthHalf","segmentWidth","Math","floor","segmentHeight","segmentDepth","vertices","x","y","z","i","push","setAttribute","Float32BufferAttribute","prototype","Object","create","constructor","webxrVrBallshooter","data","camera","scene","renderer","controller1","controller2","controllerGrip1","controllerGrip2","room","count","radius","normal","relativeVelocity","clock","mounted","$THREE","Vector3","Clock","init","animate","methods","_this","Scene","background","Color","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","LineSegments","LineBasicMaterial","color","geometry","translate","add","HemisphereLight","light","DirectionalLight","normalize","IcosahedronBufferGeometry","object","Mesh","MeshLambertMaterial","random","userData","velocity","onSelectStart","isSelecting","onSelectEnd","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","xr","enabled","document","getElementsByClassName","appendChild","domElement","VRButton","createButton","getController","addEventListener","event","buildController","remove","children","controllerModelFactory","XRControllerModelFactory","getControllerGrip","createControllerModel","onWindowResize","material","targetRayMode","vertexColors","blending","AdditiveBlending","Line","RingBufferGeometry","MeshBasicMaterial","opacity","transparent","$onWindowResize","handleController","controller","copy","applyQuaternion","quaternion","length","setAnimationLoop","render","delta","getDelta","range","MathUtils","clamp","max","j","object2","sub","distance","multiplyScalar","dot","vr_webxrVrBallshooter","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","normalizeComponent","ssrContext"],"mappings":"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","file":"static/js/64.e6ef8fc7d8d096749f0c.js","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFloat32BufferAttribute\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar BoxLineGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tBufferGeometry.call( this );\r\n\r\n\twidth = width || 1;\r\n\theight = height || 1;\r\n\tdepth = depth || 1;\r\n\r\n\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\tvar widthHalf = width / 2;\r\n\tvar heightHalf = height / 2;\r\n\tvar depthHalf = depth / 2;\r\n\r\n\tvar segmentWidth = width / widthSegments;\r\n\tvar segmentHeight = height / heightSegments;\r\n\tvar segmentDepth = depth / depthSegments;\r\n\r\n\tvar vertices = [];\r\n\r\n\tvar x = - widthHalf, y = - heightHalf, z = - depthHalf;\r\n\r\n\tfor ( var i = 0; i <= widthSegments; i ++ ) {\r\n\r\n\t\tvertices.push( x, - heightHalf, - depthHalf, x, heightHalf, - depthHalf );\r\n\t\tvertices.push( x, heightHalf, - depthHalf, x, heightHalf, depthHalf );\r\n\t\tvertices.push( x, heightHalf, depthHalf, x, - heightHalf, depthHalf );\r\n\t\tvertices.push( x, - heightHalf, depthHalf, x, - heightHalf, - depthHalf );\r\n\r\n\t\tx += segmentWidth;\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i <= heightSegments; i ++ ) {\r\n\r\n\t\tvertices.push( - widthHalf, y, - depthHalf, widthHalf, y, - depthHalf );\r\n\t\tvertices.push( widthHalf, y, - depthHalf, widthHalf, y, depthHalf );\r\n\t\tvertices.push( widthHalf, y, depthHalf, - widthHalf, y, depthHalf );\r\n\t\tvertices.push( - widthHalf, y, depthHalf, - widthHalf, y, - depthHalf );\r\n\r\n\t\ty += segmentHeight;\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i <= depthSegments; i ++ ) {\r\n\r\n\t\tvertices.push( - widthHalf, - heightHalf, z, - widthHalf, heightHalf, z );\r\n\t\tvertices.push( - widthHalf, heightHalf, z, widthHalf, heightHalf, z );\r\n\t\tvertices.push( widthHalf, heightHalf, z, widthHalf, - heightHalf, z );\r\n\t\tvertices.push( widthHalf, - heightHalf, z, - widthHalf, - heightHalf, z );\r\n\r\n\t\tz += segmentDepth;\r\n\r\n\t}\r\n\r\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n};\r\n\r\nBoxLineGeometry.prototype = Object.create( BufferGeometry.prototype );\r\nBoxLineGeometry.prototype.constructor = BoxLineGeometry;\r\n\r\nexport { BoxLineGeometry };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/geometries/BoxLineGeometry.js","<template>\r\n    <div class=\"webxrVrBallshooter-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> vr - ball shooter\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { BoxLineGeometry } from '@/components/jsm/geometries/BoxLineGeometry.js'\r\nimport { VRButton } from '@/components/jsm/webxr/VRButton.js'\r\nimport { XRControllerModelFactory } from '@/components/jsm/webxr/XRControllerModelFactory.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            controller1: null,\r\n            controller2: null,\r\n            controllerGrip1: null,\r\n            controllerGrip2: null,\r\n\t\t\troom: null,\r\n\t\t\tcount: 0,\r\n\t\t\tradius: 0.08,\r\n\t\t\tnormal: null,\r\n\t\t\trelativeVelocity: null,\r\n\t\t\tclock: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.normal = new this.$THREE.Vector3()\r\n        this.relativeVelocity = new this.$THREE.Vector3()\r\n        this.clock = new this.$THREE.Clock()\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x505050)\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 0.1, 10)\r\n            this.camera.position.set(0, 1.6, 3)\r\n            this.room = new this.$THREE.LineSegments(\r\n                new BoxLineGeometry(6, 6, 6, 10, 10, 10),\r\n                new this.$THREE.LineBasicMaterial({ color: 0x808080 })\r\n            )\r\n            this.room.geometry.translate(0, 3, 0)\r\n            this.scene.add(this.room)\r\n            this.scene.add(new this.$THREE.HemisphereLight(0x606060, 0x404040))\r\n            var light = new this.$THREE.DirectionalLight(0xffffff)\r\n            light.position.set(1, 1, 1).normalize()\r\n            this.scene.add(light)\r\n            var geometry = new this.$THREE.IcosahedronBufferGeometry(this.radius, 3)\r\n            for (var i = 0; i < 200; i ++) {\r\n                var object = new this.$THREE.Mesh(geometry, new this.$THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff }))\r\n                object.position.x = Math.random() * 4 - 2\r\n                object.position.y = Math.random() * 4\r\n                object.position.z = Math.random() * 4 - 2\r\n                object.userData.velocity = new this.$THREE.Vector3()\r\n                object.userData.velocity.x = Math.random() * 0.01 - 0.005\r\n                object.userData.velocity.y = Math.random() * 0.01 - 0.005\r\n                object.userData.velocity.z = Math.random() * 0.01 - 0.005\r\n                this.room.add(object)\r\n            }\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            this.renderer.xr.enabled = true\r\n            document.getElementsByClassName('webxrVrBallshooter-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            document.getElementsByClassName('webxrVrBallshooter-container')[0].appendChild(VRButton.createButton(this.renderer))\r\n            // controllers\r\n            function onSelectStart() {\r\n                this.userData.isSelecting = true\r\n            }\r\n            function onSelectEnd() {\r\n                this.userData.isSelecting = false\r\n            }\r\n            this.controller1 = this.renderer.xr.getController(0)\r\n            this.controller1.addEventListener('selectstart', onSelectStart)\r\n            this.controller1.addEventListener('selectend', onSelectEnd)\r\n            this.controller1.addEventListener('connected', (event) => {\r\n                this.add(buildController(event.data))\r\n            })\r\n            this.controller1.addEventListener('disconnected', () => {\r\n                this.remove(this.children[ 0 ])\r\n            })\r\n            this.scene.add(this.controller1)\r\n            this.controller2 = this.renderer.xr.getController(1)\r\n            this.controller2.addEventListener('selectstart', onSelectStart)\r\n            this.controller2.addEventListener('selectend', onSelectEnd)\r\n            this.controller2.addEventListener('connected', (event) => {\r\n                this.add(buildController(event.data))\r\n            })\r\n            this.controller2.addEventListener('disconnected', () => {\r\n                this.remove(this.children[ 0 ])\r\n            })\r\n            this.scene.add(this.controller2)\r\n            // The XRControllerModelFactory will automatically fetch controller models\r\n            // that match what the user is holding as closely as possible. The models\r\n            // should be attached to the object returned from getControllerGrip in\r\n            // order to match the orientation of the held device.\r\n            var controllerModelFactory = new XRControllerModelFactory()\r\n            this.controllerGrip1 = this.renderer.xr.getControllerGrip(0)\r\n            this.controllerGrip1.add(controllerModelFactory.createControllerModel(this.controllerGrip1))\r\n            this.scene.add(this.controllerGrip1)\r\n            this.controllerGrip2 = this.renderer.xr.getControllerGrip(1)\r\n            this.controllerGrip2.add(controllerModelFactory.createControllerModel(this.controllerGrip2))\r\n            this.scene.add(this.controllerGrip2)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        buildController(data) {\r\n            var geometry, material\r\n            switch (data.targetRayMode) {\r\n                case 'tracked-pointer':\r\n                    geometry = new this.$THREE.BufferGeometry()\r\n                    geometry.setAttribute('position', new this.$THREE.Float32BufferAttribute([ 0, 0, 0, 0, 0, - 1 ], 3))\r\n                    geometry.setAttribute('color', new this.$THREE.Float32BufferAttribute([ 0.5, 0.5, 0.5, 0, 0, 0 ], 3))\r\n                    material = new this.$THREE.LineBasicMaterial({ vertexColors: true, blending: this.$THREE.AdditiveBlending })\r\n                    return new this.$THREE.Line(geometry, material)\r\n                case 'gaze':\r\n                    geometry = new this.$THREE.RingBufferGeometry(0.02, 0.04, 32).translate(0, 0, - 1)\r\n                    material = new this.$THREE.MeshBasicMaterial({ opacity: 0.5, transparent: true })\r\n                    return new this.$THREE.Mesh(geometry, material)\r\n            }\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        handleController(controller) {\r\n            if (controller.userData.isSelecting) {\r\n                var object = this.room.children[ count ++ ]\r\n                object.position.copy(controller.position)\r\n                object.userData.velocity.x = (Math.random() - 0.5) * 3\r\n                object.userData.velocity.y = (Math.random() - 0.5) * 3\r\n                object.userData.velocity.z = (Math.random() - 9)\r\n                object.userData.velocity.applyQuaternion(controller.quaternion)\r\n                if (this.count === this.room.children.length) this.count = 0\r\n            }\r\n        },\r\n        animate() {\r\n            this.renderer.setAnimationLoop(this.render)\r\n        },\r\n        render() {\r\n            this.handleController(this.controller1)\r\n            this.handleController(this.controller2)\r\n            //\r\n            var delta = this.clock.getDelta() * 0.8 // slow down simulation\r\n            var range = 3 - this.radius\r\n            for (var i = 0; i < this.room.children.length; i ++) {\r\n                var object = this.room.children[ i ]\r\n                object.position.x += object.userData.velocity.x * delta\r\n                object.position.y += object.userData.velocity.y * delta\r\n                object.position.z += object.userData.velocity.z * delta\r\n                // keep objects inside this.room\r\n                if (object.position.x < - range || object.position.x > range) {\r\n                    object.position.x = this.$THREE.MathUtils.clamp(object.position.x, - range, range)\r\n                    object.userData.velocity.x = - object.userData.velocity.x\r\n                }\r\n                if (object.position.y < this.radius || object.position.y > 6) {\r\n                    object.position.y = Math.max(object.position.y, this.radius)\r\n                    object.userData.velocity.x *= 0.98\r\n                    object.userData.velocity.y = - object.userData.velocity.y * 0.8\r\n                    object.userData.velocity.z *= 0.98\r\n                }\r\n                if (object.position.z < - range || object.position.z > range) {\r\n                    object.position.z = this.$THREE.MathUtils.clamp(object.position.z, - range, range)\r\n                    object.userData.velocity.z = - object.userData.velocity.z\r\n                }\r\n                for (var j = i + 1; j < this.room.children.length; j ++) {\r\n                    var object2 = this.room.children[ j ]\r\n                    this.normal.copy(object.position).sub(object2.position)\r\n                    var distance = this.normal.length()\r\n                    if (distance < 2 * this.radius) {\r\n                        this.normal.multiplyScalar(0.5 * distance - this.radius)\r\n                        object.position.sub(this.normal)\r\n                        object2.position.add(this.normal)\r\n                        this.normal.normalize()\r\n                        this.relativeVelocity.copy(object.userData.velocity).sub(object2.userData.velocity)\r\n                        this.normal = this.normal.multiplyScalar(this.relativeVelocity.dot(this.normal))\r\n                        object.userData.velocity.sub(this.normal)\r\n                        object2.userData.velocity.add(this.normal)\r\n                    }\r\n                }\r\n                object.userData.velocity.y -= 9.8 * delta\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webxrVrBallshooter-container {\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/vr/webxrVrBallshooter.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webxrVrBallshooter-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" vr - ball shooter\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-14c15c51\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/vr/webxrVrBallshooter.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-14c15c51\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webxrVrBallshooter.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webxrVrBallshooter.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webxrVrBallshooter.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-14c15c51\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webxrVrBallshooter.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-14c15c51\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/vr/webxrVrBallshooter.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}