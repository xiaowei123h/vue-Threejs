{"version":3,"sources":["webpack:///./src/components/jsm/curves/NURBSUtils.js","webpack:///./src/components/jsm/curves/NURBSCurve.js","webpack:///./src/components/jsm/loaders/FBXLoader.js","webpack:///src/views/materials/webglMaterialsPhysicalSheen.vue","webpack:///./src/views/materials/webglMaterialsPhysicalSheen.vue?301a","webpack:///./src/views/materials/webglMaterialsPhysicalSheen.vue"],"names":["NURBSUtils","findSpan","p","u","U","n","length","low","high","mid","Math","floor","calcBasisFunctions","span","N","left","right","j","saved","r","rv","lv","temp","calcBSplinePoint","P","this","C","Vector4","point","Nj","wNj","w","x","y","z","calcBasisFunctionDerivatives","zeroArr","i","ders","slice","ndu","s1","s2","a","k","d","rk","pk","j2","calcBSplineDerivatives","nd","du","CK","nders","Pw","clone","multiplyScalar","add","calcKoverI","nom","denom","calcRationalCurveDerivatives","Pders","Aders","wders","Vector3","v","sub","divideScalar","calcNURBSDerivatives","calcSurfacePoint","q","V","target","uspan","vspan","Nu","Nv","l","Sw","set","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","Curve","call","prototype","Object","create","constructor","getPoint","t","optionalTarget","hpoint","getTangent","tangent","copy","normalize","FBXLoader","fbxTree","connections","sceneGraph","manager","Loader","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","buffer","littleEndian","dv","DataView","offset","undefined","FBXTree","getFbxVersion","text","match","parseInt","Error","convertFBXTimeToSeconds","time","assign","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","parse","e","console","error","itemError","FBXBuffer","CORRECT","byteLength","convertArrayBufferToString","FBXText","cursor","read","result","num","isFbxFormatASCII","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Map","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","push","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","arrayBufferContent","Content","ArrayBuffer","base64Content","image","parseImage","filename","split","pop","type","content","fileName","extension","lastIndexOf","toLowerCase","getHandler","warn","array","Uint8Array","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","value","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","repeat","currentPath","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","_typeof","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","setValues","BumpFactor","bumpScale","Diffuse","color","Color","fromArray","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","aoMap","map","encoding","sRGBEncoding","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","indices","weights","transformLink","Matrix4","TransformLink","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","geoID","filter","Group","modelMap","parseModels","modelNodes","Model","model","modelNode","setLookAtProperties","connection","parent","bindSkeleton","createAmbientLight","setupMorphMaterials","traverse","node","userData","transformData","parentMatrixWorld","matrix","transform","generateTransform","applyMatrix4","animations","isGroup","buildSkeleton","createCamera","createLight","createMesh","createCurve","Bone","PropertyBinding","sanitizeNodeName","getTransformData","bone","subBone","matrixWorld","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","DirectionalLight","angle","PI","InnerAngle","MathUtils","degToRad","penumbra","OuterAngle","max","SpotLight","CastShadows","castShadow","geometry","attributes","vertexColors","FBX_Deformer","skinning","SkinnedMesh","normalizeSkinWeights","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","inheritType","InheritType","eulerOrder","getEulerOrder","RotationOrder","translation","Lcl_Translation","preRotation","PreRotation","rotation","Lcl_Rotation","postRotation","PostRotation","scale","Lcl_Scaling","scalingOffset","ScalingOffset","scalingPivot","ScalingPivot","rotationOffset","RotationOffset","rotationPivot","RotationPivot","lookAtTarget","pos","position","lookAt","bindMatrices","parsePoseNodes","geoConnParent","bind","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","Array","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","g","b","AmbientLight","isMesh","morphAttributes","setupMorphMaterial","index","uuid","matUuid","sharedMat","mat","clonedMat","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","Float32BufferAttribute","vertex","setAttribute","colors","Uint16BufferAttribute","weightsIndices","vertexWeights","normal","normalMatrix","Matrix3","getNormalMatrix","normalAttribute","applyNormalMatrix","uvs","uvBuffer","toString","mappingType","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","UV","parseUVs","weightTable","weight","polygonIndex","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","vertexIndex","polygonVertexIndex","endOfFace","weightIndices","data","getData","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","morphTargetsRelative","rawTarget","morphGeoNode","genMorphGeometry","morphPositionsSparse","morphPositions","Float32Array","morphIndex","morphGeoInfo","morphBuffers","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","order","Order","isNaN","KnotVector","pointsValues","Points","Form","vertices","getPoints","positions","toArray","BufferAttribute","animationClips","rawClips","parseClips","key","rawClip","clip","addClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","concat","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","T","keys","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","invert","quaternion","euler","quaternionValues","premultiply","multiply","QuaternionKeyframeTrack","val","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","elem","prevValue","xIndex","yIndex","zIndex","xValue","yValue","zValue","curve","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","inject","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","connProps","from","to","rest","append","parseNumberArray","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","type2","flag","reader","skip","version","getUint32","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","Inflate","reader2","decompress","nullByte","decodeText","dataArray","infoObject","tempEuler","tempVec","lTranslationM","lPreRotationM","lRotationM","lPostRotationM","lScalingM","lScalingPivotM","lScalingOffsetM","lRotationOffsetM","lRotationPivotM","lParentGX","lGlobalT","setPosition","makeRotationFromEuler","lLRM","lParentGRM","extractRotation","copyPosition","lParentGSM","lGlobalRS","lParentLSM_inv","lParentGSM_noLocal","lRotationPivotM_inv","lScalingPivotM_inv","lTransform","lLocalTWithAllPivotAndOffsetInfo","lGlobalTranslation","enums","a1","a2","webglMaterialsPhysicalSheen","camera","controls","scene","renderer","stats","directionalLight","mesh","sphere","nodeMaterial","params","gui","mounted","_this","$THREE","sheenBRDF","sheen","roughness","exposure","FBXLoader_FBXLoader","loadedModel","init","beforeDestroy","hide","methods","$webglInnerWidth","Scene","background","MeshPhysicalMaterial","side","DoubleSide","metalness","Nodes","SphereBufferGeometry","container","document","getElementById","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","appendChild","domElement","OrbitControls","update","MeshBasicMaterial","$Stats","dom","style","top","addEventListener","onWindowResize","dat_gui_module","that","onUpdate","needsUpdate","needsCompile","onChange","addColor","open","animate","$onWindowResize","requestAnimationFrame","render","toneMappingExposure","materials_webglMaterialsPhysicalSheen","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","_v","href","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/69.a55ff157ab453a74a2be.js","sourcesContent":["import {\r\n\tVector3,\r\n\tVector4\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * NURBS utils\r\n *\r\n * See NURBSCurve and NURBSSurface.\r\n **/\r\n\r\n\r\n/**************************************************************\r\n *\tNURBS Utils\r\n **************************************************************/\r\n\r\nvar NURBSUtils = {\r\n\r\n\t/*\r\n\tFinds knot vector span.\r\n\r\n\tp : degree\r\n\tu : parametric value\r\n\tU : knot vector\r\n\r\n\treturns the span\r\n\t*/\r\n\tfindSpan: function ( p, u, U ) {\r\n\r\n\t\tvar n = U.length - p - 1;\r\n\r\n\t\tif ( u >= U[ n ] ) {\r\n\r\n\t\t\treturn n - 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( u <= U[ p ] ) {\r\n\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\tvar low = p;\r\n\t\tvar high = n;\r\n\t\tvar mid = Math.floor( ( low + high ) / 2 );\r\n\r\n\t\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\r\n\r\n\t\t\tif ( u < U[ mid ] ) {\r\n\r\n\t\t\t\thigh = mid;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlow = mid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmid = Math.floor( ( low + high ) / 2 );\r\n\r\n\t\t}\r\n\r\n\t\treturn mid;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\r\n\r\n\tspan : span in which u lies\r\n\tu    : parametric point\r\n\tp    : degree\r\n\tU    : knot vector\r\n\r\n\treturns array[p+1] with basis functions values.\r\n\t*/\r\n\tcalcBasisFunctions: function ( span, u, p, U ) {\r\n\r\n\t\tvar N = [];\r\n\t\tvar left = [];\r\n\t\tvar right = [];\r\n\t\tN[ 0 ] = 1.0;\r\n\r\n\t\tfor ( var j = 1; j <= p; ++ j ) {\r\n\r\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\r\n\t\t\tright[ j ] = U[ span + j ] - u;\r\n\r\n\t\t\tvar saved = 0.0;\r\n\r\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\r\n\r\n\t\t\t\tvar rv = right[ r + 1 ];\r\n\t\t\t\tvar lv = left[ j - r ];\r\n\t\t\t\tvar temp = N[ r ] / ( rv + lv );\r\n\t\t\t\tN[ r ] = saved + rv * temp;\r\n\t\t\t\tsaved = lv * temp;\r\n\r\n\t\t\t }\r\n\r\n\t\t\t N[ j ] = saved;\r\n\r\n\t\t }\r\n\r\n\t\t return N;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\r\n\r\n\tp : degree of B-Spline\r\n\tU : knot vector\r\n\tP : control points (x, y, z, w)\r\n\tu : parametric point\r\n\r\n\treturns point for given u\r\n\t*/\r\n\tcalcBSplinePoint: function ( p, U, P, u ) {\r\n\r\n\t\tvar span = this.findSpan( p, u, U );\r\n\t\tvar N = this.calcBasisFunctions( span, u, p, U );\r\n\t\tvar C = new Vector4( 0, 0, 0, 0 );\r\n\r\n\t\tfor ( var j = 0; j <= p; ++ j ) {\r\n\r\n\t\t\tvar point = P[ span - p + j ];\r\n\t\t\tvar Nj = N[ j ];\r\n\t\t\tvar wNj = point.w * Nj;\r\n\t\t\tC.x += point.x * wNj;\r\n\t\t\tC.y += point.y * wNj;\r\n\t\t\tC.z += point.z * wNj;\r\n\t\t\tC.w += point.w * Nj;\r\n\r\n\t\t}\r\n\r\n\t\treturn C;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\r\n\r\n\tspan : span in which u lies\r\n\tu    : parametric point\r\n\tp    : degree\r\n\tn    : number of derivatives to calculate\r\n\tU    : knot vector\r\n\r\n\treturns array[n+1][p+1] with basis functions derivatives\r\n\t*/\r\n\tcalcBasisFunctionDerivatives: function ( span, u, p, n, U ) {\r\n\r\n\t\tvar zeroArr = [];\r\n\t\tfor ( var i = 0; i <= p; ++ i )\r\n\t\t\tzeroArr[ i ] = 0.0;\r\n\r\n\t\tvar ders = [];\r\n\t\tfor ( var i = 0; i <= n; ++ i )\r\n\t\t\tders[ i ] = zeroArr.slice( 0 );\r\n\r\n\t\tvar ndu = [];\r\n\t\tfor ( var i = 0; i <= p; ++ i )\r\n\t\t\tndu[ i ] = zeroArr.slice( 0 );\r\n\r\n\t\tndu[ 0 ][ 0 ] = 1.0;\r\n\r\n\t\tvar left = zeroArr.slice( 0 );\r\n\t\tvar right = zeroArr.slice( 0 );\r\n\r\n\t\tfor ( var j = 1; j <= p; ++ j ) {\r\n\r\n\t\t\tleft[ j ] = u - U[ span + 1 - j ];\r\n\t\t\tright[ j ] = U[ span + j ] - u;\r\n\r\n\t\t\tvar saved = 0.0;\r\n\r\n\t\t\tfor ( var r = 0; r < j; ++ r ) {\r\n\r\n\t\t\t\tvar rv = right[ r + 1 ];\r\n\t\t\t\tvar lv = left[ j - r ];\r\n\t\t\t\tndu[ j ][ r ] = rv + lv;\r\n\r\n\t\t\t\tvar temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\r\n\t\t\t\tndu[ r ][ j ] = saved + rv * temp;\r\n\t\t\t\tsaved = lv * temp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tndu[ j ][ j ] = saved;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var j = 0; j <= p; ++ j ) {\r\n\r\n\t\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var r = 0; r <= p; ++ r ) {\r\n\r\n\t\t\tvar s1 = 0;\r\n\t\t\tvar s2 = 1;\r\n\r\n\t\t\tvar a = [];\r\n\t\t\tfor ( var i = 0; i <= p; ++ i ) {\r\n\r\n\t\t\t\ta[ i ] = zeroArr.slice( 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ta[ 0 ][ 0 ] = 1.0;\r\n\r\n\t\t\tfor ( var k = 1; k <= n; ++ k ) {\r\n\r\n\t\t\t\tvar d = 0.0;\r\n\t\t\t\tvar rk = r - k;\r\n\t\t\t\tvar pk = p - k;\r\n\r\n\t\t\t\tif ( r >= k ) {\r\n\r\n\t\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\r\n\t\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar j1 = ( rk >= - 1 ) ? 1 : - rk;\r\n\t\t\t\tvar j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\r\n\r\n\t\t\t\tfor ( var j = j1; j <= j2; ++ j ) {\r\n\r\n\t\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\r\n\t\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( r <= pk ) {\r\n\r\n\t\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\r\n\t\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tders[ k ][ r ] = d;\r\n\r\n\t\t\t\tvar j = s1;\r\n\t\t\t\ts1 = s2;\r\n\t\t\t\ts2 = j;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar r = p;\r\n\r\n\t\tfor ( var k = 1; k <= n; ++ k ) {\r\n\r\n\t\t\tfor ( var j = 0; j <= p; ++ j ) {\r\n\r\n\t\t\t\tders[ k ][ j ] *= r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tr *= p - k;\r\n\r\n\t\t}\r\n\r\n\t\treturn ders;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\t\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\r\n\r\n\t\tp  : degree\r\n\t\tU  : knot vector\r\n\t\tP  : control points\r\n\t\tu  : Parametric points\r\n\t\tnd : number of derivatives\r\n\r\n\t\treturns array[d+1] with derivatives\r\n\t\t*/\r\n\tcalcBSplineDerivatives: function ( p, U, P, u, nd ) {\r\n\r\n\t\tvar du = nd < p ? nd : p;\r\n\t\tvar CK = [];\r\n\t\tvar span = this.findSpan( p, u, U );\r\n\t\tvar nders = this.calcBasisFunctionDerivatives( span, u, p, du, U );\r\n\t\tvar Pw = [];\r\n\r\n\t\tfor ( var i = 0; i < P.length; ++ i ) {\r\n\r\n\t\t\tvar point = P[ i ].clone();\r\n\t\t\tvar w = point.w;\r\n\r\n\t\t\tpoint.x *= w;\r\n\t\t\tpoint.y *= w;\r\n\t\t\tpoint.z *= w;\r\n\r\n\t\t\tPw[ i ] = point;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var k = 0; k <= du; ++ k ) {\r\n\r\n\t\t\tvar point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\r\n\r\n\t\t\tfor ( var j = 1; j <= p; ++ j ) {\r\n\r\n\t\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tCK[ k ] = point;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var k = du + 1; k <= nd + 1; ++ k ) {\r\n\r\n\t\t\tCK[ k ] = new Vector4( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\treturn CK;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate \"K over I\"\r\n\r\n\treturns k!/(i!(k-i)!)\r\n\t*/\r\n\tcalcKoverI: function ( k, i ) {\r\n\r\n\t\tvar nom = 1;\r\n\r\n\t\tfor ( var j = 2; j <= k; ++ j ) {\r\n\r\n\t\t\tnom *= j;\r\n\r\n\t\t}\r\n\r\n\t\tvar denom = 1;\r\n\r\n\t\tfor ( var j = 2; j <= i; ++ j ) {\r\n\r\n\t\t\tdenom *= j;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var j = 2; j <= k - i; ++ j ) {\r\n\r\n\t\t\tdenom *= j;\r\n\r\n\t\t}\r\n\r\n\t\treturn nom / denom;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\r\n\r\n\tPders : result of function calcBSplineDerivatives\r\n\r\n\treturns array with derivatives for rational curve.\r\n\t*/\r\n\tcalcRationalCurveDerivatives: function ( Pders ) {\r\n\r\n\t\tvar nd = Pders.length;\r\n\t\tvar Aders = [];\r\n\t\tvar wders = [];\r\n\r\n\t\tfor ( var i = 0; i < nd; ++ i ) {\r\n\r\n\t\t\tvar point = Pders[ i ];\r\n\t\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\r\n\t\t\twders[ i ] = point.w;\r\n\r\n\t\t}\r\n\r\n\t\tvar CK = [];\r\n\r\n\t\tfor ( var k = 0; k < nd; ++ k ) {\r\n\r\n\t\t\tvar v = Aders[ k ].clone();\r\n\r\n\t\t\tfor ( var i = 1; i <= k; ++ i ) {\r\n\r\n\t\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( this.calcKoverI( k, i ) * wders[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn CK;\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\r\n\r\n\tp  : degree\r\n\tU  : knot vector\r\n\tP  : control points in homogeneous space\r\n\tu  : parametric points\r\n\tnd : number of derivatives\r\n\r\n\treturns array with derivatives.\r\n\t*/\r\n\tcalcNURBSDerivatives: function ( p, U, P, u, nd ) {\r\n\r\n\t\tvar Pders = this.calcBSplineDerivatives( p, U, P, u, nd );\r\n\t\treturn this.calcRationalCurveDerivatives( Pders );\r\n\r\n\t},\r\n\r\n\r\n\t/*\r\n\tCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\r\n\r\n\tp1, p2 : degrees of B-Spline surface\r\n\tU1, U2 : knot vectors\r\n\tP      : control points (x, y, z, w)\r\n\tu, v   : parametric values\r\n\r\n\treturns point for given (u, v)\r\n\t*/\r\n\tcalcSurfacePoint: function ( p, q, U, V, P, u, v, target ) {\r\n\r\n\t\tvar uspan = this.findSpan( p, u, U );\r\n\t\tvar vspan = this.findSpan( q, v, V );\r\n\t\tvar Nu = this.calcBasisFunctions( uspan, u, p, U );\r\n\t\tvar Nv = this.calcBasisFunctions( vspan, v, q, V );\r\n\t\tvar temp = [];\r\n\r\n\t\tfor ( var l = 0; l <= q; ++ l ) {\r\n\r\n\t\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\r\n\t\t\tfor ( var k = 0; k <= p; ++ k ) {\r\n\r\n\t\t\t\tvar point = P[ uspan - p + k ][ vspan - q + l ].clone();\r\n\t\t\t\tvar w = point.w;\r\n\t\t\t\tpoint.x *= w;\r\n\t\t\t\tpoint.y *= w;\r\n\t\t\t\tpoint.z *= w;\r\n\t\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar Sw = new Vector4( 0, 0, 0, 0 );\r\n\t\tfor ( var l = 0; l <= q; ++ l ) {\r\n\r\n\t\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tSw.divideScalar( Sw.w );\r\n\t\ttarget.set( Sw.x, Sw.y, Sw.z );\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { NURBSUtils };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/curves/NURBSUtils.js","import {\r\n\tCurve,\r\n\tVector3,\r\n\tVector4\r\n} from \"@/components/build/three.module.js\";\r\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\r\n\r\n/**\r\n * NURBS curve object\r\n *\r\n * Derives from Curve, overriding getPoint and getTangent.\r\n *\r\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\r\n *\r\n **/\r\n\r\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\r\n\r\n\tCurve.call( this );\r\n\r\n\tthis.degree = degree;\r\n\tthis.knots = knots;\r\n\tthis.controlPoints = [];\r\n\t// Used by periodic NURBS to remove hidden spans\r\n\tthis.startKnot = startKnot || 0;\r\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\r\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\r\n\r\n\t\t// ensure Vector4 for control points\r\n\t\tvar point = controlPoints[ i ];\r\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nNURBSCurve.prototype = Object.create( Curve.prototype );\r\nNURBSCurve.prototype.constructor = NURBSCurve;\r\n\r\n\r\nNURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\r\n\r\n\tvar point = optionalTarget || new Vector3();\r\n\r\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\r\n\r\n\t// following results in (wx, wy, wz, w) homogeneous point\r\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\r\n\r\n\tif ( hpoint.w != 1.0 ) {\r\n\r\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\r\n\t\thpoint.divideScalar( hpoint.w );\r\n\r\n\t}\r\n\r\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\r\n\r\n};\r\n\r\n\r\nNURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\r\n\r\n\tvar tangent = optionalTarget || new Vector3();\r\n\r\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\r\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\r\n\ttangent.copy( ders[ 1 ] ).normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\nexport { NURBSCurve };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/curves/NURBSCurve.js","import {\r\n\tAmbientLight,\r\n\tAnimationClip,\r\n\tBone,\r\n\tBufferAttribute,\r\n\tBufferGeometry,\r\n\tClampToEdgeWrapping,\r\n\tColor,\r\n\tDirectionalLight,\r\n\tEquirectangularReflectionMapping,\r\n\tEuler,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMathUtils,\r\n\tMatrix3,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshLambertMaterial,\r\n\tMeshPhongMaterial,\r\n\tNumberKeyframeTrack,\r\n\tObject3D,\r\n\tOrthographicCamera,\r\n\tPerspectiveCamera,\r\n\tPointLight,\r\n\tPropertyBinding,\r\n\tQuaternion,\r\n\tQuaternionKeyframeTrack,\r\n\tRepeatWrapping,\r\n\tSkeleton,\r\n\tSkinnedMesh,\r\n\tSpotLight,\r\n\tTexture,\r\n\tTextureLoader,\r\n\tUint16BufferAttribute,\r\n\tVector3,\r\n\tVector4,\r\n\tVectorKeyframeTrack,\r\n\tsRGBEncoding\r\n} from \"@/components/build/three.module.js\";\r\nimport { Inflate } from \"../libs/inflate.module.min.js\";\r\nimport { NURBSCurve } from \"../curves/NURBSCurve.js\";\r\n\r\n/**\r\n * Loader loads FBX file and generates Group representing FBX scene.\r\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\r\n * Versions lower than this may load but will probably have errors\r\n *\r\n * Needs Support:\r\n *  Morph normals / blend shape normals\r\n *\r\n * FBX format references:\r\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\r\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\r\n *\r\n * \tBinary format specification:\r\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\r\n */\r\n\r\n\r\nvar FBXLoader = ( function () {\r\n\r\n\tvar fbxTree;\r\n\tvar connections;\r\n\tvar sceneGraph;\r\n\r\n\tfunction FBXLoader( manager ) {\r\n\r\n\t\tLoader.call( this, manager );\r\n\r\n\t}\r\n\r\n\tFBXLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\r\n\r\n\t\tconstructor: FBXLoader,\r\n\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\r\n\r\n\t\t\tvar loader = new FileLoader( this.manager );\r\n\t\t\tloader.setPath( scope.path );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\t\tloader.setWithCredentials( scope.withCredentials );\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tonLoad( scope.parse( buffer, path ) );\r\n\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( FBXBuffer, path ) {\r\n\r\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\r\n\r\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\r\n\r\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.log( fbxTree );\r\n\r\n\t\t\tvar textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\r\n\tfunction FBXTreeParser( textureLoader, manager ) {\r\n\r\n\t\tthis.textureLoader = textureLoader;\r\n\t\tthis.manager = manager;\r\n\r\n\t}\r\n\r\n\tFBXTreeParser.prototype = {\r\n\r\n\t\tconstructor: FBXTreeParser,\r\n\r\n\t\tparse: function () {\r\n\r\n\t\t\tconnections = this.parseConnections();\r\n\r\n\t\t\tvar images = this.parseImages();\r\n\t\t\tvar textures = this.parseTextures( images );\r\n\t\t\tvar materials = this.parseMaterials( textures );\r\n\t\t\tvar deformers = this.parseDeformers();\r\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\r\n\r\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\r\n\r\n\t\t\treturn sceneGraph;\r\n\r\n\t\t},\r\n\r\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\r\n\t\t// and details the connection type\r\n\t\tparseConnections: function () {\r\n\r\n\t\t\tvar connectionMap = new Map();\r\n\r\n\t\t\tif ( 'Connections' in fbxTree ) {\r\n\r\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\r\n\r\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\r\n\r\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\r\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\r\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\r\n\r\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\r\n\r\n\t\t\t\t\t\tconnectionMap.set( fromID, {\r\n\t\t\t\t\t\t\tparents: [],\r\n\t\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\r\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\r\n\r\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\r\n\r\n\t\t\t\t\t\tconnectionMap.set( toID, {\r\n\t\t\t\t\t\t\tparents: [],\r\n\t\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\r\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn connectionMap;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse FBXTree.Objects.Video for embedded image data\r\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\r\n\t\t// via FBXTree.Connections.\r\n\t\tparseImages: function () {\r\n\r\n\t\t\tvar images = {};\r\n\t\t\tvar blobs = {};\r\n\r\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\r\n\r\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\r\n\r\n\t\t\t\tfor ( var nodeID in videoNodes ) {\r\n\r\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\r\n\r\n\t\t\t\t\tvar id = parseInt( nodeID );\r\n\r\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\r\n\r\n\t\t\t\t\t// raw image data is in videoNode.Content\r\n\t\t\t\t\tif ( 'Content' in videoNode ) {\r\n\r\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\r\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\r\n\r\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\r\n\r\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\r\n\r\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var id in images ) {\r\n\r\n\t\t\t\tvar filename = images[ id ];\r\n\r\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\r\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn images;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse embedded image data in FBXTree.Video.Content\r\n\t\tparseImage: function ( videoNode ) {\r\n\r\n\t\t\tvar content = videoNode.Content;\r\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\r\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\r\n\r\n\t\t\tvar type;\r\n\r\n\t\t\tswitch ( extension ) {\r\n\r\n\t\t\t\tcase 'bmp':\r\n\r\n\t\t\t\t\ttype = 'image/bmp';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'jpg':\r\n\t\t\t\tcase 'jpeg':\r\n\r\n\t\t\t\t\ttype = 'image/jpeg';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'png':\r\n\r\n\t\t\t\t\ttype = 'image/png';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tif':\r\n\r\n\t\t\t\t\ttype = 'image/tiff';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tga':\r\n\r\n\t\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttype = 'image/tga';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\r\n\r\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\r\n\r\n\t\t\t} else { // Binary Format\r\n\r\n\t\t\t\tvar array = new Uint8Array( content );\r\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// Parse nodes in FBXTree.Objects.Texture\r\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\r\n\t\t// to images in FBXTree.Objects.Video\r\n\t\tparseTextures: function ( images ) {\r\n\r\n\t\t\tvar textureMap = new Map();\r\n\r\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\r\n\r\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\r\n\t\t\t\tfor ( var nodeID in textureNodes ) {\r\n\r\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\r\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textureMap;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse individual node in FBXTree.Objects.Texture\r\n\t\tparseTexture: function ( textureNode, images ) {\r\n\r\n\t\t\tvar texture = this.loadTexture( textureNode, images );\r\n\r\n\t\t\ttexture.ID = textureNode.id;\r\n\r\n\t\t\ttexture.name = textureNode.attrName;\r\n\r\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\r\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\r\n\r\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\r\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\r\n\r\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\r\n\t\t\t// 0: repeat(default), 1: clamp\r\n\r\n\t\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\r\n\r\n\t\t\tif ( 'Scaling' in textureNode ) {\r\n\r\n\t\t\t\tvar values = textureNode.Scaling.value;\r\n\r\n\t\t\t\ttexture.repeat.x = values[ 0 ];\r\n\t\t\t\ttexture.repeat.y = values[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\r\n\t\tloadTexture: function ( textureNode, images ) {\r\n\r\n\t\t\tvar fileName;\r\n\r\n\t\t\tvar currentPath = this.textureLoader.path;\r\n\r\n\t\t\tvar children = connections.get( textureNode.id ).children;\r\n\r\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\r\n\r\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\r\n\r\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\r\n\r\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar texture;\r\n\r\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\r\n\r\n\t\t\tif ( extension === 'tga' ) {\r\n\r\n\t\t\t\tvar loader = this.manager.getHandler( '.tga' );\r\n\r\n\t\t\t\tif ( loader === null ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\r\n\t\t\t\t\ttexture = new Texture();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = loader.load( fileName );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( extension === 'psd' ) {\r\n\r\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\r\n\t\t\t\ttexture = new Texture();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttexture = this.textureLoader.load( fileName );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.textureLoader.setPath( currentPath );\r\n\r\n\t\t\treturn texture;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse nodes in FBXTree.Objects.Material\r\n\t\tparseMaterials: function ( textureMap ) {\r\n\r\n\t\t\tvar materialMap = new Map();\r\n\r\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\r\n\r\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\r\n\r\n\t\t\t\tfor ( var nodeID in materialNodes ) {\r\n\r\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\r\n\r\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materialMap;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse single node in FBXTree.Objects.Material\r\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\r\n\t\t// FBX format currently only supports Lambert and Phong shading models\r\n\t\tparseMaterial: function ( materialNode, textureMap ) {\r\n\r\n\t\t\tvar ID = materialNode.id;\r\n\t\t\tvar name = materialNode.attrName;\r\n\t\t\tvar type = materialNode.ShadingModel;\r\n\r\n\t\t\t// Case where FBX wraps shading model in property object.\r\n\t\t\tif ( typeof type === 'object' ) {\r\n\r\n\t\t\t\ttype = type.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ignore unused materials which don't have any connections.\r\n\t\t\tif ( ! connections.has( ID ) ) return null;\r\n\r\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\r\n\r\n\t\t\tvar material;\r\n\r\n\t\t\tswitch ( type.toLowerCase() ) {\r\n\r\n\t\t\t\tcase 'phong':\r\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'lambert':\r\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\r\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.setValues( parameters );\r\n\t\t\tmaterial.name = name;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse FBX material and return parameters suitable for a three.js material\r\n\t\t// Also parse the texture map and return any textures associated with the material\r\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\r\n\r\n\t\t\tvar parameters = {};\r\n\r\n\t\t\tif ( materialNode.BumpFactor ) {\r\n\r\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.Diffuse ) {\r\n\r\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value );\r\n\r\n\t\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\r\n\r\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\r\n\t\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.DisplacementFactor ) {\r\n\r\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.Emissive ) {\r\n\r\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value );\r\n\r\n\t\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\r\n\r\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\r\n\t\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.EmissiveFactor ) {\r\n\r\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.Opacity ) {\r\n\r\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( parameters.opacity < 1.0 ) {\r\n\r\n\t\t\t\tparameters.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.ReflectionFactor ) {\r\n\r\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.Shininess ) {\r\n\r\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialNode.Specular ) {\r\n\r\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value );\r\n\r\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\r\n\r\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\r\n\t\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\r\n\r\n\t\t\t\tvar type = child.relationship;\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 'Bump':\r\n\t\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Maya|TEX_ao_map':\r\n\t\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DiffuseColor':\r\n\t\t\t\t\tcase 'Maya|TEX_color_map':\r\n\t\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tparameters.map.encoding = sRGBEncoding;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DisplacementColor':\r\n\t\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'EmissiveColor':\r\n\t\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tparameters.emissiveMap.encoding = sRGBEncoding;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'NormalMap':\r\n\t\t\t\t\tcase 'Maya|TEX_normal_map':\r\n\t\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'ReflectionColor':\r\n\t\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\r\n\t\t\t\t\t\tparameters.envMap.encoding = sRGBEncoding;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SpecularColor':\r\n\t\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tparameters.specularMap.encoding = sRGBEncoding;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TransparentColor':\r\n\t\t\t\t\tcase 'TransparencyFactor':\r\n\t\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\r\n\t\t\t\t\t\tparameters.transparent = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'AmbientColor':\r\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\r\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\r\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn parameters;\r\n\r\n\t\t},\r\n\r\n\t\t// get a texture from the textureMap for use by a material.\r\n\t\tgetTexture: function ( textureMap, id ) {\r\n\r\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\r\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\r\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textureMap.get( id );\r\n\r\n\t\t},\r\n\r\n\t\t// Parse nodes in FBXTree.Objects.Deformer\r\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\r\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\r\n\t\tparseDeformers: function () {\r\n\r\n\t\t\tvar skeletons = {};\r\n\t\t\tvar morphTargets = {};\r\n\r\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\r\n\r\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\r\n\r\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\r\n\r\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\r\n\r\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\r\n\r\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\r\n\r\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\r\n\t\t\t\t\t\tskeleton.ID = nodeID;\r\n\r\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\r\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\r\n\r\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\r\n\r\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\r\n\r\n\t\t\t\t\t\tvar morphTarget = {\r\n\t\t\t\t\t\t\tid: nodeID,\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\r\n\t\t\t\t\t\tmorphTarget.id = nodeID;\r\n\r\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\r\n\r\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\tskeletons: skeletons,\r\n\t\t\t\tmorphTargets: morphTargets,\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\r\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\r\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\r\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\r\n\r\n\t\t\tvar rawBones = [];\r\n\r\n\t\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\r\n\r\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\r\n\r\n\t\t\t\tvar rawBone = {\r\n\r\n\t\t\t\t\tID: child.ID,\r\n\t\t\t\t\tindices: [],\r\n\t\t\t\t\tweights: [],\r\n\t\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\r\n\t\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\r\n\t\t\t\t\t// linkMode: boneNode.Mode,\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ( 'Indexes' in boneNode ) {\r\n\r\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\r\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trawBones.push( rawBone );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\trawBones: rawBones,\r\n\t\t\t\tbones: []\r\n\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\r\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\r\n\r\n\t\t\tvar rawMorphTargets = [];\r\n\r\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = relationships.children[ i ];\r\n\r\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\r\n\r\n\t\t\t\tvar rawMorphTarget = {\r\n\r\n\t\t\t\t\tname: morphTargetNode.attrName,\r\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\r\n\t\t\t\t\tid: morphTargetNode.id,\r\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\r\n\r\n\t\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\r\n\r\n\t\t\t\t\treturn child.relationship === undefined;\r\n\r\n\t\t\t\t} )[ 0 ].ID;\r\n\r\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn rawMorphTargets;\r\n\r\n\t\t},\r\n\r\n\t\t// create the main Group() to be returned by the loader\r\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\r\n\r\n\t\t\tsceneGraph = new Group();\r\n\r\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\r\n\r\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tmodelMap.forEach( function ( model ) {\r\n\r\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\r\n\t\t\t\tscope.setLookAtProperties( model, modelNode );\r\n\r\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\r\n\r\n\t\t\t\tparentConnections.forEach( function ( connection ) {\r\n\r\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\r\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tif ( model.parent === null ) {\r\n\r\n\t\t\t\t\tsceneGraph.add( model );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\r\n\r\n\t\t\tthis.createAmbientLight();\r\n\r\n\t\t\tthis.setupMorphMaterials();\r\n\r\n\t\t\tsceneGraph.traverse( function ( node ) {\r\n\r\n\t\t\t\tif ( node.userData.transformData ) {\r\n\r\n\t\t\t\t\tif ( node.parent ) node.userData.transformData.parentMatrixWorld = node.parent.matrix;\r\n\r\n\t\t\t\t\tvar transform = generateTransform( node.userData.transformData );\r\n\r\n\t\t\t\t\tnode.applyMatrix4( transform );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar animations = new AnimationParser().parse();\r\n\r\n\t\t\t// if all the models where already combined in a single group, just return that\r\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\r\n\r\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\r\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsceneGraph.animations = animations;\r\n\r\n\t\t},\r\n\r\n\t\t// parse nodes in FBXTree.Objects.Model\r\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\r\n\r\n\t\t\tvar modelMap = new Map();\r\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\r\n\r\n\t\t\tfor ( var nodeID in modelNodes ) {\r\n\r\n\t\t\t\tvar id = parseInt( nodeID );\r\n\t\t\t\tvar node = modelNodes[ nodeID ];\r\n\t\t\t\tvar relationships = connections.get( id );\r\n\r\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\r\n\r\n\t\t\t\tif ( ! model ) {\r\n\r\n\t\t\t\t\tswitch ( node.attrType ) {\r\n\r\n\t\t\t\t\t\tcase 'Camera':\r\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Light':\r\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Mesh':\r\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'NurbsCurve':\r\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'LimbNode':\r\n\t\t\t\t\t\tcase 'Root':\r\n\t\t\t\t\t\t\tmodel = new Bone();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'Null':\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tmodel = new Group();\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\r\n\r\n\t\t\t\t\tmodel.ID = id;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getTransformData( model, node );\r\n\t\t\t\tmodelMap.set( id, model );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn modelMap;\r\n\r\n\t\t},\r\n\r\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\r\n\r\n\t\t\tvar bone = null;\r\n\r\n\t\t\trelationships.parents.forEach( function ( parent ) {\r\n\r\n\t\t\t\tfor ( var ID in skeletons ) {\r\n\r\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\r\n\r\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\r\n\r\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\r\n\r\n\t\t\t\t\t\t\tvar subBone = bone;\r\n\t\t\t\t\t\t\tbone = new Bone();\r\n\r\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\r\n\r\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\r\n\r\n\t\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\r\n\t\t\t\t\t\t\tbone.ID = id;\r\n\r\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\r\n\r\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\r\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\r\n\t\t\t\t\t\t\tif ( subBone !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tbone.add( subBone );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn bone;\r\n\r\n\t\t},\r\n\r\n\t\t// create a PerspectiveCamera or OrthographicCamera\r\n\t\tcreateCamera: function ( relationships ) {\r\n\r\n\t\t\tvar model;\r\n\t\t\tvar cameraAttribute;\r\n\r\n\t\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\r\n\r\n\t\t\t\tif ( attr !== undefined ) {\r\n\r\n\t\t\t\t\tcameraAttribute = attr;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( cameraAttribute === undefined ) {\r\n\r\n\t\t\t\tmodel = new Object3D();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar type = 0;\r\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\r\n\r\n\t\t\t\t\ttype = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar nearClippingPlane = 1;\r\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\r\n\r\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar farClippingPlane = 1000;\r\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\r\n\r\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar width = window.innerWidth;\r\n\t\t\t\tvar height = window.innerHeight;\r\n\r\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\r\n\r\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\r\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar aspect = width / height;\r\n\r\n\t\t\t\tvar fov = 45;\r\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\r\n\r\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 0: // Perspective\r\n\t\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\r\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1: // Orthographic\r\n\t\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\r\n\t\t\t\t\t\tmodel = new Object3D();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn model;\r\n\r\n\t\t},\r\n\r\n\t\t// Create a DirectionalLight, PointLight or SpotLight\r\n\t\tcreateLight: function ( relationships ) {\r\n\r\n\t\t\tvar model;\r\n\t\t\tvar lightAttribute;\r\n\r\n\t\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\r\n\r\n\t\t\t\tif ( attr !== undefined ) {\r\n\r\n\t\t\t\t\tlightAttribute = attr;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( lightAttribute === undefined ) {\r\n\r\n\t\t\t\tmodel = new Object3D();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar type;\r\n\r\n\t\t\t\t// LightType can be undefined for Point lights\r\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\r\n\r\n\t\t\t\t\ttype = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = lightAttribute.LightType.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar color = 0xffffff;\r\n\r\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\r\n\r\n\t\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\r\n\r\n\t\t\t\t// light disabled\r\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\r\n\r\n\t\t\t\t\tintensity = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar distance = 0;\r\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\r\n\r\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\r\n\r\n\t\t\t\t\t\tdistance = 0;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\r\n\t\t\t\tvar decay = 1;\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 0: // Point\r\n\t\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1: // Directional\r\n\t\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2: // Spot\r\n\t\t\t\t\t\tvar angle = Math.PI / 3;\r\n\r\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar penumbra = 0;\r\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\r\n\t\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\r\n\t\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\r\n\t\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\r\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\r\n\t\t\t\t\t\tmodel = new PointLight( color, intensity );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\r\n\r\n\t\t\t\t\tmodel.castShadow = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn model;\r\n\r\n\t\t},\r\n\r\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\r\n\r\n\t\t\tvar model;\r\n\t\t\tvar geometry = null;\r\n\t\t\tvar material = null;\r\n\t\t\tvar materials = [];\r\n\r\n\t\t\t// get geometry and materials(s) from connections\r\n\t\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\r\n\r\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\r\n\r\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( materials.length > 1 ) {\r\n\r\n\t\t\t\tmaterial = materials;\r\n\r\n\t\t\t} else if ( materials.length > 0 ) {\r\n\r\n\t\t\t\tmaterial = materials[ 0 ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = new MeshPhongMaterial( { color: 0xcccccc } );\r\n\t\t\t\tmaterials.push( material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 'color' in geometry.attributes ) {\r\n\r\n\t\t\t\tmaterials.forEach( function ( material ) {\r\n\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.FBX_Deformer ) {\r\n\r\n\t\t\t\tmaterials.forEach( function ( material ) {\r\n\r\n\t\t\t\t\tmaterial.skinning = true;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tmodel = new SkinnedMesh( geometry, material );\r\n\t\t\t\tmodel.normalizeSkinWeights();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmodel = new Mesh( geometry, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn model;\r\n\r\n\t\t},\r\n\r\n\t\tcreateCurve: function ( relationships, geometryMap ) {\r\n\r\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\r\n\r\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\r\n\r\n\t\t\t\treturn geo;\r\n\r\n\t\t\t}, null );\r\n\r\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\r\n\t\t\tvar material = new LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\r\n\t\t\treturn new Line( geometry, material );\r\n\r\n\t\t},\r\n\r\n\t\t// parse the model node for transform data\r\n\t\tgetTransformData: function ( model, modelNode ) {\r\n\r\n\t\t\tvar transformData = {};\r\n\r\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\r\n\r\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\r\n\t\t\telse transformData.eulerOrder = 'ZYX';\r\n\r\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\r\n\r\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\r\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\r\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\r\n\r\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\r\n\r\n\t\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\r\n\t\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\r\n\r\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\r\n\t\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\r\n\r\n\t\t\tmodel.userData.transformData = transformData;\r\n\r\n\t\t},\r\n\r\n\t\tsetLookAtProperties: function ( model, modelNode ) {\r\n\r\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\r\n\r\n\t\t\t\tvar children = connections.get( model.ID ).children;\r\n\r\n\t\t\t\tchildren.forEach( function ( child ) {\r\n\r\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\r\n\r\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\r\n\r\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\r\n\r\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\r\n\r\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\r\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\r\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\r\n\r\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\r\n\r\n\t\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\r\n\r\n\t\t\tvar bindMatrices = this.parsePoseNodes();\r\n\r\n\t\t\tfor ( var ID in skeletons ) {\r\n\r\n\t\t\t\tvar skeleton = skeletons[ ID ];\r\n\r\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\r\n\r\n\t\t\t\tparents.forEach( function ( parent ) {\r\n\r\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\r\n\r\n\t\t\t\t\t\tvar geoID = parent.ID;\r\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\r\n\r\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\r\n\r\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\r\n\r\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\r\n\r\n\t\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tparsePoseNodes: function () {\r\n\r\n\t\t\tvar bindMatrices = {};\r\n\r\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\r\n\r\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\r\n\r\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\r\n\r\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\r\n\r\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\r\n\r\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\r\n\r\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn bindMatrices;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\r\n\t\tcreateAmbientLight: function () {\r\n\r\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\r\n\r\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\r\n\t\t\t\tvar r = ambientColor[ 0 ];\r\n\t\t\t\tvar g = ambientColor[ 1 ];\r\n\t\t\t\tvar b = ambientColor[ 2 ];\r\n\r\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\r\n\r\n\t\t\t\t\tvar color = new Color( r, g, b );\r\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tsetupMorphMaterials: function () {\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tsceneGraph.traverse( function ( child ) {\r\n\r\n\t\t\t\tif ( child.isMesh ) {\r\n\r\n\t\t\t\t\tif ( child.geometry.morphAttributes.position && child.geometry.morphAttributes.position.length ) {\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( child.material ) ) {\r\n\r\n\t\t\t\t\t\t\tchild.material.forEach( function ( material, i ) {\r\n\r\n\t\t\t\t\t\t\t\tscope.setupMorphMaterial( child, material, i );\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tscope.setupMorphMaterial( child, child.material );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\tsetupMorphMaterial: function ( child, material, index ) {\r\n\r\n\t\t\tvar uuid = child.uuid;\r\n\t\t\tvar matUuid = material.uuid;\r\n\r\n\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\r\n\t\t\tvar sharedMat = false;\r\n\r\n\t\t\tsceneGraph.traverse( function ( node ) {\r\n\r\n\t\t\t\tif ( node.isMesh ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( node.material ) ) {\r\n\r\n\t\t\t\t\t\tnode.material.forEach( function ( mat ) {\r\n\r\n\t\t\t\t\t\t\tif ( mat.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else if ( node.material.uuid === matUuid && node.uuid !== uuid ) sharedMat = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( sharedMat === true ) {\r\n\r\n\t\t\t\tvar clonedMat = material.clone();\r\n\t\t\t\tclonedMat.morphTargets = true;\r\n\r\n\t\t\t\tif ( index === undefined ) child.material = clonedMat;\r\n\t\t\t\telse child.material[ index ] = clonedMat;\r\n\r\n\t\t\t} else material.morphTargets = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\r\n\tfunction GeometryParser() {}\r\n\r\n\tGeometryParser.prototype = {\r\n\r\n\t\tconstructor: GeometryParser,\r\n\r\n\t\t// Parse nodes in FBXTree.Objects.Geometry\r\n\t\tparse: function ( deformers ) {\r\n\r\n\t\t\tvar geometryMap = new Map();\r\n\r\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\r\n\r\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\r\n\r\n\t\t\t\tfor ( var nodeID in geoNodes ) {\r\n\r\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\r\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\r\n\r\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometryMap;\r\n\r\n\t\t},\r\n\r\n\t\t// Parse single node in FBXTree.Objects.Geometry\r\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\r\n\r\n\t\t\tswitch ( geoNode.attrType ) {\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'NurbsCurve':\r\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\r\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\r\n\r\n\t\t\tvar skeletons = deformers.skeletons;\r\n\t\t\tvar morphTargets = [];\r\n\r\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\r\n\r\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// don't create geometry if it is not associated with any models\r\n\t\t\tif ( modelNodes.length === 0 ) return;\r\n\r\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\r\n\r\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\r\n\r\n\t\t\t\treturn skeleton;\r\n\r\n\t\t\t}, null );\r\n\r\n\t\t\trelationships.children.forEach( function ( child ) {\r\n\r\n\t\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\r\n\r\n\t\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// Assume one model and get the preRotation from that\r\n\t\t\t// if there is more than one model associated with the geometry this may cause problems\r\n\t\t\tvar modelNode = modelNodes[ 0 ];\r\n\r\n\t\t\tvar transformData = {};\r\n\r\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\r\n\t\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\r\n\r\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\r\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\r\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\r\n\r\n\t\t\tvar transform = generateTransform( transformData );\r\n\r\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\r\n\r\n\t\t},\r\n\r\n\t\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\r\n\t\tgenGeometry: function ( geoNode, skeleton, morphTargets, preTransform ) {\r\n\r\n\t\t\tvar geo = new BufferGeometry();\r\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\r\n\r\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\r\n\t\t\tvar buffers = this.genBuffers( geoInfo );\r\n\r\n\t\t\tvar positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\r\n\r\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\r\n\r\n\t\t\tgeo.setAttribute( 'position', positionAttribute );\r\n\r\n\t\t\tif ( buffers.colors.length > 0 ) {\r\n\r\n\t\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\r\n\r\n\t\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\r\n\r\n\t\t\t\t// used later to bind the skeleton to the model\r\n\t\t\t\tgeo.FBX_Deformer = skeleton;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffers.normal.length > 0 ) {\r\n\r\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( preTransform );\r\n\r\n\t\t\t\tvar normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\r\n\t\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\t\tgeo.setAttribute( 'normal', normalAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\r\n\r\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\r\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\r\n\r\n\t\t\t\t// the first uv buffer is just called 'uv'\r\n\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\tname = 'uv';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\r\n\r\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\r\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\r\n\t\t\t\tvar startIndex = 0;\r\n\r\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\r\n\r\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\r\n\r\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\r\n\r\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\r\n\t\t\t\t\t\tstartIndex = i;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// the loop above doesn't add the last group, do that here.\r\n\t\t\t\tif ( geo.groups.length > 0 ) {\r\n\r\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\r\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\r\n\r\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\r\n\r\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\r\n\t\t\t\t// using one of them\r\n\t\t\t\tif ( geo.groups.length === 0 ) {\r\n\r\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\r\n\r\n\t\t\treturn geo;\r\n\r\n\t\t},\r\n\r\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\r\n\r\n\t\t\tvar geoInfo = {};\r\n\r\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\r\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\r\n\r\n\t\t\tif ( geoNode.LayerElementColor ) {\r\n\r\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoNode.LayerElementMaterial ) {\r\n\r\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoNode.LayerElementNormal ) {\r\n\r\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geoNode.LayerElementUV ) {\r\n\r\n\t\t\t\tgeoInfo.uv = [];\r\n\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\r\n\r\n\t\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\r\n\r\n\t\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeoInfo.weightTable = {};\r\n\r\n\t\t\tif ( skeleton !== null ) {\r\n\r\n\t\t\t\tgeoInfo.skeleton = skeleton;\r\n\r\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\r\n\r\n\t\t\t\t\t// loop over the bone's vertex indices and weights\r\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\r\n\r\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\r\n\r\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\r\n\r\n\t\t\t\t\t\t\tid: i,\r\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geoInfo;\r\n\r\n\t\t},\r\n\r\n\t\tgenBuffers: function ( geoInfo ) {\r\n\r\n\t\t\tvar buffers = {\r\n\t\t\t\tvertex: [],\r\n\t\t\t\tnormal: [],\r\n\t\t\t\tcolors: [],\r\n\t\t\t\tuvs: [],\r\n\t\t\t\tmaterialIndex: [],\r\n\t\t\t\tvertexWeights: [],\r\n\t\t\t\tweightsIndices: [],\r\n\t\t\t};\r\n\r\n\t\t\tvar polygonIndex = 0;\r\n\t\t\tvar faceLength = 0;\r\n\t\t\tvar displayedWeightsWarning = false;\r\n\r\n\t\t\t// these will hold data for a single face\r\n\t\t\tvar facePositionIndexes = [];\r\n\t\t\tvar faceNormals = [];\r\n\t\t\tvar faceColors = [];\r\n\t\t\tvar faceUVs = [];\r\n\t\t\tvar faceWeights = [];\r\n\t\t\tvar faceWeightIndices = [];\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\r\n\r\n\t\t\t\tvar endOfFace = false;\r\n\r\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\r\n\t\t\t\t// A cube with quad faces looks like this:\r\n\t\t\t\t// PolygonVertexIndex: *24 {\r\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\r\n\t\t\t\t//  }\r\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\r\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\r\n\t\t\t\tif ( vertexIndex < 0 ) {\r\n\r\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\r\n\t\t\t\t\tendOfFace = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar weightIndices = [];\r\n\t\t\t\tvar weights = [];\r\n\r\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\r\n\r\n\t\t\t\tif ( geoInfo.color ) {\r\n\r\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\r\n\r\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.skeleton ) {\r\n\r\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\r\n\r\n\t\t\t\t\t\t\tweights.push( wt.weight );\r\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( weights.length > 4 ) {\r\n\r\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\r\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\r\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\r\n\r\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\r\n\r\n\t\t\t\t\t\t\tvar currentWeight = weight;\r\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\r\n\r\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\r\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\r\n\r\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\r\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\r\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\tweightIndices = wIndex;\r\n\t\t\t\t\t\tweights = Weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\r\n\t\t\t\t\twhile ( weights.length < 4 ) {\r\n\r\n\t\t\t\t\t\tweights.push( 0 );\r\n\t\t\t\t\t\tweightIndices.push( 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\r\n\r\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\r\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.normal ) {\r\n\r\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\r\n\r\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\r\n\r\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.uv ) {\r\n\r\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\r\n\r\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\r\n\r\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\r\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceLength ++;\r\n\r\n\t\t\t\tif ( endOfFace ) {\r\n\r\n\t\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\r\n\r\n\t\t\t\t\tpolygonIndex ++;\r\n\t\t\t\t\tfaceLength = 0;\r\n\r\n\t\t\t\t\t// reset arrays for the next face\r\n\t\t\t\t\tfacePositionIndexes = [];\r\n\t\t\t\t\tfaceNormals = [];\r\n\t\t\t\t\tfaceColors = [];\r\n\t\t\t\t\tfaceUVs = [];\r\n\t\t\t\t\tfaceWeights = [];\r\n\t\t\t\t\tfaceWeightIndices = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn buffers;\r\n\r\n\t\t},\r\n\r\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\r\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\r\n\r\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\r\n\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\r\n\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\r\n\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\r\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\r\n\r\n\t\t\t\tif ( geoInfo.skeleton ) {\r\n\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\r\n\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\r\n\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\r\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\r\n\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\r\n\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\r\n\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\r\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.color ) {\r\n\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\r\n\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\r\n\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\r\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\r\n\r\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\r\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\r\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.normal ) {\r\n\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\r\n\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\r\n\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\r\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geoInfo.uv ) {\r\n\r\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\r\n\r\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\r\n\r\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\r\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\r\n\r\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\r\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\r\n\r\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\r\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTargets, preTransform ) {\r\n\r\n\t\t\tif ( morphTargets.length === 0 ) return;\r\n\r\n\t\t\tparentGeo.morphTargetsRelative = true;\r\n\r\n\t\t\tparentGeo.morphAttributes.position = [];\r\n\t\t\t// parentGeo.morphAttributes.normal = []; // not implemented\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\tmorphTargets.forEach( function ( morphTarget ) {\r\n\r\n\t\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\r\n\r\n\t\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\r\n\r\n\t\t\t\t\tif ( morphGeoNode !== undefined ) {\r\n\r\n\t\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t},\r\n\r\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\r\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\r\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\r\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\r\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\r\n\r\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\r\n\r\n\t\t\tvar morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\r\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\r\n\r\n\t\t\tvar length = parentGeo.attributes.position.count * 3;\r\n\t\t\tvar morphPositions = new Float32Array( length );\r\n\r\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\r\n\r\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\r\n\r\n\t\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\r\n\t\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\r\n\t\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: add morph normal support\r\n\t\t\tvar morphGeoInfo = {\r\n\t\t\t\tvertexIndices: vertexIndices,\r\n\t\t\t\tvertexPositions: morphPositions,\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\r\n\r\n\t\t\tvar positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\r\n\t\t\tpositionAttribute.name = name || morphGeoNode.attrName;\r\n\r\n\t\t\tpositionAttribute.applyMatrix4( preTransform );\r\n\r\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\r\n\r\n\t\t},\r\n\r\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\r\n\t\tparseNormals: function ( NormalNode ) {\r\n\r\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\r\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\r\n\t\t\tvar buffer = NormalNode.Normals.a;\r\n\t\t\tvar indexBuffer = [];\r\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\r\n\r\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\r\n\r\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\r\n\r\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\r\n\r\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdataSize: 3,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tindices: indexBuffer,\r\n\t\t\t\tmappingType: mappingType,\r\n\t\t\t\treferenceType: referenceType\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\r\n\t\tparseUVs: function ( UVNode ) {\r\n\r\n\t\t\tvar mappingType = UVNode.MappingInformationType;\r\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\r\n\t\t\tvar buffer = UVNode.UV.a;\r\n\t\t\tvar indexBuffer = [];\r\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\r\n\r\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdataSize: 2,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tindices: indexBuffer,\r\n\t\t\t\tmappingType: mappingType,\r\n\t\t\t\treferenceType: referenceType\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\r\n\t\tparseVertexColors: function ( ColorNode ) {\r\n\r\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\r\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\r\n\t\t\tvar buffer = ColorNode.Colors.a;\r\n\t\t\tvar indexBuffer = [];\r\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\r\n\r\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdataSize: 4,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tindices: indexBuffer,\r\n\t\t\t\tmappingType: mappingType,\r\n\t\t\t\treferenceType: referenceType\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\r\n\t\tparseMaterialIndices: function ( MaterialNode ) {\r\n\r\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\r\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\r\n\r\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdataSize: 1,\r\n\t\t\t\t\tbuffer: [ 0 ],\r\n\t\t\t\t\tindices: [ 0 ],\r\n\t\t\t\t\tmappingType: 'AllSame',\r\n\t\t\t\t\treferenceType: referenceType\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\r\n\r\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\r\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\r\n\t\t\t// for conforming with the other functions we've written for other data.\r\n\t\t\tvar materialIndices = [];\r\n\r\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\r\n\r\n\t\t\t\tmaterialIndices.push( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdataSize: 1,\r\n\t\t\t\tbuffer: materialIndexBuffer,\r\n\t\t\t\tindices: materialIndices,\r\n\t\t\t\tmappingType: mappingType,\r\n\t\t\t\treferenceType: referenceType\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\r\n\t\tparseNurbsGeometry: function ( geoNode ) {\r\n\r\n\t\t\tif ( NURBSCurve === undefined ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\r\n\t\t\t\treturn new BufferGeometry();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar order = parseInt( geoNode.Order );\r\n\r\n\t\t\tif ( isNaN( order ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\r\n\t\t\t\treturn new BufferGeometry();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar degree = order - 1;\r\n\r\n\t\t\tvar knots = geoNode.KnotVector.a;\r\n\t\t\tvar controlPoints = [];\r\n\t\t\tvar pointsValues = geoNode.Points.a;\r\n\r\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\r\n\r\n\t\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar startKnot, endKnot;\r\n\r\n\t\t\tif ( geoNode.Form === 'Closed' ) {\r\n\r\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\r\n\r\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\r\n\r\n\t\t\t\tstartKnot = degree;\r\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\r\n\r\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\r\n\r\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\r\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\r\n\r\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\r\n\r\n\t\t\tvertices.forEach( function ( vertex, i ) {\r\n\r\n\t\t\t\tvertex.toArray( positions, i * 3 );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar geometry = new BufferGeometry();\r\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t},\r\n\r\n\t};\r\n\r\n\t// parse animation data from FBXTree\r\n\tfunction AnimationParser() {}\r\n\r\n\tAnimationParser.prototype = {\r\n\r\n\t\tconstructor: AnimationParser,\r\n\r\n\t\t// take raw animation clips and turn them into three.js animation clips\r\n\t\tparse: function () {\r\n\r\n\t\t\tvar animationClips = [];\r\n\r\n\t\t\tvar rawClips = this.parseClips();\r\n\r\n\t\t\tif ( rawClips !== undefined ) {\r\n\r\n\t\t\t\tfor ( var key in rawClips ) {\r\n\r\n\t\t\t\t\tvar rawClip = rawClips[ key ];\r\n\r\n\t\t\t\t\tvar clip = this.addClip( rawClip );\r\n\r\n\t\t\t\t\tanimationClips.push( clip );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn animationClips;\r\n\r\n\t\t},\r\n\r\n\t\tparseClips: function () {\r\n\r\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\r\n\t\t\t// if this is undefined we can safely assume there are no animations\r\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\r\n\r\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\r\n\r\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\r\n\r\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\r\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\r\n\r\n\t\t\treturn rawClips;\r\n\r\n\t\t},\r\n\r\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\r\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\r\n\t\t// and is referenced by an AnimationLayer\r\n\t\tparseAnimationCurveNodes: function () {\r\n\r\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\r\n\r\n\t\t\tvar curveNodesMap = new Map();\r\n\r\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\r\n\r\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\r\n\r\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\r\n\r\n\t\t\t\t\tvar curveNode = {\r\n\r\n\t\t\t\t\t\tid: rawCurveNode.id,\r\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\r\n\t\t\t\t\t\tcurves: {},\r\n\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn curveNodesMap;\r\n\r\n\t\t},\r\n\r\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\r\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\r\n\t\t// axis ( e.g. times and values of x rotation)\r\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\r\n\r\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\r\n\r\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\r\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\r\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\r\n\t\t\t// clearly, this should be optimised to\r\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\r\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\r\n\r\n\t\t\tfor ( var nodeID in rawCurves ) {\r\n\r\n\t\t\t\tvar animationCurve = {\r\n\r\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\r\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\r\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\r\n\r\n\t\t\t\tif ( relationships !== undefined ) {\r\n\r\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\r\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\r\n\r\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\r\n\r\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\r\n\r\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\r\n\r\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\r\n\r\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\r\n\r\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\r\n\r\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\r\n\r\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\r\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\r\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\r\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\r\n\r\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\r\n\r\n\t\t\tvar layersMap = new Map();\r\n\r\n\t\t\tfor ( var nodeID in rawLayers ) {\r\n\r\n\t\t\t\tvar layerCurveNodes = [];\r\n\r\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\r\n\r\n\t\t\t\tif ( connection !== undefined ) {\r\n\r\n\t\t\t\t\t// all the animationCurveNodes used in the layer\r\n\t\t\t\t\tvar children = connection.children;\r\n\r\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\r\n\r\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\r\n\r\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\r\n\r\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\r\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\r\n\r\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tvar node = {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\r\n\t\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\r\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\r\n\t\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\r\n\t\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\r\n\r\n\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\r\n\r\n\t\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\r\n\t\t\t\t\t\t\t\t\t\t// animation value as well\r\n\t\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\r\n\t\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\r\n\r\n\t\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\r\n\r\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\r\n\r\n\t\t\t\t\t\t\t\t\t} )[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\r\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\r\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\r\n\r\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\r\n\r\n\t\t\t\t\t\t\t\t\tvar node = {\r\n\r\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\r\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\r\n\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn layersMap;\r\n\r\n\t\t},\r\n\r\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\r\n\t\t// hierarchy. Each Stack node will be used to create a AnimationClip\r\n\t\tparseAnimStacks: function ( layersMap ) {\r\n\r\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\r\n\r\n\t\t\t// connect the stacks (clips) up to the layers\r\n\t\t\tvar rawClips = {};\r\n\r\n\t\t\tfor ( var nodeID in rawStacks ) {\r\n\r\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\r\n\r\n\t\t\t\tif ( children.length > 1 ) {\r\n\r\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\r\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\r\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\r\n\r\n\t\t\t\trawClips[ nodeID ] = {\r\n\r\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\r\n\t\t\t\t\tlayer: layer,\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn rawClips;\r\n\r\n\t\t},\r\n\r\n\t\taddClip: function ( rawClip ) {\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tvar scope = this;\r\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\r\n\r\n\t\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\r\n\r\n\t\t},\r\n\r\n\t\tgenerateTracks: function ( rawTracks ) {\r\n\r\n\t\t\tvar tracks = [];\r\n\r\n\t\t\tvar initialPosition = new Vector3();\r\n\t\t\tvar initialRotation = new Quaternion();\r\n\t\t\tvar initialScale = new Vector3();\r\n\r\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\r\n\r\n\t\t\tinitialPosition = initialPosition.toArray();\r\n\t\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\r\n\t\t\tinitialScale = initialScale.toArray();\r\n\r\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\r\n\r\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\r\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\r\n\r\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\r\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\r\n\r\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\r\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\r\n\r\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\r\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn tracks;\r\n\r\n\t\t},\r\n\r\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\r\n\r\n\t\t\tvar times = this.getTimesForAllAxes( curves );\r\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\r\n\r\n\t\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\r\n\r\n\t\t},\r\n\r\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\r\n\r\n\t\t\tif ( curves.x !== undefined ) {\r\n\r\n\t\t\t\tthis.interpolateRotations( curves.x );\r\n\t\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( curves.y !== undefined ) {\r\n\r\n\t\t\t\tthis.interpolateRotations( curves.y );\r\n\t\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( curves.z !== undefined ) {\r\n\r\n\t\t\t\tthis.interpolateRotations( curves.z );\r\n\t\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar times = this.getTimesForAllAxes( curves );\r\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\r\n\r\n\t\t\tif ( preRotation !== undefined ) {\r\n\r\n\t\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\r\n\t\t\t\tpreRotation.push( eulerOrder );\r\n\r\n\t\t\t\tpreRotation = new Euler().fromArray( preRotation );\r\n\t\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( postRotation !== undefined ) {\r\n\r\n\t\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\r\n\t\t\t\tpostRotation.push( eulerOrder );\r\n\r\n\t\t\t\tpostRotation = new Euler().fromArray( postRotation );\r\n\t\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar quaternion = new Quaternion();\r\n\t\t\tvar euler = new Euler();\r\n\r\n\t\t\tvar quaternionValues = [];\r\n\r\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\r\n\r\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\r\n\r\n\t\t\t\tquaternion.setFromEuler( euler );\r\n\r\n\t\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\r\n\t\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\r\n\r\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\r\n\r\n\t\t},\r\n\r\n\t\tgenerateMorphTrack: function ( rawTracks ) {\r\n\r\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\r\n\t\t\tvar values = curves.values.map( function ( val ) {\r\n\r\n\t\t\t\treturn val / 100;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\r\n\r\n\t\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\r\n\r\n\t\t},\r\n\r\n\t\t// For all animated objects, times are defined separately for each axis\r\n\t\t// Here we'll combine the times into one sorted array without duplicates\r\n\t\tgetTimesForAllAxes: function ( curves ) {\r\n\r\n\t\t\tvar times = [];\r\n\r\n\t\t\t// first join together the times for each axis, if defined\r\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\r\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\r\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\r\n\r\n\t\t\t// then sort them and remove duplicates\r\n\t\t\ttimes = times.sort( function ( a, b ) {\r\n\r\n\t\t\t\treturn a - b;\r\n\r\n\t\t\t} ).filter( function ( elem, index, array ) {\r\n\r\n\t\t\t\treturn array.indexOf( elem ) == index;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn times;\r\n\r\n\t\t},\r\n\r\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\r\n\r\n\t\t\tvar prevValue = initialValue;\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tvar xIndex = - 1;\r\n\t\t\tvar yIndex = - 1;\r\n\t\t\tvar zIndex = - 1;\r\n\r\n\t\t\ttimes.forEach( function ( time ) {\r\n\r\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\r\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\r\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\r\n\r\n\t\t\t\t// if there is an x value defined for this frame, use that\r\n\t\t\t\tif ( xIndex !== - 1 ) {\r\n\r\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\r\n\t\t\t\t\tvalues.push( xValue );\r\n\t\t\t\t\tprevValue[ 0 ] = xValue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// otherwise use the x value from the previous frame\r\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( yIndex !== - 1 ) {\r\n\r\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\r\n\t\t\t\t\tvalues.push( yValue );\r\n\t\t\t\t\tprevValue[ 1 ] = yValue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( zIndex !== - 1 ) {\r\n\r\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\r\n\t\t\t\t\tvalues.push( zValue );\r\n\t\t\t\t\tprevValue[ 2 ] = zValue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t},\r\n\r\n\t\t// Rotations are defined as Euler angles which can have values  of any size\r\n\t\t// These will be converted to quaternions which don't support values greater than\r\n\t\t// PI, so we'll interpolate large rotations\r\n\t\tinterpolateRotations: function ( curve ) {\r\n\r\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\r\n\r\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\r\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\r\n\r\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\r\n\r\n\t\t\t\tif ( absoluteSpan >= 180 ) {\r\n\r\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\r\n\r\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\r\n\t\t\t\t\tvar nextValue = initialValue + step;\r\n\r\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\r\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\r\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\r\n\t\t\t\t\tvar nextTime = initialTime + interval;\r\n\r\n\t\t\t\t\tvar interpolatedTimes = [];\r\n\t\t\t\t\tvar interpolatedValues = [];\r\n\r\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\r\n\r\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\r\n\t\t\t\t\t\tnextTime += interval;\r\n\r\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\r\n\t\t\t\t\t\tnextValue += step;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\r\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t};\r\n\r\n\t// parse an FBX file in ASCII format\r\n\tfunction TextParser() {}\r\n\r\n\tTextParser.prototype = {\r\n\r\n\t\tconstructor: TextParser,\r\n\r\n\t\tgetPrevNode: function () {\r\n\r\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetCurrentNode: function () {\r\n\r\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\r\n\r\n\t\t},\r\n\r\n\t\tgetCurrentProp: function () {\r\n\r\n\t\t\treturn this.currentProp;\r\n\r\n\t\t},\r\n\r\n\t\tpushStack: function ( node ) {\r\n\r\n\t\t\tthis.nodeStack.push( node );\r\n\t\t\tthis.currentIndent += 1;\r\n\r\n\t\t},\r\n\r\n\t\tpopStack: function () {\r\n\r\n\t\t\tthis.nodeStack.pop();\r\n\t\t\tthis.currentIndent -= 1;\r\n\r\n\t\t},\r\n\r\n\t\tsetCurrentProp: function ( val, name ) {\r\n\r\n\t\t\tthis.currentProp = val;\r\n\t\t\tthis.currentPropName = name;\r\n\r\n\t\t},\r\n\r\n\t\tparse: function ( text ) {\r\n\r\n\t\t\tthis.currentIndent = 0;\r\n\r\n\t\t\tthis.allNodes = new FBXTree();\r\n\t\t\tthis.nodeStack = [];\r\n\t\t\tthis.currentProp = [];\r\n\t\t\tthis.currentPropName = '';\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\r\n\r\n\t\t\tsplit.forEach( function ( line, i ) {\r\n\r\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\r\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\r\n\r\n\t\t\t\tif ( matchComment || matchEmpty ) return;\r\n\r\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\r\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\r\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\r\n\r\n\t\t\t\tif ( matchBeginning ) {\r\n\r\n\t\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\r\n\r\n\t\t\t\t} else if ( matchProperty ) {\r\n\r\n\t\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\r\n\r\n\t\t\t\t} else if ( matchEnd ) {\r\n\r\n\t\t\t\t\tscope.popStack();\r\n\r\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\r\n\r\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\r\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\r\n\t\t\t\t\tscope.parseNodePropertyContinued( line );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this.allNodes;\r\n\r\n\t\t},\r\n\r\n\t\tparseNodeBegin: function ( line, property ) {\r\n\r\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\r\n\r\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\r\n\r\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar node = { name: nodeName };\r\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\r\n\r\n\t\t\tvar currentNode = this.getCurrentNode();\r\n\r\n\t\t\t// a top node\r\n\t\t\tif ( this.currentIndent === 0 ) {\r\n\r\n\t\t\t\tthis.allNodes.add( nodeName, node );\r\n\r\n\t\t\t} else { // a subnode\r\n\r\n\t\t\t\t// if the subnode already exists, append it\r\n\t\t\t\tif ( nodeName in currentNode ) {\r\n\r\n\t\t\t\t\t// special case Pose needs PoseNodes as an array\r\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\r\n\r\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\r\n\r\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\r\n\r\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\r\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\r\n\r\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\r\n\r\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\r\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\r\n\r\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\r\n\r\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\r\n\t\t\t\t\telse currentNode[ nodeName ] = node;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\r\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\r\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\r\n\r\n\t\t\tthis.pushStack( node );\r\n\r\n\t\t},\r\n\r\n\t\tparseNodeAttr: function ( attrs ) {\r\n\r\n\t\t\tvar id = attrs[ 0 ];\r\n\r\n\t\t\tif ( attrs[ 0 ] !== '' ) {\r\n\r\n\t\t\t\tid = parseInt( attrs[ 0 ] );\r\n\r\n\t\t\t\tif ( isNaN( id ) ) {\r\n\r\n\t\t\t\t\tid = attrs[ 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = '', type = '';\r\n\r\n\t\t\tif ( attrs.length > 1 ) {\r\n\r\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\r\n\t\t\t\ttype = attrs[ 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { id: id, name: name, type: type };\r\n\r\n\t\t},\r\n\r\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\r\n\r\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\r\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\r\n\r\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\r\n\t\t\t//\tContent: ,\r\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\r\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\r\n\r\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentNode = this.getCurrentNode();\r\n\t\t\tvar parentName = currentNode.name;\r\n\r\n\t\t\tif ( parentName === 'Properties70' ) {\r\n\r\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Connections\r\n\t\t\tif ( propName === 'C' ) {\r\n\r\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\r\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\r\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\r\n\r\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\r\n\r\n\t\t\t\trest = rest.map( function ( elem ) {\r\n\r\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tpropName = 'connections';\r\n\t\t\t\tpropValue = [ from, to ];\r\n\t\t\t\tappend( propValue, rest );\r\n\r\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\r\n\r\n\t\t\t\t\tcurrentNode[ propName ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Node\r\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\r\n\r\n\t\t\t// connections\r\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\r\n\r\n\t\t\t\tcurrentNode[ propName ].push( propValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\r\n\t\t\t\telse currentNode.a = propValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setCurrentProp( currentNode, propName );\r\n\r\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\r\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\r\n\r\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tparseNodePropertyContinued: function ( line ) {\r\n\r\n\t\t\tvar currentNode = this.getCurrentNode();\r\n\r\n\t\t\tcurrentNode.a += line;\r\n\r\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\r\n\t\t\t// so convert the string to an array\r\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\r\n\r\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// parse \"Property70\"\r\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\r\n\r\n\t\t\t// split this\r\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\r\n\t\t\t// into array like below\r\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\r\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\r\n\r\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tvar innerPropName = props[ 0 ];\r\n\t\t\tvar innerPropType1 = props[ 1 ];\r\n\t\t\tvar innerPropType2 = props[ 2 ];\r\n\t\t\tvar innerPropFlag = props[ 3 ];\r\n\t\t\tvar innerPropValue = props[ 4 ];\r\n\r\n\t\t\t// cast values where needed, otherwise leave as strings\r\n\t\t\tswitch ( innerPropType1 ) {\r\n\r\n\t\t\t\tcase 'int':\r\n\t\t\t\tcase 'enum':\r\n\t\t\t\tcase 'bool':\r\n\t\t\t\tcase 'ULongLong':\r\n\t\t\t\tcase 'double':\r\n\t\t\t\tcase 'Number':\r\n\t\t\t\tcase 'FieldOfView':\r\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Color':\r\n\t\t\t\tcase 'ColorRGB':\r\n\t\t\t\tcase 'Vector3D':\r\n\t\t\t\tcase 'Lcl_Translation':\r\n\t\t\t\tcase 'Lcl_Rotation':\r\n\t\t\t\tcase 'Lcl_Scaling':\r\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// CAUTION: these props must append to parent's parent\r\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\r\n\r\n\t\t\t\t'type': innerPropType1,\r\n\t\t\t\t'type2': innerPropType2,\r\n\t\t\t\t'flag': innerPropFlag,\r\n\t\t\t\t'value': innerPropValue\r\n\r\n\t\t\t};\r\n\r\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\r\n\r\n\t\t},\r\n\r\n\t};\r\n\r\n\t// Parse an FBX file in Binary format\r\n\tfunction BinaryParser() {}\r\n\r\n\tBinaryParser.prototype = {\r\n\r\n\t\tconstructor: BinaryParser,\r\n\r\n\t\tparse: function ( buffer ) {\r\n\r\n\t\t\tvar reader = new BinaryReader( buffer );\r\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\r\n\r\n\t\t\tvar version = reader.getUint32();\r\n\r\n\t\t\tif ( version < 6400 ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar allNodes = new FBXTree();\r\n\r\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\r\n\r\n\t\t\t\tvar node = this.parseNode( reader, version );\r\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn allNodes;\r\n\r\n\t\t},\r\n\r\n\t\t// Check if reader has reached the end of content.\r\n\t\tendOfContent: function ( reader ) {\r\n\r\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\r\n\t\t\t// - 16bytes: magic\r\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\r\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\r\n\t\t\t// - 4bytes: magic\r\n\t\t\t// - 4bytes: version\r\n\t\t\t// - 120bytes: zero\r\n\t\t\t// - 16bytes: magic\r\n\t\t\tif ( reader.size() % 16 === 0 ) {\r\n\r\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// recursively parse nodes until the end of the file is reached\r\n\t\tparseNode: function ( reader, version ) {\r\n\r\n\t\t\tvar node = {};\r\n\r\n\t\t\t// The first three data sizes depends on version.\r\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\r\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\r\n\r\n\t\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\r\n\r\n\t\t\tvar nameLen = reader.getUint8();\r\n\t\t\tvar name = reader.getString( nameLen );\r\n\r\n\t\t\t// Regards this node as NULL-record if endOffset is zero\r\n\t\t\tif ( endOffset === 0 ) return null;\r\n\r\n\t\t\tvar propertyList = [];\r\n\r\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\r\n\r\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\r\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\r\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\r\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\r\n\r\n\t\t\t// check if this node represents just a single property\r\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\r\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\r\n\r\n\t\t\twhile ( endOffset > reader.getOffset() ) {\r\n\r\n\t\t\t\tvar subNode = this.parseNode( reader, version );\r\n\r\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\r\n\r\n\t\t\tif ( typeof id === 'number' ) node.id = id;\r\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\r\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\r\n\t\t\tif ( name !== '' ) node.name = name;\r\n\r\n\t\t\treturn node;\r\n\r\n\t\t},\r\n\r\n\t\tparseSubNode: function ( name, node, subNode ) {\r\n\r\n\t\t\t// special case: child node is single property\r\n\t\t\tif ( subNode.singleProperty === true ) {\r\n\r\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\r\n\r\n\t\t\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\t\t\tnode[ subNode.name ] = subNode;\r\n\r\n\t\t\t\t\tsubNode.a = value;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnode[ subNode.name ] = value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\r\n\r\n\t\t\t\tvar array = [];\r\n\r\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\r\n\r\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\r\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tif ( node.connections === undefined ) {\r\n\r\n\t\t\t\t\tnode.connections = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnode.connections.push( array );\r\n\r\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\r\n\r\n\t\t\t\tvar keys = Object.keys( subNode );\r\n\r\n\t\t\t\tkeys.forEach( function ( key ) {\r\n\r\n\t\t\t\t\tnode[ key ] = subNode[ key ];\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\r\n\r\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\r\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\r\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\r\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\r\n\t\t\t\tvar innerPropValue;\r\n\r\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\r\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\r\n\r\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\r\n\r\n\t\t\t\t\tinnerPropValue = [\r\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\r\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\r\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// this will be copied to parent, see above\r\n\t\t\t\tnode[ innerPropName ] = {\r\n\r\n\t\t\t\t\t'type': innerPropType1,\r\n\t\t\t\t\t'type2': innerPropType2,\r\n\t\t\t\t\t'flag': innerPropFlag,\r\n\t\t\t\t\t'value': innerPropValue\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\r\n\r\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\r\n\r\n\t\t\t\t\tnode[ subNode.name ] = {};\r\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnode[ subNode.name ] = subNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\r\n\r\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\r\n\r\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\r\n\r\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\r\n\r\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tparseProperty: function ( reader ) {\r\n\r\n\t\t\tvar type = reader.getString( 1 );\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'C':\r\n\t\t\t\t\treturn reader.getBoolean();\r\n\r\n\t\t\t\tcase 'D':\r\n\t\t\t\t\treturn reader.getFloat64();\r\n\r\n\t\t\t\tcase 'F':\r\n\t\t\t\t\treturn reader.getFloat32();\r\n\r\n\t\t\t\tcase 'I':\r\n\t\t\t\t\treturn reader.getInt32();\r\n\r\n\t\t\t\tcase 'L':\r\n\t\t\t\t\treturn reader.getInt64();\r\n\r\n\t\t\t\tcase 'R':\r\n\t\t\t\t\tvar length = reader.getUint32();\r\n\t\t\t\t\treturn reader.getArrayBuffer( length );\r\n\r\n\t\t\t\tcase 'S':\r\n\t\t\t\t\tvar length = reader.getUint32();\r\n\t\t\t\t\treturn reader.getString( length );\r\n\r\n\t\t\t\tcase 'Y':\r\n\t\t\t\t\treturn reader.getInt16();\r\n\r\n\t\t\t\tcase 'b':\r\n\t\t\t\tcase 'c':\r\n\t\t\t\tcase 'd':\r\n\t\t\t\tcase 'f':\r\n\t\t\t\tcase 'i':\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\tvar arrayLength = reader.getUint32();\r\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\r\n\t\t\t\t\tvar compressedLength = reader.getUint32();\r\n\r\n\t\t\t\t\tif ( encoding === 0 ) {\r\n\r\n\t\t\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\r\n\r\n\t\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\r\n\r\n\t\t\t\t\t\t\tcase 'f':\r\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\r\n\r\n\t\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\r\n\r\n\t\t\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( typeof Inflate === 'undefined' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar inflate = new Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\r\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\r\n\r\n\t\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'f':\r\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\r\n\r\n\t\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction BinaryReader( buffer, littleEndian ) {\r\n\r\n\t\tthis.dv = new DataView( buffer );\r\n\t\tthis.offset = 0;\r\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\r\n\r\n\t}\r\n\r\n\tBinaryReader.prototype = {\r\n\r\n\t\tconstructor: BinaryReader,\r\n\r\n\t\tgetOffset: function () {\r\n\r\n\t\t\treturn this.offset;\r\n\r\n\t\t},\r\n\r\n\t\tsize: function () {\r\n\r\n\t\t\treturn this.dv.buffer.byteLength;\r\n\r\n\t\t},\r\n\r\n\t\tskip: function ( length ) {\r\n\r\n\t\t\tthis.offset += length;\r\n\r\n\t\t},\r\n\r\n\t\t// seems like true/false representation depends on exporter.\r\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\r\n\t\t// then sees LSB.\r\n\t\tgetBoolean: function () {\r\n\r\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\r\n\r\n\t\t},\r\n\r\n\t\tgetBooleanArray: function ( size ) {\r\n\r\n\t\t\tvar a = [];\r\n\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\t\ta.push( this.getBoolean() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t},\r\n\r\n\t\tgetUint8: function () {\r\n\r\n\t\t\tvar value = this.dv.getUint8( this.offset );\r\n\t\t\tthis.offset += 1;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\tgetInt16: function () {\r\n\r\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\r\n\t\t\tthis.offset += 2;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\tgetInt32: function () {\r\n\r\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\r\n\t\t\tthis.offset += 4;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\tgetInt32Array: function ( size ) {\r\n\r\n\t\t\tvar a = [];\r\n\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\t\ta.push( this.getInt32() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t},\r\n\r\n\t\tgetUint32: function () {\r\n\r\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\r\n\t\t\tthis.offset += 4;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\r\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\r\n\t\t// There's a possibility that this method returns wrong value if the value\r\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\r\n\t\t// TODO: safely handle 64-bit integer\r\n\t\tgetInt64: function () {\r\n\r\n\t\t\tvar low, high;\r\n\r\n\t\t\tif ( this.littleEndian ) {\r\n\r\n\t\t\t\tlow = this.getUint32();\r\n\t\t\t\thigh = this.getUint32();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = this.getUint32();\r\n\t\t\t\tlow = this.getUint32();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// calculate negative value\r\n\t\t\tif ( high & 0x80000000 ) {\r\n\r\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\r\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\r\n\r\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\r\n\r\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\r\n\r\n\t\t\t\treturn - ( high * 0x100000000 + low );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn high * 0x100000000 + low;\r\n\r\n\t\t},\r\n\r\n\t\tgetInt64Array: function ( size ) {\r\n\r\n\t\t\tvar a = [];\r\n\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\t\ta.push( this.getInt64() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t},\r\n\r\n\t\t// Note: see getInt64() comment\r\n\t\tgetUint64: function () {\r\n\r\n\t\t\tvar low, high;\r\n\r\n\t\t\tif ( this.littleEndian ) {\r\n\r\n\t\t\t\tlow = this.getUint32();\r\n\t\t\t\thigh = this.getUint32();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = this.getUint32();\r\n\t\t\t\tlow = this.getUint32();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn high * 0x100000000 + low;\r\n\r\n\t\t},\r\n\r\n\t\tgetFloat32: function () {\r\n\r\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\r\n\t\t\tthis.offset += 4;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\tgetFloat32Array: function ( size ) {\r\n\r\n\t\t\tvar a = [];\r\n\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\t\ta.push( this.getFloat32() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t},\r\n\r\n\t\tgetFloat64: function () {\r\n\r\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\r\n\t\t\tthis.offset += 8;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\tgetFloat64Array: function ( size ) {\r\n\r\n\t\t\tvar a = [];\r\n\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\t\ta.push( this.getFloat64() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn a;\r\n\r\n\t\t},\r\n\r\n\t\tgetArrayBuffer: function ( size ) {\r\n\r\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\r\n\t\t\tthis.offset += size;\r\n\t\t\treturn value;\r\n\r\n\t\t},\r\n\r\n\t\tgetString: function ( size ) {\r\n\r\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\r\n\t\t\tvar a = [];\r\n\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\t\ta[ i ] = this.getUint8();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar nullByte = a.indexOf( 0 );\r\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\r\n\r\n\t\t\treturn LoaderUtils.decodeText( new Uint8Array( a ) );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\r\n\t// and BinaryParser( FBX Binary format)\r\n\tfunction FBXTree() {}\r\n\r\n\tFBXTree.prototype = {\r\n\r\n\t\tconstructor: FBXTree,\r\n\r\n\t\tadd: function ( key, val ) {\r\n\r\n\t\t\tthis[ key ] = val;\r\n\r\n\t\t},\r\n\r\n\t};\r\n\r\n\t// ************** UTILITY FUNCTIONS **************\r\n\r\n\tfunction isFbxFormatBinary( buffer ) {\r\n\r\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\r\n\r\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\r\n\r\n\t}\r\n\r\n\tfunction isFbxFormatASCII( text ) {\r\n\r\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\r\n\r\n\t\tvar cursor = 0;\r\n\r\n\t\tfunction read( offset ) {\r\n\r\n\t\t\tvar result = text[ offset - 1 ];\r\n\t\t\ttext = text.slice( cursor + offset );\r\n\t\t\tcursor ++;\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\r\n\r\n\t\t\tvar num = read( 1 );\r\n\t\t\tif ( num === CORRECT[ i ] ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction getFbxVersion( text ) {\r\n\r\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\r\n\t\tvar match = text.match( versionRegExp );\r\n\r\n\t\tif ( match ) {\r\n\r\n\t\t\tvar version = parseInt( match[ 1 ] );\r\n\t\t\treturn version;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\r\n\r\n\t}\r\n\r\n\t// Converts FBX ticks into real time seconds.\r\n\tfunction convertFBXTimeToSeconds( time ) {\r\n\r\n\t\treturn time / 46186158000;\r\n\r\n\t}\r\n\r\n\tvar dataArray = [];\r\n\r\n\t// extracts the data from the correct position in the FBX array based on indexing type\r\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\r\n\r\n\t\tvar index;\r\n\r\n\t\tswitch ( infoObject.mappingType ) {\r\n\r\n\t\t\tcase 'ByPolygonVertex' :\r\n\t\t\t\tindex = polygonVertexIndex;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ByPolygon' :\r\n\t\t\t\tindex = polygonIndex;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ByVertice' :\r\n\t\t\t\tindex = vertexIndex;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'AllSame' :\r\n\t\t\t\tindex = infoObject.indices[ 0 ];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\r\n\r\n\t\t}\r\n\r\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\r\n\r\n\t\tvar from = index * infoObject.dataSize;\r\n\t\tvar to = from + infoObject.dataSize;\r\n\r\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\r\n\r\n\t}\r\n\r\n\tvar tempEuler = new Euler();\r\n\tvar tempVec = new Vector3();\r\n\r\n\t// generate transformation from FBX transform data\r\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\r\n\t// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\r\n\tfunction generateTransform( transformData ) {\r\n\r\n\t\tvar lTranslationM = new Matrix4();\r\n\t\tvar lPreRotationM = new Matrix4();\r\n\t\tvar lRotationM = new Matrix4();\r\n\t\tvar lPostRotationM = new Matrix4();\r\n\r\n\t\tvar lScalingM = new Matrix4();\r\n\t\tvar lScalingPivotM = new Matrix4();\r\n\t\tvar lScalingOffsetM = new Matrix4();\r\n\t\tvar lRotationOffsetM = new Matrix4();\r\n\t\tvar lRotationPivotM = new Matrix4();\r\n\r\n\t\tvar lParentGX = new Matrix4();\r\n\t\tvar lGlobalT = new Matrix4();\r\n\r\n\t\tvar inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\r\n\r\n\t\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\r\n\r\n\t\tif ( transformData.preRotation ) {\r\n\r\n\t\t\tvar array = transformData.preRotation.map( MathUtils.degToRad );\r\n\t\t\tarray.push( transformData.eulerOrder );\r\n\t\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( transformData.rotation ) {\r\n\r\n\t\t\tvar array = transformData.rotation.map( MathUtils.degToRad );\r\n\t\t\tarray.push( transformData.eulerOrder );\r\n\t\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( transformData.postRotation ) {\r\n\r\n\t\t\tvar array = transformData.postRotation.map( MathUtils.degToRad );\r\n\t\t\tarray.push( transformData.eulerOrder );\r\n\t\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\r\n\r\n\t\t// Pivots and offsets\r\n\t\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\r\n\t\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\r\n\t\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\r\n\t\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\r\n\r\n\t\t// parent transform\r\n\t\tif ( transformData.parentMatrixWorld ) lParentGX = transformData.parentMatrixWorld;\r\n\r\n\t\t// Global Rotation\r\n\t\tvar lLRM = lPreRotationM.multiply( lRotationM ).multiply( lPostRotationM );\r\n\t\tvar lParentGRM = new Matrix4();\r\n\t\tlParentGX.extractRotation( lParentGRM );\r\n\r\n\t\t// Global Shear*Scaling\r\n\t\tvar lParentTM = new Matrix4();\r\n\t\tlParentTM.copyPosition( lParentGX );\r\n\r\n\t\tvar lParentGSM = new Matrix4();\r\n\t\tlParentGSM.copy( lParentGRM ).invert().multiply( lParentGX );\r\n\r\n\t\tvar lGlobalRS = new Matrix4();\r\n\r\n\t\tif ( inheritType === 0 ) {\r\n\r\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lScalingM );\r\n\r\n\t\t} else if ( inheritType === 1 ) {\r\n\r\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lScalingM );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar lParentLSM_inv = new Matrix4();\r\n\t\t\tlParentLSM_inv.copy( lScalingM ).invert();\r\n\t\t\tvar lParentGSM_noLocal = new Matrix4().multiply( lParentGSM ).multiply( lParentLSM_inv );\r\n\r\n\t\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lScalingM );\r\n\r\n\t\t}\r\n\r\n\t\tvar lRotationPivotM_inv = new Matrix4();\r\n\t\tlRotationPivotM_inv.copy( lRotationPivotM ).invert();\r\n\t\tvar lScalingPivotM_inv = new Matrix4();\r\n\t\tlScalingPivotM_inv.copy( lScalingPivotM ).invert();\r\n\t\t// Calculate the local transform matrix\r\n\t\tvar lTransform = new Matrix4();\r\n\t\tlTransform.copy( lTranslationM ).multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\r\n\r\n\t\tvar lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\r\n\r\n\t\tvar lGlobalTranslation = new Matrix4().copy( lParentGX ).multiply( lLocalTWithAllPivotAndOffsetInfo );\r\n\t\tlGlobalT.copyPosition( lGlobalTranslation );\r\n\r\n\t\tlTransform = new Matrix4().multiply( lGlobalT ).multiply( lGlobalRS );\r\n\r\n\t\treturn lTransform;\r\n\r\n\t}\r\n\r\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\r\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\r\n\tfunction getEulerOrder( order ) {\r\n\r\n\t\torder = order || 0;\r\n\r\n\t\tvar enums = [\r\n\t\t\t'ZYX', // -> XYZ extrinsic\r\n\t\t\t'YZX', // -> XZY extrinsic\r\n\t\t\t'XZY', // -> YZX extrinsic\r\n\t\t\t'ZXY', // -> YXZ extrinsic\r\n\t\t\t'YXZ', // -> ZXY extrinsic\r\n\t\t\t'XYZ', // -> ZYX extrinsic\r\n\t\t\t//'SphericXYZ', // not possible to support\r\n\t\t];\r\n\r\n\t\tif ( order === 6 ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\r\n\t\t\treturn enums[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t\treturn enums[ order ];\r\n\r\n\t}\r\n\r\n\t// Parses comma separated list of numbers and returns them an array.\r\n\t// Used internally by the TextParser\r\n\tfunction parseNumberArray( value ) {\r\n\r\n\t\tvar array = value.split( ',' ).map( function ( val ) {\r\n\r\n\t\t\treturn parseFloat( val );\r\n\r\n\t\t} );\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfunction convertArrayBufferToString( buffer, from, to ) {\r\n\r\n\t\tif ( from === undefined ) from = 0;\r\n\t\tif ( to === undefined ) to = buffer.byteLength;\r\n\r\n\t\treturn LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\r\n\r\n\t}\r\n\r\n\tfunction append( a, b ) {\r\n\r\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\r\n\r\n\t\t\ta[ j ] = b[ i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction slice( a, b, from, to ) {\r\n\r\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\r\n\r\n\t\t\ta[ j ] = b[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\r\n\t}\r\n\r\n\t// inject array a2 into array a1 at index\r\n\tfunction inject( a1, index, a2 ) {\r\n\r\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\r\n\r\n\t}\r\n\r\n\treturn FBXLoader;\r\n\r\n} )();\r\n\r\nexport { FBXLoader };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/loaders/FBXLoader.js","<template>\r\n    <div class=\"webglMaterialsPhysicalSheen-container\">\r\n        <div id=\"info\">Sheen demo by <a href=\"https://github.com/DanielSturk\">DanielSturk</a></div>\r\n\t\t<div id=\"container\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Nodes from '@/components/jsm/nodes/Nodes.js'\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { FBXLoader } from '@/components/jsm/loaders/FBXLoader.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            controls: null,\r\n            scene: null,\r\n            renderer: null,\r\n            stats: null,\r\n\t\t\tdirectionalLight: null,\r\n            mesh: null,\r\n            sphere: null,\r\n            material: null,\r\n            nodeMaterial: null,\r\n            params: null,\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.params = {\r\n            nodeMaterial: true,\r\n            color: new this.$THREE.Color(255, 0, 127),\r\n            sheenBRDF: true,\r\n            sheen: new this.$THREE.Color(10, 10, 10), // corresponds to .04 reflectance\r\n            roughness: .9,\r\n            exposure: 2,\r\n        }\r\n        // model\r\n        new FBXLoader().load('static/models/fbx/cloth.fbx', (loadedModel) => {\r\n            this.mesh = loadedModel.children[ 0 ];\r\n            this.init();\r\n        });\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(60, this.$webglInnerWidth / window.innerHeight, 0.2, 2000);\r\n            this.scene = new this.$THREE.Scene();\r\n            this.scene.background = new this.$THREE.Color(0xbfd1e5);\r\n            this.mesh.scale.multiplyScalar(.5);\r\n            this.scene.add(this.mesh);\r\n            //\r\n            this.material = new this.$THREE.MeshPhysicalMaterial();\r\n            this.material.side = this.$THREE.DoubleSide;\r\n            this.material.metalness = 0;\r\n            //\r\n            this.nodeMaterial = new Nodes.StandardNodeMaterial();\r\n            this.nodeMaterial.side = this.$THREE.DoubleSide;\r\n            this.nodeMaterial.metalness = new Nodes.FloatNode(0);\r\n            this.nodeMaterial.roughness = new Nodes.FloatNode();\r\n            this.nodeMaterial.color = new Nodes.ColorNode(this.params.color.clone());\r\n            //\r\n            this.sphere = new this.$THREE.Mesh(\r\n                new this.$THREE.SphereBufferGeometry(1, 100, 100),\r\n                this.material\r\n            );\r\n            this.scene.add(this.sphere);\r\n            this.camera.position.set(- 12, 7, 4);\r\n            var container = document.getElementById('container');\r\n            this.renderer = new this.$THREE.WebGLRenderer();\r\n            this.renderer.setPixelRatio(window.devicePixelRatio);\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight);\r\n            this.renderer.shadowMap.enabled = true;\r\n            container.appendChild(this.renderer.domElement);\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n            this.controls.target.set(0, 2, 0);\r\n            this.controls.update();\r\n            this.directionalLight = new this.$THREE.DirectionalLight(0xffffff, .5);\r\n            this.directionalLight.position.set(0, 10, 0);\r\n            this.directionalLight.castShadow = true;\r\n            this.directionalLight.add(\r\n                new this.$THREE.Mesh(\r\n                    new this.$THREE.SphereBufferGeometry(.5),\r\n                    new this.$THREE.MeshBasicMaterial({ color: 0xffffff })\r\n                )\r\n            );\r\n            this.scene.add(this.directionalLight);\r\n            this.stats = new this.$Stats();\r\n            this.stats.dom.style.left = '280px'\r\n            this.stats.domElement.style.position = 'absolute';\r\n            this.stats.domElement.style.top = '0px';\r\n            container.appendChild(this.stats.dom);\r\n            window.addEventListener('resize', this.onWindowResize, false);\r\n            this.gui = new GUI();\r\n            var that = this\r\n            function onUpdate() {\r\n                that.mesh.material = that.sphere.material = that.params.nodeMaterial\r\n                    ? that.nodeMaterial\r\n                    : that.material;\r\n                that.material.sheen = that.params.sheenBRDF\r\n                    ? new that.$THREE.Color()\r\n                    : null;\r\n                that.material.needsUpdate = true;\r\n                that.nodeMaterial.sheen = that.params.sheenBRDF\r\n                    ? new Nodes.ColorNode(that.material.sheen)\r\n                    : undefined;\r\n                that.nodeMaterial.needsCompile = true;\r\n            }\r\n            this.gui.add(this.params, 'nodeMaterial').onChange(onUpdate);\r\n            this.gui.addColor(this.params, 'color');\r\n            this.gui.add(this.params, 'sheenBRDF').onChange(onUpdate);\r\n            this.gui.addColor(this.params, 'sheen');\r\n            this.gui.add(this.params, 'roughness', 0, 1);\r\n            this.gui.add(this.params, 'exposure', 0, 3);\r\n            this.gui.open();\r\n            onUpdate();\r\n            this.animate();\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate);\r\n            this.render();\r\n            this.stats.update();\r\n        },\r\n        render() {\r\n            //\r\n            this.material.color.copy(this.params.color).multiplyScalar(1 / 255);\r\n            this.material.roughness = this.params.roughness;\r\n            //\r\n            this.nodeMaterial.color.value.copy(this.material.color);\r\n            this.nodeMaterial.roughness.value = this.params.roughness;\r\n            //\r\n            if (this.params.sheenBRDF) {\r\n                this.material.sheen.copy(this.params.sheen).multiplyScalar(1 / 255);\r\n            }\r\n            //\r\n            this.renderer.toneMappingExposure = this.params.exposure;\r\n            this.renderer.render(this.scene, this.camera);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsPhysicalSheen-container {\r\n    width: 100%;\r\n    color: #333;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsPhysicalSheen.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsPhysicalSheen-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_vm._v(\"Sheen demo by \"),_c('a',{attrs:{\"href\":\"https://github.com/DanielSturk\"}},[_vm._v(\"DanielSturk\")])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6c90acab\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsPhysicalSheen.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6c90acab\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsPhysicalSheen.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsPhysicalSheen.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsPhysicalSheen.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6c90acab\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsPhysicalSheen.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6c90acab\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsPhysicalSheen.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}