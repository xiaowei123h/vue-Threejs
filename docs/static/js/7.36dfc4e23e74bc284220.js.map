{"version":3,"sources":["webpack:///src/views/buffergeometry/webglBuffergeometryRawshader.vue","webpack:///./src/views/buffergeometry/webglBuffergeometryRawshader.vue?105f","webpack:///./src/views/buffergeometry/webglBuffergeometryRawshader.vue"],"names":["webglBuffergeometryRawshader","data","vertexShader","fragmentShader","container","stats","camera","scene","renderer","mounted","this","init","animate","methods","document","getElementById","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","z","Scene","background","Color","geometry","BufferGeometry","positions","colors","i","push","Math","random","positionAttribute","Float32BufferAttribute","colorAttribute","Uint8BufferAttribute","normalized","setAttribute","material","RawShaderMaterial","uniforms","time","value","side","DoubleSide","transparent","mesh","Mesh","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","$Stats","dom","style","left","addEventListener","onWindowResize","$onWindowResize","requestAnimationFrame","render","update","performance","now","object","children","rotation","y","buffergeometry_webglBuffergeometryRawshader","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/7.36dfc4e23e74bc284220.js","sourcesContent":["<template>\r\n    <div class=\"webglBuffergeometryRawshader-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\"><a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - raw shader demo</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            vertexShader: null,\r\n            fragmentShader: null,\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.vertexShader = `\r\n            precision mediump float;\r\n\t\t\tprecision mediump int;\r\n\t\t\tuniform mat4 modelViewMatrix; // optional\r\n\t\t\tuniform mat4 projectionMatrix; // optional\r\n\t\t\tattribute vec3 position;\r\n\t\t\tattribute vec4 color;\r\n\t\t\tvarying vec3 vPosition;\r\n\t\t\tvarying vec4 vColor;\r\n\t\t\tvoid main()\t{\r\n\t\t\t\tvPosition = position;\r\n\t\t\t\tvColor = color;\r\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n            }`\r\n        this.fragmentShader = `\r\n            precision mediump float;\r\n\t\t\tprecision mediump int;\r\n\t\t\tuniform float time;\r\n\t\t\tvarying vec3 vPosition;\r\n\t\t\tvarying vec4 vColor;\r\n\t\t\tvoid main()\t{\r\n\t\t\t\tvec4 color = vec4( vColor );\r\n\t\t\t\tcolor.r += sin( vPosition.x * 10.0 + time ) * 0.5;\r\n\t\t\t\tgl_FragColor = color;\r\n            }`\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.getElementById('container')\r\n            this.camera = new this.$THREE.PerspectiveCamera(50, this.$webglInnerWidth / window.innerHeight, 1, 10)\r\n            this.camera.position.z = 2\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0x101010)\r\n            // geometry\r\n            // nr of triangles with 3 vertices per triangle\r\n            var vertexCount = 200 * 3\r\n            var geometry = new this.$THREE.BufferGeometry()\r\n            var positions = []\r\n            var colors = []\r\n            for (var i = 0; i < vertexCount; i ++) {\r\n                // adding x,y,z\r\n                positions.push(Math.random() - 0.5)\r\n                positions.push(Math.random() - 0.5)\r\n                positions.push(Math.random() - 0.5)\r\n                // adding r,g,b,a\r\n                colors.push(Math.random() * 255)\r\n                colors.push(Math.random() * 255)\r\n                colors.push(Math.random() * 255)\r\n                colors.push(Math.random() * 255)\r\n            }\r\n            var positionAttribute = new this.$THREE.Float32BufferAttribute(positions, 3)\r\n            var colorAttribute = new this.$THREE.Uint8BufferAttribute(colors, 4)\r\n            colorAttribute.normalized = true // this will map the buffer values to 0.0f - +1.0f in the shader\r\n            geometry.setAttribute('position', positionAttribute)\r\n            geometry.setAttribute('color', colorAttribute)\r\n            // material\r\n            var material = new this.$THREE.RawShaderMaterial({\r\n                uniforms: {\r\n                    time: { value: 1.0 }\r\n                },\r\n                vertexShader: this.vertexShader,\r\n                fragmentShader: this.fragmentShader,\r\n                side: this.$THREE.DoubleSide,\r\n                transparent: true\r\n            })\r\n            var mesh = new this.$THREE.Mesh(geometry, material)\r\n            this.scene.add(mesh)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            var time = performance.now()\r\n            var object = this.scene.children[ 0 ]\r\n            object.rotation.y = time * 0.0005\r\n            object.material.uniforms.time.value = time * 0.005\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglBuffergeometryRawshader-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/buffergeometry/webglBuffergeometryRawshader.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglBuffergeometryRawshader-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - raw shader demo\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-9bae0e5e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/buffergeometry/webglBuffergeometryRawshader.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9bae0e5e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglBuffergeometryRawshader.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglBuffergeometryRawshader.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglBuffergeometryRawshader.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9bae0e5e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglBuffergeometryRawshader.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9bae0e5e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/buffergeometry/webglBuffergeometryRawshader.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}