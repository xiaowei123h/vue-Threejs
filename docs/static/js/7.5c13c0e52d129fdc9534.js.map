{"version":3,"sources":["webpack:///src/views/geometries/webglGeometrySplineEditor.vue","webpack:///./src/views/geometries/webglGeometrySplineEditor.vue?f148","webpack:///./src/views/geometries/webglGeometrySplineEditor.vue","webpack:///./src/components/jsm/controls/TransformControls.js","webpack:///./src/utils/geometrySplineEditor.js"],"names":["webglGeometrySplineEditor","data","container","stats","camera","scene","renderer","splineHelperObjects","splinePointsLength","positions","point","raycaster","pointer","onUpPosition","onDownPosition","geometry","transformControl","ARC_SEGMENTS","splines","params","gui","mounted","this","$THREE","Vector3","Raycaster","Vector2","BoxBufferGeometry","uniform","tension","centripetal","chordal","addPoint","removePoint","exportSpline","init","animate","beforeDestroy","hide","methods","_this","document","getElementById","Scene","background","Color","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","add","AmbientLight","light","SpotLight","angle","Math","PI","castShadow","shadow","near","far","bias","mapSize","width","height","planeGeometry","PlaneBufferGeometry","rotateX","planeMaterial","ShadowMaterial","opacity","plane","Mesh","y","receiveShadow","helper","GridHelper","material","transparent","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","appendChild","domElement","$Stats","dom","style","left","dat_gui_module","step","onChange","value","updateSplineOutline","open","controls","OrbitControls","damping","addEventListener","render","TransformControls","event","onPointerDown","onPointerUp","onPointerMove","i","addSplineObject","length","push","BufferGeometry","setAttribute","BufferAttribute","Float32Array","curve","CatmullRomCurve3","k","curveType","mesh","Line","clone","LineBasicMaterial","color","spline","load","onWindowResize","$onWindowResize","MeshLambertMaterial","random","object","copy","x","z","pop","detach","remove","attributes","t","getPoint","setXYZ","needsUpdate","strplace","p","format","console","log","join","code","prompt","new_positions","requestAnimationFrame","update","visible","clientX","clientY","distanceTo","innerWidth","setFromCamera","intersects","intersectObjects","attach","geometries_webglGeometrySplineEditor","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","_v","href","target","rel","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","d","__WEBPACK_IMPORTED_MODULE_0__components_build_three_module_js__","undefined","warn","Object3D","call","_gizmo","TransformControlsGizmo","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","type","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","intersectObjectWithRay","includeInvisible","allIntersections","intersectObject","_tempVector","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","propValue","Object","get","dispatchEvent","getPointer","ownerDocument","pointerLockElement","button","changedTouches","rect","getBoundingClientRect","top","onPointerHover","pointerType","pointerHover","touchAction","pointerDown","pointerMove","removeEventListener","pointerUp","dispose","traverse","child","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","invert","sub","normalize","prototype","dragging","intersect","picker","name","planeIntersect","space","snap","rotationSnap","rotation","round","quaternion","scale","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","dot","multiply","scaleSnap","ROTATION_SPEED","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","size","setSpace","assign","create","constructor","isTransformControls","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","side","DoubleSide","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderBufferGeometry","scaleHandleGeometry","lineGeometry","Float32BufferAttribute","CircleGeometry","radius","arc","vertices","cos","sin","gizmoTranslate","XYZ","OctahedronBufferGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusBufferGeometry","SphereBufferGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","tempVector","tempEuler","Euler","alignVector","zeroVector","lookAtMatrix","Matrix4","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","handles","concat","children","factor","handle","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","lerp","split","some","a","setFromEuler","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane","String","str","myArguments","replace"],"mappings":"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","file":"static/js/7.5c13c0e52d129fdc9534.js","sourcesContent":["<template>\r\n    <div class=\"webglGeometrySplineEditor-container\">\r\n        <div id=\"container\"></div>\r\n\t\t<div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - geometry - catmull spline editor\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { TransformControls } from '@/components/jsm/controls/TransformControls.js'\r\nimport '@/utils/geometrySplineEditor.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            container: null,\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tsplineHelperObjects: [],\r\n\t\t\tsplinePointsLength: 4,\r\n\t\t\tpositions: [],\r\n\t\t\tpoint: null,\r\n\t\t\traycaster: null,\r\n\t\t\tpointer: null,\r\n\t\t\tonUpPosition: null,\r\n\t\t\tonDownPosition: null,\r\n\t\t\tgeometry: null,\r\n\t\t\ttransformControl: null,\r\n\t\t\tARC_SEGMENTS: 200,\r\n\t\t\tsplines: {},\r\n            params: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.point = new this.$THREE.Vector3()\r\n        this.raycaster = new this.$THREE.Raycaster()\r\n        this.pointer = new this.$THREE.Vector2()\r\n        this.onUpPosition = new this.$THREE.Vector2()\r\n        this.onDownPosition = new this.$THREE.Vector2()\r\n        this.geometry = new this.$THREE.BoxBufferGeometry(20, 20, 20)\r\n        this.ARC_SEGMENTS = 200\r\n        this.splines = {}\r\n        this.params = {\r\n            uniform: true,\r\n            tension: 0.5,\r\n            centripetal: true,\r\n            chordal: true,\r\n            addPoint: this.addPoint,\r\n            removePoint: this.removePoint,\r\n            exportSpline: this.exportSpline\r\n        }\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.container = document.getElementById('container')\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xf0f0f0)\r\n            this.camera = new this.$THREE.PerspectiveCamera(70, this.$webglInnerWidth / window.innerHeight, 1, 10000)\r\n            this.camera.position.set(0, 250, 1000)\r\n            this.scene.add(this.camera)\r\n            this.scene.add(new this.$THREE.AmbientLight(0xf0f0f0))\r\n            var light = new this.$THREE.SpotLight(0xffffff, 1.5)\r\n            light.position.set(0, 1500, 200)\r\n            light.angle = Math.PI * 0.2\r\n            light.castShadow = true\r\n            light.shadow.camera.near = 200\r\n            light.shadow.camera.far = 2000\r\n            light.shadow.bias = - 0.000222\r\n            light.shadow.mapSize.width = 1024\r\n            light.shadow.mapSize.height = 1024\r\n            this.scene.add(light)\r\n            var planeGeometry = new this.$THREE.PlaneBufferGeometry(2000, 2000)\r\n            planeGeometry.rotateX(- Math.PI / 2)\r\n            var planeMaterial = new this.$THREE.ShadowMaterial({ opacity: 0.2 })\r\n            var plane = new this.$THREE.Mesh(planeGeometry, planeMaterial)\r\n            plane.position.y = - 200\r\n            plane.receiveShadow = true\r\n            this.scene.add(plane)\r\n            var helper = new this.$THREE.GridHelper(2000, 100)\r\n            helper.position.y = - 199\r\n            helper.material.opacity = 0.25\r\n            helper.material.transparent = true\r\n            this.scene.add(helper)\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.shadowMap.enabled = true\r\n            this.container.appendChild(this.renderer.domElement)\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            this.container.appendChild(this.stats.dom)\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'uniform')\r\n            this.gui.add(this.params, 'tension', 0, 1).step(0.01).onChange((value) => {\r\n                this.splines.uniform.tension = value\r\n                this.updateSplineOutline()\r\n            })\r\n            this.gui.add(this.params, 'centripetal')\r\n            this.gui.add(this.params, 'chordal')\r\n            this.gui.add(this.params, 'addPoint')\r\n            this.gui.add(this.params, 'removePoint')\r\n            this.gui.add(this.params, 'exportSpline')\r\n            this.gui.open()\r\n            // Controls\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.damping = 0.2\r\n            controls.addEventListener('change', this.render)\r\n            this.transformControl = new TransformControls(this.camera, this.renderer.domElement)\r\n            this.transformControl.addEventListener('change', this.render)\r\n            this.transformControl.addEventListener('dragging-changed', (event) => {\r\n                controls.enabled = ! event.value\r\n            })\r\n            this.scene.add(this.transformControl)\r\n            this.transformControl.addEventListener('objectChange', () => {\r\n                this.updateSplineOutline()\r\n            })\r\n            document.addEventListener('pointerdown', this.onPointerDown, false)\r\n            document.addEventListener('pointerup', this.onPointerUp, false)\r\n            document.addEventListener('pointermove', this.onPointerMove, false)\r\n            /*******\r\n             * Curves\r\n             *********/\r\n            for (var i = 0; i < this.splinePointsLength; i ++) {\r\n                this.addSplineObject(this.positions[ i ])\r\n            }\r\n            this.positions.length = 0\r\n            for (var i = 0; i < this.splinePointsLength; i ++) {\r\n                this.positions.push(this.splineHelperObjects[ i ].position)\r\n            }\r\n            var geometry = new this.$THREE.BufferGeometry()\r\n            geometry.setAttribute('position', new this.$THREE.BufferAttribute(new Float32Array(this.ARC_SEGMENTS * 3), 3))\r\n            var curve = new this.$THREE.CatmullRomCurve3(this.positions)\r\n            curve.curveType = 'catmullrom'\r\n            curve.mesh = new this.$THREE.Line(geometry.clone(), new this.$THREE.LineBasicMaterial({\r\n                color: 0xff0000,\r\n                opacity: 0.35\r\n            }))\r\n            curve.mesh.castShadow = true\r\n            this.splines.uniform = curve\r\n            curve = new this.$THREE.CatmullRomCurve3(this.positions)\r\n            curve.curveType = 'centripetal'\r\n            curve.mesh = new this.$THREE.Line(geometry.clone(), new this.$THREE.LineBasicMaterial({\r\n                color: 0x00ff00,\r\n                opacity: 0.35\r\n            }))\r\n            curve.mesh.castShadow = true\r\n            this.splines.centripetal = curve\r\n            curve = new this.$THREE.CatmullRomCurve3(this.positions)\r\n            curve.curveType = 'chordal'\r\n            curve.mesh = new this.$THREE.Line(geometry.clone(), new this.$THREE.LineBasicMaterial({\r\n                color: 0x0000ff,\r\n                opacity: 0.35\r\n            }))\r\n            curve.mesh.castShadow = true\r\n            this.splines.chordal = curve\r\n            for (var k in this.splines) {\r\n                var spline = this.splines[ k ]\r\n                this.scene.add(spline.mesh)\r\n            }\r\n            this.load([ new this.$THREE.Vector3(289.76843686945404, 452.51481137238443, 56.10018915737797),\r\n                new this.$THREE.Vector3(- 53.56300074753207, 171.49711742836848, - 14.495472686253045),\r\n                new this.$THREE.Vector3(- 91.40118730204415, 176.4306956436485, - 6.958271935582161),\r\n                new this.$THREE.Vector3(- 383.785318791128, 491.1365363371675, 47.869296953772746) ])\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        addSplineObject(position) {\r\n            var material = new this.$THREE.MeshLambertMaterial({ color: Math.random() * 0xffffff })\r\n            var object = new this.$THREE.Mesh(this.geometry, material)\r\n            if (position) {\r\n                object.position.copy(position)\r\n            } else {\r\n                object.position.x = Math.random() * 1000 - 500\r\n                object.position.y = Math.random() * 600\r\n                object.position.z = Math.random() * 800 - 400\r\n            }\r\n            object.castShadow = true\r\n            object.receiveShadow = true\r\n            this.scene.add(object)\r\n            this.splineHelperObjects.push(object)\r\n            return object\r\n        },\r\n        addPoint() {\r\n            this.splinePointsLength ++\r\n            this.positions.push(this.addSplineObject().position)\r\n            this.updateSplineOutline()\r\n        },\r\n        removePoint() {\r\n            if (this.splinePointsLength <= 4) {\r\n                return\r\n            }\r\n            var point = this.splineHelperObjects.pop()\r\n            this.splinePointsLength --\r\n            this.positions.pop()\r\n            if (this.transformControl.object === point) this.transformControl.detach()\r\n            this.scene.remove(point)\r\n            this.updateSplineOutline()\r\n        },\r\n        updateSplineOutline() {\r\n            for (var k in this.splines) {\r\n                var spline = this.splines[ k ]\r\n                var splineMesh = spline.mesh\r\n                var position = splineMesh.geometry.attributes.position\r\n                for (var i = 0; i < this.ARC_SEGMENTS; i ++) {\r\n                    var t = i / (this.ARC_SEGMENTS - 1)\r\n                    spline.getPoint(t, this.point)\r\n                    position.setXYZ(i, this.point.x, this.point.y, this.point.z)\r\n                }\r\n                position.needsUpdate = true\r\n            }\r\n        },\r\n        exportSpline() {\r\n            var strplace = []\r\n            for (var i = 0; i < this.splinePointsLength; i ++) {\r\n                var p = this.splineHelperObjects[ i ].position\r\n                strplace.push('new this.$THREE.Vector3({0}, {1}, {2})'.format('new this.$THREE.Vector3({0}, {1}, {2})', p.x, p.y, p.z))\r\n            }\r\n            console.log(strplace.join(',\\n'))\r\n            var code = '[' + (strplace.join(',\\n\\t')) + ']'\r\n            prompt('copy and paste code', code)\r\n        },\r\n        load(new_positions) {\r\n            while (new_positions.length > this.positions.length) {\r\n                this.addPoint()\r\n            }\r\n            while (new_positions.length < this.positions.length) {\r\n                this.removePoint()\r\n            }\r\n            for (var i = 0; i < this.positions.length; i ++) {\r\n                this.positions[ i ].copy(new_positions[ i ])\r\n            }\r\n            this.updateSplineOutline()\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n            this.stats.update()\r\n        },\r\n        render() {\r\n            this.splines.uniform.mesh.visible = this.params.uniform\r\n            this.splines.centripetal.mesh.visible = this.params.centripetal\r\n            this.splines.chordal.mesh.visible = this.params.chordal\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        onPointerDown(event) {\r\n            this.onDownPosition.x = event.clientX\r\n            this.onDownPosition.y = event.clientY\r\n        },\r\n        onPointerUp() {\r\n            this.onUpPosition.x = event.clientX\r\n            this.onUpPosition.y = event.clientY\r\n            if (this.onDownPosition.distanceTo(this.onUpPosition) === 0) this.transformControl.detach()\r\n        },\r\n        onPointerMove(event) {\r\n            this.pointer.x = (event.clientX / window.innerWidth - 281) * 2 - 1\r\n            this.pointer.y = - (event.clientY / window.innerHeight) * 2 + 1\r\n            this.raycaster.setFromCamera(this.pointer, this.camera)\r\n            var intersects = this.raycaster.intersectObjects(this.splineHelperObjects)\r\n            if (intersects.length > 0) {\r\n                var object = intersects[ 0 ].object\r\n                if (object !== this.transformControl.object) {\r\n                    this.transformControl.attach(object)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometrySplineEditor-container {\r\n    width: 100%;\r\n    background-color: #f0f0f0;\r\n}\r\n#info {\t\t\t\r\n    color: #444;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometrySplineEditor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometrySplineEditor-container\"},[_c('div',{attrs:{\"id\":\"container\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - geometry - catmull spline editor\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b03110a6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometrySplineEditor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b03110a6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometrySplineEditor.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometrySplineEditor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometrySplineEditor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b03110a6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometrySplineEditor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b03110a6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometrySplineEditor.vue\n// module id = null\n// module chunks = ","import {\r\n\tBoxBufferGeometry,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tCylinderBufferGeometry,\r\n\tDoubleSide,\r\n\tEuler,\r\n\tFloat32BufferAttribute,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tObject3D,\r\n\tOctahedronBufferGeometry,\r\n\tPlaneBufferGeometry,\r\n\tQuaternion,\r\n\tRaycaster,\r\n\tSphereBufferGeometry,\r\n\tTorusBufferGeometry,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\nvar TransformControls = function ( camera, domElement ) {\r\n\r\n\tif ( domElement === undefined ) {\r\n\r\n\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\r\n\t\tdomElement = document;\r\n\r\n\t}\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.visible = false;\r\n\tthis.domElement = domElement;\r\n\r\n\tvar _gizmo = new TransformControlsGizmo();\r\n\tthis.add( _gizmo );\r\n\r\n\tvar _plane = new TransformControlsPlane();\r\n\tthis.add( _plane );\r\n\r\n\tvar scope = this;\r\n\r\n\t// Define properties with getters/setter\r\n\t// Setting the defined property will automatically trigger change event\r\n\t// Defined properties are passed down to gizmo and plane\r\n\r\n\tdefineProperty( \"camera\", camera );\r\n\tdefineProperty( \"object\", undefined );\r\n\tdefineProperty( \"enabled\", true );\r\n\tdefineProperty( \"axis\", null );\r\n\tdefineProperty( \"mode\", \"translate\" );\r\n\tdefineProperty( \"translationSnap\", null );\r\n\tdefineProperty( \"rotationSnap\", null );\r\n\tdefineProperty( \"scaleSnap\", null );\r\n\tdefineProperty( \"space\", \"world\" );\r\n\tdefineProperty( \"size\", 1 );\r\n\tdefineProperty( \"dragging\", false );\r\n\tdefineProperty( \"showX\", true );\r\n\tdefineProperty( \"showY\", true );\r\n\tdefineProperty( \"showZ\", true );\r\n\r\n\tvar changeEvent = { type: \"change\" };\r\n\tvar mouseDownEvent = { type: \"mouseDown\" };\r\n\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\r\n\tvar objectChangeEvent = { type: \"objectChange\" };\r\n\r\n\t// Reusable utility variables\r\n\r\n\tvar raycaster = new Raycaster();\r\n\r\n\tfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\r\n\r\n\t\tvar allIntersections = raycaster.intersectObject( object, true );\r\n\r\n\t\tfor ( var i = 0; i < allIntersections.length; i ++ ) {\r\n\r\n\t\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\r\n\r\n\t\t\t\treturn allIntersections[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tvar _tempVector = new Vector3();\r\n\tvar _tempVector2 = new Vector3();\r\n\tvar _tempQuaternion = new Quaternion();\r\n\tvar _unit = {\r\n\t\tX: new Vector3( 1, 0, 0 ),\r\n\t\tY: new Vector3( 0, 1, 0 ),\r\n\t\tZ: new Vector3( 0, 0, 1 )\r\n\t};\r\n\r\n\tvar pointStart = new Vector3();\r\n\tvar pointEnd = new Vector3();\r\n\tvar offset = new Vector3();\r\n\tvar rotationAxis = new Vector3();\r\n\tvar startNorm = new Vector3();\r\n\tvar endNorm = new Vector3();\r\n\tvar rotationAngle = 0;\r\n\r\n\tvar cameraPosition = new Vector3();\r\n\tvar cameraQuaternion = new Quaternion();\r\n\tvar cameraScale = new Vector3();\r\n\r\n\tvar parentPosition = new Vector3();\r\n\tvar parentQuaternion = new Quaternion();\r\n\tvar parentQuaternionInv = new Quaternion();\r\n\tvar parentScale = new Vector3();\r\n\r\n\tvar worldPositionStart = new Vector3();\r\n\tvar worldQuaternionStart = new Quaternion();\r\n\tvar worldScaleStart = new Vector3();\r\n\r\n\tvar worldPosition = new Vector3();\r\n\tvar worldQuaternion = new Quaternion();\r\n\tvar worldQuaternionInv = new Quaternion();\r\n\tvar worldScale = new Vector3();\r\n\r\n\tvar eye = new Vector3();\r\n\r\n\tvar positionStart = new Vector3();\r\n\tvar quaternionStart = new Quaternion();\r\n\tvar scaleStart = new Vector3();\r\n\r\n\t// TODO: remove properties unused in plane and gizmo\r\n\r\n\tdefineProperty( \"worldPosition\", worldPosition );\r\n\tdefineProperty( \"worldPositionStart\", worldPositionStart );\r\n\tdefineProperty( \"worldQuaternion\", worldQuaternion );\r\n\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\r\n\tdefineProperty( \"cameraPosition\", cameraPosition );\r\n\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\r\n\tdefineProperty( \"pointStart\", pointStart );\r\n\tdefineProperty( \"pointEnd\", pointEnd );\r\n\tdefineProperty( \"rotationAxis\", rotationAxis );\r\n\tdefineProperty( \"rotationAngle\", rotationAngle );\r\n\tdefineProperty( \"eye\", eye );\r\n\r\n\t{\r\n\r\n\t\tdomElement.addEventListener( \"pointerdown\", onPointerDown, false );\r\n\t\tdomElement.addEventListener( \"pointermove\", onPointerHover, false );\r\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointerup\", onPointerUp, false );\r\n\r\n\t}\r\n\r\n\tthis.dispose = function () {\r\n\r\n\t\tdomElement.removeEventListener( \"pointerdown\", onPointerDown );\r\n\t\tdomElement.removeEventListener( \"pointermove\", onPointerHover );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointerup\", onPointerUp );\r\n\r\n\t\tthis.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.geometry ) child.geometry.dispose();\r\n\t\t\tif ( child.material ) child.material.dispose();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\t// Set current object\r\n\tthis.attach = function ( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.visible = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t// Detatch from object\r\n\tthis.detach = function () {\r\n\r\n\t\tthis.object = undefined;\r\n\t\tthis.visible = false;\r\n\t\tthis.axis = null;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n\t// Defined getter, setter and store for a property\r\n\tfunction defineProperty( propName, defaultValue ) {\r\n\r\n\t\tvar propValue = defaultValue;\r\n\r\n\t\tObject.defineProperty( scope, propName, {\r\n\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tif ( propValue !== value ) {\r\n\r\n\t\t\t\t\tpropValue = value;\r\n\t\t\t\t\t_plane[ propName ] = value;\r\n\t\t\t\t\t_gizmo[ propName ] = value;\r\n\r\n\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\r\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tscope[ propName ] = defaultValue;\r\n\t\t_plane[ propName ] = defaultValue;\r\n\t\t_gizmo[ propName ] = defaultValue;\r\n\r\n\t}\r\n\r\n\t// updateMatrixWorld  updates key transformation variables\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\tthis.object.updateMatrixWorld();\r\n\r\n\t\t\tif ( this.object.parent === null ) {\r\n\r\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\r\n\r\n\t\t\tparentQuaternionInv.copy( parentQuaternion ).invert();\r\n\t\t\tworldQuaternionInv.copy( worldQuaternion ).invert();\r\n\r\n\t\t}\r\n\r\n\t\tthis.camera.updateMatrixWorld();\r\n\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\r\n\r\n\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n\tthis.pointerHover = function ( pointer ) {\r\n\r\n\t\tif ( this.object === undefined || this.dragging === true ) return;\r\n\r\n\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\tvar intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\r\n\r\n\t\tif ( intersect ) {\r\n\r\n\t\t\tthis.axis = intersect.object.name;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.axis = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.pointerDown = function ( pointer ) {\r\n\r\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\r\n\r\n\t\tif ( this.axis !== null ) {\r\n\r\n\t\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\r\n\r\n\t\t\tif ( planeIntersect ) {\r\n\r\n\t\t\t\tvar space = this.space;\r\n\r\n\t\t\t\tif ( this.mode === 'scale' ) {\r\n\r\n\t\t\t\t\tspace = 'local';\r\n\r\n\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\r\n\r\n\t\t\t\t\tspace = 'world';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\r\n\r\n\t\t\t\t\tvar snap = this.rotationSnap;\r\n\r\n\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\r\n\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\r\n\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.object.updateMatrixWorld();\r\n\t\t\t\tthis.object.parent.updateMatrixWorld();\r\n\r\n\t\t\t\tpositionStart.copy( this.object.position );\r\n\t\t\t\tquaternionStart.copy( this.object.quaternion );\r\n\t\t\t\tscaleStart.copy( this.object.scale );\r\n\r\n\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\r\n\r\n\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dragging = true;\r\n\t\t\tmouseDownEvent.mode = this.mode;\r\n\t\t\tthis.dispatchEvent( mouseDownEvent );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.pointerMove = function ( pointer ) {\r\n\r\n\t\tvar axis = this.axis;\r\n\t\tvar mode = this.mode;\r\n\t\tvar object = this.object;\r\n\t\tvar space = this.space;\r\n\r\n\t\tif ( mode === 'scale' ) {\r\n\r\n\t\t\tspace = 'local';\r\n\r\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\r\n\r\n\t\t\tspace = 'world';\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\r\n\r\n\t\traycaster.setFromCamera( pointer, this.camera );\r\n\r\n\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\r\n\r\n\t\tif ( ! planeIntersect ) return;\r\n\r\n\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\r\n\r\n\t\tif ( mode === 'translate' ) {\r\n\r\n\t\t\t// Apply translate\r\n\r\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\r\n\r\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\r\n\r\n\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\r\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\r\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\r\n\r\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\r\n\r\n\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.position.copy( offset ).add( positionStart );\r\n\r\n\t\t\t// Apply translation snap\r\n\r\n\t\t\tif ( this.translationSnap ) {\r\n\r\n\t\t\t\tif ( space === 'local' ) {\r\n\r\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).invert() );\r\n\r\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( space === 'world' ) {\r\n\r\n\t\t\t\t\tif ( object.parent ) {\r\n\r\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( object.parent ) {\r\n\r\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( mode === 'scale' ) {\r\n\r\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\r\n\r\n\t\t\t\tvar d = pointEnd.length() / pointStart.length();\r\n\r\n\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\r\n\r\n\t\t\t\t_tempVector2.set( d, d, d );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_tempVector.copy( pointStart );\r\n\t\t\t\t_tempVector2.copy( pointEnd );\r\n\r\n\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\r\n\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\r\n\r\n\t\t\t\t_tempVector2.divide( _tempVector );\r\n\r\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.x = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.y = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\r\n\r\n\t\t\t\t\t_tempVector2.z = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply scale\r\n\r\n\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\r\n\r\n\t\t\tif ( this.scaleSnap ) {\r\n\r\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( mode === 'rotate' ) {\r\n\r\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\r\n\r\n\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\r\n\r\n\t\t\tif ( axis === 'E' ) {\r\n\r\n\t\t\t\trotationAxis.copy( eye );\r\n\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\r\n\r\n\t\t\t\tstartNorm.copy( pointStart ).normalize();\r\n\t\t\t\tendNorm.copy( pointEnd ).normalize();\r\n\r\n\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\r\n\r\n\t\t\t} else if ( axis === 'XYZE' ) {\r\n\r\n\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\r\n\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\r\n\r\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\r\n\r\n\t\t\t\trotationAxis.copy( _unit[ axis ] );\r\n\r\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\r\n\r\n\t\t\t\tif ( space === 'local' ) {\r\n\r\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply rotation snap\r\n\r\n\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\r\n\r\n\t\t\tthis.rotationAngle = rotationAngle;\r\n\r\n\t\t\t// Apply rotate\r\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\r\n\r\n\t\t\t\tobject.quaternion.copy( quaternionStart );\r\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\r\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\r\n\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent( changeEvent );\r\n\t\tthis.dispatchEvent( objectChangeEvent );\r\n\r\n\t};\r\n\r\n\tthis.pointerUp = function ( pointer ) {\r\n\r\n\t\tif ( pointer.button !== 0 ) return;\r\n\r\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\r\n\r\n\t\t\tmouseUpEvent.mode = this.mode;\r\n\t\t\tthis.dispatchEvent( mouseUpEvent );\r\n\r\n\t\t}\r\n\r\n\t\tthis.dragging = false;\r\n\t\tthis.axis = null;\r\n\r\n\t};\r\n\r\n\t// normalize mouse / touch pointer and remap {x,y} to view space.\r\n\r\n\tfunction getPointer( event ) {\r\n\r\n\t\tif ( scope.domElement.ownerDocument.pointerLockElement ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\tbutton: event.button\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\r\n\r\n\t\t\tvar rect = domElement.getBoundingClientRect();\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\r\n\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\r\n\t\t\t\tbutton: event.button\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// mouse / touch event handlers\r\n\r\n\tfunction onPointerHover( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tscope.pointerHover( getPointer( event ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerDown( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.domElement.style.touchAction = 'none'; // disable touch scroll\r\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointermove\", onPointerMove, false );\r\n\r\n\t\tscope.pointerHover( getPointer( event ) );\r\n\t\tscope.pointerDown( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\tfunction onPointerMove( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.pointerMove( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\tfunction onPointerUp( event ) {\r\n\r\n\t\tif ( ! scope.enabled ) return;\r\n\r\n\t\tscope.domElement.style.touchAction = '';\r\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove, false );\r\n\r\n\t\tscope.pointerUp( getPointer( event ) );\r\n\r\n\t}\r\n\r\n\t// TODO: deprecate\r\n\r\n\tthis.getMode = function () {\r\n\r\n\t\treturn scope.mode;\r\n\r\n\t};\r\n\r\n\tthis.setMode = function ( mode ) {\r\n\r\n\t\tscope.mode = mode;\r\n\r\n\t};\r\n\r\n\tthis.setTranslationSnap = function ( translationSnap ) {\r\n\r\n\t\tscope.translationSnap = translationSnap;\r\n\r\n\t};\r\n\r\n\tthis.setRotationSnap = function ( rotationSnap ) {\r\n\r\n\t\tscope.rotationSnap = rotationSnap;\r\n\r\n\t};\r\n\r\n\tthis.setScaleSnap = function ( scaleSnap ) {\r\n\r\n\t\tscope.scaleSnap = scaleSnap;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( size ) {\r\n\r\n\t\tscope.size = size;\r\n\r\n\t};\r\n\r\n\tthis.setSpace = function ( space ) {\r\n\r\n\t\tscope.space = space;\r\n\r\n\t};\r\n\r\n\tthis.update = function () {\r\n\r\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\tconstructor: TransformControls,\r\n\r\n\tisTransformControls: true\r\n\r\n} );\r\n\r\n\r\nvar TransformControlsGizmo = function () {\r\n\r\n\t'use strict';\r\n\r\n\tObject3D.call( this );\r\n\r\n\tthis.type = 'TransformControlsGizmo';\r\n\r\n\t// shared materials\r\n\r\n\tvar gizmoMaterial = new MeshBasicMaterial( {\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true,\r\n\t\tside: DoubleSide,\r\n\t\tfog: false,\r\n\t\ttoneMapped: false\r\n\t} );\r\n\r\n\tvar gizmoLineMaterial = new LineBasicMaterial( {\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false,\r\n\t\ttransparent: true,\r\n\t\tlinewidth: 1,\r\n\t\tfog: false,\r\n\t\ttoneMapped: false\r\n\t} );\r\n\r\n\t// Make unique material for each axis/color\r\n\r\n\tvar matInvisible = gizmoMaterial.clone();\r\n\tmatInvisible.opacity = 0.15;\r\n\r\n\tvar matHelper = gizmoMaterial.clone();\r\n\tmatHelper.opacity = 0.33;\r\n\r\n\tvar matRed = gizmoMaterial.clone();\r\n\tmatRed.color.set( 0xff0000 );\r\n\r\n\tvar matGreen = gizmoMaterial.clone();\r\n\tmatGreen.color.set( 0x00ff00 );\r\n\r\n\tvar matBlue = gizmoMaterial.clone();\r\n\tmatBlue.color.set( 0x0000ff );\r\n\r\n\tvar matWhiteTransparent = gizmoMaterial.clone();\r\n\tmatWhiteTransparent.opacity = 0.25;\r\n\r\n\tvar matYellowTransparent = matWhiteTransparent.clone();\r\n\tmatYellowTransparent.color.set( 0xffff00 );\r\n\r\n\tvar matCyanTransparent = matWhiteTransparent.clone();\r\n\tmatCyanTransparent.color.set( 0x00ffff );\r\n\r\n\tvar matMagentaTransparent = matWhiteTransparent.clone();\r\n\tmatMagentaTransparent.color.set( 0xff00ff );\r\n\r\n\tvar matYellow = gizmoMaterial.clone();\r\n\tmatYellow.color.set( 0xffff00 );\r\n\r\n\tvar matLineRed = gizmoLineMaterial.clone();\r\n\tmatLineRed.color.set( 0xff0000 );\r\n\r\n\tvar matLineGreen = gizmoLineMaterial.clone();\r\n\tmatLineGreen.color.set( 0x00ff00 );\r\n\r\n\tvar matLineBlue = gizmoLineMaterial.clone();\r\n\tmatLineBlue.color.set( 0x0000ff );\r\n\r\n\tvar matLineCyan = gizmoLineMaterial.clone();\r\n\tmatLineCyan.color.set( 0x00ffff );\r\n\r\n\tvar matLineMagenta = gizmoLineMaterial.clone();\r\n\tmatLineMagenta.color.set( 0xff00ff );\r\n\r\n\tvar matLineYellow = gizmoLineMaterial.clone();\r\n\tmatLineYellow.color.set( 0xffff00 );\r\n\r\n\tvar matLineGray = gizmoLineMaterial.clone();\r\n\tmatLineGray.color.set( 0x787878 );\r\n\r\n\tvar matLineYellowTransparent = matLineYellow.clone();\r\n\tmatLineYellowTransparent.opacity = 0.25;\r\n\r\n\t// reusable geometry\r\n\r\n\tvar arrowGeometry = new CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\r\n\r\n\tvar scaleHandleGeometry = new BoxBufferGeometry( 0.125, 0.125, 0.125 );\r\n\r\n\tvar lineGeometry = new BufferGeometry();\r\n\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\r\n\r\n\tvar CircleGeometry = function ( radius, arc ) {\r\n\r\n\t\tvar geometry = new BufferGeometry( );\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\r\n\r\n\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t};\r\n\r\n\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\r\n\r\n\tvar TranslateHelperGeometry = function () {\r\n\r\n\t\tvar geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\r\n\r\n\t\treturn geometry;\r\n\r\n\t};\r\n\r\n\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\r\n\r\n\tvar gizmoTranslate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineRed ) ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\r\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\r\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\r\n\t\t],\r\n\t\tXYZ: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerTranslate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\r\n\t\t],\r\n\t\tXYZ: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperTranslate = {\r\n\t\tSTART: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tEND: [\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tDELTA: [\r\n\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\r\n\t\t],\r\n\t\tX: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar gizmoRotate = {\r\n\t\tX: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\r\n\t\t],\r\n\t\tE: [\r\n\t\t\t[ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\r\n\t\t],\r\n\t\tXYZE: [\r\n\t\t\t[ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperRotate = {\r\n\t\tAXIS: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerRotate = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\r\n\t\t],\r\n\t\tE: [\r\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\r\n\t\t],\r\n\t\tXYZE: [\r\n\t\t\t[ new Mesh( new SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\r\n\t\t]\r\n\t};\r\n\r\n\tvar gizmoScale = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\r\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\r\n\t\t],\r\n\t\tXYZX: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\r\n\t\t],\r\n\t\tXYZY: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\r\n\t\t],\r\n\t\tXYZZ: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\r\n\t\t]\r\n\t};\r\n\r\n\tvar pickerScale = {\r\n\t\tX: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\r\n\t\t],\r\n\t\tXY: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\r\n\t\t],\r\n\t\tYZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\r\n\t\t],\r\n\t\tXZ: [\r\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\r\n\t\t],\r\n\t\tXYZX: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\r\n\t\t],\r\n\t\tXYZY: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\r\n\t\t],\r\n\t\tXYZZ: [\r\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\r\n\t\t]\r\n\t};\r\n\r\n\tvar helperScale = {\r\n\t\tX: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tY: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t],\r\n\t\tZ: [\r\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\r\n\t\t]\r\n\t};\r\n\r\n\t// Creates an Object3D with gizmos described in custom hierarchy definition.\r\n\r\n\tvar setupGizmo = function ( gizmoMap ) {\r\n\r\n\t\tvar gizmo = new Object3D();\r\n\r\n\t\tfor ( var name in gizmoMap ) {\r\n\r\n\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\r\n\r\n\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\r\n\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\r\n\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\r\n\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\r\n\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\r\n\r\n\t\t\t\t// name and tag properties are essential for picking and updating logic.\r\n\t\t\t\tobject.name = name;\r\n\t\t\t\tobject.tag = tag;\r\n\r\n\t\t\t\tif ( position ) {\r\n\r\n\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( rotation ) {\r\n\r\n\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( scale ) {\r\n\r\n\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.updateMatrix();\r\n\r\n\t\t\t\tvar tempGeometry = object.geometry.clone();\r\n\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\r\n\t\t\t\tobject.geometry = tempGeometry;\r\n\t\t\t\tobject.renderOrder = Infinity;\r\n\r\n\t\t\t\tobject.position.set( 0, 0, 0 );\r\n\t\t\t\tobject.rotation.set( 0, 0, 0 );\r\n\t\t\t\tobject.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t\tgizmo.add( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn gizmo;\r\n\r\n\t};\r\n\r\n\t// Reusable utility variables\r\n\r\n\tvar tempVector = new Vector3( 0, 0, 0 );\r\n\tvar tempEuler = new Euler();\r\n\tvar alignVector = new Vector3( 0, 1, 0 );\r\n\tvar zeroVector = new Vector3( 0, 0, 0 );\r\n\tvar lookAtMatrix = new Matrix4();\r\n\tvar tempQuaternion = new Quaternion();\r\n\tvar tempQuaternion2 = new Quaternion();\r\n\tvar identityQuaternion = new Quaternion();\r\n\r\n\tvar unitX = new Vector3( 1, 0, 0 );\r\n\tvar unitY = new Vector3( 0, 1, 0 );\r\n\tvar unitZ = new Vector3( 0, 0, 1 );\r\n\r\n\t// Gizmo creation\r\n\r\n\tthis.gizmo = {};\r\n\tthis.picker = {};\r\n\tthis.helper = {};\r\n\r\n\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\r\n\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\r\n\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\r\n\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\r\n\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\r\n\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\r\n\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\r\n\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\r\n\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\r\n\r\n\t// Pickers should be hidden always\r\n\r\n\tthis.picker[ \"translate\" ].visible = false;\r\n\tthis.picker[ \"rotate\" ].visible = false;\r\n\tthis.picker[ \"scale\" ].visible = false;\r\n\r\n\t// updateMatrixWorld will update transformations and appearance of individual handles\r\n\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tvar space = this.space;\r\n\r\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\r\n\r\n\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\r\n\r\n\t\t// Show only gizmos for current transform mode\r\n\r\n\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\r\n\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\r\n\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\r\n\r\n\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\r\n\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\r\n\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\r\n\r\n\r\n\t\tvar handles = [];\r\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\r\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\r\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\r\n\r\n\t\tfor ( var i = 0; i < handles.length; i ++ ) {\r\n\r\n\t\t\tvar handle = handles[ i ];\r\n\r\n\t\t\t// hide aligned to camera\r\n\r\n\t\t\thandle.visible = true;\r\n\t\t\thandle.rotation.set( 0, 0, 0 );\r\n\t\t\thandle.position.copy( this.worldPosition );\r\n\r\n\t\t\tvar factor;\r\n\r\n\t\t\tif ( this.camera.isOrthographicCamera ) {\r\n\r\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\r\n\r\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\r\n\r\n\t\t\tif ( handle.tag === 'helper' ) {\r\n\r\n\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\tif ( handle.name === 'AXIS' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.visible = !! this.axis;\r\n\r\n\t\t\t\t\tif ( this.axis === 'X' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'Y' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'Z' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\r\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\r\n\r\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\r\n\r\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\r\n\t\t\t\t\t\talignVector.copy( this.rotationAxis );\r\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\r\n\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\r\n\t\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis === 'E' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t} else if ( handle.name === 'START' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else if ( handle.name === 'END' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPosition );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\r\n\r\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\r\n\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\r\n\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\r\n\t\t\t\t\thandle.scale.copy( tempVector );\r\n\t\t\t\t\thandle.visible = this.dragging;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thandle.quaternion.copy( quaternion );\r\n\r\n\t\t\t\t\tif ( this.dragging ) {\r\n\r\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( this.axis ) {\r\n\r\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If updating helper, skip rest of the loop\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Align handles to current local or world rotation\r\n\r\n\t\t\thandle.quaternion.copy( quaternion );\r\n\r\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\r\n\r\n\t\t\t\t// Hide translate and scale axis facing the camera\r\n\r\n\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\r\n\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\r\n\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\r\n\r\n\r\n\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'XY' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'YZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'XZ' ) {\r\n\r\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Flip translate and scale axis ocluded behind another axis\r\n\r\n\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.x *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.y *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\r\n\r\n\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\r\n\r\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\r\n\r\n\t\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\thandle.scale.z *= - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\r\n\r\n\t\t\t\t\t\thandle.visible = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( this.mode === 'rotate' ) {\r\n\r\n\t\t\t\t// Align handles to current local or world rotation\r\n\r\n\t\t\t\ttempQuaternion2.copy( quaternion );\r\n\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).invert() );\r\n\r\n\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\r\n\r\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'X' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Y' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( handle.name === 'Z' ) {\r\n\r\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\r\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\r\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Hide disabled axes\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\r\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\r\n\r\n\t\t\t// highlight selected axis\r\n\r\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\r\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\r\n\r\n\t\t\thandle.material.color.copy( handle.material._color );\r\n\t\t\thandle.material.opacity = handle.material._opacity;\r\n\r\n\t\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t\thandle.material.opacity *= 0.5;\r\n\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t} else if ( this.axis ) {\r\n\r\n\t\t\t\tif ( handle.name === this.axis ) {\r\n\r\n\t\t\t\t\thandle.material.opacity = 1.0;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\r\n\r\n\t\t\t\t\treturn handle.name === a;\r\n\r\n\t\t\t\t} ) ) {\r\n\r\n\t\t\t\t\thandle.material.opacity = 1.0;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\thandle.material.opacity *= 0.25;\r\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n\tconstructor: TransformControlsGizmo,\r\n\r\n\tisTransformControlsGizmo: true\r\n\r\n} );\r\n\r\n\r\nvar TransformControlsPlane = function () {\r\n\r\n\t'use strict';\r\n\r\n\tMesh.call( this,\r\n\t\tnew PlaneBufferGeometry( 100000, 100000, 2, 2 ),\r\n\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\r\n\t);\r\n\r\n\tthis.type = 'TransformControlsPlane';\r\n\r\n\tvar unitX = new Vector3( 1, 0, 0 );\r\n\tvar unitY = new Vector3( 0, 1, 0 );\r\n\tvar unitZ = new Vector3( 0, 0, 1 );\r\n\r\n\tvar tempVector = new Vector3();\r\n\tvar dirVector = new Vector3();\r\n\tvar alignVector = new Vector3();\r\n\tvar tempMatrix = new Matrix4();\r\n\tvar identityQuaternion = new Quaternion();\r\n\r\n\tthis.updateMatrixWorld = function () {\r\n\r\n\t\tvar space = this.space;\r\n\r\n\t\tthis.position.copy( this.worldPosition );\r\n\r\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\r\n\r\n\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\r\n\r\n\t\t// Align the plane for current transform mode, axis and space.\r\n\r\n\t\talignVector.copy( unitY );\r\n\r\n\t\tswitch ( this.mode ) {\r\n\r\n\t\t\tcase 'translate':\r\n\t\t\tcase 'scale':\r\n\t\t\t\tswitch ( this.axis ) {\r\n\r\n\t\t\t\t\tcase 'X':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\r\n\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Y':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\r\n\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Z':\r\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\r\n\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XY':\r\n\t\t\t\t\t\tdirVector.copy( unitZ );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'YZ':\r\n\t\t\t\t\t\tdirVector.copy( unitX );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XZ':\r\n\t\t\t\t\t\talignVector.copy( unitZ );\r\n\t\t\t\t\t\tdirVector.copy( unitY );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'XYZ':\r\n\t\t\t\t\tcase 'E':\r\n\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rotate':\r\n\t\t\tdefault:\r\n\t\t\t\t// special case for rotate\r\n\t\t\t\tdirVector.set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirVector.length() === 0 ) {\r\n\r\n\t\t\t// If in rotate mode, make the plane parallel to camera\r\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\r\n\r\n\t\t}\r\n\r\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n\tconstructor: TransformControlsPlane,\r\n\r\n\tisTransformControlsPlane: true\r\n\r\n} );\r\n\r\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/controls/TransformControls.js","String.prototype.format = (str, x, y, z) => {\r\n    var str = str\r\n    var myArguments = [x, y, z]\r\n    for (var i = 0; i < myArguments.length; i ++) {\r\n        str = str.replace('{' + i + '}', myArguments[i])\r\n    }\r\n    return str\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geometrySplineEditor.js"],"sourceRoot":""}