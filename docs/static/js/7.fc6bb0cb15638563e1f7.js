webpackJsonp([7],{"1ADz":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,s,a=n("QEtz"),r=n("wIBv"),o=n("6+nK"),c=n("m9UE"),l=n("ug6/"),u=function(t,e){void 0===t&&(t=new c.a),void 0===e&&(e=new l.a({color:16777215*Math.random()})),o._29.call(this,t,e),this.type="LineSegments2"};u.prototype=Object.assign(Object.create(o._29.prototype),{constructor:u,isLineSegments2:!0,computeLineDistances:(i=new o._105,s=new o._105,function(){for(var t=this.geometry,e=t.attributes.instanceStart,n=t.attributes.instanceEnd,a=new Float32Array(2*e.data.count),r=0,c=0,l=e.data.count;r<l;r++,c+=2)i.fromBufferAttribute(e,r),s.fromBufferAttribute(n,r),a[c]=0===c?0:a[c-1],a[c+1]=a[c]+i.distanceTo(s);var u=new o._3(a,2,1);return t.setAttribute("instanceDistanceStart",new o._6(u,1,0)),t.setAttribute("instanceDistanceEnd",new o._6(u,1,1)),this}),raycast:function(){var t=new o._106,e=new o._106,n=new o._106,i=new o._105,s=new o._28,a=new o._13,r=new o._105;return function(c,l){null===c.camera&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2.');var u=void 0!==c.params.Line2&&c.params.Line2.threshold||0,d=c.ray,h=c.camera,f=h.projectionMatrix,p=this.geometry,m=this.material,v=m.resolution,g=m.linewidth+u,y=p.attributes.instanceStart,w=p.attributes.instanceEnd;d.at(1,n),n.w=1,n.applyMatrix4(h.matrixWorldInverse),n.applyMatrix4(f),n.multiplyScalar(1/n.w),n.x*=v.x/2,n.y*=v.y/2,n.z=0,i.copy(n);var b=this.matrixWorld;s.multiplyMatrices(h.matrixWorldInverse,b);for(var S=0,_=y.count;S<_;S++){t.fromBufferAttribute(y,S),e.fromBufferAttribute(w,S),t.w=1,e.w=1,t.applyMatrix4(s),e.applyMatrix4(s),t.applyMatrix4(f),e.applyMatrix4(f),t.multiplyScalar(1/t.w),e.multiplyScalar(1/e.w);var x=t.z<-1&&e.z<-1,E=t.z>1&&e.z>1;if(!x&&!E){t.x*=v.x/2,t.y*=v.y/2,e.x*=v.x/2,e.y*=v.y/2,a.start.copy(t),a.start.z=0,a.end.copy(e),a.end.z=0;var L=a.closestPointToPointParameter(i,!0);a.at(L,r);var z=o._26.lerp(t.z,e.z,L),C=z>=-1&&z<=1,B=i.distanceTo(r)<.5*g;if(C&&B){a.start.fromBufferAttribute(y,S),a.end.fromBufferAttribute(w,S),a.start.applyMatrix4(b),a.end.applyMatrix4(b);var A=new o._105,M=new o._105;d.distanceSqToSegment(a.start,a.end,M,A),l.push({point:M,pointOnLine:A,distance:d.origin.distanceTo(M),object:this,face:null,faceIndex:S,uv:null,uv2:null})}}}}}()});var d=function(){c.a.call(this),this.type="LineGeometry"};d.prototype=Object.assign(Object.create(c.a.prototype),{constructor:d,isLineGeometry:!0,setPositions:function(t){for(var e=t.length-3,n=new Float32Array(2*e),i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return c.a.prototype.setPositions.call(this,n),this},setColors:function(t){for(var e=t.length-3,n=new Float32Array(2*e),i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return c.a.prototype.setColors.call(this,n),this},fromLine:function(t){var e=t.geometry;return e.isGeometry?this.setPositions(e.vertices):e.isBufferGeometry&&this.setPositions(e.attributes.position.array),this},copy:function(){return this}});var h=function(t,e){void 0===t&&(t=new d),void 0===e&&(e=new l.a({color:16777215*Math.random()})),u.call(this,t,e),this.type="Line2"};h.prototype=Object.assign(Object.create(u.prototype),{constructor:h,isLine2:!0});var f=n("3dmC"),p={data:function(){return{line:null,renderer:null,scene:null,camera:null,camera2:null,controls:null,line1:null,matLine:null,matLineBasic:null,matLineDashed:null,stats:null,gui:null,insetWidth:null,insetHeight:null}},mounted:function(){this.init(),this.animate()},beforeDestroy:function(){this.gui.destroy()},methods:{init:function(){this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor(0,0),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),document.getElementsByClassName("webglLinesFat-container")[0].appendChild(this.renderer.domElement),this.scene=new this.$THREE.Scene,this.camera=new this.$THREE.PerspectiveCamera(40,this.$webglInnerWidth/window.innerHeight,1,1e3),this.camera.position.set(-40,0,60),this.camera2=new this.$THREE.PerspectiveCamera(40,1,1,1e3),this.camera2.position.copy(this.camera.position),this.controls=new r.b(this.camera,this.renderer.domElement),this.controls.minDistance=10,this.controls.maxDistance=500;for(var t=[],e=[],n=f.a.hilbert3D(new this.$THREE.Vector3(0,0,0),20,1,0,1,2,3,4,5,6,7),i=new this.$THREE.CatmullRomCurve3(n),s=Math.round(12*n.length),a=new this.$THREE.Vector3,o=new this.$THREE.Color,c=0,u=s;c<u;c++){var p=c/u;i.getPoint(p,a),t.push(a.x,a.y,a.z),o.setHSL(p,1,.5),e.push(o.r,o.g,o.b)}var m=new d;m.setPositions(t),m.setColors(e),this.matLine=new l.a({color:16777215,linewidth:5,vertexColors:!0,dashed:!1}),this.line=new h(m,this.matLine),this.line.computeLineDistances(),this.line.scale.set(1,1,1),this.scene.add(this.line);var v=new this.$THREE.BufferGeometry;v.setAttribute("position",new this.$THREE.Float32BufferAttribute(t,3)),v.setAttribute("color",new this.$THREE.Float32BufferAttribute(e,3)),this.matLineBasic=new this.$THREE.LineBasicMaterial({vertexColors:!0}),this.matLineDashed=new this.$THREE.LineDashedMaterial({vertexColors:!0,scale:2,dashSize:1,gapSize:1}),this.line1=new this.$THREE.Line(v,this.matLineBasic),this.line1.computeLineDistances(),this.line1.visible=!1,this.scene.add(this.line1),window.addEventListener("resize",this.onWindowResize,!1),this.onWindowResize(),this.stats=new this.$Stats,this.stats.dom.style.left="280px",document.getElementsByClassName("webglLinesFat-container")[0].appendChild(this.stats.dom),this.initGui()},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer),this.insetWidth=window.innerHeight/4,this.insetHeight=window.innerHeight/4,this.camera2.aspect=this.insetWidth/this.insetHeight,this.camera2.updateProjectionMatrix()},animate:function(){requestAnimationFrame(this.animate),this.stats.update(),this.renderer.setClearColor(0,0),this.renderer.setViewport(0,0,this.$webglInnerWidth,window.innerHeight),this.matLine.resolution.set(this.$webglInnerWidth,window.innerHeight),this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(2236962,1),this.renderer.clearDepth(),this.renderer.setScissorTest(!0),this.renderer.setScissor(20,20,this.insetWidth,this.insetHeight),this.renderer.setViewport(20,20,this.insetWidth,this.insetHeight),this.camera2.position.copy(this.camera.position),this.camera2.quaternion.copy(this.camera.quaternion),this.matLine.resolution.set(this.insetWidth,this.insetHeight),this.renderer.render(this.scene,this.camera2),this.renderer.setScissorTest(!1)},initGui:function(){var t=this;this.gui=new a.a;var e={"line type":0,"width (px)":5,dashed:!1,"dash scale":1,"dash / gap":1};this.gui.add(e,"line type",{LineGeometry:0,"gl.LINE":1}).onChange(function(e){switch(e){case"0":t.line.visible=!0,t.line1.visible=!1;break;case"1":t.line.visible=!1,t.line1.visible=!0}}),this.gui.add(e,"width (px)",1,10).onChange(function(e){t.matLine.linewidth=e}),this.gui.add(e,"dashed").onChange(function(e){t.matLine.dashed=e,e?t.matLine.defines.USE_DASH="":delete t.matLine.defines.USE_DASH,t.matLine.needsUpdate=!0,t.line1.material=e?t.matLineDashed:t.matLineBasic}),this.gui.add(e,"dash scale",.5,2,.1).onChange(function(e){t.matLine.dashScale=e,t.matLineDashed.scale=e}),this.gui.add(e,"dash / gap",{"2 : 1":0,"1 : 1":1,"1 : 2":2}).onChange(function(e){switch(e){case"0":t.matLine.dashSize=2,t.matLine.gapSize=1,t.matLineDashed.dashSize=2,t.matLineDashed.gapSize=1;break;case"1":t.matLine.dashSize=1,t.matLine.gapSize=1,t.matLineDashed.dashSize=1,t.matLineDashed.gapSize=1;break;case"2":t.matLine.dashSize=1,t.matLine.gapSize=2,t.matLineDashed.dashSize=1,t.matLineDashed.gapSize=2}})}}},m={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglLinesFat-container"},[e("div",{attrs:{id:"container"}}),this._v(" "),e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank"}},[this._v("three.js")]),this._v(" - fat lines")])])}]};var v=n("VU/8")(p,m,!1,function(t){n("NmK8")},"data-v-66976905",null);e.default=v.exports},NmK8:function(t,e){},m9UE:function(t,e,n){"use strict";n.d(e,"a",function(){return r});var i,s,a=n("6+nK"),r=function(){a._2.call(this),this.type="LineSegmentsGeometry";this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new a.T([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new a.T([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))};r.prototype=Object.assign(Object.create(a._2.prototype),{constructor:r,isLineSegmentsGeometry:!0,applyMatrix4:function(t){var e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==e&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},setPositions:function(t){var e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));var n=new a._3(e,6,1);return this.setAttribute("instanceStart",new a._6(n,3,0)),this.setAttribute("instanceEnd",new a._6(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this},setColors:function(t){var e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));var n=new a._3(e,6,1);return this.setAttribute("instanceColorStart",new a._6(n,3,0)),this.setAttribute("instanceColorEnd",new a._6(n,3,3)),this},fromWireframeGeometry:function(t){return this.setPositions(t.attributes.position.array),this},fromEdgesGeometry:function(t){return this.setPositions(t.attributes.position.array),this},fromMesh:function(t){return this.fromWireframeGeometry(new a._109(t.geometry)),this},fromLineSegments:function(t){var e=t.geometry;return e.isGeometry?this.setPositions(e.vertices):e.isBufferGeometry&&this.setPositions(e.attributes.position.array),this},computeBoundingBox:(s=new a.i,function(){null===this.boundingBox&&(this.boundingBox=new a.i);var t=this.attributes.instanceStart,e=this.attributes.instanceEnd;void 0!==t&&void 0!==e&&(this.boundingBox.setFromBufferAttribute(t),s.setFromBufferAttribute(e),this.boundingBox.union(s))}),computeBoundingSphere:(i=new a._105,function(){null===this.boundingSphere&&(this.boundingSphere=new a._84),null===this.boundingBox&&this.computeBoundingBox();var t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(void 0!==t&&void 0!==e){var n=this.boundingSphere.center;this.boundingBox.getCenter(n);for(var s=0,r=0,o=t.count;r<o;r++)i.fromBufferAttribute(t,r),s=Math.max(s,n.distanceToSquared(i)),i.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(i));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}),toJSON:function(){},applyMatrix:function(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}})},"ug6/":function(t,e,n){"use strict";n.d(e,"a",function(){return s});var i=n("6+nK");i._100.line={linewidth:{value:1},resolution:{value:new i._104(1,1)},dashScale:{value:1},dashSize:{value:1},dashOffset:{value:0},gapSize:{value:1},opacity:{value:1}},i._78.line={uniforms:i._101.merge([i._100.common,i._100.fog,i._100.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};var s=function(t){i._79.call(this,{type:"LineMaterial",uniforms:i._101.clone(i._78.line.uniforms),vertexShader:i._78.line.vertexShader,fragmentShader:i._78.line.fragmentShader,clipping:!0}),this.dashed=!1,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(t){this.uniforms.diffuse.value=t}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(t){this.uniforms.linewidth.value=t}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(t){this.uniforms.dashScale.value=t}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(t){this.uniforms.dashSize.value=t}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(t){this.uniforms.gapSize.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}}}),this.setValues(t)};s.prototype=Object.create(i._79.prototype),s.prototype.constructor=s,s.prototype.isLineMaterial=!0}});
//# sourceMappingURL=7.fc6bb0cb15638563e1f7.js.map