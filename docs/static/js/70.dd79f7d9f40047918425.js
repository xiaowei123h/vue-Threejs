webpackJsonp([70],{BQsS:function(t,e){},mUjt:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i("QEtz"),o=i("wIBv"),a=i("6+nK"),n=function(t,e,i,r){a.U.call(this,e);var o=this,n=new Float32Array(36),h=new Float32Array(36),u=new Float32Array(36);function c(t,e,i){return t+(e-t)*i}function f(t,e,i,r,a,l,s,f,m,d){var g=(i-s)/(f-s),v=o.normal_cache;n[e+0]=r+g*o.delta,n[e+1]=a,n[e+2]=l,h[e+0]=c(v[t+0],v[t+3],g),h[e+1]=c(v[t+1],v[t+4],g),h[e+2]=c(v[t+2],v[t+5],g),u[e+0]=c(o.palette[3*m+0],o.palette[3*d+0],g),u[e+1]=c(o.palette[3*m+1],o.palette[3*d+1],g),u[e+2]=c(o.palette[3*m+2],o.palette[3*d+2],g)}function m(t,e,i,r,a,l,s,f,m,d){var g=(i-s)/(f-s),v=o.normal_cache;n[e+0]=r,n[e+1]=a+g*o.delta,n[e+2]=l;var C=t+3*o.yd;h[e+0]=c(v[t+0],v[C+0],g),h[e+1]=c(v[t+1],v[C+1],g),h[e+2]=c(v[t+2],v[C+2],g),u[e+0]=c(o.palette[3*m+0],o.palette[3*d+0],g),u[e+1]=c(o.palette[3*m+1],o.palette[3*d+1],g),u[e+2]=c(o.palette[3*m+2],o.palette[3*d+2],g)}function d(t,e,i,r,a,l,s,f,m,d){var g=(i-s)/(f-s),v=o.normal_cache;n[e+0]=r,n[e+1]=a,n[e+2]=l+g*o.delta;var C=t+3*o.zd;h[e+0]=c(v[t+0],v[C+0],g),h[e+1]=c(v[t+1],v[C+1],g),h[e+2]=c(v[t+2],v[C+2],g),u[e+0]=c(o.palette[3*m+0],o.palette[3*d+0],g),u[e+1]=c(o.palette[3*m+1],o.palette[3*d+1],g),u[e+2]=c(o.palette[3*m+2],o.palette[3*d+2],g)}function g(t){var e=3*t;0===o.normal_cache[e]&&(o.normal_cache[e+0]=o.field[t-1]-o.field[t+1],o.normal_cache[e+1]=o.field[t-o.yd]-o.field[t+o.yd],o.normal_cache[e+2]=o.field[t-o.zd]-o.field[t+o.zd])}function v(t,e,i,r,a,c){var v=r+1,p=r+o.yd,y=r+o.zd,w=v+o.yd,L=v+o.zd,z=r+o.yd+o.zd,A=v+o.yd+o.zd,b=0,M=o.field[r],E=o.field[v],_=o.field[p],x=o.field[w],R=o.field[y],F=o.field[L],P=o.field[z],H=o.field[A];M<a&&(b|=1),E<a&&(b|=2),_<a&&(b|=8),x<a&&(b|=4),R<a&&(b|=16),F<a&&(b|=32),P<a&&(b|=128),H<a&&(b|=64);var $=l[b];if(0===$)return 0;var T=o.delta,D=t+T,S=e+T,j=i+T;1&$&&(g(r),g(v),f(3*r,0,a,t,e,i,M,E,r,v)),2&$&&(g(v),g(w),m(3*v,3,a,D,e,i,E,x,v,w)),4&$&&(g(p),g(w),f(3*p,6,a,t,S,i,_,x,p,w)),8&$&&(g(r),g(p),m(3*r,9,a,t,e,i,M,_,r,p)),16&$&&(g(y),g(L),f(3*y,12,a,t,e,j,R,F,y,L)),32&$&&(g(L),g(A),m(3*L,15,a,D,e,j,F,H,L,A)),64&$&&(g(z),g(A),f(3*z,18,a,t,S,j,P,H,z,A)),128&$&&(g(y),g(z),m(3*y,21,a,t,e,j,R,P,y,z)),256&$&&(g(r),g(y),d(3*r,24,a,t,e,i,M,R,r,y)),512&$&&(g(v),g(L),d(3*v,27,a,D,e,i,E,F,v,L)),1024&$&&(g(w),g(A),d(3*w,30,a,D,S,i,x,H,w,A)),2048&$&&(g(p),g(z),d(3*p,33,a,t,S,i,_,P,p,z)),b<<=4;for(var B,W,N,U=0,V=0;-1!=s[b+V];)W=(B=b+V)+1,N=B+2,C(n,h,u,3*s[B],3*s[W],3*s[N],c),V+=3,U++;return U}function C(t,e,i,r,a,n,l){var s=3*o.count;if(o.positionArray[s+0]=t[r],o.positionArray[s+1]=t[r+1],o.positionArray[s+2]=t[r+2],o.positionArray[s+3]=t[a],o.positionArray[s+4]=t[a+1],o.positionArray[s+5]=t[a+2],o.positionArray[s+6]=t[n],o.positionArray[s+7]=t[n+1],o.positionArray[s+8]=t[n+2],!0===o.material.flatShading){var h=(e[r+0]+e[a+0]+e[n+0])/3,u=(e[r+1]+e[a+1]+e[n+1])/3,c=(e[r+2]+e[a+2]+e[n+2])/3;o.normalArray[s+0]=h,o.normalArray[s+1]=u,o.normalArray[s+2]=c,o.normalArray[s+3]=h,o.normalArray[s+4]=u,o.normalArray[s+5]=c,o.normalArray[s+6]=h,o.normalArray[s+7]=u,o.normalArray[s+8]=c}else o.normalArray[s+0]=e[r+0],o.normalArray[s+1]=e[r+1],o.normalArray[s+2]=e[r+2],o.normalArray[s+3]=e[a+0],o.normalArray[s+4]=e[a+1],o.normalArray[s+5]=e[a+2],o.normalArray[s+6]=e[n+0],o.normalArray[s+7]=e[n+1],o.normalArray[s+8]=e[n+2];if(o.enableUvs){var f=2*o.count;o.uvArray[f+0]=t[r+0],o.uvArray[f+1]=t[r+2],o.uvArray[f+2]=t[a+0],o.uvArray[f+3]=t[a+2],o.uvArray[f+4]=t[n+0],o.uvArray[f+5]=t[n+2]}o.enableColors&&(o.colorArray[s+0]=i[r+0],o.colorArray[s+1]=i[r+1],o.colorArray[s+2]=i[r+2],o.colorArray[s+3]=i[a+0],o.colorArray[s+4]=i[a+1],o.colorArray[s+5]=i[a+2],o.colorArray[s+6]=i[n+0],o.colorArray[s+7]=i[n+1],o.colorArray[s+8]=i[n+2]),o.count+=3,o.count>=o.maxCount-3&&(o.hasPositions=!0,o.hasNormals=!0,o.enableUvs&&(o.hasUvs=!0),o.enableColors&&(o.hasColors=!0),l(o))}function p(t,e,i){var r=new Float32Array(t.length+i);return r.set(t,0),r.set(e.slice(0,i),t.length),r}this.enableUvs=void 0!==i&&i,this.enableColors=void 0!==r&&r,this.init=function(t){this.resolution=t,this.isolation=80,this.size=t,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.palette=new Float32Array(3*this.size3),this.maxCount=4096,this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=new Float32Array(3*this.maxCount),this.normalArray=new Float32Array(3*this.maxCount),this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount)),this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))},this.begin=function(){this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasUvs=!1,this.hasColors=!1},this.end=function(t){if(0!==this.count){for(var e=3*this.count;e<this.positionArray.length;e++)this.positionArray[e]=0;this.hasPositions=!0,this.hasNormals=!0,this.enableUvs&&this.material.map&&(this.hasUvs=!0),this.enableColors&&this.material.vertexColors!==a._33&&(this.hasColors=!0),t(this)}},this.addBall=function(t,e,i,r,o,n){var l=Math.sign(r);r=Math.abs(r);var s=!(void 0===n||null===n),h=new a.p(t,e,i);if(s)try{h=n instanceof a.p?n:Array.isArray(n)?new a.p(Math.min(Math.abs(n[0]),1),Math.min(Math.abs(n[1]),1),Math.min(Math.abs(n[2]),1)):new a.p(n)}catch(r){h=new a.p(t,e,i)}var u=this.size*Math.sqrt(r/o),c=i*this.size,f=e*this.size,m=t*this.size,d=Math.floor(c-u);d<1&&(d=1);var g=Math.floor(c+u);g>this.size-1&&(g=this.size-1);var v=Math.floor(f-u);v<1&&(v=1);var C=Math.floor(f+u);C>this.size-1&&(C=this.size-1);var p=Math.floor(m-u);p<1&&(p=1);var y,w,L,z,A,b,M,E,_,x,R,F=Math.floor(m+u);for(F>this.size-1&&(F=this.size-1),L=d;L<g;L++)for(A=this.size2*L,_=(E=L/this.size-i)*E,w=v;w<C;w++)for(z=A+this.size*w,x=(M=w/this.size-e)*M,y=p;y<F;y++)if((R=r/(1e-6+(b=y/this.size-t)*b+x+_)-o)>0){this.field[z+y]+=R*l;var P=Math.sqrt((y-m)*(y-m)+(w-f)*(w-f)+(L-c)*(L-c))/u,H=1-P*P*P*(P*(6*P-15)+10);this.palette[3*(z+y)+0]+=h.r*H,this.palette[3*(z+y)+1]+=h.g*H,this.palette[3*(z+y)+2]+=h.b*H}},this.addPlaneX=function(t,e){var i,r,o,a,n,l,s=this.size,h=this.yd,u=this.zd,c=this.field,f=s*Math.sqrt(t/e);for(f>s&&(f=s),i=0;i<f;i++)if((a=t/(1e-4+(n=i/s)*n)-e)>0)for(r=0;r<s;r++)for(l=i+r*h,o=0;o<s;o++)c[u*o+l]+=a},this.addPlaneY=function(t,e){var i,r,o,a,n,l,s,h=this.size,u=this.yd,c=this.zd,f=this.field,m=h*Math.sqrt(t/e);for(m>h&&(m=h),r=0;r<m;r++)if((a=t/(1e-4+(n=r/h)*n)-e)>0)for(l=r*u,i=0;i<h;i++)for(s=l+i,o=0;o<h;o++)f[c*o+s]+=a},this.addPlaneZ=function(t,e){var i,r,o,a,n,l,s,h=this.size,u=this.yd,c=this.zd,f=this.field,m=h*Math.sqrt(t/e);for(m>h&&(m=h),o=0;o<m;o++)if((a=t/(1e-4+(n=o/h)*n)-e)>0)for(l=c*o,r=0;r<h;r++)for(s=l+r*u,i=0;i<h;i++)f[s+i]+=a},this.setCell=function(t,e,i,r){var o=this.size2*i+this.size*e+t;this.field[o]=r},this.getCell=function(t,e,i){var r=this.size2*i+this.size*e+t;return this.field[r]},this.blur=function(t){void 0===t&&(t=1);for(var e=this.field,i=e.slice(),r=this.size,o=this.size2,a=0;a<r;a++)for(var n=0;n<r;n++)for(var l=0;l<r;l++){for(var s=o*l+r*n+a,h=i[s],u=1,c=-1;c<=1;c+=2){var f=c+a;if(!(f<0||f>=r))for(var m=-1;m<=1;m+=2){var d=m+n;if(!(d<0||d>=r))for(var g=-1;g<=1;g+=2){var v=g+l;if(!(v<0||v>=r))h+=t*(i[o*v+r*d+f]-h)/++u}}}e[s]=h}},this.reset=function(){var t;for(t=0;t<this.size3;t++)this.normal_cache[3*t]=0,this.field[t]=0,this.palette[3*t]=this.palette[3*t+1]=this.palette[3*t+2]=0},this.render=function(t){this.begin();for(var e=this.size-2,i=1;i<e;i++)for(var r=this.size2*i,o=(i-this.halfsize)/this.halfsize,a=1;a<e;a++)for(var n=r+this.size*a,l=(a-this.halfsize)/this.halfsize,s=1;s<e;s++){v((s-this.halfsize)/this.halfsize,l,o,n+s,this.isolation,t)}this.end(t)},this.generateGeometry=function(){return console.warn("MarchingCubes: generateGeometry() now returns BufferGeometry"),this.generateBufferGeometry()},this.generateBufferGeometry=function(){var t=new a.k,e=new Float32Array,i=new Float32Array,r=new Float32Array,o=new Float32Array,n=this;return this.render(function(t){n.hasPositions&&(e=p(e,t.positionArray,3*t.count)),n.hasNormals&&(i=p(i,t.normalArray,3*t.count)),n.hasColors&&(r=p(r,t.colorArray,3*t.count)),n.hasUvs&&(o=p(o,t.uvArray,2*t.count)),t.count=0}),this.hasPositions&&t.setAttribute("position",new a.j(e,3)),this.hasNormals&&t.setAttribute("normal",new a.j(i,3)),this.hasColors&&t.setAttribute("color",new a.j(r,3)),this.hasUvs&&t.setAttribute("uv",new a.j(o,2)),t},this.init(t)};(n.prototype=Object.create(a.U.prototype)).constructor=n;var l=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),s=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),h={uniforms:{uDirLightPos:{value:new a._92},uDirLightColor:{value:new a.p(15658734)},uAmbientLightColor:{value:new a.p(328965)},uBaseColor:{value:new a.p(16777215)}},vertexShader:["varying vec3 vNormal;","varying vec3 vRefract;","void main() {","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tvec3 worldNormal = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","\tvNormal = normalize( normalMatrix * normal );","\tvec3 I = worldPosition.xyz - cameraPosition;","\tvRefract = refract( normalize( I ), worldNormal, 1.02 );","\tgl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 uBaseColor;","uniform vec3 uDirLightPos;","uniform vec3 uDirLightColor;","uniform vec3 uAmbientLightColor;","varying vec3 vNormal;","varying vec3 vRefract;","void main() {","\tfloat directionalLightWeighting = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);","\tvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;","\tfloat intensity = smoothstep( - 0.5, 1.0, pow( length(lightWeighting), 20.0 ) );","\tintensity += length(lightWeighting) * 0.2;","\tfloat cameraWeighting = dot( normalize( vNormal ), vRefract );","\tintensity += pow( 1.0 - length( cameraWeighting ), 6.0 );","\tintensity = intensity * 0.2 + 0.3;","\tif ( intensity < 0.50 ) {","\t\tgl_FragColor = vec4( 2.0 * intensity * uBaseColor, 1.0 );","\t} else {","\t\tgl_FragColor = vec4( 1.0 - 2.0 * ( 1.0 - intensity ) * ( 1.0 - uBaseColor ), 1.0 );","}","}"].join("\n")},u={uniforms:{uDirLightPos:{value:new a._92},uDirLightColor:{value:new a.p(15658734)},uAmbientLightColor:{value:new a.p(328965)},uBaseColor:{value:new a.p(15658734)},uLineColor1:{value:new a.p(8421504)},uLineColor2:{value:new a.p(0)},uLineColor3:{value:new a.p(0)},uLineColor4:{value:new a.p(0)}},vertexShader:["varying vec3 vNormal;","void main() {","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","\tvNormal = normalize( normalMatrix * normal );","}"].join("\n"),fragmentShader:["uniform vec3 uBaseColor;","uniform vec3 uLineColor1;","uniform vec3 uLineColor2;","uniform vec3 uLineColor3;","uniform vec3 uLineColor4;","uniform vec3 uDirLightPos;","uniform vec3 uDirLightColor;","uniform vec3 uAmbientLightColor;","varying vec3 vNormal;","void main() {","\tfloat camera = max( dot( normalize( vNormal ), vec3( 0.0, 0.0, 1.0 ) ), 0.4);","\tfloat light = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);","\tgl_FragColor = vec4( uBaseColor, 1.0 );","\tif ( length(uAmbientLightColor + uDirLightColor * light) < 1.00 ) {","\t\tgl_FragColor *= vec4( uLineColor1, 1.0 );","\t}","\tif ( length(uAmbientLightColor + uDirLightColor * camera) < 0.50 ) {","\t\tgl_FragColor *= vec4( uLineColor2, 1.0 );","\t}","}"].join("\n")},c={uniforms:{uDirLightPos:{value:new a._92},uDirLightColor:{value:new a.p(15658734)},uAmbientLightColor:{value:new a.p(328965)},uBaseColor:{value:new a.p(16777215)},uLineColor1:{value:new a.p(0)},uLineColor2:{value:new a.p(0)},uLineColor3:{value:new a.p(0)},uLineColor4:{value:new a.p(0)}},vertexShader:["varying vec3 vNormal;","void main() {","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","\tvNormal = normalize( normalMatrix * normal );","}"].join("\n"),fragmentShader:["uniform vec3 uBaseColor;","uniform vec3 uLineColor1;","uniform vec3 uLineColor2;","uniform vec3 uLineColor3;","uniform vec3 uLineColor4;","uniform vec3 uDirLightPos;","uniform vec3 uDirLightColor;","uniform vec3 uAmbientLightColor;","varying vec3 vNormal;","void main() {","\tfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);","\tvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;","\tgl_FragColor = vec4( uBaseColor, 1.0 );","\tif ( length(lightWeighting) < 1.00 ) {","\t\tif ( mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {","\t\t\tgl_FragColor = vec4( uLineColor1, 1.0 );","\t\t}","\t}","\tif ( length(lightWeighting) < 0.75 ) {","\t\tif (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {","\t\t\tgl_FragColor = vec4( uLineColor2, 1.0 );","\t\t}","\t}","\tif ( length(lightWeighting) < 0.50 ) {","\t\tif (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {","\t\t\tgl_FragColor = vec4( uLineColor3, 1.0 );","\t\t}","\t}","\tif ( length(lightWeighting) < 0.3465 ) {","\t\tif (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {","\t\t\tgl_FragColor = vec4( uLineColor4, 1.0 );","\t}","\t}","}"].join("\n")},f={uniforms:{uDirLightPos:{value:new a._92},uDirLightColor:{value:new a.p(15658734)},uAmbientLightColor:{value:new a.p(328965)},uBaseColor:{value:new a.p(16777215)},uLineColor1:{value:new a.p(0)}},vertexShader:["varying vec3 vNormal;","void main() {","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","\tvNormal = normalize( normalMatrix * normal );","}"].join("\n"),fragmentShader:["uniform vec3 uBaseColor;","uniform vec3 uLineColor1;","uniform vec3 uLineColor2;","uniform vec3 uLineColor3;","uniform vec3 uLineColor4;","uniform vec3 uDirLightPos;","uniform vec3 uDirLightColor;","uniform vec3 uAmbientLightColor;","varying vec3 vNormal;","void main() {","float directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);","vec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;","gl_FragColor = vec4( uBaseColor, 1.0 );","if ( length(lightWeighting) < 1.00 ) {","\t\tif ( ( mod(gl_FragCoord.x, 4.001) + mod(gl_FragCoord.y, 4.0) ) > 6.00 ) {","\t\t\tgl_FragColor = vec4( uLineColor1, 1.0 );","\t\t}","\t}","\tif ( length(lightWeighting) < 0.50 ) {","\t\tif ( ( mod(gl_FragCoord.x + 2.0, 4.001) + mod(gl_FragCoord.y + 2.0, 4.0) ) > 6.00 ) {","\t\t\tgl_FragColor = vec4( uLineColor1, 1.0 );","\t\t}","\t}","}"].join("\n")},m={data:function(){return{gui:null,container:null,stats:null,camera:null,scene:null,renderer:null,materials:null,current_material:null,light:null,pointLight:null,ambientLight:null,effect:null,resolution:null,effectController:null,time:0,clock:null}},mounted:function(){this.clock=new this.$THREE.Clock,this.init(),this.animate()},beforeDestroy:function(){this.gui.destroy()},methods:{init:function(){this.container=document.getElementById("container"),this.camera=new this.$THREE.PerspectiveCamera(45,this.$webglInnerWidth/window.innerHeight,1,1e4),this.camera.position.set(-500,500,1500),this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(328965),this.light=new this.$THREE.DirectionalLight(16777215),this.light.position.set(.5,.5,1),this.scene.add(this.light),this.pointLight=new this.$THREE.PointLight(16724736),this.pointLight.position.set(0,0,100),this.scene.add(this.pointLight),this.ambientLight=new this.$THREE.AmbientLight(526344),this.scene.add(this.ambientLight),this.materials=this.generateMaterials(),this.current_material="shiny",this.resolution=28,this.effect=new n(this.resolution,this.materials[this.current_material].m,!0,!0),this.effect.position.set(0,0,0),this.effect.scale.set(700,700,700),this.effect.enableUvs=!1,this.effect.enableColors=!1,this.scene.add(this.effect),this.renderer=new this.$THREE.WebGLRenderer,this.renderer.outputEncoding=this.$THREE.sRGBEncoding,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement);var t=new o.a(this.camera,this.renderer.domElement);t.minDistance=500,t.maxDistance=5e3,this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom),this.setupGui(),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},generateMaterials:function(){var t="static/textures/cube/SwedishRoyalCastle/",e=[t+"px.jpg",t+"nx.jpg",t+"py.jpg",t+"ny.jpg",t+"pz.jpg",t+"nz.jpg"],i=new this.$THREE.CubeTextureLoader,r=i.load(e),o=i.load(e);o.mapping=this.$THREE.CubeRefractionMapping;var a=this.createShaderMaterial(h,this.light,this.ambientLight),n=this.createShaderMaterial(u,this.light,this.ambientLight),l=this.createShaderMaterial(c,this.light,this.ambientLight),s=this.createShaderMaterial(f,this.light,this.ambientLight),m=(new this.$THREE.TextureLoader).load("static/textures/uv_grid_opengl.jpg");return m.wrapS=this.$THREE.RepeatWrapping,m.wrapT=this.$THREE.RepeatWrapping,{chrome:{m:new this.$THREE.MeshLambertMaterial({color:16777215,envMap:r}),h:0,s:0,l:1},liquid:{m:new this.$THREE.MeshLambertMaterial({color:16777215,envMap:o,refractionRatio:.85}),h:0,s:0,l:1},shiny:{m:new this.$THREE.MeshStandardMaterial({color:5570560,envMap:r,roughness:.1,metalness:1}),h:0,s:.8,l:.2},matte:{m:new this.$THREE.MeshPhongMaterial({color:0,specular:1118481,shininess:1}),h:0,s:0,l:1},flat:{m:new this.$THREE.MeshLambertMaterial({color:0,flatShading:!0}),h:0,s:0,l:1},textured:{m:new this.$THREE.MeshPhongMaterial({color:16777215,specular:1118481,shininess:1,map:m}),h:0,s:0,l:1},colors:{m:new this.$THREE.MeshPhongMaterial({color:16777215,specular:16777215,shininess:2,vertexColors:!0}),h:0,s:0,l:1},multiColors:{m:new this.$THREE.MeshPhongMaterial({shininess:2,vertexColors:!0}),h:0,s:0,l:1},plastic:{m:new this.$THREE.MeshPhongMaterial({color:0,specular:8947848,shininess:250}),h:.6,s:.8,l:.1},toon1:{m:a,h:.2,s:1,l:.75},toon2:{m:n,h:.4,s:1,l:.75},hatching:{m:l,h:.2,s:1,l:.9},dotted:{m:s,h:.2,s:1,l:.9}}},createShaderMaterial:function(t,e,i){var r=this.$THREE.UniformsUtils.clone(t.uniforms),o=t.vertexShader,a=t.fragmentShader,n=new this.$THREE.ShaderMaterial({uniforms:r,vertexShader:o,fragmentShader:a});return n.uniforms.uDirLightPos.value=e.position,n.uniforms.uDirLightColor.value=e.color,n.uniforms.uAmbientLightColor.value=i.color,n},setupGui:function(){var t,e=this,i=function(t){return function(){var i=e.materials[e.current_material];i.h=a.getValue(),i.s=n.getValue(),i.l=l.getValue(),e.current_material=t;var r=e.materials[t];e.effect.material=r.m,a.setValue(r.h),n.setValue(r.s),l.setValue(r.l),e.effect.enableUvs="textured"===e.current_material,e.effect.enableColors="colors"===e.current_material||"multiColors"===e.current_material}};for(var o in this.effectController={material:"shiny",speed:1,numBlobs:10,resolution:28,isolation:80,floor:!0,wallx:!1,wallz:!1,hue:0,saturation:.8,lightness:.1,lhue:.04,lsaturation:1,llightness:.5,lx:.5,ly:.5,lz:1,dummy:function(){}},this.gui=new r.a,t=this.gui.addFolder("Materials"),this.materials)this.effectController[o]=i(o),t.add(this.effectController,o).name(o);var a=(t=this.gui.addFolder("Material color")).add(this.effectController,"hue",0,1,.025),n=t.add(this.effectController,"saturation",0,1,.025),l=t.add(this.effectController,"lightness",0,1,.025);(t=this.gui.addFolder("Point light color")).add(this.effectController,"lhue",0,1,.025).name("hue"),t.add(this.effectController,"lsaturation",0,1,.025).name("saturation"),t.add(this.effectController,"llightness",0,1,.025).name("lightness"),(t=this.gui.addFolder("Directional light orientation")).add(this.effectController,"lx",-1,1,.025).name("x"),t.add(this.effectController,"ly",-1,1,.025).name("y"),t.add(this.effectController,"lz",-1,1,.025).name("z"),(t=this.gui.addFolder("Simulation")).add(this.effectController,"speed",.1,8,.05),t.add(this.effectController,"numBlobs",1,50,1),t.add(this.effectController,"resolution",14,100,1),t.add(this.effectController,"isolation",10,300,1),t.add(this.effectController,"floor"),t.add(this.effectController,"wallx"),t.add(this.effectController,"wallz")},updateCubes:function(t,e,i,r,o,a){t.reset();for(var n=[new this.$THREE.Color(16711680),new this.$THREE.Color(16744192),new this.$THREE.Color(16776960),new this.$THREE.Color(65280),new this.$THREE.Color(255),new this.$THREE.Color(4915330),new this.$THREE.Color(9699539)],l=1.2/((Math.sqrt(i)-1)/4+1),s=0;s<i;s++){var h=.27*Math.sin(s+1.26*e*(1.03+.5*Math.cos(.21*s)))+.5,u=.77*Math.abs(Math.cos(s+1.12*e*Math.cos(1.22+.1424*s))),c=.27*Math.cos(s+1.32*e*.1*Math.sin(.92+.53*s))+.5;"multiColors"===this.current_material?t.addBall(h,u,c,l,12,n[s%7]):t.addBall(h,u,c,l,12)}r&&t.addPlaneY(2,12),a&&t.addPlaneZ(2,12),o&&t.addPlaneX(2,12)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){var t=this.clock.getDelta();this.time+=t*this.effectController.speed*.5,this.effectController.resolution!==this.resolution&&(this.resolution=this.effectController.resolution,this.effect.init(Math.floor(this.resolution))),this.effectController.isolation!==this.effect.isolation&&(this.effect.isolation=this.effectController.isolation),this.updateCubes(this.effect,this.time,this.effectController.numBlobs,this.effectController.floor,this.effectController.wallx,this.effectController.wallz),this.effect.material instanceof this.$THREE.ShaderMaterial?this.effect.material.uniforms.uBaseColor.value.setHSL(this.effectController.hue,this.effectController.saturation,this.effectController.lightness):this.effect.material.color.setHSL(this.effectController.hue,this.effectController.saturation,this.effectController.lightness),this.light.position.set(this.effectController.lx,this.effectController.ly,this.effectController.lz),this.light.position.normalize(),this.pointLight.color.setHSL(this.effectController.lhue,this.effectController.lsaturation,this.effectController.llightness),this.renderer.render(this.scene,this.camera)}}},d={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglMarchingcubes-container"},[e("div",{attrs:{id:"container"}}),this._v(" "),e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" -\n        marching cubes"),e("br"),this._v("\n        based on greggman's "),e("a",{attrs:{href:"https://webglsamples.org/blob/blob.html"}},[this._v("blob")]),this._v(", original code by Henrik Rydgård\n    ")])])}]};var g=i("VU/8")(m,d,!1,function(t){i("BQsS")},"data-v-70c6b9f4",null);e.default=g.exports}});
//# sourceMappingURL=70.dd79f7d9f40047918425.js.map