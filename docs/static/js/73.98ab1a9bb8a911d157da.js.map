{"version":3,"sources":["webpack:///src/views/sprites/webglSprites.vue","webpack:///./src/views/sprites/webglSprites.vue?3e8c","webpack:///./src/views/sprites/webglSprites.vue"],"names":["webglSprites","data","camera","scene","renderer","cameraOrtho","sceneOrtho","spriteTL","spriteTR","spriteBL","spriteBR","spriteC","mapC","group","mounted","this","init","animate","methods","width","$webglInnerWidth","height","window","innerHeight","$THREE","PerspectiveCamera","position","z","OrthographicCamera","Scene","fog","Fog","textureLoader","TextureLoader","load","createHUDSprites","mapB","Group","materialC","SpriteMaterial","map","color","materialB","a","material","x","Math","random","y","clone","setHSL","offset","set","repeat","sprite","Sprite","normalize","multiplyScalar","add","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","autoClear","document","getElementsByClassName","appendChild","domElement","addEventListener","onWindowResize","texture","image","center","scale","updateHUDSprites","innerWidth","$onWindowResize","left","right","top","bottom","updateProjectionMatrix","requestAnimationFrame","render","time","Date","now","i","l","children","length","sin","imageWidth","imageHeight","rotation","opacity","clear","clearDepth","sprites_webglSprites","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/73.98ab1a9bb8a911d157da.js","sourcesContent":["<template>\r\n    <div class=\"webglSprites-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - sprites\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            cameraOrtho: null,\r\n            sceneOrtho: null,\r\n            spriteTL: null,\r\n            spriteTR: null,\r\n            spriteBL: null,\r\n            spriteBR: null,\r\n            spriteC: null,\r\n\t\t\tmapC: null,\r\n\t\t\tgroup: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var width = this.$webglInnerWidth\r\n            var height = window.innerHeight\r\n            this.camera = new this.$THREE.PerspectiveCamera(60, width / height, 1, 2100)\r\n            this.camera.position.z = 1500\r\n            this.cameraOrtho = new this.$THREE.OrthographicCamera(- width / 2, width / 2, height / 2, - height / 2, 1, 10)\r\n            this.cameraOrtho.position.z = 10\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.fog = new this.$THREE.Fog(0x000000, 1500, 2100)\r\n            this.sceneOrtho = new this.$THREE.Scene()\r\n            // create sprites\r\n            var amount = 200\r\n            var radius = 500\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            textureLoader.load(\"static/textures/sprite0.png\", this.createHUDSprites)\r\n            var mapB = textureLoader.load(\"static/textures/sprite1.png\")\r\n            this.mapC = textureLoader.load(\"static/textures/sprite2.png\")\r\n            this.group = new this.$THREE.Group()\r\n            var materialC = new this.$THREE.SpriteMaterial({ map: this.mapC, color: 0xffffff, fog: true })\r\n            var materialB = new this.$THREE.SpriteMaterial({ map: mapB, color: 0xffffff, fog: true })\r\n            for (var a = 0; a < amount; a ++) {\r\n                var x = Math.random() - 0.5\r\n                var y = Math.random() - 0.5\r\n                var z = Math.random() - 0.5\r\n                var material\r\n                if (z < 0) {\r\n                    material = materialB.clone()\r\n                } else {\r\n                    material = materialC.clone()\r\n                    material.color.setHSL(0.5 * Math.random(), 0.75, 0.5)\r\n                    material.map.offset.set(- 0.5, - 0.5)\r\n                    material.map.repeat.set(2, 2)\r\n                }\r\n                var sprite = new this.$THREE.Sprite(material)\r\n                sprite.position.set(x, y, z)\r\n                sprite.position.normalize()\r\n                sprite.position.multiplyScalar(radius)\r\n                this.group.add(sprite)\r\n            }\r\n            this.scene.add(this.group)\r\n            // renderer\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            this.renderer.autoClear = false // To allow render overlay on top of sprited sphere\r\n            document.getElementsByClassName('webglSprites-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        createHUDSprites(texture) {\r\n            var material = new this.$THREE.SpriteMaterial({ map: texture })\r\n            var width = material.map.image.width\r\n            var height = material.map.image.height\r\n            this.spriteTL = new this.$THREE.Sprite(material)\r\n            this.spriteTL.center.set(0.0, 1.0)\r\n            this.spriteTL.scale.set(width, height, 1)\r\n            this.sceneOrtho.add(this.spriteTL)\r\n            this.spriteTR = new this.$THREE.Sprite(material)\r\n            this.spriteTR.center.set(1.0, 1.0)\r\n            this.spriteTR.scale.set(width, height, 1)\r\n            this.sceneOrtho.add(this.spriteTR)\r\n            this.spriteBL = new this.$THREE.Sprite(material)\r\n            this.spriteBL.center.set(0.0, 0.0)\r\n            this.spriteBL.scale.set(width, height, 1)\r\n            this.sceneOrtho.add(this.spriteBL)\r\n            this.spriteBR = new this.$THREE.Sprite(material)\r\n            this.spriteBR.center.set(1.0, 0.0)\r\n            this.spriteBR.scale.set(width, height, 1)\r\n            this.sceneOrtho.add(this.spriteBR)\r\n            this.spriteC = new this.$THREE.Sprite(material)\r\n            this.spriteC.center.set(0.5, 0.5)\r\n            this.spriteC.scale.set(width, height, 1)\r\n            this.sceneOrtho.add(this.spriteC)\r\n            this.updateHUDSprites()\r\n        },\r\n        updateHUDSprites() {\r\n            var width = (window.innerWidth - 281) / 2\r\n            var height = window.innerHeight / 2\r\n            this.spriteTL.position.set(- width, height, 1) // top left\r\n            this.spriteTR.position.set(width, height, 1) // top right\r\n            this.spriteBL.position.set(- width, - height, 1) // bottom left\r\n            this.spriteBR.position.set(width, - height, 1) // bottom right\r\n            this.spriteC.position.set(0, 0, 1) // center\r\n        },\r\n        onWindowResize() {\r\n            var width = window.innerWidth - 281\r\n            var height = window.innerHeight\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            this.cameraOrtho.left = - width / 2\r\n            this.cameraOrtho.right = width / 2\r\n            this.cameraOrtho.top = height / 2\r\n            this.cameraOrtho.bottom = - height / 2\r\n            this.cameraOrtho.updateProjectionMatrix()\r\n            this.updateHUDSprites()\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.render()\r\n        },\r\n        render() {\r\n            var time = Date.now() / 1000\r\n            for (var i = 0, l = this.group.children.length; i < l; i ++) {\r\n                var sprite = this.group.children[ i ]\r\n                var material = sprite.material\r\n                var scale = Math.sin(time + sprite.position.x * 0.01) * 0.3 + 1.0\r\n                var imageWidth = 1\r\n                var imageHeight = 1\r\n                if (material.map && material.map.image && material.map.image.width) {\r\n                    imageWidth = material.map.image.width\r\n                    imageHeight = material.map.image.height\r\n                }\r\n                sprite.material.rotation += 0.1 * (i / l)\r\n                sprite.scale.set(scale * imageWidth, scale * imageHeight, 1.0)\r\n                if (material.map !== this.mapC) {\r\n                    material.opacity = Math.sin(time + sprite.position.x * 0.01) * 0.4 + 0.6\r\n                }\r\n            }\r\n            this.group.rotation.x = time * 0.5\r\n            this.group.rotation.y = time * 0.75\r\n            this.group.rotation.z = time * 1.0\r\n            this.renderer.clear()\r\n            this.renderer.render(this.scene, this.camera)\r\n            this.renderer.clearDepth()\r\n            this.renderer.render(this.sceneOrtho, this.cameraOrtho)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglSprites-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/sprites/webglSprites.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglSprites-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - sprites\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-fb0b441e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/sprites/webglSprites.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fb0b441e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglSprites.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglSprites.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglSprites.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fb0b441e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglSprites.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-fb0b441e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/sprites/webglSprites.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}