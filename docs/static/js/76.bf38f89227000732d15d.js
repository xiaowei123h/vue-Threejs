webpackJsonp([76],{rJ4T:function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s("QEtz"),a=s("wIBv"),i=s("JYhl"),r=s("p8Aj"),h={data:function(){return{params:{envMap:"HDR",roughness:0,metalness:0,exposure:1,nodes:!0,animate:!0,debug:!1},container:null,stats:null,camera:null,scene:null,renderer:null,controls:null,torusMesh:null,torusMeshNode:null,planeMesh:null,generatedCubeRenderTarget:null,ldrCubeRenderTarget:null,hdrCubeRenderTarget:null,rgbmCubeRenderTarget:null,ldrCubeMap:null,hdrCubeMap:null,rgbmCubeMap:null,gui:null}},mounted:function(){this.init(),this.animate()},beforeDestroy:function(){this.gui.destroy()},methods:{getEnvScene:function(){var e=new this.$THREE.Scene,t=new this.$THREE.BoxBufferGeometry;t.deleteAttribute("uv");var s=new this.$THREE.MeshStandardMaterial({metalness:0,side:this.$THREE.BackSide}),n=new this.$THREE.Mesh(t,s);n.scale.setScalar(10),e.add(n);var a=new this.$THREE.PointLight(16777215,50,0,2);e.add(a);var i=new this.$THREE.MeshLambertMaterial({color:0,emissive:16777215,emissiveIntensity:10}),r=new this.$THREE.Mesh(t,i);r.position.set(-5,2,0),r.scale.set(.1,1,1),e.add(r);var h=new this.$THREE.Mesh(t,i);h.position.set(0,5,0),h.scale.set(1,.1,1),e.add(h);var d=new this.$THREE.Mesh(t,i);return d.position.set(2,1,5),d.scale.set(1.5,2,.1),e.add(d),e},init:function(){var e=this;this.container=document.createElement("div"),document.getElementsByClassName("webglMaterialsEnvmapsHdrNodes-container")[0].appendChild(this.container),this.camera=new this.$THREE.PerspectiveCamera(40,this.$webglInnerWidth/window.innerHeight,1,1e3),this.camera.position.set(0,0,120),this.scene=new this.$THREE.Scene,this.scene.background=new this.$THREE.Color(0),this.renderer=new this.$THREE.WebGLRenderer,this.renderer.physicallyCorrectLights=!0;var t=new this.$THREE.TorusKnotBufferGeometry(18,8,150,20),s=new this.$THREE.MeshStandardMaterial;s.color=new this.$THREE.Color(16777215),s.roughness=this.params.metalness,s.metalness=this.params.roguhness,this.torusMesh=new this.$THREE.Mesh(t,s),this.scene.add(this.torusMesh),(s=new r.MeshStandardNodeMaterial).color=new this.$THREE.Color(16777215),s.roughness=this.params.metalness,s.metalness=this.params.roguhness,this.torusMeshNode=new this.$THREE.Mesh(t,s),this.scene.add(this.torusMeshNode),t=new this.$THREE.PlaneBufferGeometry(200,200),s=new this.$THREE.MeshBasicMaterial,this.planeMesh=new this.$THREE.Mesh(t,s),this.planeMesh.position.y=-50,this.planeMesh.rotation.x=.5*-Math.PI,this.scene.add(this.planeMesh),this.$THREE.DefaultLoadingManager.onLoad=function(){h.dispose()};this.hdrCubeMap=(new i.a).setPath("static/textures/cube/pisaHDR/").setDataType(this.$THREE.UnsignedByteType).load(["px.hdr","nx.hdr","py.hdr","ny.hdr","pz.hdr","nz.hdr"],function(){e.hdrCubeRenderTarget=h.fromCubemap(e.hdrCubeMap),e.hdrCubeMap.magFilter=e.$THREE.LinearFilter,e.hdrCubeMap.needsUpdate=!0});this.ldrCubeMap=(new this.$THREE.CubeTextureLoader).setPath("static/textures/cube/pisa/").load(["px.png","nx.png","py.png","ny.png","pz.png","nz.png"],function(){e.ldrCubeMap.encoding=e.$THREE.sRGBEncoding,e.ldrCubeRenderTarget=h.fromCubemap(e.ldrCubeMap)});this.rgbmCubeMap=(new this.$THREE.CubeTextureLoader).setPath("static/textures/cube/pisaRGBM16/").load(["px.png","nx.png","py.png","ny.png","pz.png","nz.png"],function(){e.rgbmCubeMap.encoding=e.$THREE.RGBM16Encoding,e.rgbmCubeMap.format=e.$THREE.RGBAFormat,e.rgbmCubeRenderTarget=h.fromCubemap(e.rgbmCubeMap),e.rgbmCubeMap.magFilter=e.$THREE.LinearFilter,e.rgbmCubeMap.needsUpdate=!0});var h=new this.$THREE.PMREMGenerator(this.renderer);h.compileCubemapShader();var d=this.getEnvScene();this.generatedCubeRenderTarget=h.fromScene(d,.04),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement),this.renderer.toneMapping=this.$THREE.ACESFilmicToneMapping,this.renderer.outputEncoding=this.$THREE.sRGBEncoding,this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom),this.controls=new a.b(this.camera,this.renderer.domElement),this.controls.minDistance=50,this.controls.maxDistance=300,window.addEventListener("resize",this.onWindowResize,!1),this.gui=new n.a,this.gui.add(this.params,"envMap",["Generated","LDR","HDR","RGBM16"]),this.gui.add(this.params,"roughness",0,1,.01),this.gui.add(this.params,"metalness",0,1,.01),this.gui.add(this.params,"exposure",0,2,.01),this.gui.add(this.params,"nodes",!0),this.gui.add(this.params,"animate",!0),this.gui.add(this.params,"debug",!1),this.gui.open()},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate),this.stats.begin(),this.render(),this.stats.end()},render:function(){var e,t;switch(this.torusMesh.visible=!this.params.nodes,this.torusMeshNode.visible=this.params.nodes,this.torusMesh.material.roughness=this.params.roughness,this.torusMesh.material.metalness=this.params.metalness,this.torusMeshNode.material.roughness=this.params.roughness,this.torusMeshNode.material.metalness=this.params.metalness,this.params.envMap){case"Generated":e=this.generatedCubeRenderTarget,t=this.generatedCubeRenderTarget.texture;break;case"LDR":e=this.ldrCubeRenderTarget,t=this.ldrCubeMap;break;case"HDR":e=this.hdrCubeRenderTarget,t=this.hdrCubeMap;break;case"RGBM16":e=this.rgbmCubeRenderTarget,t=this.rgbmCubeMap}var s=e?e.texture:null;s&&s!==this.torusMesh.material.envMap&&(this.torusMesh.material.envMap=s,this.torusMesh.material.needsUpdate=!0,this.torusMeshNode.material.envMap=s,this.torusMeshNode.material.needsUpdate=!0,this.planeMesh.material.map=s,this.planeMesh.material.needsUpdate=!0),this.params.animate&&(this.torusMesh.rotation.y+=.005,this.torusMeshNode.rotation.y=this.torusMesh.rotation.y),this.planeMesh.visible=this.params.debug,this.scene.background=t,this.renderer.toneMappingExposure=this.params.exposure,this.renderer.render(this.scene,this.camera)}}},d={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webglMaterialsEnvmapsHdrNodes-container"},[t("div",{attrs:{id:"container"}}),this._v(" "),t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("threejs")]),this._v(" - High dynamic range (RGBE) Image-based Lighting (IBL)"),t("br"),this._v("using run-time generated pre-filtered roughness mipmaps (PMREM)"),t("br"),this._v("\n\t\t\tCreated by Prashant Sharma and "),t("a",{attrs:{href:"http://clara.io/",target:"_blank",rel:"noopener"}},[this._v("Ben Houston")]),this._v(".\n\t\t")])])}]};var o=s("VU/8")(h,d,!1,function(e){s("zuD0")},"data-v-ac2c01ee",null);t.default=o.exports},zuD0:function(e,t){}});
//# sourceMappingURL=76.bf38f89227000732d15d.js.map