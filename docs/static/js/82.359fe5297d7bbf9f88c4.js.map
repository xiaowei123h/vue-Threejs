{"version":3,"sources":["webpack:///src/views/geometries/webglGeometryTextShapes.vue","webpack:///./src/views/geometries/webglGeometryTextShapes.vue?0c12","webpack:///./src/views/geometries/webglGeometryTextShapes.vue"],"names":["webglGeometryTextShapes","data","camera","scene","renderer","loader","mounted","this","init","animate","methods","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","set","Scene","background","Color","FontLoader","that","load","font","matDark","LineBasicMaterial","color","side","DoubleSide","matLite","MeshBasicMaterial","transparent","opacity","shapes","generateShapes","geometry","ShapeBufferGeometry","computeBoundingBox","xMid","boundingBox","max","x","min","translate","text","Mesh","z","add","holeShapes","i","length","shape","holes","j","hole","push","apply","lineText","Object3D","points","getPoints","BufferGeometry","setFromPoints","lineMesh","Line","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementsByClassName","appendChild","domElement","controls","OrbitControls","target","update","addEventListener","onWindowResize","requestAnimationFrame","render","$onWindowResize","geometries_webglGeometryTextShapes","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/82.359fe5297d7bbf9f88c4.js","sourcesContent":["<template>\r\n    <div class=\"webglGeometryTextShapes-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - simple text from json fonts\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: '',\r\n            scene: '',\r\n            renderer: '',\r\n            loader: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, (this.$webglInnerWidth) / window.innerHeight, 1, 10000)\r\n            this.camera.position.set(0, - 400, 600)\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xf0f0f0)\r\n            this.loader = new this.$THREE.FontLoader()\r\n            var that = this\r\n            this.loader.load('static/fonts/helvetiker_regular.typeface.json', function (font) {\r\n                var color = 0x006699\r\n                var matDark = new that.$THREE.LineBasicMaterial({\r\n                    color: color,\r\n                    side: that.$THREE.DoubleSide\r\n                })\r\n                var matLite = new that.$THREE.MeshBasicMaterial({\r\n                    color: color,\r\n                    transparent: true,\r\n                    opacity: 0.4,\r\n                    side: that.$THREE.DoubleSide\r\n                })\r\n                var message = \"   Three.js\\nSimple text.\"\r\n                var shapes = font.generateShapes(message, 100)\r\n                geometry = new that.$THREE.ShapeBufferGeometry(shapes)\r\n                geometry.computeBoundingBox()\r\n                var xMid = - 0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x)\r\n                geometry.translate(xMid, 0, 0)\r\n                // make shape ( N.B. edge view not visible )\r\n                var text = new that.$THREE.Mesh(geometry, matLite)\r\n                text.position.z =- 150\r\n                that.scene.add(text)\r\n                // make line shape ( N.B. edge view remains visible )\r\n                var holeShapes = []\r\n                for (var i = 0; i < shapes.length; i ++) {\r\n                    var shape = shapes[i]\r\n                    if (shape.holes && shape.holes.length > 0) {\r\n                        for (var j = 0; j < shape.holes.length; j ++) {\r\n                            var hole = shape.holes[j]\r\n                            holeShapes.push(hole)\r\n                        }\r\n                    }\r\n                }\r\n                shapes.push.apply(shapes, holeShapes)\r\n                var lineText = new that.$THREE.Object3D()\r\n                for (var i = 0; i < shapes.length; i ++) {\r\n                    var shape = shapes[i]\r\n                    var points = shape.getPoints()\r\n                    var geometry = new that.$THREE.BufferGeometry().setFromPoints(points)\r\n                    geometry.translate(xMid, 0, 0)\r\n                    var lineMesh = new that.$THREE.Line(geometry, matDark)\r\n                    lineText.add(lineMesh)\r\n                }\r\n                that.scene.add(lineText)\r\n            }) //end load function\r\n            this.renderer = new this.$THREE.WebGLRenderer({antialias: true})\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglGeometryTextShapes-container')[0].appendChild(this.renderer.domElement)\r\n            // document.body.appendChild(this.renderer.domElement)\r\n            const controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            controls.target.set( 0, 0, 0 )\r\n            controls.update()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n\t\t\tthis.render()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        render() {\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometryTextShapes-container {\r\n    background-color: #f0f0f0;\r\n\tcolor: #444;\r\n}\r\n#info {\r\n    color: #000;\r\n}\r\n#info a {\r\n    color: #08f;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometryTextShapes.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometryTextShapes-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - simple text from json fonts\\n\\t\\t\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2bef5a97\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometryTextShapes.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2bef5a97\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometryTextShapes.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryTextShapes.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryTextShapes.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2bef5a97\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometryTextShapes.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2bef5a97\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometryTextShapes.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}