{"version":3,"sources":["webpack:///src/views/geometries/webglGeometryTeapot.vue","webpack:///./src/views/geometries/webglGeometryTeapot.vue?0113","webpack:///./src/views/geometries/webglGeometryTeapot.vue"],"names":["webglGeometryTeapot","data","camera","scene","renderer","cameraControls","effectController","teapotSize","ambientLight","light","tess","bBottom","bLid","bBody","bFitLid","bNonBlinn","shading","wireMaterial","flatMaterial","gouraudMaterial","phongMaterial","texturedMaterial","reflectiveMaterial","teapot","textureCube","diffuseColor","specularColor","gui","mounted","this","$THREE","Color","init","render","beforeDestroy","destroy","methods","container","document","createElement","getElementsByClassName","appendChild","canvasWidth","$webglInnerWidth","canvasHeight","window","innerHeight","PerspectiveCamera","position","set","AmbientLight","DirectionalLight","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","outputEncoding","sRGBEncoding","domElement","addEventListener","onWindowResize","OrbitControls","textureMap","TextureLoader","load","wrapS","wrapT","RepeatWrapping","anisotropy","encoding","path","urls","CubeTextureLoader","materialColor","setRGB","MeshBasicMaterial","color","wireframe","MeshPhongMaterial","specular","flatShading","side","DoubleSide","MeshLambertMaterial","map","envMap","Scene","background","add","setupGui","$onWindowResize","h","shininess","ka","kd","ks","metallic","hue","saturation","lightness","lhue","lsaturation","llightness","lx","ly","lz","newTess","bottom","lid","body","fitLid","nonblinn","newShading","dat_gui_module","addFolder","name","onChange","createNewTeapot","setHSL","copy","multiplyScalar","geometry","dispose","remove","teapotGeometry","TeapotBufferGeometry","Mesh","geometries_webglGeometryTeapot","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8IAaAA,GACAC,KADA,WAEA,OACAC,OAAA,KACAC,MAAA,KACAC,SAAA,KACAC,eAAA,KACAC,iBAAA,KACAC,WAAA,IACAC,aAAA,KACAC,MAAA,KACAC,MAAA,EACAC,QAAA,KACAC,KAAA,KACAC,MAAA,KACAC,QAAA,KACAC,UAAA,KACAC,QAAA,KACAC,aAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,cAAA,KACAC,iBAAA,KACAC,mBAAA,KACAC,OAAA,KACAC,YAAA,KAEAC,aAAA,KACAC,cAAA,KACAC,IAAA,OAGAC,QAhCA,WAiCAC,KAAAJ,aAAA,IAAAI,KAAAC,OAAAC,MACAF,KAAAH,cAAA,IAAAG,KAAAC,OAAAC,MACAF,KAAAG,OACAH,KAAAI,UAEAC,cAtCA,WAuCAL,KAAAF,IAAAQ,WAEAC,SACAJ,KADA,WAEA,IAAAK,EAAAC,SAAAC,cAAA,OACAD,SAAAE,uBAAA,oCAAAC,YAAAJ,GACA,IAAAK,EAAAb,KAAAc,iBACAC,EAAAC,OAAAC,YAEAjB,KAAA3B,OAAA,IAAA2B,KAAAC,OAAAiB,kBAAA,GAAAlB,KAAAc,iBAAAE,OAAAC,YAAA,OACAjB,KAAA3B,OAAA8C,SAAAC,KAAA,cAEApB,KAAArB,aAAA,IAAAqB,KAAAC,OAAAoB,aAAA,SACArB,KAAApB,MAAA,IAAAoB,KAAAC,OAAAqB,iBAAA,YAGAtB,KAAAzB,SAAA,IAAAyB,KAAAC,OAAAsB,eAAAC,WAAA,IACAxB,KAAAzB,SAAAkD,cAAAT,OAAAU,kBACA1B,KAAAzB,SAAAoD,QAAAd,EAAAE,GACAf,KAAAzB,SAAAqD,eAAA5B,KAAAC,OAAA4B,aACArB,EAAAI,YAAAZ,KAAAzB,SAAAuD,YAEAd,OAAAe,iBAAA,SAAA/B,KAAAgC,gBAAA,GAEAhC,KAAAxB,eAAA,IAAAyD,EAAA,EAAAjC,KAAA3B,OAAA2B,KAAAzB,SAAAuD,YACA9B,KAAAxB,eAAAuD,iBAAA,SAAA/B,KAAAI,QAEA,IAAA8B,GAAA,IAAAlC,KAAAC,OAAAkC,eAAAC,KAAA,sCACAF,EAAAG,MAAAH,EAAAI,MAAAtC,KAAAC,OAAAsC,eACAL,EAAAM,WAAA,GACAN,EAAAO,SAAAzC,KAAAC,OAAA4B,aAEA,IAAAa,EAAA,6BACAC,GACAD,EAAA,SAAAA,EAAA,SACAA,EAAA,SAAAA,EAAA,SACAA,EAAA,SAAAA,EAAA,UAEA1C,KAAAL,aAAA,IAAAK,KAAAC,OAAA2C,mBAAAR,KAAAO,GACA3C,KAAAL,YAAA8C,SAAAzC,KAAAC,OAAA4B,aAEA,IAAAgB,EAAA,IAAA7C,KAAAC,OAAAC,MACA2C,EAAAC,OAAA,OACA9C,KAAAZ,aAAA,IAAAY,KAAAC,OAAA8C,mBAAAC,MAAA,SAAAC,WAAA,IACAjD,KAAAX,aAAA,IAAAW,KAAAC,OAAAiD,mBAAAF,MAAAH,EAAAM,SAAA,EAAAC,aAAA,EAAAC,KAAArD,KAAAC,OAAAqD,aACAtD,KAAAV,gBAAA,IAAAU,KAAAC,OAAAsD,qBAAAP,MAAAH,EAAAQ,KAAArD,KAAAC,OAAAqD,aACAtD,KAAAT,cAAA,IAAAS,KAAAC,OAAAiD,mBAAAF,MAAAH,EAAAQ,KAAArD,KAAAC,OAAAqD,aACAtD,KAAAR,iBAAA,IAAAQ,KAAAC,OAAAiD,mBAAAF,MAAAH,EAAAW,IAAAtB,EAAAmB,KAAArD,KAAAC,OAAAqD,aACAtD,KAAAP,mBAAA,IAAAO,KAAAC,OAAAiD,mBAAAF,MAAAH,EAAAY,OAAAzD,KAAAL,YAAA0D,KAAArD,KAAAC,OAAAqD,aAEAtD,KAAA1B,MAAA,IAAA0B,KAAAC,OAAAyD,MACA1D,KAAA1B,MAAAqF,WAAA,IAAA3D,KAAAC,OAAAC,MAAA,UACAF,KAAA1B,MAAAsF,IAAA5D,KAAArB,cACAqB,KAAA1B,MAAAsF,IAAA5D,KAAApB,OAEAoB,KAAA6D,YAEA7B,eAvDA,WAwDAhC,KAAA8D,gBAAA9D,KAAA3B,OAAA2B,KAAAzB,WAEAsF,SA1DA,WAoFA,IAAAE,EAzBA/D,KAAAvB,kBACAuF,UAAA,GACAC,GAAA,IACAC,GAAA,IACAC,GAAA,GACAC,UAAA,EACAC,IAAA,KACAC,WAAA,IACAC,UAAA,IACAC,KAAA,IACAC,YAAA,IACAC,WAAA,EAGAC,GAAA,IACAC,GAAA,IACAC,GAAA,GACAC,QAAA,GACAC,QAAA,EACAC,KAAA,EACAC,MAAA,EACAC,QAAA,EACAC,UAAA,EACAC,WAAA,UAGApF,KAAAF,IAAA,IAAAuF,EAAA,GAEAtB,EAAA/D,KAAAF,IAAAwF,UAAA,qBACA1B,IAAA5D,KAAAvB,iBAAA,qBAAA8G,KAAA,aAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,eAAA8G,KAAA,oBAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,eAAA8G,KAAA,qBAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,YAAA+G,SAAAxF,KAAAI,SAEA2D,EAAA/D,KAAAF,IAAAwF,UAAA,mBACA1B,IAAA5D,KAAAvB,iBAAA,gBAAA8G,KAAA,OAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,uBAAA8G,KAAA,cAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,sBAAA8G,KAAA,aAAAC,SAAAxF,KAAAI,SAEA2D,EAAA/D,KAAAF,IAAAwF,UAAA,aACA1B,IAAA5D,KAAAvB,iBAAA,iBAAA8G,KAAA,OAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,wBAAA8G,KAAA,cAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,uBAAA8G,KAAA,aAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,eAAA8G,KAAA,WAAAC,SAAAxF,KAAAI,SAEA2D,EAAA/D,KAAAF,IAAAwF,UAAA,oBACA1B,IAAA5D,KAAAvB,iBAAA,gBAAA8G,KAAA,KAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,gBAAA8G,KAAA,KAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,gBAAA8G,KAAA,KAAAC,SAAAxF,KAAAI,SACA2D,EAAA/D,KAAAF,IAAAwF,UAAA,yBACA1B,IAAA5D,KAAAvB,iBAAA,2CAAA8G,KAAA,sBAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,OAAA8G,KAAA,eAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,QAAA8G,KAAA,gBAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,UAAA8G,KAAA,kBAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,UAAA8G,KAAA,YAAAC,SAAAxF,KAAAI,QACA2D,EAAAH,IAAA5D,KAAAvB,iBAAA,YAAA8G,KAAA,kBAAAC,SAAAxF,KAAAI,QAEAJ,KAAAF,IAAA8D,IAAA5D,KAAAvB,iBAAA,6EAAA8G,KAAA,WAAAC,SAAAxF,KAAAI,SAEAA,OAtHA,WAuHAJ,KAAAvB,iBAAAqG,UAAA9E,KAAAnB,MACAmB,KAAAvB,iBAAAsG,SAAA/E,KAAAlB,SACAkB,KAAAvB,iBAAAuG,MAAAhF,KAAAjB,MACAiB,KAAAvB,iBAAAwG,OAAAjF,KAAAhB,OACAgB,KAAAvB,iBAAAyG,SAAAlF,KAAAf,SACAe,KAAAvB,iBAAA0G,WAAAnF,KAAAd,WACAc,KAAAvB,iBAAA2G,aAAApF,KAAAb,UACAa,KAAAnB,KAAAmB,KAAAvB,iBAAAqG,QACA9E,KAAAlB,QAAAkB,KAAAvB,iBAAAsG,OACA/E,KAAAjB,KAAAiB,KAAAvB,iBAAAuG,IACAhF,KAAAhB,MAAAgB,KAAAvB,iBAAAwG,KACAjF,KAAAf,QAAAe,KAAAvB,iBAAAyG,OACAlF,KAAAd,UAAAc,KAAAvB,iBAAA0G,SACAnF,KAAAb,QAAAa,KAAAvB,iBAAA2G,WACApF,KAAAyF,mBAIAzF,KAAAT,cAAAyE,UAAAhE,KAAAvB,iBAAAuF,UACAhE,KAAAR,iBAAAwE,UAAAhE,KAAAvB,iBAAAuF,UACAhE,KAAAJ,aAAA8F,OAAA1F,KAAAvB,iBAAA4F,IAAArE,KAAAvB,iBAAA6F,WAAAtE,KAAAvB,iBAAA8F,WACAvE,KAAAvB,iBAAA2F,SAEApE,KAAAH,cAAA8F,KAAA3F,KAAAJ,cAGAI,KAAAH,cAAAiD,OAAA,OAEA9C,KAAAJ,aAAAgG,eAAA5F,KAAAvB,iBAAAyF,IACAlE,KAAAX,aAAA2D,MAAA2C,KAAA3F,KAAAJ,cACAI,KAAAV,gBAAA0D,MAAA2C,KAAA3F,KAAAJ,cACAI,KAAAT,cAAAyD,MAAA2C,KAAA3F,KAAAJ,cACAI,KAAAR,iBAAAwD,MAAA2C,KAAA3F,KAAAJ,cACAI,KAAAH,cAAA+F,eAAA5F,KAAAvB,iBAAA0F,IACAnE,KAAAT,cAAA4D,SAAAwC,KAAA3F,KAAAH,eACAG,KAAAR,iBAAA2D,SAAAwC,KAAA3F,KAAAH,eAEAG,KAAArB,aAAAqE,MAAA0C,OAAA1F,KAAAvB,iBAAA4F,IAAArE,KAAAvB,iBAAA6F,WAAAtE,KAAAvB,iBAAA8F,UAAAvE,KAAAvB,iBAAAwF,IACAjE,KAAApB,MAAAuC,SAAAC,IAAApB,KAAAvB,iBAAAkG,GAAA3E,KAAAvB,iBAAAmG,GAAA5E,KAAAvB,iBAAAoG,IACA7E,KAAApB,MAAAoE,MAAA0C,OAAA1F,KAAAvB,iBAAA+F,KAAAxE,KAAAvB,iBAAAgG,YAAAzE,KAAAvB,iBAAAiG,YAEA,eAAA1E,KAAAb,QACAa,KAAA1B,MAAAqF,WAAA3D,KAAAL,YAEAK,KAAA1B,MAAAqF,WAAA,KAEA3D,KAAAzB,SAAA6B,OAAAJ,KAAA1B,MAAA0B,KAAA3B,SAEAoH,gBAvKA,WAwKA,OAAAzF,KAAAN,SACAM,KAAAN,OAAAmG,SAAAC,UACA9F,KAAA1B,MAAAyH,OAAA/F,KAAAN,SAEA,IAAAsG,EAAA,IAAAC,EAAA,EAAAjG,KAAAtB,WACAsB,KAAAnB,KACAmB,KAAAvB,iBAAAsG,OACA/E,KAAAvB,iBAAAuG,IACAhF,KAAAvB,iBAAAwG,KACAjF,KAAAvB,iBAAAyG,QACAlF,KAAAvB,iBAAA0G,UACAnF,KAAAN,OAAA,IAAAM,KAAAC,OAAAiG,KACAF,EACA,cAAAhG,KAAAb,QAAAa,KAAAZ,aACA,SAAAY,KAAAb,QAAAa,KAAAX,aACA,WAAAW,KAAAb,QAAAa,KAAAV,gBACA,WAAAU,KAAAb,QAAAa,KAAAT,cACA,aAAAS,KAAAb,QAAAa,KAAAR,iBAAAQ,KAAAP,oBACAO,KAAA1B,MAAAsF,IAAA5D,KAAAN,WC7OeyG,GADE/F,OAFjB,WAA0BJ,KAAaoG,eAAbpG,KAAuCqG,MAAAC,GAAwB,OAA/DtG,KAA+DuG,GAAA,IAExEC,iBADjB,WAAoC,IAAaC,EAAbzG,KAAaoG,eAA0BE,EAAvCtG,KAAuCqG,MAAAC,IAAAG,EAAwB,OAAAH,EAAA,OAAiBI,YAAA,kCAA4CJ,EAAA,OAAYK,OAAOC,GAAA,UAAaN,EAAA,KAAUK,OAAOE,KAAA,sBAAAC,OAAA,SAAAC,IAAA,cAA7K/G,KAA8OgH,GAAA,cAA9OhH,KAA8OgH,GAAA,sBAAAV,EAAA,MAA9OtG,KAA8OgH,GAAA,iBAAAV,EAAA,KAA6FK,OAAOE,KAAA,gEAAAC,OAAA,SAAAC,IAAA,cAAlV/G,KAA6bgH,GAAA,4CCEje,IAcAC,EAdyBC,EAAQ,OAcjCC,CACEhJ,EACAgI,GATF,EAVA,SAAAiB,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/83.385a5d30576a383b562e.js","sourcesContent":["<template>\r\n    <div class=\"webglGeometryTeapot-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - the Utah Teapot<br />\r\n\t\t\tfrom <a href=\"https://www.udacity.com/course/interactive-3d-graphics--cs291\" target=\"_blank\" rel=\"noopener\">Udacity Interactive 3D Graphics</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { TeapotBufferGeometry } from '@/components/jsm/geometries/TeapotBufferGeometry.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tcameraControls: null,\r\n\t\t\teffectController: null,\r\n\t\t\tteapotSize: 400,\r\n            ambientLight: null,\r\n            light: null,\r\n\t\t\ttess: - 1,\t// force initialization\r\n\t\t\tbBottom: null,\r\n\t\t\tbLid: null,\r\n\t\t\tbBody: null,\r\n\t\t\tbFitLid: null,\r\n\t\t\tbNonBlinn: null,\r\n\t\t\tshading: null,\r\n            wireMaterial: null,\r\n            flatMaterial: null,\r\n            gouraudMaterial: null,\r\n            phongMaterial: null,\r\n            texturedMaterial: null,\r\n            reflectiveMaterial: null,\r\n            teapot: null,\r\n            textureCube: null,\r\n\t\t\t// allocate these just once\r\n\t\t\tdiffuseColor: null,\r\n            specularColor: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.diffuseColor = new this.$THREE.Color()\r\n        this.specularColor = new this.$THREE.Color()\r\n        this.init()\r\n        this.render()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.destroy()\r\n    },\r\n    methods: {\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('webglGeometryTeapot-container')[0].appendChild(container)\r\n            var canvasWidth = this.$webglInnerWidth\r\n            var canvasHeight = window.innerHeight\r\n            // CAMERA\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 80000)\r\n            this.camera.position.set(- 600, 550, 1300)\r\n            // LIGHTS\r\n            this.ambientLight = new this.$THREE.AmbientLight(0x333333)\t// 0.2\r\n            this.light = new this.$THREE.DirectionalLight(0xFFFFFF, 1.0)\r\n            // direction is set in GUI\r\n            // RENDERER\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true })\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(canvasWidth, canvasHeight)\r\n            this.renderer.outputEncoding = this.$THREE.sRGBEncoding\r\n            container.appendChild(this.renderer.domElement)\r\n            // EVENTS\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            // CONTROLS\r\n            this.cameraControls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.cameraControls.addEventListener('change', this.render)\r\n            // TEXTURE MAP\r\n            var textureMap = new this.$THREE.TextureLoader().load('static/textures/uv_grid_opengl.jpg')\r\n            textureMap.wrapS = textureMap.wrapT = this.$THREE.RepeatWrapping\r\n            textureMap.anisotropy = 16\r\n            textureMap.encoding = this.$THREE.sRGBEncoding\r\n            // REFLECTION MAP\r\n            var path = \"static/textures/cube/pisa/\"\r\n            var urls = [\r\n                path + \"px.png\", path + \"nx.png\",\r\n                path + \"py.png\", path + \"ny.png\",\r\n                path + \"pz.png\", path + \"nz.png\"\r\n            ]\r\n            this.textureCube = new this.$THREE.CubeTextureLoader().load(urls)\r\n            this.textureCube.encoding = this.$THREE.sRGBEncoding\r\n            // MATERIALS\r\n            var materialColor = new this.$THREE.Color()\r\n            materialColor.setRGB(1.0, 1.0, 1.0)\r\n            this.wireMaterial = new this.$THREE.MeshBasicMaterial({ color: 0xFFFFFF, wireframe: true })\r\n            this.flatMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, specular: 0x000000, flatShading: true, side: this.$THREE.DoubleSide })\r\n            this.gouraudMaterial = new this.$THREE.MeshLambertMaterial({ color: materialColor, side: this.$THREE.DoubleSide })\r\n            this.phongMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, side: this.$THREE.DoubleSide })\r\n            this.texturedMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, map: textureMap, side: this.$THREE.DoubleSide })\r\n            this.reflectiveMaterial = new this.$THREE.MeshPhongMaterial({ color: materialColor, envMap: this.textureCube, side: this.$THREE.DoubleSide })\r\n            // scene itself\r\n            this.scene = new this.$THREE.Scene()\r\n            this.scene.background = new this.$THREE.Color(0xAAAAAA)\r\n            this.scene.add(this.ambientLight)\r\n            this.scene.add(this.light)\r\n            // GUI\r\n            this.setupGui()\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        setupGui() {\r\n            this.effectController = {\r\n                shininess: 40.0,\r\n                ka: 0.17,\r\n                kd: 0.51,\r\n                ks: 0.2,\r\n                metallic: true,\r\n                hue:\t0.121,\r\n                saturation: 0.73,\r\n                lightness: 0.66,\r\n                lhue:\t0.04,\r\n                lsaturation: 0.01,\t// non-zero so that fractions will be shown\r\n                llightness: 1.0,\r\n                // bizarrely, if you initialize these with negative numbers, the sliders\r\n                // will not show any decimal places.\r\n                lx: 0.32,\r\n                ly: 0.39,\r\n                lz: 0.7,\r\n                newTess: 15,\r\n                bottom: true,\r\n                lid: true,\r\n                body: true,\r\n                fitLid: false,\r\n                nonblinn: false,\r\n                newShading: \"glossy\"\r\n            }\r\n            var h\r\n            this.gui = new GUI()\r\n            // material (attributes)\r\n            h = this.gui.addFolder(\"Material control\")\r\n            h.add(this.effectController, \"shininess\", 1.0, 400.0, 1.0).name(\"shininess\").onChange(this.render)\r\n            h.add(this.effectController, \"kd\", 0.0, 1.0, 0.025).name(\"diffuse strength\").onChange(this.render)\r\n            h.add(this.effectController, \"ks\", 0.0, 1.0, 0.025).name(\"specular strength\").onChange(this.render)\r\n            h.add(this.effectController, \"metallic\").onChange(this.render)\r\n            // material (color)\r\n            h = this.gui.addFolder(\"Material color\")\r\n            h.add(this.effectController, \"hue\", 0.0, 1.0, 0.025).name(\"hue\").onChange(this.render)\r\n            h.add(this.effectController, \"saturation\", 0.0, 1.0, 0.025).name(\"saturation\").onChange(this.render)\r\n            h.add(this.effectController, \"lightness\", 0.0, 1.0, 0.025).name(\"lightness\").onChange(this.render)\r\n            // light (point)\r\n            h = this.gui.addFolder(\"Lighting\")\r\n            h.add(this.effectController, \"lhue\", 0.0, 1.0, 0.025).name(\"hue\").onChange(this.render)\r\n            h.add(this.effectController, \"lsaturation\", 0.0, 1.0, 0.025).name(\"saturation\").onChange(this.render)\r\n            h.add(this.effectController, \"llightness\", 0.0, 1.0, 0.025).name(\"lightness\").onChange(this.render)\r\n            h.add(this.effectController, \"ka\", 0.0, 1.0, 0.025).name(\"ambient\").onChange(this.render)\r\n            // light (directional)\r\n            h = this.gui.addFolder(\"Light direction\")\r\n            h.add(this.effectController, \"lx\", - 1.0, 1.0, 0.025).name(\"x\").onChange(this.render)\r\n            h.add(this.effectController, \"ly\", - 1.0, 1.0, 0.025).name(\"y\").onChange(this.render)\r\n            h.add(this.effectController, \"lz\", - 1.0, 1.0, 0.025).name(\"z\").onChange(this.render)\r\n            h = this.gui.addFolder(\"Tessellation control\")\r\n            h.add(this.effectController, \"newTess\", [ 2, 3, 4, 5, 6, 8, 10, 15, 20, 30, 40, 50 ]).name(\"Tessellation Level\").onChange(this.render)\r\n            h.add(this.effectController, \"lid\").name(\"display lid\").onChange(this.render)\r\n            h.add(this.effectController, \"body\").name(\"display body\").onChange(this.render)\r\n            h.add(this.effectController, \"bottom\").name(\"display bottom\").onChange(this.render)\r\n            h.add(this.effectController, \"fitLid\").name(\"snug lid\").onChange(this.render)\r\n            h.add(this.effectController, \"nonblinn\").name(\"original scale\").onChange(this.render)\r\n            // shading\r\n            this.gui.add(this.effectController, \"newShading\", [ \"wireframe\", \"flat\", \"smooth\", \"glossy\", \"textured\", \"reflective\" ]).name(\"Shading\").onChange(this.render)\r\n        },\r\n        render() {\r\n            if (this.effectController.newTess !== this.tess ||\r\n                this.effectController.bottom !== this.bBottom ||\r\n                this.effectController.lid !== this.bLid ||\r\n                this.effectController.body !== this.bBody ||\r\n                this.effectController.fitLid !== this.bFitLid ||\r\n                this.effectController.nonblinn !== this.bNonBlinn ||\r\n                this.effectController.newShading !== this.shading) {\r\n                this.tess = this.effectController.newTess\r\n                this.bBottom = this.effectController.bottom\r\n                this.bLid = this.effectController.lid\r\n                this.bBody = this.effectController.body\r\n                this.bFitLid = this.effectController.fitLid\r\n                this.bNonBlinn = this.effectController.nonblinn\r\n                this.shading = this.effectController.newShading\r\n                this.createNewTeapot()\r\n            }\r\n            // We're a bit lazy here. We could check to see if any material attributes changed and update\r\n            // only if they have. But, these calls are cheap enough and this is just a demo.\r\n            this.phongMaterial.shininess = this.effectController.shininess\r\n            this.texturedMaterial.shininess = this.effectController.shininess\r\n            this.diffuseColor.setHSL(this.effectController.hue, this.effectController.saturation, this.effectController.lightness)\r\n            if (this.effectController.metallic) {\r\n                // make colors match to give a more metallic look\r\n                this.specularColor.copy(this.diffuseColor)\r\n            } else {\r\n                // more of a plastic look\r\n                this.specularColor.setRGB(1, 1, 1)\r\n            }\r\n            this.diffuseColor.multiplyScalar(this.effectController.kd)\r\n            this.flatMaterial.color.copy(this.diffuseColor)\r\n            this.gouraudMaterial.color.copy(this.diffuseColor)\r\n            this.phongMaterial.color.copy(this.diffuseColor)\r\n            this.texturedMaterial.color.copy(this.diffuseColor)\r\n            this.specularColor.multiplyScalar(this.effectController.ks)\r\n            this.phongMaterial.specular.copy(this.specularColor)\r\n            this.texturedMaterial.specular.copy(this.specularColor)\r\n            // Ambient's actually controlled by the light for this demo\r\n            this.ambientLight.color.setHSL(this.effectController.hue, this.effectController.saturation, this.effectController.lightness * this.effectController.ka)\r\n            this.light.position.set(this.effectController.lx, this.effectController.ly, this.effectController.lz)\r\n            this.light.color.setHSL(this.effectController.lhue, this.effectController.lsaturation, this.effectController.llightness)\r\n            // skybox is rendered separately, so that it is always behind the teapot.\r\n            if (this.shading === \"reflective\") {\r\n                this.scene.background = this.textureCube\r\n            } else {\r\n                this.scene.background = null\r\n            }\r\n            this.renderer.render(this.scene, this.camera)\r\n        },\r\n        createNewTeapot() {\r\n            if (this.teapot !== null) {\r\n                this.teapot.geometry.dispose()\r\n                this.scene.remove(this.teapot)\r\n            }\r\n            var teapotGeometry = new TeapotBufferGeometry(this.teapotSize,\r\n                this.tess,\r\n                this.effectController.bottom,\r\n                this.effectController.lid,\r\n                this.effectController.body,\r\n                this.effectController.fitLid,\r\n                ! this.effectController.nonblinn)\r\n            this.teapot = new this.$THREE.Mesh(\r\n                teapotGeometry,\r\n                this.shading === \"wireframe\" ? this.wireMaterial : (\r\n                    this.shading === \"flat\" ? this.flatMaterial : (\r\n                        this.shading === \"smooth\" ? this.gouraudMaterial : (\r\n                            this.shading === \"glossy\" ? this.phongMaterial : (\r\n                                this.shading === \"textured\" ? this.texturedMaterial : this.reflectiveMaterial)))))\t// if no match, pick Phong\r\n            this.scene.add(this.teapot)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglGeometryTeapot-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/geometries/webglGeometryTeapot.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglGeometryTeapot-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - the Utah Teapot\"),_c('br'),_vm._v(\"\\n\\t\\t\\tfrom \"),_c('a',{attrs:{\"href\":\"https://www.udacity.com/course/interactive-3d-graphics--cs291\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Udacity Interactive 3D Graphics\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e715f5ae\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/geometries/webglGeometryTeapot.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e715f5ae\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglGeometryTeapot.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryTeapot.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglGeometryTeapot.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e715f5ae\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglGeometryTeapot.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e715f5ae\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/geometries/webglGeometryTeapot.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}