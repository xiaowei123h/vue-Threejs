webpackJsonp([84],{bA2g:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r={data:function(){return{vertexshader:null,fragmentshader:null,renderer:null,scene:null,camera:null,stats:null,particleSystem:null,uniforms:null,geometry:null,particles:1e5}},mounted:function(){this.vertexshader="\n            attribute float size;\n\t\t\tvarying vec3 vColor;\n\t\t\tvoid main() {\n\t\t\t\tvColor = color;\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\tgl_PointSize = size * ( 300.0 / -mvPosition.z );\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n            }",this.fragmentshader="\n            uniform sampler2D pointTexture;\n\t\t\tvarying vec3 vColor;\n\t\t\tvoid main() {\n\t\t\t\tgl_FragColor = vec4( vColor, 1.0 );\n\t\t\t\tgl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n            }",this.init(),this.animate()},methods:{init:function(){this.camera=new this.$THREE.PerspectiveCamera(40,this.$webglInnerWidth/window.innerHeight,1,1e4),this.camera.position.z=300,this.scene=new this.$THREE.Scene,this.uniforms={pointTexture:{value:(new this.$THREE.TextureLoader).load("static/textures/sprites/spark1.png")}};var t=new this.$THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:this.vertexshader,fragmentShader:this.fragmentshader,blending:this.$THREE.AdditiveBlending,depthTest:!1,transparent:!0,vertexColors:!0});this.geometry=new this.$THREE.BufferGeometry;for(var e=[],i=[],r=[],s=new this.$THREE.Color,n=0;n<this.particles;n++)e.push(200*(2*Math.random()-1)),e.push(200*(2*Math.random()-1)),e.push(200*(2*Math.random()-1)),s.setHSL(n/this.particles,1,.5),i.push(s.r,s.g,s.b),r.push(20);this.geometry.setAttribute("position",new this.$THREE.Float32BufferAttribute(e,3)),this.geometry.setAttribute("color",new this.$THREE.Float32BufferAttribute(i,3)),this.geometry.setAttribute("size",new this.$THREE.Float32BufferAttribute(r,1).setUsage(this.$THREE.DynamicDrawUsage)),this.particleSystem=new this.$THREE.Points(this.geometry,t),this.scene.add(this.particleSystem),this.renderer=new this.$THREE.WebGLRenderer,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight);var a=document.getElementById("container");a.appendChild(this.renderer.domElement),this.stats=new this.$Stats,this.stats.dom.style.left="280px",a.appendChild(this.stats.dom),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.$onWindowResize(this.camera,this.renderer)},animate:function(){requestAnimationFrame(this.animate),this.render(),this.stats.update()},render:function(){var t=.005*Date.now();this.particleSystem.rotation.z=.01*t;for(var e=this.geometry.attributes.size.array,i=0;i<this.particles;i++)e[i]=10*(1+Math.sin(.1*i+t));this.geometry.attributes.size.needsUpdate=!0,this.renderer.render(this.scene,this.camera)}}},s={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"webglBuffergeometryCustomAttributesParticles-container"},[e("div",{attrs:{id:"container"}}),this._v(" "),e("div",{attrs:{id:"info"}},[e("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" webgl - buffergeometry custom attributes - particles")])])}]};var n=i("VU/8")(r,s,!1,function(t){i("wS7s")},"data-v-e50ce31e",null);e.default=n.exports},wS7s:function(t,e){}});
//# sourceMappingURL=84.46ee60f3343245b6dbfe.js.map