{"version":3,"sources":["webpack:///./src/components/jsm/exporters/PLYExporter.js","webpack:///src/views/misc/miscExporterPly.vue","webpack:///./src/views/misc/miscExporterPly.vue?f488","webpack:///./src/views/misc/miscExporterPly.vue"],"names":["PLYExporter","prototype","constructor","parse","object","onDone","options","traverseMeshes","cb","traverse","child","isMesh","mesh","geometry","isGeometry","geomToBufferGeom","get","isBufferGeometry","undefined","getAttribute","_typeof","console","warn","excludeAttributes","Object","assign","binary","littleEndian","WeakMap","includeNormals","includeColors","includeUVs","vertexCount","faceCount","bufferGeometry","BufferGeometry","setFromObject","set","vertices","normals","uvs","colors","indices","getIndex","count","includeIndices","indexOf","Math","floor","error","header","vertex","Vector3","normalMatrixWorld","Matrix3","result","headerBin","TextEncoder","encode","vertexListLength","faceListLength","output","DataView","ArrayBuffer","length","Uint8Array","buffer","vOffset","fOffset","writtenVertices","getNormalMatrix","matrixWorld","i","l","x","getX","y","getY","z","getZ","applyMatrix4","setFloat32","applyMatrix3","normalize","setUint8","setUint32","vertexList","faceList","line","requestAnimationFrame","miscExporterPly","data","scene","camera","renderer","exporter","link","mounted","this","document","createElement","style","display","getElementsByClassName","appendChild","init","animate","methods","$THREE","PerspectiveCamera","$webglInnerWidth","window","innerHeight","position","Scene","background","Color","fog","Fog","hemiLight","HemisphereLight","add","directionalLight","DirectionalLight","castShadow","shadow","top","bottom","left","right","ground","Mesh","PlaneBufferGeometry","MeshPhongMaterial","color","depthWrite","rotation","PI","receiveShadow","grid","GridHelper","material","opacity","transparent","BoxBufferGeometry","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","domElement","controls","OrbitControls","target","update","addEventListener","onWindowResize","getElementById","exportASCII","exportBinaryBigEndian","exportBinaryLittleEndian","$onWindowResize","render","_this","saveString","_this2","saveArrayBuffer","_this3","save","blob","filename","href","URL","createObjectURL","download","click","text","Blob","type","misc_miscExporterPly","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/85.dcdf522195449a60db71.js","sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tMatrix3,\r\n\tVector3\r\n} from \"@/components/build/three.module.js\";\r\n\r\n/**\r\n * https://github.com/gkjohnson/ply-exporter-js\r\n *\r\n * Usage:\r\n *  var exporter = new PLYExporter();\r\n *\r\n *  // second argument is a list of options\r\n *  exporter.parse(mesh, data => console.log(data), { binary: true, excludeAttributes: [ 'color' ], littleEndian: true });\r\n *\r\n * Format Definition:\r\n * http://paulbourke.net/dataformats/ply/\r\n */\r\n\r\nvar PLYExporter = function () {};\r\n\r\nPLYExporter.prototype = {\r\n\r\n\tconstructor: PLYExporter,\r\n\r\n\tparse: function ( object, onDone, options ) {\r\n\r\n\t\tif ( onDone && typeof onDone === 'object' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.PLYExporter: The options parameter is now the third argument to the \"parse\" function. See the documentation for the new API.' );\r\n\t\t\toptions = onDone;\r\n\t\t\tonDone = undefined;\r\n\r\n\t\t}\r\n\r\n\t\t// Iterate over the valid meshes in the object\r\n\t\tfunction traverseMeshes( cb ) {\r\n\r\n\t\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\t\tif ( child.isMesh === true ) {\r\n\r\n\t\t\t\t\tvar mesh = child;\r\n\t\t\t\t\tvar geometry = mesh.geometry;\r\n\r\n\t\t\t\t\tif ( geometry.isGeometry === true ) {\r\n\r\n\t\t\t\t\t\tgeometry = geomToBufferGeom.get( geometry );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometry.isBufferGeometry === true ) {\r\n\r\n\t\t\t\t\t\tif ( geometry.getAttribute( 'position' ) !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tcb( mesh, geometry );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\t// Default options\r\n\t\tvar defaultOptions = {\r\n\t\t\tbinary: false,\r\n\t\t\texcludeAttributes: [], // normal, uv, color, index\r\n\t\t\tlittleEndian: false\r\n\t\t};\r\n\r\n\t\toptions = Object.assign( defaultOptions, options );\r\n\r\n\t\tvar excludeAttributes = options.excludeAttributes;\r\n\t\tvar geomToBufferGeom = new WeakMap();\r\n\t\tvar includeNormals = false;\r\n\t\tvar includeColors = false;\r\n\t\tvar includeUVs = false;\r\n\r\n\t\t// count the vertices, check which properties are used,\r\n\t\t// and cache the BufferGeometry\r\n\t\tvar vertexCount = 0;\r\n\t\tvar faceCount = 0;\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isMesh === true ) {\r\n\r\n\t\t\t\tvar mesh = child;\r\n\t\t\t\tvar geometry = mesh.geometry;\r\n\r\n\t\t\t\tif ( geometry.isGeometry === true ) {\r\n\r\n\t\t\t\t\tvar bufferGeometry = geomToBufferGeom.get( geometry ) || new BufferGeometry().setFromObject( mesh );\r\n\t\t\t\t\tgeomToBufferGeom.set( geometry, bufferGeometry );\r\n\t\t\t\t\tgeometry = bufferGeometry;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.isBufferGeometry === true ) {\r\n\r\n\t\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\r\n\t\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\r\n\t\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\r\n\t\t\t\t\tvar colors = geometry.getAttribute( 'color' );\r\n\t\t\t\t\tvar indices = geometry.getIndex();\r\n\r\n\t\t\t\t\tif ( vertices === undefined ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvertexCount += vertices.count;\r\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\r\n\r\n\t\t\t\t\tif ( normals !== undefined ) includeNormals = true;\r\n\r\n\t\t\t\t\tif ( uvs !== undefined ) includeUVs = true;\r\n\r\n\t\t\t\t\tif ( colors !== undefined ) includeColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tvar includeIndices = excludeAttributes.indexOf( 'index' ) === - 1;\r\n\t\tincludeNormals = includeNormals && excludeAttributes.indexOf( 'normal' ) === - 1;\r\n\t\tincludeColors = includeColors && excludeAttributes.indexOf( 'color' ) === - 1;\r\n\t\tincludeUVs = includeUVs && excludeAttributes.indexOf( 'uv' ) === - 1;\r\n\r\n\r\n\t\tif ( includeIndices && faceCount !== Math.floor( faceCount ) ) {\r\n\r\n\t\t\t// point cloud meshes will not have an index array and may not have a\r\n\t\t\t// number of vertices that is divisble by 3 (and therefore representable\r\n\t\t\t// as triangles)\r\n\t\t\tconsole.error(\r\n\r\n\t\t\t\t'PLYExporter: Failed to generate a valid PLY file with triangle indices because the ' +\r\n\t\t\t\t'number of indices is not divisible by 3.'\r\n\r\n\t\t\t);\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar indexByteCount = 4;\r\n\r\n\t\tvar header =\r\n\t\t\t'ply\\n' +\r\n\t\t\t`format ${ options.binary ? ( options.littleEndian ? 'binary_little_endian' : 'binary_big_endian' ) : 'ascii' } 1.0\\n` +\r\n\t\t\t`element vertex ${vertexCount}\\n` +\r\n\r\n\t\t\t// position\r\n\t\t\t'property float x\\n' +\r\n\t\t\t'property float y\\n' +\r\n\t\t\t'property float z\\n';\r\n\r\n\t\tif ( includeNormals === true ) {\r\n\r\n\t\t\t// normal\r\n\t\t\theader +=\r\n\t\t\t\t'property float nx\\n' +\r\n\t\t\t\t'property float ny\\n' +\r\n\t\t\t\t'property float nz\\n';\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeUVs === true ) {\r\n\r\n\t\t\t// uvs\r\n\t\t\theader +=\r\n\t\t\t\t'property float s\\n' +\r\n\t\t\t\t'property float t\\n';\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeColors === true ) {\r\n\r\n\t\t\t// colors\r\n\t\t\theader +=\r\n\t\t\t\t'property uchar red\\n' +\r\n\t\t\t\t'property uchar green\\n' +\r\n\t\t\t\t'property uchar blue\\n';\r\n\r\n\t\t}\r\n\r\n\t\tif ( includeIndices === true ) {\r\n\r\n\t\t\t// faces\r\n\t\t\theader +=\r\n\t\t\t\t`element face ${faceCount}\\n` +\r\n\t\t\t\t`property list uchar int vertex_index\\n`;\r\n\r\n\t\t}\r\n\r\n\t\theader += 'end_header\\n';\r\n\r\n\r\n\t\t// Generate attribute data\r\n\t\tvar vertex = new Vector3();\r\n\t\tvar normalMatrixWorld = new Matrix3();\r\n\t\tvar result = null;\r\n\r\n\t\tif ( options.binary === true ) {\r\n\r\n\t\t\t// Binary File Generation\r\n\t\t\tvar headerBin = new TextEncoder().encode( header );\r\n\r\n\t\t\t// 3 position values at 4 bytes\r\n\t\t\t// 3 normal values at 4 bytes\r\n\t\t\t// 3 color channels with 1 byte\r\n\t\t\t// 2 uv values at 4 bytes\r\n\t\t\tvar vertexListLength = vertexCount * ( 4 * 3 + ( includeNormals ? 4 * 3 : 0 ) + ( includeColors ? 3 : 0 ) + ( includeUVs ? 4 * 2 : 0 ) );\r\n\r\n\t\t\t// 1 byte shape desciptor\r\n\t\t\t// 3 vertex indices at ${indexByteCount} bytes\r\n\t\t\tvar faceListLength = includeIndices ? faceCount * ( indexByteCount * 3 + 1 ) : 0;\r\n\t\t\tvar output = new DataView( new ArrayBuffer( headerBin.length + vertexListLength + faceListLength ) );\r\n\t\t\tnew Uint8Array( output.buffer ).set( headerBin, 0 );\r\n\r\n\r\n\t\t\tvar vOffset = headerBin.length;\r\n\t\t\tvar fOffset = headerBin.length + vertexListLength;\r\n\t\t\tvar writtenVertices = 0;\r\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\r\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\r\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\r\n\t\t\t\tvar colors = geometry.getAttribute( 'color' );\r\n\t\t\t\tvar indices = geometry.getIndex();\r\n\r\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\r\n\r\n\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvertex.x = vertices.getX( i );\r\n\t\t\t\t\tvertex.y = vertices.getY( i );\r\n\t\t\t\t\tvertex.z = vertices.getZ( i );\r\n\r\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\r\n\r\n\r\n\t\t\t\t\t// Position information\r\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.x, options.littleEndian );\r\n\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.y, options.littleEndian );\r\n\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\toutput.setFloat32( vOffset, vertex.z, options.littleEndian );\r\n\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t// Normal information\r\n\t\t\t\t\tif ( includeNormals === true ) {\r\n\r\n\t\t\t\t\t\tif ( normals != null ) {\r\n\r\n\t\t\t\t\t\t\tvertex.x = normals.getX( i );\r\n\t\t\t\t\t\t\tvertex.y = normals.getY( i );\r\n\t\t\t\t\t\t\tvertex.z = normals.getZ( i );\r\n\r\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld ).normalize();\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.x, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.y, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, vertex.z, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// UV information\r\n\t\t\t\t\tif ( includeUVs === true ) {\r\n\r\n\t\t\t\t\t\tif ( uvs != null ) {\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getX( i ), options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, uvs.getY( i ), options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t} else if ( includeUVs !== false ) {\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t\toutput.setFloat32( vOffset, 0, options.littleEndian );\r\n\t\t\t\t\t\t\tvOffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Color information\r\n\t\t\t\t\tif ( includeColors === true ) {\r\n\r\n\t\t\t\t\t\tif ( colors != null ) {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getX( i ) * 255 ) );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getY( i ) * 255 ) );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, Math.floor( colors.getZ( i ) * 255 ) );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( vOffset, 255 );\r\n\t\t\t\t\t\t\tvOffset += 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( includeIndices === true ) {\r\n\r\n\t\t\t\t\t// Create the face list\r\n\r\n\t\t\t\t\tif ( indices !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\r\n\t\t\t\t\t\t\tfOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 0 ) + writtenVertices, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 1 ) + writtenVertices, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, indices.getX( i + 2 ) + writtenVertices, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\toutput.setUint8( fOffset, 3 );\r\n\t\t\t\t\t\t\tfOffset += 1;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i + 1, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t\toutput.setUint32( fOffset, writtenVertices + i + 2, options.littleEndian );\r\n\t\t\t\t\t\t\tfOffset += indexByteCount;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Save the amount of verts we've already written so we can offset\r\n\t\t\t\t// the face index on the next mesh\r\n\t\t\t\twrittenVertices += vertices.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tresult = output.buffer;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ascii File Generation\r\n\t\t\t// count the number of vertices\r\n\t\t\tvar writtenVertices = 0;\r\n\t\t\tvar vertexList = '';\r\n\t\t\tvar faceList = '';\r\n\r\n\t\t\ttraverseMeshes( function ( mesh, geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.getAttribute( 'position' );\r\n\t\t\t\tvar normals = geometry.getAttribute( 'normal' );\r\n\t\t\t\tvar uvs = geometry.getAttribute( 'uv' );\r\n\t\t\t\tvar colors = geometry.getAttribute( 'color' );\r\n\t\t\t\tvar indices = geometry.getIndex();\r\n\r\n\t\t\t\tnormalMatrixWorld.getNormalMatrix( mesh.matrixWorld );\r\n\r\n\t\t\t\t// form each line\r\n\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvertex.x = vertices.getX( i );\r\n\t\t\t\t\tvertex.y = vertices.getY( i );\r\n\t\t\t\t\tvertex.z = vertices.getZ( i );\r\n\r\n\t\t\t\t\tvertex.applyMatrix4( mesh.matrixWorld );\r\n\r\n\r\n\t\t\t\t\t// Position information\r\n\t\t\t\t\tvar line =\r\n\t\t\t\t\t\tvertex.x + ' ' +\r\n\t\t\t\t\t\tvertex.y + ' ' +\r\n\t\t\t\t\t\tvertex.z;\r\n\r\n\t\t\t\t\t// Normal information\r\n\t\t\t\t\tif ( includeNormals === true ) {\r\n\r\n\t\t\t\t\t\tif ( normals != null ) {\r\n\r\n\t\t\t\t\t\t\tvertex.x = normals.getX( i );\r\n\t\t\t\t\t\t\tvertex.y = normals.getY( i );\r\n\t\t\t\t\t\t\tvertex.z = normals.getZ( i );\r\n\r\n\t\t\t\t\t\t\tvertex.applyMatrix3( normalMatrixWorld ).normalize();\r\n\r\n\t\t\t\t\t\t\tline += ' ' +\r\n\t\t\t\t\t\t\t\tvertex.x + ' ' +\r\n\t\t\t\t\t\t\t\tvertex.y + ' ' +\r\n\t\t\t\t\t\t\t\tvertex.z;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tline += ' 0 0 0';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// UV information\r\n\t\t\t\t\tif ( includeUVs === true ) {\r\n\r\n\t\t\t\t\t\tif ( uvs != null ) {\r\n\r\n\t\t\t\t\t\t\tline += ' ' +\r\n\t\t\t\t\t\t\t\tuvs.getX( i ) + ' ' +\r\n\t\t\t\t\t\t\t\tuvs.getY( i );\r\n\r\n\t\t\t\t\t\t} else if ( includeUVs !== false ) {\r\n\r\n\t\t\t\t\t\t\tline += ' 0 0';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Color information\r\n\t\t\t\t\tif ( includeColors === true ) {\r\n\r\n\t\t\t\t\t\tif ( colors != null ) {\r\n\r\n\t\t\t\t\t\t\tline += ' ' +\r\n\t\t\t\t\t\t\t\tMath.floor( colors.getX( i ) * 255 ) + ' ' +\r\n\t\t\t\t\t\t\t\tMath.floor( colors.getY( i ) * 255 ) + ' ' +\r\n\t\t\t\t\t\t\t\tMath.floor( colors.getZ( i ) * 255 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tline += ' 255 255 255';\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvertexList += line + '\\n';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the face list\r\n\t\t\t\tif ( includeIndices === true ) {\r\n\r\n\t\t\t\t\tif ( indices !== null ) {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = indices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tfaceList += `3 ${ indices.getX( i + 0 ) + writtenVertices }`;\r\n\t\t\t\t\t\t\tfaceList += ` ${ indices.getX( i + 1 ) + writtenVertices }`;\r\n\t\t\t\t\t\t\tfaceList += ` ${ indices.getX( i + 2 ) + writtenVertices }\\n`;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = vertices.count; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tfaceList += `3 ${ writtenVertices + i } ${ writtenVertices + i + 1 } ${ writtenVertices + i + 2 }\\n`;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfaceCount += indices ? indices.count / 3 : vertices.count / 3;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twrittenVertices += vertices.count;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tresult = `${ header }${vertexList}${ includeIndices ? `${faceList}\\n` : '\\n' }`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof onDone === 'function' ) requestAnimationFrame( () => onDone( result ) );\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { PLYExporter };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/jsm/exporters/PLYExporter.js","<template>\r\n    <div class=\"miscExporterPly-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> webgl - exporter - ply<br/><br/>\r\n\t\t\t<button id=\"exportASCII\">export ASCII</button> <button id=\"exportBinaryBigEndian\">export binary (Big Endian)</button> <button id=\"exportBinaryLittleEndian\">export binary (Little Endian)</button>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nimport { PLYExporter } from '@/components/jsm/exporters/PLYExporter.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            scene: null,\r\n            camera: null,\r\n            renderer: null,\r\n            exporter: null,\r\n            mesh: null,\r\n            link: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.link = document.createElement('a');\r\n        this.link.style.display = 'none';\r\n        document.getElementsByClassName('miscExporterPly-container')[0].appendChild(this.link);\r\n        this.init();\r\n\t\tthis.animate()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.camera = new this.$THREE.PerspectiveCamera(45, this.$webglInnerWidth / window.innerHeight, 1, 1000);\r\n            this.camera.position.set(200, 100, 200);\r\n            this.scene = new this.$THREE.Scene();\r\n            this.scene.background = new this.$THREE.Color(0xa0a0a0);\r\n            this.scene.fog = new this.$THREE.Fog(0xa0a0a0, 200, 1000);\r\n            this.exporter = new PLYExporter();\r\n            //\r\n            var hemiLight = new this.$THREE.HemisphereLight(0xffffff, 0x444444);\r\n            hemiLight.position.set(0, 200, 0);\r\n            this.scene.add(hemiLight);\r\n            var directionalLight = new this.$THREE.DirectionalLight(0xffffff);\r\n            directionalLight.position.set(0, 200, 100);\r\n            directionalLight.castShadow = true;\r\n            directionalLight.shadow.camera.top = 180;\r\n            directionalLight.shadow.camera.bottom = - 100;\r\n            directionalLight.shadow.camera.left = - 120;\r\n            directionalLight.shadow.camera.right = 120;\r\n            this.scene.add(directionalLight);\r\n            // ground\r\n            var ground = new this.$THREE.Mesh(new this.$THREE.PlaneBufferGeometry(2000, 2000), new this.$THREE.MeshPhongMaterial({ color: 0x999999, depthWrite: false }));\r\n            ground.rotation.x = - Math.PI / 2;\r\n            ground.receiveShadow = true;\r\n            this.scene.add(ground);\r\n            var grid = new this.$THREE.GridHelper(2000, 20, 0x000000, 0x000000);\r\n            grid.material.opacity = 0.2;\r\n            grid.material.transparent = true;\r\n            this.scene.add(grid);\r\n            // export mesh\r\n            var geometry = new this.$THREE.BoxBufferGeometry(50, 50, 50);\r\n            var material = new this.$THREE.MeshPhongMaterial({ color: 0x00ff00 });\r\n            this.mesh = new this.$THREE.Mesh(geometry, material);\r\n            this.mesh.castShadow = true;\r\n            this.mesh.position.y = 25;\r\n            this.scene.add(this.mesh);\r\n            //\r\n            this.renderer = new this.$THREE.WebGLRenderer({ antialias: true });\r\n            this.renderer.setPixelRatio(window.devicePixelRatio);\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight);\r\n            this.renderer.shadowMap.enabled = true;\r\n            document.getElementsByClassName('miscExporterPly-container')[0].appendChild(this.renderer.domElement);\r\n            //\r\n            var controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n            controls.target.set(0, 25, 0);\r\n            controls.update();\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false);\r\n            var buttonExportASCII = document.getElementById('exportASCII');\r\n            buttonExportASCII.addEventListener('click', this.exportASCII);\r\n            var buttonExportBinaryBE = document.getElementById('exportBinaryBigEndian');\r\n            buttonExportBinaryBE.addEventListener('click', this.exportBinaryBigEndian);\r\n            var buttonExportBinaryLE = document.getElementById('exportBinaryLittleEndian');\r\n            buttonExportBinaryLE.addEventListener('click', this.exportBinaryLittleEndian);\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate);\r\n            this.renderer.render(this.scene, this.camera);\r\n        },\r\n        exportASCII() {\r\n            this.exporter.parse(this.mesh, (result) => {\r\n                this.saveString(result, 'box.ply');\r\n            });\r\n        },\r\n        exportBinaryBigEndian() {\r\n            this.exporter.parse(this.mesh, (result) => {\r\n                this.saveArrayBuffer(result, 'box.ply');\r\n            }, { binary: true });\r\n        },\r\n        exportBinaryLittleEndian() {\r\n            this.exporter.parse(this.mesh, (result) => {\r\n                this.saveArrayBuffer(result, 'box.ply');\r\n            }, { binary: true, littleEndian: true });\r\n        },\r\n        save(blob, filename) {\r\n            this.link.href = URL.createObjectURL(blob);\r\n            this.link.download = filename;\r\n            this.link.click();\r\n        },\r\n        saveString(text, filename) {\r\n            this.save(new Blob([ text ], { type: 'text/plain' }), filename);\r\n        },\r\n        saveArrayBuffer(buffer, filename) {\r\n            this.save(new Blob([ buffer ], { type: 'application/octet-stream' }), filename);\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.miscExporterPly-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/misc/miscExporterPly.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"miscExporterPly-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" webgl - exporter - ply\"),_c('br'),_c('br'),_vm._v(\" \"),_c('button',{attrs:{\"id\":\"exportASCII\"}},[_vm._v(\"export ASCII\")]),_vm._v(\" \"),_c('button',{attrs:{\"id\":\"exportBinaryBigEndian\"}},[_vm._v(\"export binary (Big Endian)\")]),_vm._v(\" \"),_c('button',{attrs:{\"id\":\"exportBinaryLittleEndian\"}},[_vm._v(\"export binary (Little Endian)\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e1a49e38\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/misc/miscExporterPly.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e1a49e38\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./miscExporterPly.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./miscExporterPly.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./miscExporterPly.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e1a49e38\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./miscExporterPly.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e1a49e38\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/misc/miscExporterPly.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}