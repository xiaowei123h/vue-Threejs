webpackJsonp([86],{Kk8O:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a("QEtz"),r=a("85s5"),s=a("Z9IJ"),n=a("6+nK"),o=a("Ah8h"),l={defines:{NUM_SAMPLES:7,NUM_RINGS:4,NORMAL_TEXTURE:0,DIFFUSE_TEXTURE:0,DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},uniforms:{tDepth:{value:null},tDiffuse:{value:null},tNormal:{value:null},size:{value:new n._101(512,512)},cameraNear:{value:1},cameraFar:{value:100},cameraProjectionMatrix:{value:new n._27},cameraInverseProjectionMatrix:{value:new n._27},scale:{value:1},intensity:{value:.1},bias:{value:.5},minResolution:{value:0},kernelRadius:{value:100},randomSeed:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","varying vec2 vUv;","#if DIFFUSE_TEXTURE == 1","uniform sampler2D tDiffuse;","#endif","uniform sampler2D tDepth;","#if NORMAL_TEXTURE == 1","uniform sampler2D tNormal;","#endif","uniform float cameraNear;","uniform float cameraFar;","uniform mat4 cameraProjectionMatrix;","uniform mat4 cameraInverseProjectionMatrix;","uniform float scale;","uniform float intensity;","uniform float bias;","uniform float kernelRadius;","uniform float minResolution;","uniform vec2 size;","uniform float randomSeed;","// RGBA depth","#include <packing>","vec4 getDefaultColor( const in vec2 screenPosition ) {","\t#if DIFFUSE_TEXTURE == 1","\treturn texture2D( tDiffuse, vUv );","\t#else","\treturn vec4( 1.0 );","\t#endif","}","float getDepth( const in vec2 screenPosition ) {","\t#if DEPTH_PACKING == 1","\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );","\t#else","\treturn texture2D( tDepth, screenPosition ).x;","\t#endif","}","float getViewZ( const in float depth ) {","\t#if PERSPECTIVE_CAMERA == 1","\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );","\t#else","\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );","\t#endif","}","vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {","\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];","\tvec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );","\tclipPosition *= clipW; // unprojection.","\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;","}","vec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPosition ) {","\t#if NORMAL_TEXTURE == 1","\treturn unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );","\t#else","\treturn normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );","\t#endif","}","float scaleDividedByCameraFar;","float minResolutionMultipliedByCameraFar;","float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {","\tvec3 viewDelta = sampleViewPosition - centerViewPosition;","\tfloat viewDistance = length( viewDelta );","\tfloat scaledScreenDistance = scaleDividedByCameraFar * viewDistance;","\treturn max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - bias) / (1.0 + pow2( scaledScreenDistance ) );","}","// moving costly divides into consts","const float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( NUM_SAMPLES );","const float INV_NUM_SAMPLES = 1.0 / float( NUM_SAMPLES );","float getAmbientOcclusion( const in vec3 centerViewPosition ) {","\t// precompute some variables require in getOcclusion.","\tscaleDividedByCameraFar = scale / cameraFar;","\tminResolutionMultipliedByCameraFar = minResolution * cameraFar;","\tvec3 centerViewNormal = getViewNormal( centerViewPosition, vUv );","\t// jsfiddle that shows sample pattern: https://jsfiddle.net/a16ff1p7/","\tfloat angle = rand( vUv + randomSeed ) * PI2;","\tvec2 radius = vec2( kernelRadius * INV_NUM_SAMPLES ) / size;","\tvec2 radiusStep = radius;","\tfloat occlusionSum = 0.0;","\tfloat weightSum = 0.0;","\tfor( int i = 0; i < NUM_SAMPLES; i ++ ) {","\t\tvec2 sampleUv = vUv + vec2( cos( angle ), sin( angle ) ) * radius;","\t\tradius += radiusStep;","\t\tangle += ANGLE_STEP;","\t\tfloat sampleDepth = getDepth( sampleUv );","\t\tif( sampleDepth >= ( 1.0 - EPSILON ) ) {","\t\t\tcontinue;","\t\t}","\t\tfloat sampleViewZ = getViewZ( sampleDepth );","\t\tvec3 sampleViewPosition = getViewPosition( sampleUv, sampleDepth, sampleViewZ );","\t\tocclusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );","\t\tweightSum += 1.0;","\t}","\tif( weightSum == 0.0 ) discard;","\treturn occlusionSum * ( intensity / weightSum );","}","void main() {","\tfloat centerDepth = getDepth( vUv );","\tif( centerDepth >= ( 1.0 - EPSILON ) ) {","\t\tdiscard;","\t}","\tfloat centerViewZ = getViewZ( centerDepth );","\tvec3 viewPosition = getViewPosition( vUv, centerDepth, centerViewZ );","\tfloat ambientOcclusion = getAmbientOcclusion( viewPosition );","\tgl_FragColor = getDefaultColor( vUv );","\tgl_FragColor.xyz *=  1.0 - ambientOcclusion;","}"].join("\n")},h={defines:{KERNEL_RADIUS:4,DEPTH_PACKING:1,PERSPECTIVE_CAMERA:1},uniforms:{tDiffuse:{value:null},size:{value:new n._101(512,512)},sampleUvOffsets:{value:[new n._101(0,0)]},sampleWeights:{value:[1]},tDepth:{value:null},cameraNear:{value:10},cameraFar:{value:1e3},depthCutoff:{value:10}},vertexShader:["#include <common>","uniform vec2 size;","varying vec2 vUv;","varying vec2 vInvSize;","void main() {","\tvUv = uv;","\tvInvSize = 1.0 / size;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <common>","#include <packing>","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","uniform float cameraNear;","uniform float cameraFar;","uniform float depthCutoff;","uniform vec2 sampleUvOffsets[ KERNEL_RADIUS + 1 ];","uniform float sampleWeights[ KERNEL_RADIUS + 1 ];","varying vec2 vUv;","varying vec2 vInvSize;","float getDepth( const in vec2 screenPosition ) {","\t#if DEPTH_PACKING == 1","\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );","\t#else","\treturn texture2D( tDepth, screenPosition ).x;","\t#endif","}","float getViewZ( const in float depth ) {","\t#if PERSPECTIVE_CAMERA == 1","\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );","\t#else","\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );","\t#endif","}","void main() {","\tfloat depth = getDepth( vUv );","\tif( depth >= ( 1.0 - EPSILON ) ) {","\t\tdiscard;","\t}","\tfloat centerViewZ = -getViewZ( depth );","\tbool rBreak = false, lBreak = false;","\tfloat weightSum = sampleWeights[0];","\tvec4 diffuseSum = texture2D( tDiffuse, vUv ) * weightSum;","\tfor( int i = 1; i <= KERNEL_RADIUS; i ++ ) {","\t\tfloat sampleWeight = sampleWeights[i];","\t\tvec2 sampleUvOffset = sampleUvOffsets[i] * vInvSize;","\t\tvec2 sampleUv = vUv + sampleUvOffset;","\t\tfloat viewZ = -getViewZ( getDepth( sampleUv ) );","\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) rBreak = true;","\t\tif( ! rBreak ) {","\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;","\t\t\tweightSum += sampleWeight;","\t\t}","\t\tsampleUv = vUv - sampleUvOffset;","\t\tviewZ = -getViewZ( getDepth( sampleUv ) );","\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) lBreak = true;","\t\tif( ! lBreak ) {","\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;","\t\t\tweightSum += sampleWeight;","\t\t}","\t}","\tgl_FragColor = diffuseSum / weightSum;","}"].join("\n")},u={createSampleWeights:function(e,t){for(var a=function(e,t){return Math.exp(-e*e/(t*t*2))/(Math.sqrt(2*Math.PI)*t)},i=[],r=0;r<=e;r++)i.push(a(r,t));return i},createSampleOffsets:function(e,t){for(var a=[],i=0;i<=e;i++)a.push(t.clone().multiplyScalar(i));return a},configure:function(e,t,a,i){e.defines.KERNEL_RADIUS=t,e.uniforms.sampleUvOffsets.value=u.createSampleOffsets(t,i),e.uniforms.sampleWeights.value=u.createSampleWeights(t,a),e.needsUpdate=!0}},d=a("fcDU"),m={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","#include <packing>","void main() {","\tfloat depth = 1.0 - unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );","\tgl_FragColor = vec4( vec3( depth ), opacity );","}"].join("\n")},c=function(e,t,a,i,r){(o.a.call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.supportsDepthTextureExtension=void 0!==a&&a,this.supportsNormalTexture=void 0!==i&&i,this.originalClearColor=new n.q,this.oldClearColor=new n.q,this.oldClearAlpha=1,this.params={output:0,saoBias:.5,saoIntensity:.18,saoScale:1,saoKernelRadius:100,saoMinResolution:0,saoBlur:!0,saoBlurRadius:8,saoBlurStdDev:4,saoBlurDepthCutoff:.01},this.resolution=void 0!==r?new n._101(r.x,r.y):new n._101(256,256),this.saoRenderTarget=new n._105(this.resolution.x,this.resolution.y,{minFilter:n._17,magFilter:n._17,format:n._59}),this.blurIntermediateRenderTarget=this.saoRenderTarget.clone(),this.beautyRenderTarget=this.saoRenderTarget.clone(),this.normalRenderTarget=new n._105(this.resolution.x,this.resolution.y,{minFilter:n._37,magFilter:n._37,format:n._59}),this.depthRenderTarget=this.normalRenderTarget.clone(),this.supportsDepthTextureExtension)&&((a=new n.G).type=n._100,a.minFilter=n._37,a.maxFilter=n._37,this.beautyRenderTarget.depthTexture=a,this.beautyRenderTarget.depthBuffer=!0);this.depthMaterial=new n._30,this.depthMaterial.depthPacking=n._58,this.depthMaterial.blending=n._40,this.normalMaterial=new n._32,this.normalMaterial.blending=n._40,void 0===l&&console.error("THREE.SAOPass relies on SAOShader"),this.saoMaterial=new n._76({defines:Object.assign({},l.defines),fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:n._98.clone(l.uniforms)}),this.saoMaterial.extensions.derivatives=!0,this.saoMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.saoMaterial.defines.NORMAL_TEXTURE=this.supportsNormalTexture?1:0,this.saoMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.saoMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?a:this.depthRenderTarget.texture,this.saoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.saoMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.blending=n._40,void 0===h&&console.error("THREE.SAOPass relies on DepthLimitedBlurShader"),this.vBlurMaterial=new n._76({uniforms:n._98.clone(h.uniforms),defines:Object.assign({},h.defines),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}),this.vBlurMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.vBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.vBlurMaterial.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.vBlurMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?a:this.depthRenderTarget.texture,this.vBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.vBlurMaterial.blending=n._40,this.hBlurMaterial=new n._76({uniforms:n._98.clone(h.uniforms),defines:Object.assign({},h.defines),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}),this.hBlurMaterial.defines.DEPTH_PACKING=this.supportsDepthTextureExtension?0:1,this.hBlurMaterial.defines.PERSPECTIVE_CAMERA=this.camera.isPerspectiveCamera?1:0,this.hBlurMaterial.uniforms.tDiffuse.value=this.blurIntermediateRenderTarget.texture,this.hBlurMaterial.uniforms.tDepth.value=this.supportsDepthTextureExtension?a:this.depthRenderTarget.texture,this.hBlurMaterial.uniforms.size.value.set(this.resolution.x,this.resolution.y),this.hBlurMaterial.blending=n._40,void 0===d.a&&console.error("THREE.SAOPass relies on CopyShader"),this.materialCopy=new n._76({uniforms:n._98.clone(d.a.uniforms),vertexShader:d.a.vertexShader,fragmentShader:d.a.fragmentShader,blending:n._40}),this.materialCopy.transparent=!0,this.materialCopy.depthTest=!1,this.materialCopy.depthWrite=!1,this.materialCopy.blending=n.z,this.materialCopy.blendSrc=n.K,this.materialCopy.blendDst=n._107,this.materialCopy.blendEquation=n.a,this.materialCopy.blendSrcAlpha=n.J,this.materialCopy.blendDstAlpha=n._107,this.materialCopy.blendEquationAlpha=n.a,void 0===m&&console.error("THREE.SAOPass relies on UnpackDepthRGBAShader"),this.depthCopy=new n._76({uniforms:n._98.clone(m.uniforms),vertexShader:m.vertexShader,fragmentShader:m.fragmentShader,blending:n._40}),this.fsQuad=new o.a.FullScreenQuad(null)};c.OUTPUT={Beauty:1,Default:0,SAO:2,Depth:3,Normal:4},c.prototype=Object.assign(Object.create(o.a.prototype),{constructor:c,render:function(e,t,a){if(this.renderToScreen&&(this.materialCopy.blending=n._40,this.materialCopy.uniforms.tDiffuse.value=a.texture,this.materialCopy.needsUpdate=!0,this.renderPass(e,this.materialCopy,null)),1!==this.params.output){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var i=e.autoClear;e.autoClear=!1,e.setRenderTarget(this.depthRenderTarget),e.clear(),this.saoMaterial.uniforms.bias.value=this.params.saoBias,this.saoMaterial.uniforms.intensity.value=this.params.saoIntensity,this.saoMaterial.uniforms.scale.value=this.params.saoScale,this.saoMaterial.uniforms.kernelRadius.value=this.params.saoKernelRadius,this.saoMaterial.uniforms.minResolution.value=this.params.saoMinResolution,this.saoMaterial.uniforms.cameraNear.value=this.camera.near,this.saoMaterial.uniforms.cameraFar.value=this.camera.far;var r=this.params.saoBlurDepthCutoff*(this.camera.far-this.camera.near);this.vBlurMaterial.uniforms.depthCutoff.value=r,this.hBlurMaterial.uniforms.depthCutoff.value=r,this.vBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.vBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.hBlurMaterial.uniforms.cameraNear.value=this.camera.near,this.hBlurMaterial.uniforms.cameraFar.value=this.camera.far,this.params.saoBlurRadius=Math.floor(this.params.saoBlurRadius),this.prevStdDev===this.params.saoBlurStdDev&&this.prevNumSamples===this.params.saoBlurRadius||(u.configure(this.vBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new n._101(0,1)),u.configure(this.hBlurMaterial,this.params.saoBlurRadius,this.params.saoBlurStdDev,new n._101(1,0)),this.prevStdDev=this.params.saoBlurStdDev,this.prevNumSamples=this.params.saoBlurRadius),e.setClearColor(0),e.setRenderTarget(this.beautyRenderTarget),e.clear(),e.render(this.scene,this.camera),this.supportsDepthTextureExtension||this.renderOverride(e,this.depthMaterial,this.depthRenderTarget,0,1),this.supportsNormalTexture&&this.renderOverride(e,this.normalMaterial,this.normalRenderTarget,7829503,1),this.renderPass(e,this.saoMaterial,this.saoRenderTarget,16777215,1),this.params.saoBlur&&(this.renderPass(e,this.vBlurMaterial,this.blurIntermediateRenderTarget,16777215,1),this.renderPass(e,this.hBlurMaterial,this.saoRenderTarget,16777215,1));var s=this.materialCopy;3===this.params.output?this.supportsDepthTextureExtension?(this.materialCopy.uniforms.tDiffuse.value=this.beautyRenderTarget.depthTexture,this.materialCopy.needsUpdate=!0):(this.depthCopy.uniforms.tDiffuse.value=this.depthRenderTarget.texture,this.depthCopy.needsUpdate=!0,s=this.depthCopy):4===this.params.output?(this.materialCopy.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.materialCopy.needsUpdate=!0):(this.materialCopy.uniforms.tDiffuse.value=this.saoRenderTarget.texture,this.materialCopy.needsUpdate=!0),0===this.params.output?s.blending=n.z:s.blending=n._40,this.renderPass(e,s,this.renderToScreen?null:a),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=i}},renderPass:function(e,t,a,i,r){this.originalClearColor.copy(e.getClearColor());var s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(a),e.autoClear=!1,void 0!==i&&null!==i&&(e.setClearColor(i),e.setClearAlpha(r||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)},renderOverride:function(e,t,a,i,r){this.originalClearColor.copy(e.getClearColor());var s=e.getClearAlpha(),n=e.autoClear;e.setRenderTarget(a),e.autoClear=!1,i=t.clearColor||i,r=t.clearAlpha||r,void 0!==i&&null!==i&&(e.setClearColor(i),e.setClearAlpha(r||0),e.clear()),this.scene.overrideMaterial=t,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(s)},setSize:function(e,t){this.beautyRenderTarget.setSize(e,t),this.saoRenderTarget.setSize(e,t),this.blurIntermediateRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.depthRenderTarget.setSize(e,t),this.saoMaterial.uniforms.size.value.set(e,t),this.saoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.saoMaterial.uniforms.cameraProjectionMatrix.value=this.camera.projectionMatrix,this.saoMaterial.needsUpdate=!0,this.vBlurMaterial.uniforms.size.value.set(e,t),this.vBlurMaterial.needsUpdate=!0,this.hBlurMaterial.uniforms.size.value.set(e,t),this.hBlurMaterial.needsUpdate=!0}});var p={data:function(){return{container:null,stats:null,camera:null,scene:null,renderer:null,composer:null,renderPass:null,saoPass:null,group:null,gui:null}},mounted:function(){this.init(),this.animate()},beforeDestroy:function(){this.gui.destroy()},methods:{init:function(){var e=this;this.container=document.createElement("div"),document.getElementsByClassName("webglPostprocessingSao-container")[0].appendChild(this.container);var t=this.$webglInnerWidth||1,a=window.innerHeight||1,n=window.devicePixelRatio||1;this.renderer=new this.$THREE.WebGLRenderer({antialias:!0}),this.renderer.setClearColor(0),this.renderer.setPixelRatio(n),this.renderer.setSize(t,a),document.getElementsByClassName("webglPostprocessingSao-container")[0].appendChild(this.renderer.domElement),this.camera=new this.$THREE.PerspectiveCamera(65,t/a,3,10),this.camera.position.z=7,this.scene=new this.$THREE.Scene,this.group=new this.$THREE.Object3D,this.scene.add(this.group);var o=new this.$THREE.PointLight(14548957,.8);o.position.z=70,o.position.y=-70,o.position.x=-70,this.scene.add(o);var l=new this.$THREE.PointLight(16768477,.8);l.position.z=70,l.position.x=-70,l.position.y=70,this.scene.add(l);var h=new this.$THREE.PointLight(14540287,.8);h.position.z=70,h.position.x=70,h.position.y=-70,this.scene.add(h);var u=new this.$THREE.AmbientLight(16777215,.05);this.scene.add(u);for(var d=new this.$THREE.SphereBufferGeometry(3,48,24),m=0;m<120;m++){var p=new this.$THREE.MeshStandardMaterial;p.roughness=.5*Math.random()+.25,p.metalness=0,p.color.setHSL(Math.random(),1,.3);var f=new this.$THREE.Mesh(d,p);f.position.x=4*Math.random()-2,f.position.y=4*Math.random()-2,f.position.z=4*Math.random()-2,f.rotation.x=Math.random(),f.rotation.y=Math.random(),f.rotation.z=Math.random(),f.scale.x=f.scale.y=f.scale.z=.2*Math.random()+.05,this.group.add(f)}this.stats=new this.$Stats,this.stats.dom.style.left="280px",this.container.appendChild(this.stats.dom),this.composer=new r.a(this.renderer),this.renderPass=new s.a(this.scene,this.camera),this.composer.addPass(this.renderPass),this.saoPass=new c(this.scene,this.camera,!1,!0),this.composer.addPass(this.saoPass),this.gui=new i.a,this.gui.add(this.saoPass.params,"output",{Beauty:c.OUTPUT.Beauty,"Beauty+SAO":c.OUTPUT.Default,SAO:c.OUTPUT.SAO,Depth:c.OUTPUT.Depth,Normal:c.OUTPUT.Normal}).onChange(function(t){e.saoPass.params.output=parseInt(t)}),this.gui.add(this.saoPass.params,"saoBias",-1,1),this.gui.add(this.saoPass.params,"saoIntensity",0,1),this.gui.add(this.saoPass.params,"saoScale",0,10),this.gui.add(this.saoPass.params,"saoKernelRadius",1,100),this.gui.add(this.saoPass.params,"saoMinResolution",0,1),this.gui.add(this.saoPass.params,"saoBlur"),this.gui.add(this.saoPass.params,"saoBlurRadius",0,200),this.gui.add(this.saoPass.params,"saoBlurStdDev",.5,150),this.gui.add(this.saoPass.params,"saoBlurDepthCutoff",0,.1),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){var e=window.innerWidth-291||1,t=window.innerHeight||1;this.$onWindowResize(this.camera,this.renderer),this.composer.setSize(e,t)},animate:function(){requestAnimationFrame(this.animate),this.stats.begin(),this.render(),this.stats.end()},render:function(){var e=performance.now();this.group.rotation.x=2e-4*e,this.group.rotation.y=1e-4*e,this.composer.render()}}},f={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webglPostprocessingSao-container"},[t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener noreferrer"}},[this._v("three.js")]),this._v(" - Scalable Ambient Occlusion (SAO)"),t("br"),this._v("\n\t\t\tshader by "),t("a",{attrs:{href:"http://clara.io"}},[this._v("Ben Houston")]),this._v(" / Post-processing pass by "),t("a",{attrs:{href:"http://ludobaka.github.io"}},[this._v("Ludobaka")])])])}]};var v=a("VU/8")(p,f,!1,function(e){a("Yvss")},"data-v-7311d90e",null);t.default=v.exports},Yvss:function(e,t){}});
//# sourceMappingURL=86.a3f71d3be082b9df7bdb.js.map