webpackJsonp([92],{FCzK:function(e,t){},c2ij:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={uniforms:{mRefractionRatio:{value:1.02},mFresnelBias:{value:.1},mFresnelPower:{value:2},mFresnelScale:{value:1},tCube:{value:null}},vertexShader:["uniform float mRefractionRatio;","uniform float mFresnelBias;","uniform float mFresnelScale;","uniform float mFresnelPower;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );","\tvec3 I = worldPosition.xyz - cameraPosition;","\tvReflect = reflect( I, worldNormal );","\tvRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );","\tvRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );","\tvRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );","\tvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );","\tgl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","varying vec3 vReflect;","varying vec3 vRefract[3];","varying float vReflectionFactor;","void main() {","\tvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","\tvec4 refractedColor = vec4( 1.0 );","\trefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;","\trefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;","\trefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;","\tgl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );","}"].join("\n")},n={data:function(){return{container:null,camera:null,scene:null,renderer:null,spheres:[],mouseX:0,mouseY:0,windowHalfX:null,windowHalfY:null}},mounted:function(){this.windowHalfX=this.$webglInnerWidth/2,this.windowHalfY=window.innerHeight/2,document.addEventListener("mousemove",this.onDocumentMouseMove,!1),this.init(),this.animate()},methods:{init:function(){this.container=document.createElement("div"),document.getElementsByClassName("webglMaterialsShadersFresnel-container")[0].appendChild(this.container),this.camera=new this.$THREE.PerspectiveCamera(60,this.$webglInnerWidth/window.innerHeight,1,1e5),this.camera.position.z=3200;var e="static/textures/cube/Park2/",t=[e+"posx.jpg",e+"negx.jpg",e+"posy.jpg",e+"negy.jpg",e+"posz.jpg",e+"negz.jpg"],r=(new this.$THREE.CubeTextureLoader).load(t);this.scene=new this.$THREE.Scene,this.scene.background=r;var n=new this.$THREE.SphereBufferGeometry(100,32,16),o=i,a=this.$THREE.UniformsUtils.clone(o.uniforms);a.tCube.value=r;for(var s=new this.$THREE.ShaderMaterial({uniforms:a,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader}),l=0;l<500;l++){var c=new this.$THREE.Mesh(n,s);c.position.x=1e4*Math.random()-5e3,c.position.y=1e4*Math.random()-5e3,c.position.z=1e4*Math.random()-5e3,c.scale.x=c.scale.y=c.scale.z=3*Math.random()+1,this.scene.add(c),this.spheres.push(c)}this.renderer=new this.$THREE.WebGLRenderer,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.$webglInnerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize,!1)},onWindowResize:function(){this.windowHalfX=(window.innerWidth-281)/2,this.windowHalfY=window.innerHeight/2,this.$onWindowResize(this.camera,this.renderer)},onDocumentMouseMove:function(e){this.mouseX=10*(e.clientX-this.windowHalfX),this.mouseY=10*(e.clientY-this.windowHalfY)},animate:function(){requestAnimationFrame(this.animate),this.render()},render:function(){var e=1e-4*Date.now();this.camera.position.x+=.05*(this.mouseX-this.camera.position.x),this.camera.position.y+=.05*(-this.mouseY-this.camera.position.y),this.camera.lookAt(this.scene.position);for(var t=0,r=this.spheres.length;t<r;t++){var i=this.spheres[t];i.position.x=5e3*Math.cos(e+t),i.position.y=5e3*Math.sin(e+1.1*t)}this.renderer.render(this.scene,this.camera)}}},o={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"webglMaterialsShadersFresnel-container"},[t("div",{attrs:{id:"info"}},[t("a",{attrs:{href:"https://threejs.org",target:"_blank",rel:"noopener"}},[this._v("three.js")]),this._v(" - webgl cube Fresnel shader demo."),t("br"),this._v("texture by "),t("a",{attrs:{href:"http://www.humus.name/index.php?page=Textures",target:"_blank",rel:"noopener"}},[this._v("Humus")])])])}]};var a=r("VU/8")(n,o,!1,function(e){r("FCzK")},"data-v-4dab744d",null);t.default=a.exports}});
//# sourceMappingURL=92.ae214dfbba3b4cd18c48.js.map