{"version":3,"sources":["webpack:///src/views/depth/webglDepthTexture.vue","webpack:///./src/views/depth/webglDepthTexture.vue?aaeb","webpack:///./src/views/depth/webglDepthTexture.vue"],"names":["webglDepthTexture","data","postVert","postFrag","camera","scene","renderer","controls","stats","target","postScene","postCamera","postMaterial","supportsExtension","params","formats","types","gui","mounted","this","format","$THREE","DepthFormat","type","UnsignedShortType","DepthStencilFormat","UnsignedIntType","UnsignedInt248Type","init","animate","beforeDestroy","hide","methods","WebGLRenderer","capabilities","isWebGL2","extensions","has","document","querySelector","style","display","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","getElementsByClassName","appendChild","domElement","$Stats","dom","left","PerspectiveCamera","position","z","OrbitControls","enableDamping","setupRenderTarget","setupScene","setupPost","onWindowResize","addEventListener","dat_gui_module","width","add","onChange","open","dispose","parseFloat","WebGLRenderTarget","texture","RGBFormat","minFilter","NearestFilter","magFilter","generateMipmaps","stencilBuffer","depthBuffer","depthTexture","DepthTexture","OrthographicCamera","ShaderMaterial","vertexShader","fragmentShader","uniforms","cameraNear","value","near","cameraFar","far","tDiffuse","tDepth","postPlane","PlaneBufferGeometry","postQuad","Mesh","Scene","geometry","TorusKnotBufferGeometry","material","MeshBasicMaterial","color","i","r","Math","random","PI","zScale","sqrt","mesh","set","cos","sin","rotation","$onWindowResize","dpr","getPixelRatio","requestAnimationFrame","setRenderTarget","render","update","depth_webglDepthTexture","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","attrs","id","href","rel","_v","staticStyle","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/92.e1817728cefb7ebd601e.js","sourcesContent":["<template>\r\n    <div class=\"webglDepthTexture-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">threejs</a> webgl - depth texture<br/>\r\n\t\t\tStores render target depth in a texture attachment.<br/>\r\n\t\t\tCreated by <a href=\"http://twitter.com/mattdesl\" target=\"_blank\" rel=\"noopener\">@mattdesl</a>.\r\n\r\n\t\t\t<div id=\"error\" style=\"display: none;\">\r\n\t\t\tYour browser does not support <strong>WEBGL_depth_texture</strong>.<br/><br/>\r\n\t\t\tThis demo will not work.\r\n\t\t\t</div>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            postVert: null,\r\n            postFrag: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n            controls: null,\r\n            stats: null,\r\n\t\t\ttarget: null,\r\n            postScene: null,\r\n            postCamera: null,\r\n            postMaterial: null,\r\n\t\t\tsupportsExtension: true,\r\n\t\t\tparams: null,\r\n\t\t\tformats: null,\r\n            types: null,\r\n            gui: null\r\n        }\r\n    },\r\n    mounted() {\r\n        this.postVert = `\r\n            varying vec2 vUv;\r\n\t\t\tvoid main() {\r\n\t\t\t\tvUv = uv;\r\n\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n            }`\r\n        this.postFrag = `\r\n            #include <packing>\r\n\t\t\tvarying vec2 vUv;\r\n\t\t\tuniform sampler2D tDiffuse;\r\n\t\t\tuniform sampler2D tDepth;\r\n\t\t\tuniform float cameraNear;\r\n\t\t\tuniform float cameraFar;\r\n\t\t\tfloat readDepth(sampler2D depthSampler, vec2 coord) {\r\n\t\t\t\tfloat fragCoordZ = texture2D(depthSampler, coord).x;\r\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\r\n\t\t\t\treturn viewZToOrthographicDepth(viewZ, cameraNear, cameraFar);\r\n\t\t\t}\r\n\t\t\tvoid main() {\r\n\t\t\t\t//vec3 diffuse = texture2D(tDiffuse, vUv).rgb;\r\n\t\t\t\tfloat depth = readDepth(tDepth, vUv);\r\n\r\n\t\t\t\tgl_FragColor.rgb = 1.0 - vec3(depth);\r\n\t\t\t\tgl_FragColor.a = 1.0;\r\n            }`\r\n        this.params = {\r\n            format: this.$THREE.DepthFormat,\r\n            type: this.$THREE.UnsignedShortType\r\n        }\r\n        this.formats = { DepthFormat: this.$THREE.DepthFormat, DepthStencilFormat: this.$THREE.DepthStencilFormat }\r\n        this.types = { UnsignedShortType: this.$THREE.UnsignedShortType, UnsignedIntType: this.$THREE.UnsignedIntType, UnsignedInt248Type: this.$THREE.UnsignedInt248Type }\r\n        this.init()\r\n        this.animate()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            if (this.renderer.capabilities.isWebGL2 === false && this.renderer.extensions.has('WEBGL_depth_texture') === false) {\r\n                this.supportsExtension = false\r\n                document.querySelector('#error').style.display = 'block'\r\n                return\r\n            }\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            document.getElementsByClassName('webglDepthTexture-container')[0].appendChild(this.renderer.domElement)\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            document.getElementsByClassName('webglDepthTexture-container')[0].appendChild(this.stats.dom)\r\n            this.camera = new this.$THREE.PerspectiveCamera(70, this.$webglInnerWidth / window.innerHeight, 0.01, 50)\r\n            this.camera.position.z = 4\r\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement)\r\n            this.controls.enableDamping = true\r\n            // Create a render target with depth texture\r\n            this.setupRenderTarget()\r\n            // Our scene\r\n            this.setupScene()\r\n            // Setup post-processing step\r\n            this.setupPost()\r\n            this.onWindowResize()\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n            //\r\n            this.gui = new GUI({ width: 300 })\r\n            this.gui.add(this.params, 'format', this.formats).onChange(this.setupRenderTarget)\r\n            this.gui.add(this.params, 'type', this.types).onChange(this.setupRenderTarget)\r\n            this.gui.open()\r\n        },\r\n        setupRenderTarget() {\r\n            if (this.target) this.target.dispose()\r\n            var format = parseFloat(this.params.format)\r\n            var type = parseFloat(this.params.type)\r\n            this.target = new this.$THREE.WebGLRenderTarget(this.$webglInnerWidth, window.innerHeight)\r\n            this.target.texture.format = this.$THREE.RGBFormat\r\n            this.target.texture.minFilter = this.$THREE.NearestFilter\r\n            this.target.texture.magFilter = this.$THREE.NearestFilter\r\n            this.target.texture.generateMipmaps = false\r\n            this.target.stencilBuffer = (format === this.$THREE.DepthStencilFormat) ? true : false\r\n            this.target.depthBuffer = true\r\n            this.target.depthTexture = new this.$THREE.DepthTexture()\r\n            this.target.depthTexture.format = format\r\n            this.target.depthTexture.type = type\r\n        },\r\n        setupPost() {\r\n            // Setup post processing stage\r\n            this.postCamera = new this.$THREE.OrthographicCamera(- 1, 1, 1, - 1, 0, 1)\r\n            this.postMaterial = new this.$THREE.ShaderMaterial({\r\n                vertexShader: this.postVert,\r\n                fragmentShader: this.postFrag,\r\n                uniforms: {\r\n                    cameraNear: { value: this.camera.near },\r\n                    cameraFar: { value: this.camera.far },\r\n                    tDiffuse: { value: null },\r\n                    tDepth: { value: null }\r\n                }\r\n            })\r\n            var postPlane = new this.$THREE.PlaneBufferGeometry(2, 2)\r\n            var postQuad = new this.$THREE.Mesh(postPlane, this.postMaterial)\r\n            this.postScene = new this.$THREE.Scene()\r\n            this.postScene.add(postQuad)\r\n        },\r\n        setupScene() {\r\n            this.scene = new this.$THREE.Scene()\r\n            var geometry = new this.$THREE.TorusKnotBufferGeometry(1, 0.3, 128, 64)\r\n            var material = new this.$THREE.MeshBasicMaterial({ color: 'blue' })\r\n            var count = 50\r\n            var scale = 5\r\n            for (let i = 0; i < count; i ++) {\r\n                var r = Math.random() * 2.0 * Math.PI\r\n                var z = (Math.random() * 2.0) - 1.0\r\n                var zScale = Math.sqrt(1.0 - z * z) * scale\r\n                var mesh = new this.$THREE.Mesh(geometry, material)\r\n                mesh.position.set(\r\n                    Math.cos(r) * zScale,\r\n                    Math.sin(r) * zScale,\r\n                    z * scale\r\n            )\r\n                mesh.rotation.set(Math.random(), Math.random(), Math.random())\r\n                this.scene.add(mesh)\r\n            }\r\n        },\r\n        onWindowResize() {\r\n            this.$onWindowResize(this.camera, this.renderer)\r\n            var dpr = this.renderer.getPixelRatio()\r\n            this.target.setSize(this.$webglInnerWidth * dpr, window.innerHeight * dpr)\r\n        },\r\n        animate() {\r\n            if (! this.supportsExtension) return\r\n            requestAnimationFrame(this.animate)\r\n            // render this.scene into this.target\r\n            this.renderer.setRenderTarget(this.target)\r\n            this.renderer.render(this.scene, this.camera)\r\n            // render post FX\r\n            this.postMaterial.uniforms.tDiffuse.value = this.target.texture\r\n            this.postMaterial.uniforms.tDepth.value = this.target.depthTexture\r\n            this.renderer.setRenderTarget(null)\r\n            this.renderer.render(this.postScene, this.postCamera)\r\n            this.controls.update() // required because damping is enabled\r\n            this.stats.update()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglDepthTexture-container {\r\n    width: 100%;\r\n}\r\n#error {\r\n    margin: auto;\r\n    margin-top: 40px;\r\n    display: block;\r\n    max-width: 400px;\r\n    padding: 20px;\r\n    background: #CE0808;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/depth/webglDepthTexture.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglDepthTexture-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"threejs\")]),_vm._v(\" webgl - depth texture\"),_c('br'),_vm._v(\"\\n\\t\\t\\tStores render target depth in a texture attachment.\"),_c('br'),_vm._v(\"\\n\\t\\t\\tCreated by \"),_c('a',{attrs:{\"href\":\"http://twitter.com/mattdesl\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"@mattdesl\")]),_vm._v(\".\\n\\n\\t\\t\\t\"),_c('div',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"error\"}},[_vm._v(\"\\n\\t\\t\\tYour browser does not support \"),_c('strong',[_vm._v(\"WEBGL_depth_texture\")]),_vm._v(\".\"),_c('br'),_c('br'),_vm._v(\"\\n\\t\\t\\tThis demo will not work.\\n\\t\\t\\t\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1fc0b264\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/depth/webglDepthTexture.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1fc0b264\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglDepthTexture.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglDepthTexture.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglDepthTexture.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1fc0b264\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglDepthTexture.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1fc0b264\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/depth/webglDepthTexture.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}