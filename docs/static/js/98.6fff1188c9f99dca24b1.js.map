{"version":3,"sources":["webpack:///src/views/materials/webglMaterialsChannels.vue","webpack:///./src/views/materials/webglMaterialsChannels.vue?e95d","webpack:///./src/views/materials/webglMaterialsChannels.vue"],"names":["webglMaterialsChannels","data","stats","camera","scene","renderer","params","material","side","sides","front","this","$THREE","FrontSide","back","BackSide","double","DoubleSide","cameraOrtho","cameraPerspective","controlsOrtho","controlsPerspective","mesh","materialStandard","materialDepthBasic","materialDepthRGBA","materialNormal","SCALE","BIAS","gui","mounted","init","animate","initGui","beforeDestroy","hide","methods","dat_gui_module","add","_this","container","document","createElement","getElementsByClassName","appendChild","WebGLRenderer","setPixelRatio","window","devicePixelRatio","setSize","$webglInnerWidth","innerHeight","domElement","Scene","aspect","PerspectiveCamera","position","z","OrthographicCamera","OrbitControls","minDistance","maxDistance","enablePan","enableDamping","minZoom","maxZoom","ambientLight","AmbientLight","pointLight","PointLight","pointLight2","pointLight3","x","textureLoader","TextureLoader","normalMap","load","aoMap","displacementMap","MeshStandardMaterial","color","metalness","roughness","displacementScale","displacementBias","normalScale","Vector2","MeshDepthMaterial","depthPacking","BasicDepthPacking","RGBADepthPacking","MeshNormalMaterial","OBJLoader","group","geometry","children","attributes","uv2","uv","center","Mesh","scale","multiplyScalar","$Stats","dom","style","left","addEventListener","onWindowResize","width","innerWidth","height","right","top","bottom","updateProjectionMatrix","requestAnimationFrame","begin","render","end","needsUpdate","update","materials_webglMaterialsChannels","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","id","href","target","rel","_v","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/98.6fff1188c9f99dca24b1.js","sourcesContent":["<template>\r\n    <div class=\"webglMaterialsChannels-container\">\r\n        <div id=\"info\">\r\n\t\t\t<a href=\"https://threejs.org\" target=\"_blank\" rel=\"noopener\">three.js</a> - <span id=\"description\">Normal, Depth, DepthRGBA, DepthRGBAUnpacked, Materials</span><br/>\r\n\t\t\tby <a href=\"https://Clara.io\">Ben Houston</a>. ninja head from <a href=\"https://gpuopen.com/archive/gamescgi/amd-gpu-meshmapper/\" target=\"_blank\" rel=\"noopener\">AMD GPU MeshMapper</a>\r\n\t\t</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from '@/components/jsm/libs/dat.gui.module.js'\r\nimport { OBJLoader } from '@/components/jsm/loaders/OBJLoader.js'\r\nimport { OrbitControls } from '@/components/jsm/controls/OrbitControls.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            stats: null,\r\n            camera: null,\r\n            scene: null,\r\n            renderer: null,\r\n\t\t\tparams: {\r\n\t\t\t\tmaterial: 'normal',\r\n\t\t\t\tcamera: 'perspective',\r\n\t\t\t\tside: 'double'\r\n\t\t\t},\r\n\t\t\tsides: {\r\n\t\t\t\t'front': this.$THREE.FrontSide,\r\n\t\t\t\t'back': this.$THREE.BackSide,\r\n\t\t\t\t'double': this.$THREE.DoubleSide\r\n\t\t\t},\r\n            cameraOrtho: null,\r\n            cameraPerspective: null,\r\n            controlsOrtho: null,\r\n            controlsPerspective: null,\r\n            mesh: null,\r\n            materialStandard: null,\r\n            materialDepthBasic: null,\r\n            materialDepthRGBA: null,\r\n            materialNormal: null,\r\n\t\t\tSCALE: 2.436143, // from original model\r\n            BIAS: - 0.428408, // from original model\r\n            gui: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.init()\r\n        this.animate()\r\n        this.initGui()\r\n    },\r\n    beforeDestroy() {\r\n        this.gui.hide()\r\n    },\r\n    methods: {\r\n        initGui() {\r\n            this.gui = new GUI()\r\n            this.gui.add(this.params, 'material', [ 'standard', 'normal', 'depthBasic', 'depthRGBA' ])\r\n            this.gui.add(this.params, 'camera', [ 'perspective', 'ortho' ])\r\n            this.gui.add(this.params, 'side', [ 'front', 'back', 'double' ])\r\n        },\r\n        init() {\r\n            var container = document.createElement('div')\r\n            document.getElementsByClassName('webglMaterialsChannels-container')[0].appendChild(container)\r\n            this.renderer = new this.$THREE.WebGLRenderer()\r\n            this.renderer.setPixelRatio(window.devicePixelRatio)\r\n            this.renderer.setSize(this.$webglInnerWidth, window.innerHeight)\r\n            container.appendChild(this.renderer.domElement)\r\n            //\r\n            this.scene = new this.$THREE.Scene()\r\n            var aspect = this.$webglInnerWidth / window.innerHeight\r\n            this.cameraPerspective = new this.$THREE.PerspectiveCamera(45, aspect, 500, 3000)\r\n            this.cameraPerspective.position.z = 1500\r\n            this.scene.add(this.cameraPerspective)\r\n            var height = 500\r\n            this.cameraOrtho = new this.$THREE.OrthographicCamera(- height * aspect, height * aspect, height, - height, 1000, 2500)\r\n            this.cameraOrtho.position.z = 1500\r\n            this.scene.add(this.cameraOrtho)\r\n            this.camera = this.cameraPerspective\r\n            this.controlsPerspective = new OrbitControls(this.cameraPerspective, this.renderer.domElement)\r\n            this.controlsPerspective.minDistance = 1000\r\n            this.controlsPerspective.maxDistance = 2400\r\n            this.controlsPerspective.enablePan = false\r\n            this.controlsPerspective.enableDamping = true\r\n            this.controlsOrtho = new OrbitControls(this.cameraOrtho, this.renderer.domElement)\r\n            this.controlsOrtho.minZoom = 0.5\r\n            this.controlsOrtho.maxZoom = 1.5\r\n            this.controlsOrtho.enablePan = false\r\n            this.controlsOrtho.enableDamping = true\r\n            // lights\r\n            var ambientLight = new this.$THREE.AmbientLight(0xffffff, 0.1)\r\n            this.scene.add(ambientLight)\r\n            var pointLight = new this.$THREE.PointLight(0xff0000, 0.5)\r\n            pointLight.position.z = 2500\r\n            this.scene.add(pointLight)\r\n            var pointLight2 = new this.$THREE.PointLight(0xff6666, 1)\r\n            this.camera.add(pointLight2)\r\n            var pointLight3 = new this.$THREE.PointLight(0x0000ff, 0.5)\r\n            pointLight3.position.x = - 1000\r\n            pointLight3.position.z = 1000\r\n            this.scene.add(pointLight3)\r\n            // textures\r\n            var textureLoader = new this.$THREE.TextureLoader()\r\n            var normalMap = textureLoader.load(\"static/models/obj/ninja/normal.png\")\r\n            var aoMap = textureLoader.load(\"static/models/obj/ninja/ao.jpg\")\r\n            var displacementMap = textureLoader.load(\"static/models/obj/ninja/displacement.jpg\")\r\n            // material\r\n            this.materialStandard = new this.$THREE.MeshStandardMaterial({\r\n                color: 0xffffff,\r\n                metalness: 0.5,\r\n                roughness: 0.6,\r\n                displacementMap: displacementMap,\r\n                displacementScale: this.SCALE,\r\n                displacementBias: this.BIAS,\r\n                aoMap: aoMap,\r\n                normalMap: normalMap,\r\n                normalScale: new this.$THREE.Vector2(1, - 1),\r\n                //flatShading: true,\r\n                side: this.$THREE.DoubleSide\r\n            })\r\n            this.materialDepthBasic = new this.$THREE.MeshDepthMaterial({\r\n                depthPacking: this.$THREE.BasicDepthPacking,\r\n                displacementMap: displacementMap,\r\n                displacementScale: this.SCALE,\r\n                displacementBias: this.BIAS,\r\n                side: this.$THREE.DoubleSide\r\n            })\r\n            this.materialDepthRGBA = new this.$THREE.MeshDepthMaterial({\r\n                depthPacking: this.$THREE.RGBADepthPacking,\r\n                displacementMap: displacementMap,\r\n                displacementScale: this.SCALE,\r\n                displacementBias: this.BIAS,\r\n                side: this.$THREE.DoubleSide\r\n            })\r\n            this.materialNormal = new this.$THREE.MeshNormalMaterial({\r\n                displacementMap: displacementMap,\r\n                displacementScale: this.SCALE,\r\n                displacementBias: this.BIAS,\r\n                normalMap: normalMap,\r\n                normalScale: new this.$THREE.Vector2(1, - 1),\r\n                //flatShading: true,\r\n                side: this.$THREE.DoubleSide\r\n            })\r\n            //\r\n            var loader = new OBJLoader()\r\n            loader.load(\"static/models/obj/ninja/ninjaHead_Low.obj\", (group) => {\r\n                var geometry = group.children[ 0 ].geometry\r\n                geometry.attributes.uv2 = geometry.attributes.uv\r\n                geometry.center()\r\n                this.mesh = new this.$THREE.Mesh(geometry, this.materialNormal)\r\n                this.mesh.scale.multiplyScalar(25)\r\n                this.scene.add(this.mesh)\r\n            })\r\n            //\r\n            this.stats = new this.$Stats()\r\n            this.stats.dom.style.left = '280px'\r\n            container.appendChild(this.stats.dom)\r\n            //\r\n            window.addEventListener('resize', this.onWindowResize, false)\r\n        },\r\n        onWindowResize() {\r\n            var width = window.innerWidth - 281\r\n            var height = window.innerHeight\r\n            var aspect = (window.innerWidth - 281) / window.innerHeight\r\n            this.camera.aspect = aspect\r\n            this.camera.left = - height * aspect\r\n            this.camera.right = height * aspect\r\n            this.camera.top = height\r\n            this.camera.bottom = - height\r\n            this.camera.updateProjectionMatrix()\r\n            this.renderer.setSize(width, height)\r\n        },\r\n        animate() {\r\n            requestAnimationFrame(this.animate)\r\n            this.stats.begin()\r\n            this.render()\r\n            this.stats.end()\r\n        },\r\n        render() {\r\n            if (this.mesh) {\r\n                var material = this.mesh.material\r\n                switch (this.params.material) {\r\n                    case 'standard': material = this.materialStandard; break\r\n                    case 'depthBasic': material = this.materialDepthBasic; break\r\n                    case 'depthRGBA': material = this.materialDepthRGBA; break\r\n                    case 'normal': material = this.materialNormal; break\r\n                }\r\n                if (this.sides[ this.params.side ] !== material.side) {\r\n                    switch (this.params.side) {\r\n                        case 'front': material.side = this.$THREE.FrontSide; break\r\n                        case 'back': material.side = this.$THREE.BackSide; break\r\n                        case 'double': material.side = this.$THREE.DoubleSide; break\r\n                    }\r\n                    material.needsUpdate = true\r\n                }\r\n                this.mesh.material = material\r\n            }\r\n            switch (this.params.camera) {\r\n                case 'perspective':\r\n                    this.camera = this.cameraPerspective\r\n                    break\r\n                case 'ortho':\r\n                    this.camera = this.cameraOrtho\r\n                    break\r\n            }\r\n            this.controlsPerspective.update()\r\n            this.controlsOrtho.update() // must update both controls for damping to complete\r\n            this.renderer.render(this.scene, this.camera)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.webglMaterialsChannels-container {\r\n    width: 100%;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/materials/webglMaterialsChannels.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"webglMaterialsChannels-container\"},[_c('div',{attrs:{\"id\":\"info\"}},[_c('a',{attrs:{\"href\":\"https://threejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"three.js\")]),_vm._v(\" - \"),_c('span',{attrs:{\"id\":\"description\"}},[_vm._v(\"Normal, Depth, DepthRGBA, DepthRGBAUnpacked, Materials\")]),_c('br'),_vm._v(\"\\n\\t\\t\\tby \"),_c('a',{attrs:{\"href\":\"https://Clara.io\"}},[_vm._v(\"Ben Houston\")]),_vm._v(\". ninja head from \"),_c('a',{attrs:{\"href\":\"https://gpuopen.com/archive/gamescgi/amd-gpu-meshmapper/\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"AMD GPU MeshMapper\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-461a748c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/materials/webglMaterialsChannels.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-461a748c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./webglMaterialsChannels.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsChannels.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./webglMaterialsChannels.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-461a748c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./webglMaterialsChannels.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-461a748c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/materials/webglMaterialsChannels.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}